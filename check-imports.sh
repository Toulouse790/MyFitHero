#!/bin/bash

# ====================================================================
# Script de v√©rification des imports - MyFitHero
# ====================================================================

echo "üîç V√©rification des imports cass√©s dans MyFitHero..."
echo "=================================================="

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Compteurs
total_files=0
error_files=0
warning_files=0

# Fonction de v√©rification d'un fichier
check_file() {
    local file="$1"
    local file_errors=0
    
    echo -e "${BLUE}üìÅ V√©rification: $file${NC}"
    
    # V√©rifier les imports avec alias @
    if grep -q "import.*from.*@/" "$file"; then
        echo -e "${YELLOW}  ‚ö†Ô∏è  Imports avec alias @ trouv√©s${NC}"
        grep -n "import.*from.*@/" "$file" | while read line; do
            echo -e "${YELLOW}    $line${NC}"
        done
        ((warning_files++))
    fi
    
    # V√©rifier les imports relatifs cass√©s
    if grep -q "import.*from.*\.\./" "$file"; then
        while IFS= read -r line; do
            if [[ $line == *"import"* && $line == *"from"* && $line == *"../"* ]]; then
                # Extraire le chemin
                path=$(echo "$line" | sed -n "s/.*from ['\"]\\([^'\"]*\\)['\"].*/\\1/p")
                if [[ $path == ../* ]]; then
                    # Construire le chemin complet
                    file_dir=$(dirname "$file")
                    full_path="$file_dir/$path"
                    
                    # V√©rifier si le fichier existe (avec extensions .ts, .tsx, .js, .jsx)
                    if [[ ! -f "$full_path" && ! -f "$full_path.ts" && ! -f "$full_path.tsx" && ! -f "$full_path.js" && ! -f "$full_path.jsx" && ! -f "$full_path/index.ts" && ! -f "$full_path/index.tsx" ]]; then
                        echo -e "${RED}  ‚ùå Import cass√©: $path${NC}"
                        ((file_errors++))
                    fi
                fi
            fi
        done < "$file"
    fi
    
    if [[ $file_errors -eq 0 ]]; then
        echo -e "${GREEN}  ‚úÖ Aucun import cass√© trouv√©${NC}"
    else
        echo -e "${RED}  ‚ùå $file_errors import(s) cass√©(s) trouv√©(s)${NC}"
        ((error_files++))
    fi
    
    echo ""
    ((total_files++))
}

# V√©rifier tous les fichiers TypeScript/JavaScript
echo "üîç Recherche des fichiers √† v√©rifier..."
echo ""

# Fichiers prioritaires
priority_files=(
    "src/pages/index.tsx"
    "src/features/workout/hooks/useIntelligentPreloading.ts"
    "src/core/routes/route-audit.ts"
)

echo "üìã V√©rification des fichiers prioritaires:"
echo "==========================================="
for file in "${priority_files[@]}"; do
    if [[ -f "$file" ]]; then
        check_file "$file"
    else
        echo -e "${RED}‚ùå Fichier non trouv√©: $file${NC}"
        ((error_files++))
    fi
done

# V√©rifier tous les index.ts des features
echo "üìã V√©rification des index.ts des features:"
echo "==========================================="
find src/features -name "index.ts" -type f | while read file; do
    check_file "$file"
done

# R√©sum√© final
echo "=================================================="
echo -e "${BLUE}üìä R√âSUM√â DE LA V√âRIFICATION:${NC}"
echo "=================================================="
echo -e "Total de fichiers v√©rifi√©s: ${BLUE}$total_files${NC}"
echo -e "Fichiers avec erreurs: ${RED}$error_files${NC}"
echo -e "Fichiers avec avertissements: ${YELLOW}$warning_files${NC}"

if [[ $error_files -eq 0 ]]; then
    echo -e "${GREEN}üéâ Tous les imports sont corrects !${NC}"
    exit 0
else
    echo -e "${RED}üö® $error_files fichier(s) ont des imports cass√©s${NC}"
    exit 1
fi