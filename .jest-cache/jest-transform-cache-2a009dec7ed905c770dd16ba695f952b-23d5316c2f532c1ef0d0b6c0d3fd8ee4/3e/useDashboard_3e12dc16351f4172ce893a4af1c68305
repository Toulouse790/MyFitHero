e4654efdd95e2c302e267eccf5e47aa0
"use strict";

/* istanbul ignore next */
function cov_8tdu2akbm() {
  var path = "/workspaces/MyFitHero/src/features/dashboard/hooks/useDashboard.ts";
  var hash = "6b11168d66df68a5dd50f9dd34aa2a6da886a52e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/dashboard/hooks/useDashboard.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 58
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 34
        }
      },
      "5": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 245,
          column: 1
        }
      },
      "6": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 8,
          column: 45
        }
      },
      "7": {
        start: {
          line: 9,
          column: 30
        },
        end: {
          line: 37,
          column: 6
        }
      },
      "8": {
        start: {
          line: 39,
          column: 31
        },
        end: {
          line: 71,
          column: 34
        }
      },
      "9": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 41,
          column: 19
        }
      },
      "10": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 19
        }
      },
      "11": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 68
        }
      },
      "12": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 42,
          column: 65
        }
      },
      "13": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "14": {
        start: {
          line: 45,
          column: 69
        },
        end: {
          line: 51,
          column: 14
        }
      },
      "15": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 61,
          column: 16
        }
      },
      "16": {
        start: {
          line: 52,
          column: 30
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "17": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 16
        }
      },
      "18": {
        start: {
          line: 64,
          column: 30
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "19": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 83
        }
      },
      "20": {
        start: {
          line: 73,
          column: 29
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "21": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 63
        }
      },
      "22": {
        start: {
          line: 75,
          column: 37
        },
        end: {
          line: 75,
          column: 61
        }
      },
      "23": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 91,
          column: 10
        }
      },
      "24": {
        start: {
          line: 94,
          column: 31
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "25": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 63
        }
      },
      "26": {
        start: {
          line: 95,
          column: 37
        },
        end: {
          line: 95,
          column: 61
        }
      },
      "27": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 133,
          column: 10
        }
      },
      "28": {
        start: {
          line: 136,
          column: 30
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "29": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 63
        }
      },
      "30": {
        start: {
          line: 137,
          column: 37
        },
        end: {
          line: 137,
          column: 61
        }
      },
      "31": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 146,
          column: 10
        }
      },
      "32": {
        start: {
          line: 149,
          column: 34
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "33": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 63
        }
      },
      "34": {
        start: {
          line: 150,
          column: 37
        },
        end: {
          line: 150,
          column: 61
        }
      },
      "35": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "36": {
        start: {
          line: 179,
          column: 35
        },
        end: {
          line: 207,
          column: 5
        }
      },
      "37": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 63
        }
      },
      "38": {
        start: {
          line: 180,
          column: 37
        },
        end: {
          line: 180,
          column: 61
        }
      },
      "39": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 206,
          column: 10
        }
      },
      "40": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 212,
          column: 28
        }
      },
      "41": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 29
        }
      },
      "42": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 67
        }
      },
      "43": {
        start: {
          line: 214,
          column: 30
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "44": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 218,
          column: 12
        }
      },
      "45": {
        start: {
          line: 215,
          column: 26
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "46": {
        start: {
          line: 217,
          column: 54
        },
        end: {
          line: 217,
          column: 78
        }
      },
      "47": {
        start: {
          line: 221,
          column: 25
        },
        end: {
          line: 231,
          column: 10
        }
      },
      "48": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 229,
          column: 12
        }
      },
      "49": {
        start: {
          line: 222,
          column: 26
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "50": {
        start: {
          line: 224,
          column: 45
        },
        end: {
          line: 224,
          column: 63
        }
      },
      "51": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 87
        }
      },
      "52": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 237,
          column: 39
        }
      },
      "53": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "54": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 33
        }
      },
      "55": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 244,
          column: 6
        }
      },
      "56": {
        start: {
          line: 246,
          column: 0
        },
        end: {
          line: 246,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 21
          },
          end: {
            line: 7,
            column: 22
          }
        },
        loc: {
          start: {
            line: 7,
            column: 27
          },
          end: {
            line: 245,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 56
          },
          end: {
            line: 39,
            column: 57
          }
        },
        loc: {
          start: {
            line: 39,
            column: 68
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 39
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 18
          }
        },
        loc: {
          start: {
            line: 42,
            column: 26
          },
          end: {
            line: 42,
            column: 65
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 21
          },
          end: {
            line: 52,
            column: 22
          }
        },
        loc: {
          start: {
            line: 52,
            column: 30
          },
          end: {
            line: 61,
            column: 13
          }
        },
        line: 52
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 64,
            column: 21
          },
          end: {
            line: 64,
            column: 22
          }
        },
        loc: {
          start: {
            line: 64,
            column: 30
          },
          end: {
            line: 68,
            column: 13
          }
        },
        line: 64
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 73,
            column: 29
          },
          end: {
            line: 73,
            column: 30
          }
        },
        loc: {
          start: {
            line: 73,
            column: 41
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 73
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 26
          },
          end: {
            line: 75,
            column: 27
          }
        },
        loc: {
          start: {
            line: 75,
            column: 37
          },
          end: {
            line: 75,
            column: 61
          }
        },
        line: 75
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 94,
            column: 31
          },
          end: {
            line: 94,
            column: 32
          }
        },
        loc: {
          start: {
            line: 94,
            column: 43
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 94
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 95,
            column: 26
          },
          end: {
            line: 95,
            column: 27
          }
        },
        loc: {
          start: {
            line: 95,
            column: 37
          },
          end: {
            line: 95,
            column: 61
          }
        },
        line: 95
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 136,
            column: 31
          }
        },
        loc: {
          start: {
            line: 136,
            column: 42
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 136
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 137,
            column: 26
          },
          end: {
            line: 137,
            column: 27
          }
        },
        loc: {
          start: {
            line: 137,
            column: 37
          },
          end: {
            line: 137,
            column: 61
          }
        },
        line: 137
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 149,
            column: 34
          },
          end: {
            line: 149,
            column: 35
          }
        },
        loc: {
          start: {
            line: 149,
            column: 46
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 149
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 150,
            column: 26
          },
          end: {
            line: 150,
            column: 27
          }
        },
        loc: {
          start: {
            line: 150,
            column: 37
          },
          end: {
            line: 150,
            column: 61
          }
        },
        line: 150
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 179,
            column: 35
          },
          end: {
            line: 179,
            column: 36
          }
        },
        loc: {
          start: {
            line: 179,
            column: 47
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 179
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 180,
            column: 26
          },
          end: {
            line: 180,
            column: 27
          }
        },
        loc: {
          start: {
            line: 180,
            column: 37
          },
          end: {
            line: 180,
            column: 61
          }
        },
        line: 180
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 209,
            column: 49
          },
          end: {
            line: 209,
            column: 50
          }
        },
        loc: {
          start: {
            line: 209,
            column: 55
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 209
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 214,
            column: 55
          },
          end: {
            line: 214,
            column: 56
          }
        },
        loc: {
          start: {
            line: 214,
            column: 70
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 214
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 215,
            column: 17
          },
          end: {
            line: 215,
            column: 18
          }
        },
        loc: {
          start: {
            line: 215,
            column: 26
          },
          end: {
            line: 218,
            column: 9
          }
        },
        line: 215
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 217,
            column: 43
          },
          end: {
            line: 217,
            column: 44
          }
        },
        loc: {
          start: {
            line: 217,
            column: 54
          },
          end: {
            line: 217,
            column: 78
          }
        },
        line: 217
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 221,
            column: 50
          },
          end: {
            line: 221,
            column: 51
          }
        },
        loc: {
          start: {
            line: 221,
            column: 62
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 221
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 222,
            column: 17
          },
          end: {
            line: 222,
            column: 18
          }
        },
        loc: {
          start: {
            line: 222,
            column: 26
          },
          end: {
            line: 229,
            column: 9
          }
        },
        line: 222
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 224,
            column: 37
          },
          end: {
            line: 224,
            column: 38
          }
        },
        loc: {
          start: {
            line: 224,
            column: 45
          },
          end: {
            line: 224,
            column: 63
          }
        },
        line: 224
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 233,
            column: 27
          },
          end: {
            line: 233,
            column: 28
          }
        },
        loc: {
          start: {
            line: 233,
            column: 33
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 233
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/dashboard/hooks/useDashboard.ts",
      mappings: ";;;AAAA,iCAAyD;AAEzD,2DAAwD;AACxD,mCAA+B;AAExB,MAAM,YAAY,GAAG,GAAG,EAAE;IAC/B,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,iBAAO,GAAE,CAAC;IAE3B,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAiB;QACjD,OAAO,EAAE;YACP,aAAa,EAAE,CAAC;YAChB,cAAc,EAAE,CAAC;YACjB,aAAa,EAAE,CAAC;YAChB,cAAc,EAAE,CAAC;YACjB,YAAY,EAAE,CAAC;YACf,cAAc,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC;YACjB,eAAe,EAAE,CAAC;YAClB,UAAU,EAAE,CAAC;YACb,cAAc,EAAE,CAAC;YACjB,YAAY,EAAE,CAAC;YACf,aAAa,EAAE,CAAC;YAChB,cAAc,EAAE,CAAC;YACjB,gBAAgB,EAAE,CAAC;SACpB;QACD,QAAQ,EAAE,EAAE;QACZ,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE,EAAE;QACX,KAAK,EAAE,EAAE;QACT,iBAAiB,EAAE,EAAE;QACrB,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,IAAI;QACX,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;KACtC,CAAC,CAAC;IAEH,qCAAqC;IACrC,MAAM,kBAAkB,GAAG,IAAA,mBAAW,EAAC,KAAK,IAAI,EAAE;QAChD,IAAI,CAAC,IAAI,EAAE,EAAE;YAAE,OAAO;QAEtB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QAE5D,IAAI,CAAC;YACH,uCAAuC;YACvC,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;gBACzE,gBAAgB,EAAE;gBAClB,kBAAkB,EAAE;gBACpB,iBAAiB,EAAE;gBACnB,qBAAqB,EAAE;gBACvB,sBAAsB,EAAE;aACzB,CAAC,CAAC;YAEH,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChB,GAAG,IAAI;gBACP,OAAO;gBACP,QAAQ;gBACR,YAAY,EAAE,MAAM;gBACpB,YAAY;gBACZ,KAAK;gBACL,OAAO,EAAE,KAAK;gBACd,WAAW,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;aACtC,CAAC,CAAC,CAAC;QACN,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChB,GAAG,IAAI;gBACP,KAAK,EAAE,wCAAwC;gBAC/C,OAAO,EAAE,KAAK;aACf,CAAC,CAAC,CAAC;YAEJ,cAAK,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;QAChE,CAAC;IACH,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,cAAK,CAAC,CAAC,CAAC;IAEtB,oCAAoC;IACpC,MAAM,gBAAgB,GAAG,KAAK,IAA+B,EAAE;QAC7D,wCAAwC;QACxC,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAEvD,OAAO;YACL,aAAa,EAAE,GAAG;YAClB,cAAc,EAAE,CAAC;YACjB,aAAa,EAAE,KAAK;YACpB,cAAc,EAAE,IAAI;YACpB,YAAY,EAAE,GAAG;YACjB,cAAc,EAAE,EAAE;YAClB,cAAc,EAAE,EAAE;YAClB,eAAe,EAAE,EAAE;YACnB,UAAU,EAAE,EAAE;YACd,cAAc,EAAE,CAAC;YACjB,YAAY,EAAE,EAAE,EAAE,oCAAoC;YACtD,aAAa,EAAE,EAAE;YACjB,cAAc,EAAE,EAAE;YAClB,gBAAgB,EAAE,EAAE;SACrB,CAAC;IACJ,CAAC,CAAC;IAEF,iCAAiC;IACjC,MAAM,kBAAkB,GAAG,KAAK,IAA6B,EAAE;QAC7D,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAEvD,OAAO;YACL;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,aAAa;gBACnB,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,mBAAmB;gBAC1B,OAAO,EAAE,+EAA+E;gBACxF,UAAU,EAAE,kBAAkB;gBAC9B,SAAS,EAAE,eAAe;gBAC1B,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACnC,QAAQ,EAAE,SAAS;aACpB;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EAAE,QAAQ;gBAClB,KAAK,EAAE,0BAA0B;gBACjC,OAAO,EAAE,6FAA6F;gBACtG,UAAU,EAAE,WAAW;gBACvB,SAAS,EAAE,mBAAmB;gBAC9B,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACnC,QAAQ,EAAE,SAAS;aACpB;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,QAAQ;gBAClB,KAAK,EAAE,4BAA4B;gBACnC,OAAO,EAAE,8FAA8F;gBACvG,UAAU,EAAE,eAAe;gBAC3B,SAAS,EAAE,WAAW;gBACtB,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACnC,QAAQ,EAAE,UAAU;aACrB;SACF,CAAC;IACJ,CAAC,CAAC;IAEF,4BAA4B;IAC5B,MAAM,iBAAiB,GAAG,KAAK,IAA4B,EAAE;QAC3D,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAEvD,OAAO;YACL,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;YACnF,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;YACnF,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;YACjF,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;YACnF,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;YACnF,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;YACnF,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;SACpF,CAAC;IACJ,CAAC,CAAC;IAEF,sCAAsC;IACtC,MAAM,qBAAqB,GAAG,KAAK,IAA4B,EAAE;QAC/D,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAEvD,OAAO;YACL;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,0BAA0B;gBACjC,WAAW,EAAE,sCAAsC;gBACnD,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBACpC,MAAM,EAAE,MAAM;aACf;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,0BAA0B;gBACjC,WAAW,EAAE,+CAA+C;gBAC5D,IAAI,EAAE,UAAU;gBAChB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,WAAW,EAAE;gBACxE,MAAM,EAAE,MAAM;aACf;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,oBAAoB;gBAC3B,WAAW,EAAE,4CAA4C;gBACzD,IAAI,EAAE,KAAK;gBACX,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,WAAW,EAAE;gBACxE,MAAM,EAAE,QAAQ;aACjB;SACF,CAAC;IACJ,CAAC,CAAC;IAEF,kCAAkC;IAClC,MAAM,sBAAsB,GAAG,KAAK,IAAiC,EAAE;QACrE,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAEvD,OAAO;YACL;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,6BAA6B;gBACpC,WAAW,EAAE,iEAAiE;gBAC9E,WAAW,EAAE,CAAC;gBACd,YAAY,EAAE,CAAC;gBACf,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,WAAW,EAAE;gBACtE,QAAQ,EAAE,MAAM;gBAChB,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,IAAI;aAClB;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,KAAK,EAAE,sBAAsB;gBAC7B,WAAW,EAAE,iEAAiE;gBAC9E,WAAW,EAAE,GAAG;gBAChB,YAAY,EAAE,GAAG;gBACjB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,WAAW,EAAE;gBACtE,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,OAAO;gBACjB,WAAW,EAAE,IAAI;aAClB;SACF,CAAC;IACJ,CAAC,CAAC;IAEF,yBAAyB;IACzB,MAAM,WAAW,GAAG,IAAA,mBAAW,EAAC,GAAG,EAAE;QACnC,kBAAkB,EAAE,CAAC;QACrB,cAAK,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;IACpD,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAEzB,uBAAuB;IACvB,MAAM,iBAAiB,GAAG,IAAA,mBAAW,EAAC,CAAC,SAAiB,EAAE,EAAE;QAC1D,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAChB,GAAG,IAAI;YACP,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,SAAS,CAAC;SACpE,CAAC,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,kBAAkB;IAClB,MAAM,YAAY,GAAG,IAAA,mBAAW,EAAC,CAAC,MAAc,EAAE,EAAE;QAClD,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAChB,GAAG,IAAI;YACP,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC;YACpD,OAAO,EAAE;gBACP,GAAG,IAAI,CAAC,OAAO;gBACf,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,CAAC;aAChD;SACF,CAAC,CAAC,CAAC;QAEJ,cAAK,CAAC,OAAO,CAAC,sDAAsD,CAAC,CAAC;IACxE,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,uBAAuB;IACvB,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;YACb,kBAAkB,EAAE,CAAC;QACvB,CAAC;IACH,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAEnC,OAAO;QACL,GAAG,KAAK;QACR,WAAW;QACX,iBAAiB;QACjB,YAAY;QACZ,SAAS,EAAE,KAAK,CAAC,OAAO;KACzB,CAAC;AACJ,CAAC,CAAC;AAlQW,QAAA,YAAY,gBAkQvB",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/dashboard/hooks/useDashboard.ts"],
      sourcesContent: ["import { useCallback, useEffect, useState } from 'react';\nimport { DashboardState, DashboardMetrics, SmartInsight, WeeklyTrend, Achievement, PersonalizedGoal } from '../types';\nimport { useAuth } from '@/features/auth/hooks/useAuth';\nimport { toast } from 'sonner';\n\nexport const useDashboard = () => {\n  const { user } = useAuth();\n  \n  const [state, setState] = useState<DashboardState>({\n    metrics: {\n      totalWorkouts: 0,\n      weeklyWorkouts: 0,\n      totalCalories: 0,\n      weeklyCalories: 0,\n      averageSleep: 0,\n      hydrationLevel: 0,\n      weeklyProgress: 0,\n      monthlyProgress: 0,\n      streakDays: 0,\n      completedGoals: 0,\n      fitnessScore: 0,\n      recoveryScore: 0,\n      nutritionScore: 0,\n      consistencyScore: 0,\n    },\n    insights: [],\n    weeklyTrends: [],\n    achievements: [],\n    quickActions: [],\n    widgets: [],\n    goals: [],\n    socialComparisons: [],\n    weather: null,\n    loading: true,\n    error: null,\n    lastUpdated: new Date().toISOString(),\n  });\n\n  // Fetch comprehensive dashboard data\n  const fetchDashboardData = useCallback(async () => {\n    if (!user?.id) return;\n    \n    setState(prev => ({ ...prev, loading: true, error: null }));\n    \n    try {\n      // Simulate AI-powered data aggregation\n      const [metrics, insights, trends, achievements, goals] = await Promise.all([\n        fetchUserMetrics(),\n        fetchSmartInsights(),\n        fetchWeeklyTrends(),\n        fetchUserAchievements(),\n        fetchPersonalizedGoals(),\n      ]);\n\n      setState(prev => ({\n        ...prev,\n        metrics,\n        insights,\n        weeklyTrends: trends,\n        achievements,\n        goals,\n        loading: false,\n        lastUpdated: new Date().toISOString(),\n      }));\n    } catch (error: any) {\n      setState(prev => ({\n        ...prev,\n        error: 'Erreur lors du chargement du dashboard',\n        loading: false,\n      }));\n      \n      toast.error(\"Impossible de charger les donn\xE9es du dashboard\");\n    }\n  }, [user?.id, toast]);\n\n  // Mock advanced metrics calculation\n  const fetchUserMetrics = async (): Promise<DashboardMetrics> => {\n    // Simulate API call with realistic data\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    return {\n      totalWorkouts: 127,\n      weeklyWorkouts: 5,\n      totalCalories: 24680,\n      weeklyCalories: 3420,\n      averageSleep: 7.3,\n      hydrationLevel: 85,\n      weeklyProgress: 78,\n      monthlyProgress: 65,\n      streakDays: 12,\n      completedGoals: 8,\n      fitnessScore: 82, // AI-calculated comprehensive score\n      recoveryScore: 76,\n      nutritionScore: 88,\n      consistencyScore: 91,\n    };\n  };\n\n  // AI-powered insights generation\n  const fetchSmartInsights = async (): Promise<SmartInsight[]> => {\n    await new Promise(resolve => setTimeout(resolve, 600));\n    \n    return [\n      {\n        id: '1',\n        type: 'achievement',\n        priority: 'high',\n        title: '\uD83D\uDD25 S\xE9rie record !',\n        message: 'Vous venez de battre votre record avec 12 jours cons\xE9cutifs d\\'entra\xEEnement !',\n        actionText: 'Voir les d\xE9tails',\n        actionUrl: '/achievements',\n        icon: 'Trophy',\n        timestamp: new Date().toISOString(),\n        category: 'workout',\n      },\n      {\n        id: '2',\n        type: 'recommendation',\n        priority: 'medium',\n        title: '\uD83D\uDCA1 Optimisation d\xE9tect\xE9e',\n        message: 'Vos performances sont meilleures les mardis. Planifiez vos entra\xEEnements intensifs ce jour.',\n        actionText: 'Planifier',\n        actionUrl: '/workout/schedule',\n        icon: 'Brain',\n        timestamp: new Date().toISOString(),\n        category: 'workout',\n      },\n      {\n        id: '3',\n        type: 'alert',\n        priority: 'medium',\n        title: '\uD83D\uDE34 R\xE9cup\xE9ration importante',\n        message: 'Votre score de r\xE9cup\xE9ration est \xE0 76%. Un jour de repos pourrait optimiser vos performances.',\n        actionText: 'Voir conseils',\n        actionUrl: '/recovery',\n        icon: 'Moon',\n        timestamp: new Date().toISOString(),\n        category: 'recovery',\n      },\n    ];\n  };\n\n  // Weekly performance trends\n  const fetchWeeklyTrends = async (): Promise<WeeklyTrend[]> => {\n    await new Promise(resolve => setTimeout(resolve, 400));\n    \n    return [\n      { day: 'Lun', workouts: 1, calories: 420, sleep: 7.5, recovery: 85, nutrition: 90 },\n      { day: 'Mar', workouts: 1, calories: 580, sleep: 7.2, recovery: 78, nutrition: 85 },\n      { day: 'Mer', workouts: 0, calories: 0, sleep: 8.1, recovery: 92, nutrition: 88 },\n      { day: 'Jeu', workouts: 1, calories: 520, sleep: 6.8, recovery: 72, nutrition: 82 },\n      { day: 'Ven', workouts: 1, calories: 490, sleep: 7.4, recovery: 80, nutrition: 87 },\n      { day: 'Sam', workouts: 1, calories: 630, sleep: 7.9, recovery: 88, nutrition: 91 },\n      { day: 'Dim', workouts: 0, calories: 180, sleep: 8.5, recovery: 95, nutrition: 89 },\n    ];\n  };\n\n  // User achievements with gamification\n  const fetchUserAchievements = async (): Promise<Achievement[]> => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    return [\n      {\n        id: '1',\n        title: 'Guerrier de la constance',\n        description: '10 jours d\\'entra\xEEnement cons\xE9cutifs',\n        icon: 'Sword',\n        unlockedAt: new Date().toISOString(),\n        rarity: 'epic',\n      },\n      {\n        id: '2',\n        title: 'Ma\xEEtre de l\\'hydratation',\n        description: 'Objectif hydratation atteint 7 jours de suite',\n        icon: 'Droplets',\n        unlockedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n        rarity: 'rare',\n      },\n      {\n        id: '3',\n        title: 'Machine \xE0 calories',\n        description: 'Plus de 500 calories br\xFBl\xE9es en une s\xE9ance',\n        icon: 'Zap',\n        unlockedAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n        rarity: 'common',\n      },\n    ];\n  };\n\n  // AI-generated personalized goals\n  const fetchPersonalizedGoals = async (): Promise<PersonalizedGoal[]> => {\n    await new Promise(resolve => setTimeout(resolve, 700));\n    \n    return [\n      {\n        id: '1',\n        title: 'Objectif Cardio Intelligent',\n        description: 'Bas\xE9 sur vos performances, visez 4 s\xE9ances cardio cette semaine',\n        targetValue: 4,\n        currentValue: 2,\n        unit: 's\xE9ances',\n        deadline: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000).toISOString(),\n        priority: 'high',\n        category: 'workout',\n        aiGenerated: true,\n      },\n      {\n        id: '2',\n        title: 'Optimisation Sommeil',\n        description: 'Votre r\xE9cup\xE9ration serait optimale avec 7.5h de sommeil minimum',\n        targetValue: 7.5,\n        currentValue: 7.1,\n        unit: 'heures',\n        deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n        priority: 'medium',\n        category: 'sleep',\n        aiGenerated: true,\n      },\n    ];\n  };\n\n  // Refresh dashboard data\n  const refreshData = useCallback(() => {\n    fetchDashboardData();\n    toast.success(\"Votre dashboard a \xE9t\xE9 mis \xE0 jour\");\n  }, [fetchDashboardData]);\n\n  // Mark insight as read\n  const markInsightAsRead = useCallback((insightId: string) => {\n    setState(prev => ({\n      ...prev,\n      insights: prev.insights.filter(insight => insight.id !== insightId),\n    }));\n  }, []);\n\n  // Complete a goal\n  const completeGoal = useCallback((goalId: string) => {\n    setState(prev => ({\n      ...prev,\n      goals: prev.goals.filter(goal => goal.id !== goalId),\n      metrics: {\n        ...prev.metrics,\n        completedGoals: prev.metrics.completedGoals + 1,\n      },\n    }));\n    \n    toast.success(\"\uD83C\uDF89 F\xE9licitations pour avoir atteint votre objectif !\");\n  }, []);\n\n  // Initialize dashboard\n  useEffect(() => {\n    if (user?.id) {\n      fetchDashboardData();\n    }\n  }, [user?.id, fetchDashboardData]);\n\n  return {\n    ...state,\n    refreshData,\n    markInsightAsRead,\n    completeGoal,\n    isLoading: state.loading,\n  };\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6b11168d66df68a5dd50f9dd34aa2a6da886a52e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8tdu2akbm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8tdu2akbm();
cov_8tdu2akbm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_8tdu2akbm().s[1]++;
exports.useDashboard = void 0;
const react_1 =
/* istanbul ignore next */
(cov_8tdu2akbm().s[2]++, require("react"));
const useAuth_1 =
/* istanbul ignore next */
(cov_8tdu2akbm().s[3]++, require("@/features/auth/hooks/useAuth"));
const sonner_1 =
/* istanbul ignore next */
(cov_8tdu2akbm().s[4]++, require("sonner"));
/* istanbul ignore next */
cov_8tdu2akbm().s[5]++;
const useDashboard = () => {
  /* istanbul ignore next */
  cov_8tdu2akbm().f[0]++;
  const {
    user
  } =
  /* istanbul ignore next */
  (cov_8tdu2akbm().s[6]++, (0, useAuth_1.useAuth)());
  const [state, setState] =
  /* istanbul ignore next */
  (cov_8tdu2akbm().s[7]++, (0, react_1.useState)({
    metrics: {
      totalWorkouts: 0,
      weeklyWorkouts: 0,
      totalCalories: 0,
      weeklyCalories: 0,
      averageSleep: 0,
      hydrationLevel: 0,
      weeklyProgress: 0,
      monthlyProgress: 0,
      streakDays: 0,
      completedGoals: 0,
      fitnessScore: 0,
      recoveryScore: 0,
      nutritionScore: 0,
      consistencyScore: 0
    },
    insights: [],
    weeklyTrends: [],
    achievements: [],
    quickActions: [],
    widgets: [],
    goals: [],
    socialComparisons: [],
    weather: null,
    loading: true,
    error: null,
    lastUpdated: new Date().toISOString()
  }));
  // Fetch comprehensive dashboard data
  const fetchDashboardData =
  /* istanbul ignore next */
  (cov_8tdu2akbm().s[8]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_8tdu2akbm().f[1]++;
    cov_8tdu2akbm().s[9]++;
    if (!user?.id) {
      /* istanbul ignore next */
      cov_8tdu2akbm().b[0][0]++;
      cov_8tdu2akbm().s[10]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_8tdu2akbm().b[0][1]++;
    }
    cov_8tdu2akbm().s[11]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_8tdu2akbm().f[2]++;
      cov_8tdu2akbm().s[12]++;
      return {
        ...prev,
        loading: true,
        error: null
      };
    });
    /* istanbul ignore next */
    cov_8tdu2akbm().s[13]++;
    try {
      // Simulate AI-powered data aggregation
      const [metrics, insights, trends, achievements, goals] =
      /* istanbul ignore next */
      (cov_8tdu2akbm().s[14]++, await Promise.all([fetchUserMetrics(), fetchSmartInsights(), fetchWeeklyTrends(), fetchUserAchievements(), fetchPersonalizedGoals()]));
      /* istanbul ignore next */
      cov_8tdu2akbm().s[15]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_8tdu2akbm().f[3]++;
        cov_8tdu2akbm().s[16]++;
        return {
          ...prev,
          metrics,
          insights,
          weeklyTrends: trends,
          achievements,
          goals,
          loading: false,
          lastUpdated: new Date().toISOString()
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_8tdu2akbm().s[17]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_8tdu2akbm().f[4]++;
        cov_8tdu2akbm().s[18]++;
        return {
          ...prev,
          error: 'Erreur lors du chargement du dashboard',
          loading: false
        };
      });
      /* istanbul ignore next */
      cov_8tdu2akbm().s[19]++;
      sonner_1.toast.error("Impossible de charger les données du dashboard");
    }
  }, [user?.id, sonner_1.toast]));
  // Mock advanced metrics calculation
  /* istanbul ignore next */
  cov_8tdu2akbm().s[20]++;
  const fetchUserMetrics = async () => {
    /* istanbul ignore next */
    cov_8tdu2akbm().f[5]++;
    cov_8tdu2akbm().s[21]++;
    // Simulate API call with realistic data
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_8tdu2akbm().f[6]++;
      cov_8tdu2akbm().s[22]++;
      return setTimeout(resolve, 800);
    });
    /* istanbul ignore next */
    cov_8tdu2akbm().s[23]++;
    return {
      totalWorkouts: 127,
      weeklyWorkouts: 5,
      totalCalories: 24680,
      weeklyCalories: 3420,
      averageSleep: 7.3,
      hydrationLevel: 85,
      weeklyProgress: 78,
      monthlyProgress: 65,
      streakDays: 12,
      completedGoals: 8,
      fitnessScore: 82,
      // AI-calculated comprehensive score
      recoveryScore: 76,
      nutritionScore: 88,
      consistencyScore: 91
    };
  };
  // AI-powered insights generation
  /* istanbul ignore next */
  cov_8tdu2akbm().s[24]++;
  const fetchSmartInsights = async () => {
    /* istanbul ignore next */
    cov_8tdu2akbm().f[7]++;
    cov_8tdu2akbm().s[25]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_8tdu2akbm().f[8]++;
      cov_8tdu2akbm().s[26]++;
      return setTimeout(resolve, 600);
    });
    /* istanbul ignore next */
    cov_8tdu2akbm().s[27]++;
    return [{
      id: '1',
      type: 'achievement',
      priority: 'high',
      title: '🔥 Série record !',
      message: 'Vous venez de battre votre record avec 12 jours consécutifs d\'entraînement !',
      actionText: 'Voir les détails',
      actionUrl: '/achievements',
      icon: 'Trophy',
      timestamp: new Date().toISOString(),
      category: 'workout'
    }, {
      id: '2',
      type: 'recommendation',
      priority: 'medium',
      title: '💡 Optimisation détectée',
      message: 'Vos performances sont meilleures les mardis. Planifiez vos entraînements intensifs ce jour.',
      actionText: 'Planifier',
      actionUrl: '/workout/schedule',
      icon: 'Brain',
      timestamp: new Date().toISOString(),
      category: 'workout'
    }, {
      id: '3',
      type: 'alert',
      priority: 'medium',
      title: '😴 Récupération importante',
      message: 'Votre score de récupération est à 76%. Un jour de repos pourrait optimiser vos performances.',
      actionText: 'Voir conseils',
      actionUrl: '/recovery',
      icon: 'Moon',
      timestamp: new Date().toISOString(),
      category: 'recovery'
    }];
  };
  // Weekly performance trends
  /* istanbul ignore next */
  cov_8tdu2akbm().s[28]++;
  const fetchWeeklyTrends = async () => {
    /* istanbul ignore next */
    cov_8tdu2akbm().f[9]++;
    cov_8tdu2akbm().s[29]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_8tdu2akbm().f[10]++;
      cov_8tdu2akbm().s[30]++;
      return setTimeout(resolve, 400);
    });
    /* istanbul ignore next */
    cov_8tdu2akbm().s[31]++;
    return [{
      day: 'Lun',
      workouts: 1,
      calories: 420,
      sleep: 7.5,
      recovery: 85,
      nutrition: 90
    }, {
      day: 'Mar',
      workouts: 1,
      calories: 580,
      sleep: 7.2,
      recovery: 78,
      nutrition: 85
    }, {
      day: 'Mer',
      workouts: 0,
      calories: 0,
      sleep: 8.1,
      recovery: 92,
      nutrition: 88
    }, {
      day: 'Jeu',
      workouts: 1,
      calories: 520,
      sleep: 6.8,
      recovery: 72,
      nutrition: 82
    }, {
      day: 'Ven',
      workouts: 1,
      calories: 490,
      sleep: 7.4,
      recovery: 80,
      nutrition: 87
    }, {
      day: 'Sam',
      workouts: 1,
      calories: 630,
      sleep: 7.9,
      recovery: 88,
      nutrition: 91
    }, {
      day: 'Dim',
      workouts: 0,
      calories: 180,
      sleep: 8.5,
      recovery: 95,
      nutrition: 89
    }];
  };
  // User achievements with gamification
  /* istanbul ignore next */
  cov_8tdu2akbm().s[32]++;
  const fetchUserAchievements = async () => {
    /* istanbul ignore next */
    cov_8tdu2akbm().f[11]++;
    cov_8tdu2akbm().s[33]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_8tdu2akbm().f[12]++;
      cov_8tdu2akbm().s[34]++;
      return setTimeout(resolve, 500);
    });
    /* istanbul ignore next */
    cov_8tdu2akbm().s[35]++;
    return [{
      id: '1',
      title: 'Guerrier de la constance',
      description: '10 jours d\'entraînement consécutifs',
      icon: 'Sword',
      unlockedAt: new Date().toISOString(),
      rarity: 'epic'
    }, {
      id: '2',
      title: 'Maître de l\'hydratation',
      description: 'Objectif hydratation atteint 7 jours de suite',
      icon: 'Droplets',
      unlockedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
      rarity: 'rare'
    }, {
      id: '3',
      title: 'Machine à calories',
      description: 'Plus de 500 calories brûlées en une séance',
      icon: 'Zap',
      unlockedAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
      rarity: 'common'
    }];
  };
  // AI-generated personalized goals
  /* istanbul ignore next */
  cov_8tdu2akbm().s[36]++;
  const fetchPersonalizedGoals = async () => {
    /* istanbul ignore next */
    cov_8tdu2akbm().f[13]++;
    cov_8tdu2akbm().s[37]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_8tdu2akbm().f[14]++;
      cov_8tdu2akbm().s[38]++;
      return setTimeout(resolve, 700);
    });
    /* istanbul ignore next */
    cov_8tdu2akbm().s[39]++;
    return [{
      id: '1',
      title: 'Objectif Cardio Intelligent',
      description: 'Basé sur vos performances, visez 4 séances cardio cette semaine',
      targetValue: 4,
      currentValue: 2,
      unit: 'séances',
      deadline: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000).toISOString(),
      priority: 'high',
      category: 'workout',
      aiGenerated: true
    }, {
      id: '2',
      title: 'Optimisation Sommeil',
      description: 'Votre récupération serait optimale avec 7.5h de sommeil minimum',
      targetValue: 7.5,
      currentValue: 7.1,
      unit: 'heures',
      deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),
      priority: 'medium',
      category: 'sleep',
      aiGenerated: true
    }];
  };
  // Refresh dashboard data
  const refreshData =
  /* istanbul ignore next */
  (cov_8tdu2akbm().s[40]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_8tdu2akbm().f[15]++;
    cov_8tdu2akbm().s[41]++;
    fetchDashboardData();
    /* istanbul ignore next */
    cov_8tdu2akbm().s[42]++;
    sonner_1.toast.success("Votre dashboard a été mis à jour");
  }, [fetchDashboardData]));
  // Mark insight as read
  const markInsightAsRead =
  /* istanbul ignore next */
  (cov_8tdu2akbm().s[43]++, (0, react_1.useCallback)(insightId => {
    /* istanbul ignore next */
    cov_8tdu2akbm().f[16]++;
    cov_8tdu2akbm().s[44]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_8tdu2akbm().f[17]++;
      cov_8tdu2akbm().s[45]++;
      return {
        ...prev,
        insights: prev.insights.filter(insight => {
          /* istanbul ignore next */
          cov_8tdu2akbm().f[18]++;
          cov_8tdu2akbm().s[46]++;
          return insight.id !== insightId;
        })
      };
    });
  }, []));
  // Complete a goal
  const completeGoal =
  /* istanbul ignore next */
  (cov_8tdu2akbm().s[47]++, (0, react_1.useCallback)(goalId => {
    /* istanbul ignore next */
    cov_8tdu2akbm().f[19]++;
    cov_8tdu2akbm().s[48]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_8tdu2akbm().f[20]++;
      cov_8tdu2akbm().s[49]++;
      return {
        ...prev,
        goals: prev.goals.filter(goal => {
          /* istanbul ignore next */
          cov_8tdu2akbm().f[21]++;
          cov_8tdu2akbm().s[50]++;
          return goal.id !== goalId;
        }),
        metrics: {
          ...prev.metrics,
          completedGoals: prev.metrics.completedGoals + 1
        }
      };
    });
    /* istanbul ignore next */
    cov_8tdu2akbm().s[51]++;
    sonner_1.toast.success("🎉 Félicitations pour avoir atteint votre objectif !");
  }, []));
  // Initialize dashboard
  /* istanbul ignore next */
  cov_8tdu2akbm().s[52]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_8tdu2akbm().f[22]++;
    cov_8tdu2akbm().s[53]++;
    if (user?.id) {
      /* istanbul ignore next */
      cov_8tdu2akbm().b[1][0]++;
      cov_8tdu2akbm().s[54]++;
      fetchDashboardData();
    } else
    /* istanbul ignore next */
    {
      cov_8tdu2akbm().b[1][1]++;
    }
  }, [user?.id, fetchDashboardData]);
  /* istanbul ignore next */
  cov_8tdu2akbm().s[55]++;
  return {
    ...state,
    refreshData,
    markInsightAsRead,
    completeGoal,
    isLoading: state.loading
  };
};
/* istanbul ignore next */
cov_8tdu2akbm().s[56]++;
exports.useDashboard = useDashboard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,