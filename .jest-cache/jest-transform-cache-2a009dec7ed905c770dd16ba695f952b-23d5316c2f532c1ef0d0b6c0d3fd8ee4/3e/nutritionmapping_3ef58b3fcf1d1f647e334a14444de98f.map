{"version":3,"names":["cov_oa7chbnfk","actualCoverage","s","dbToNutritionData","dbData","f","id","userId","user_id","mealId","meal_id","foodItemId","food_item_id","name","quantity","unit","calories","macros","protein","protein_g","carbohydrates","carbohydrates_g","fat","fat_g","fiber","fiber_g","sugar","sugar_g","sodium","sodium_mg","mealType","meal_type","mealTiming","Date","meal_timing","createdAt","created_at","updatedAt","updated_at","exports","nutritionDataToDb","data","undefined","b","toISOString","dbToMealAnalysis","aiAnalysis","nutrition_ai_analysis","totalCalories","total_calories","macroBreakdown","grams","protein_grams","percentage","carbs","carbs_grams","fat_grams","nutritionScores","overallQuality","meal_quality_score","macroBalance","macro_balance_score","micronutrientDensity","nutritional_density_score","processedFoodRatio","processed_food_ratio","satietyIndex","satiety_prediction_score","inflammatoryIndex","inflammatory_index","aiRecommendations","improvements","alternatives","timing","timing_suggestions","portionAdjustments","portion_adjustments","complianceMetrics","calorieTarget","calorie_compliance","actual","target","variance","proteinTarget","protein_compliance","carbTarget","carb_compliance","fatTarget","fat_compliance","metabolicImpact","estimatedGlycemicLoad","glycemic_load","insulinResponse","insulin_response","satietyDuration","satiety_duration","energyProvision","energy_provision","mealAnalysisToDb","analysis","calculateNutritionScores","Math","min","max","proteinPercentage","carbPercentage","fatPercentage","round","generateNutritionRecommendations","recommendations","push"],"sources":["/workspaces/MyFitHero/src/features/nutrition/services/nutrition-mapping.ts"],"sourcesContent":["import { NutritionData, MealAnalysis, DbNutritionData, DbMealAnalysis } from '@/features/nutrition/types';\n\n/**\n * Mapping sophistiqué pour les données nutrition entre Database (snake_case) et TypeScript (camelCase)\n * Inspiré de la même philosophie que database-mapping.ts pour les workouts\n */\n\n// =====================================\n// NUTRITION DATA MAPPING\n// =====================================\n\nexport const dbToNutritionData = (dbData: DbNutritionData): NutritionData => {\n  return {\n    id: dbData.id,\n    userId: dbData.user_id,\n    mealId: dbData.meal_id,\n    foodItemId: dbData.food_item_id,\n    name: dbData.name,\n    quantity: dbData.quantity,\n    unit: dbData.unit as NutritionData['unit'],\n    calories: dbData.calories,\n    macros: {\n      protein: dbData.protein_g,\n      carbohydrates: dbData.carbohydrates_g,\n      fat: dbData.fat_g,\n      fiber: dbData.fiber_g,\n      sugar: dbData.sugar_g,\n      sodium: dbData.sodium_mg,\n    },\n    mealType: dbData.meal_type as NutritionData['mealType'],\n    mealTiming: new Date(dbData.meal_timing),\n    createdAt: new Date(dbData.created_at),\n    updatedAt: new Date(dbData.updated_at),\n  };\n};\n\nexport const nutritionDataToDb = (data: Partial<NutritionData>): Partial<DbNutritionData> => {\n  const dbData: Partial<DbNutritionData> = {};\n\n  if (data.id !== undefined) dbData.id = data.id;\n  if (data.userId !== undefined) dbData.user_id = data.userId;\n  if (data.mealId !== undefined) dbData.meal_id = data.mealId;\n  if (data.foodItemId !== undefined) dbData.food_item_id = data.foodItemId;\n  if (data.name !== undefined) dbData.name = data.name;\n  if (data.quantity !== undefined) dbData.quantity = data.quantity;\n  if (data.unit !== undefined) dbData.unit = data.unit;\n  if (data.calories !== undefined) dbData.calories = data.calories;\n  if (data.macros?.protein !== undefined) dbData.protein_g = data.macros.protein;\n  if (data.macros?.carbohydrates !== undefined) dbData.carbohydrates_g = data.macros.carbohydrates;\n  if (data.macros?.fat !== undefined) dbData.fat_g = data.macros.fat;\n  if (data.macros?.fiber !== undefined) dbData.fiber_g = data.macros.fiber;\n  if (data.macros?.sugar !== undefined) dbData.sugar_g = data.macros.sugar;\n  if (data.macros?.sodium !== undefined) dbData.sodium_mg = data.macros.sodium;\n  if (data.mealType !== undefined) dbData.meal_type = data.mealType;\n  if (data.mealTiming !== undefined) dbData.meal_timing = data.mealTiming.toISOString();\n  if (data.createdAt !== undefined) dbData.created_at = data.createdAt.toISOString();\n  if (data.updatedAt !== undefined) dbData.updated_at = data.updatedAt.toISOString();\n\n  return dbData;\n};\n\n// =====================================\n// MEAL ANALYSIS MAPPING\n// =====================================\n\nexport const dbToMealAnalysis = (dbData: DbMealAnalysis): MealAnalysis => {\n  // Parse JSONB data with fallbacks\n  const aiAnalysis = dbData.nutrition_ai_analysis || {};\n  \n  return {\n    id: dbData.id,\n    userId: dbData.user_id,\n    mealId: dbData.meal_id,\n    totalCalories: dbData.total_calories,\n    macroBreakdown: {\n      protein: {\n        grams: dbData.protein_grams,\n        percentage: (dbData.protein_grams * 4 / dbData.total_calories) * 100,\n        calories: dbData.protein_grams * 4,\n      },\n      carbs: {\n        grams: dbData.carbs_grams,\n        percentage: (dbData.carbs_grams * 4 / dbData.total_calories) * 100,\n        calories: dbData.carbs_grams * 4,\n      },\n      fat: {\n        grams: dbData.fat_grams,\n        percentage: (dbData.fat_grams * 9 / dbData.total_calories) * 100,\n        calories: dbData.fat_grams * 9,\n      },\n    },\n    nutritionScores: {\n      overallQuality: dbData.meal_quality_score || 0,\n      macroBalance: dbData.macro_balance_score || 0,\n      micronutrientDensity: dbData.nutritional_density_score || 0,\n      processedFoodRatio: aiAnalysis.processed_food_ratio || 0,\n      satietyIndex: dbData.satiety_prediction_score || 0,\n      inflammatoryIndex: aiAnalysis.inflammatory_index || 0,\n    },\n    aiRecommendations: {\n      improvements: aiAnalysis.improvements || [],\n      alternatives: aiAnalysis.alternatives || [],\n      timing: aiAnalysis.timing_suggestions || [],\n      portionAdjustments: aiAnalysis.portion_adjustments || [],\n    },\n    complianceMetrics: {\n      calorieTarget: aiAnalysis.calorie_compliance || { actual: 0, target: 0, variance: 0 },\n      proteinTarget: aiAnalysis.protein_compliance || { actual: 0, target: 0, variance: 0 },\n      carbTarget: aiAnalysis.carb_compliance || { actual: 0, target: 0, variance: 0 },\n      fatTarget: aiAnalysis.fat_compliance || { actual: 0, target: 0, variance: 0 },\n    },\n    metabolicImpact: {\n      estimatedGlycemicLoad: aiAnalysis.glycemic_load || 0,\n      insulinResponse: aiAnalysis.insulin_response || 'moderate',\n      satietyDuration: aiAnalysis.satiety_duration || 3,\n      energyProvision: aiAnalysis.energy_provision || 'sustained',\n    },\n    createdAt: new Date(dbData.created_at),\n    updatedAt: new Date(dbData.updated_at),\n  };\n};\n\nexport const mealAnalysisToDb = (analysis: Partial<MealAnalysis>): Partial<DbMealAnalysis> => {\n  const dbData: Partial<DbMealAnalysis> = {};\n\n  if (analysis.id !== undefined) dbData.id = analysis.id;\n  if (analysis.userId !== undefined) dbData.user_id = analysis.userId;\n  if (analysis.mealId !== undefined) dbData.meal_id = analysis.mealId;\n  if (analysis.totalCalories !== undefined) dbData.total_calories = analysis.totalCalories;\n  if (analysis.macroBreakdown?.protein?.grams !== undefined) dbData.protein_grams = analysis.macroBreakdown.protein.grams;\n  if (analysis.macroBreakdown?.carbs?.grams !== undefined) dbData.carbs_grams = analysis.macroBreakdown.carbs.grams;\n  if (analysis.macroBreakdown?.fat?.grams !== undefined) dbData.fat_grams = analysis.macroBreakdown.fat.grams;\n  if (analysis.nutritionScores?.overallQuality !== undefined) dbData.meal_quality_score = analysis.nutritionScores.overallQuality;\n  if (analysis.nutritionScores?.macroBalance !== undefined) dbData.macro_balance_score = analysis.nutritionScores.macroBalance;\n  if (analysis.nutritionScores?.micronutrientDensity !== undefined) dbData.nutritional_density_score = analysis.nutritionScores.micronutrientDensity;\n  if (analysis.nutritionScores?.satietyIndex !== undefined) dbData.satiety_prediction_score = analysis.nutritionScores.satietyIndex;\n  \n  // Construire le JSONB pour nutrition_ai_analysis\n  if (analysis.aiRecommendations || analysis.complianceMetrics || analysis.metabolicImpact || analysis.nutritionScores) {\n    dbData.nutrition_ai_analysis = {\n      ...(analysis.aiRecommendations && {\n        improvements: analysis.aiRecommendations.improvements,\n        alternatives: analysis.aiRecommendations.alternatives,\n        timing_suggestions: analysis.aiRecommendations.timing,\n        portion_adjustments: analysis.aiRecommendations.portionAdjustments,\n      }),\n      ...(analysis.complianceMetrics && {\n        calorie_compliance: analysis.complianceMetrics.calorieTarget,\n        protein_compliance: analysis.complianceMetrics.proteinTarget,\n        carb_compliance: analysis.complianceMetrics.carbTarget,\n        fat_compliance: analysis.complianceMetrics.fatTarget,\n      }),\n      ...(analysis.metabolicImpact && {\n        glycemic_load: analysis.metabolicImpact.estimatedGlycemicLoad,\n        insulin_response: analysis.metabolicImpact.insulinResponse,\n        satiety_duration: analysis.metabolicImpact.satietyDuration,\n        energy_provision: analysis.metabolicImpact.energyProvision,\n      }),\n      ...(analysis.nutritionScores && {\n        processed_food_ratio: analysis.nutritionScores.processedFoodRatio,\n        inflammatory_index: analysis.nutritionScores.inflammatoryIndex,\n      }),\n    };\n  }\n  \n  if (analysis.createdAt !== undefined) dbData.created_at = analysis.createdAt.toISOString();\n  if (analysis.updatedAt !== undefined) dbData.updated_at = analysis.updatedAt.toISOString();\n\n  return dbData;\n};\n\n// =====================================\n// UTILITY FUNCTIONS\n// =====================================\n\n/**\n * Calcule les scores nutritionnels automatiquement\n */\nexport const calculateNutritionScores = (\n  calories: number, \n  protein: number, \n  carbs: number, \n  fat: number, \n  fiber: number,\n  sugar: number\n) => {\n  // Score qualité globale (0-100)\n  const overallQuality = Math.min(100, Math.max(0,\n    (calories >= 300 && calories <= 800 ? 30 : 15) + // Calories appropriées\n    (protein >= 15 ? 25 : protein >= 8 ? 15 : 5) + // Protéines suffisantes\n    (fiber >= 5 ? 20 : fiber >= 2 ? 10 : 0) + // Fibres élevées\n    (sugar <= 10 ? 15 : sugar <= 25 ? 8 : 0) + // Sucre modéré\n    10 // Score de base\n  ));\n\n  // Score équilibre macros (0-100)\n  const proteinPercentage = (protein * 4 / calories);\n  const carbPercentage = (carbs * 4 / calories);\n  const fatPercentage = (fat * 9 / calories);\n  \n  const macroBalance = Math.min(100, Math.max(0,\n    50 + \n    (proteinPercentage >= 0.15 && proteinPercentage <= 0.35 ? 20 : -10) +\n    (carbPercentage >= 0.45 && carbPercentage <= 0.65 ? 20 : -10) +\n    (fatPercentage >= 0.20 && fatPercentage <= 0.35 ? 10 : -5)\n  ));\n\n  return {\n    overallQuality: Math.round(overallQuality),\n    macroBalance: Math.round(macroBalance),\n  };\n};\n\n/**\n * Génère des recommandations IA basées sur l'analyse nutritionnelle\n */\nexport const generateNutritionRecommendations = (\n  calories: number,\n  protein: number,\n  carbs: number,\n  fat: number,\n  fiber: number,\n  mealType: string\n): string[] => {\n  const recommendations: string[] = [];\n\n  // Recommandations calories\n  if (calories < 300) {\n    recommendations.push(\"Considérez augmenter la taille des portions pour un apport énergétique suffisant\");\n  } else if (calories > 800) {\n    recommendations.push(\"Repas copieux - parfait pour l'activité physique intense\");\n  }\n\n  // Recommandations protéines\n  if (protein < 15) {\n    recommendations.push(\"Ajoutez une source de protéines (œufs, légumineuses, viande maigre)\");\n  } else if (protein > 40) {\n    recommendations.push(\"Excellent apport en protéines pour la récupération musculaire\");\n  }\n\n  // Recommandations fibres\n  if (fiber < 3) {\n    recommendations.push(\"Intégrez plus de légumes ou céréales complètes pour les fibres\");\n  }\n\n  // Recommandations par type de repas\n  if (mealType === 'breakfast' && carbs < 30) {\n    recommendations.push(\"Le petit-déjeuner bénéficierait de plus de glucides pour l'énergie matinale\");\n  }\n  \n  if (mealType === 'post_workout' && protein < 20) {\n    recommendations.push(\"Augmentez les protéines dans les 30min post-entraînement pour la récupération\");\n  }\n\n  return recommendations;\n};"],"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","ignoreList":[]}