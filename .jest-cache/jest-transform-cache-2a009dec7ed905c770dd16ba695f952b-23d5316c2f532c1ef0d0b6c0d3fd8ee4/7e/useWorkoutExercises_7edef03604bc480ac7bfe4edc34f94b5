1fb376756c4b13916c0a50a4cc892682
"use strict";

/* istanbul ignore next */
function cov_1eha7aifc0() {
  var path = "/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutExercises.ts";
  var hash = "e28f66673bd44d6de135d966322be764a9b84567";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutExercises.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 37
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 20
        },
        end: {
          line: 5,
          column: 55
        }
      },
      "4": {
        start: {
          line: 6,
          column: 28
        },
        end: {
          line: 104,
          column: 1
        }
      },
      "5": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 49
        }
      },
      "6": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 10,
          column: 19
        }
      },
      "8": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 19
        }
      },
      "9": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "10": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 14,
          column: 11
        }
      },
      "11": {
        start: {
          line: 16,
          column: 30
        },
        end: {
          line: 44,
          column: 58
        }
      },
      "12": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 18,
          column: 19
        }
      },
      "13": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 19
        }
      },
      "14": {
        start: {
          line: 19,
          column: 33
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "15": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 21,
          column: 26
        }
      },
      "16": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 26
        }
      },
      "17": {
        start: {
          line: 22,
          column: 32
        },
        end: {
          line: 31,
          column: 14
        }
      },
      "18": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "19": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "20": {
        start: {
          line: 26,
          column: 35
        },
        end: {
          line: 26,
          column: 49
        }
      },
      "21": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 29,
          column: 17
        }
      },
      "22": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 68
        }
      },
      "23": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "24": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 33,
          column: 65
        }
      },
      "25": {
        start: {
          line: 33,
          column: 53
        },
        end: {
          line: 33,
          column: 64
        }
      },
      "26": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 59
        }
      },
      "27": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 55
        }
      },
      "28": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "29": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 39,
          column: 84
        }
      },
      "30": {
        start: {
          line: 39,
          column: 64
        },
        end: {
          line: 39,
          column: 83
        }
      },
      "31": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "32": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 65
        }
      },
      "33": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 64,
          column: 46
        }
      },
      "34": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "35": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "36": {
        start: {
          line: 48,
          column: 33
        },
        end: {
          line: 58,
          column: 17
        }
      },
      "37": {
        start: {
          line: 48,
          column: 68
        },
        end: {
          line: 58,
          column: 16
        }
      },
      "38": {
        start: {
          line: 52,
          column: 42
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "39": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 55
        }
      },
      "40": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "41": {
        start: {
          line: 65,
          column: 29
        },
        end: {
          line: 80,
          column: 46
        }
      },
      "42": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "43": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "44": {
        start: {
          line: 68,
          column: 27
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "45": {
        start: {
          line: 74,
          column: 33
        },
        end: {
          line: 74,
          column: 138
        }
      },
      "46": {
        start: {
          line: 74,
          column: 68
        },
        end: {
          line: 74,
          column: 137
        }
      },
      "47": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 55
        }
      },
      "48": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "49": {
        start: {
          line: 81,
          column: 34
        },
        end: {
          line: 96,
          column: 46
        }
      },
      "50": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "51": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "52": {
        start: {
          line: 84,
          column: 33
        },
        end: {
          line: 90,
          column: 17
        }
      },
      "53": {
        start: {
          line: 84,
          column: 68
        },
        end: {
          line: 90,
          column: 16
        }
      },
      "54": {
        start: {
          line: 87,
          column: 47
        },
        end: {
          line: 87,
          column: 61
        }
      },
      "55": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 55
        }
      },
      "56": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 11
        }
      },
      "57": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "58": {
        start: {
          line: 105,
          column: 0
        },
        end: {
          line: 105,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 28
          },
          end: {
            line: 6,
            column: 29
          }
        },
        loc: {
          start: {
            line: 6,
            column: 82
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 49
          },
          end: {
            line: 8,
            column: 50
          }
        },
        loc: {
          start: {
            line: 8,
            column: 69
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 55
          },
          end: {
            line: 16,
            column: 56
          }
        },
        loc: {
          start: {
            line: 16,
            column: 96
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 62
          },
          end: {
            line: 19,
            column: 63
          }
        },
        loc: {
          start: {
            line: 19,
            column: 68
          },
          end: {
            line: 35,
            column: 9
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 44
          },
          end: {
            line: 22,
            column: 45
          }
        },
        loc: {
          start: {
            line: 22,
            column: 60
          },
          end: {
            line: 31,
            column: 13
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 48
          },
          end: {
            line: 33,
            column: 49
          }
        },
        loc: {
          start: {
            line: 33,
            column: 53
          },
          end: {
            line: 33,
            column: 64
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 59
          },
          end: {
            line: 39,
            column: 60
          }
        },
        loc: {
          start: {
            line: 39,
            column: 64
          },
          end: {
            line: 39,
            column: 83
          }
        },
        line: 39
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 45,
            column: 54
          },
          end: {
            line: 45,
            column: 55
          }
        },
        loc: {
          start: {
            line: 45,
            column: 76
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 45
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 48,
            column: 62
          },
          end: {
            line: 48,
            column: 63
          }
        },
        loc: {
          start: {
            line: 48,
            column: 68
          },
          end: {
            line: 58,
            column: 16
          }
        },
        line: 48
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 52,
            column: 34
          },
          end: {
            line: 52,
            column: 35
          }
        },
        loc: {
          start: {
            line: 52,
            column: 42
          },
          end: {
            line: 56,
            column: 17
          }
        },
        line: 52
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 65,
            column: 54
          },
          end: {
            line: 65,
            column: 55
          }
        },
        loc: {
          start: {
            line: 65,
            column: 84
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 65
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 74,
            column: 62
          },
          end: {
            line: 74,
            column: 63
          }
        },
        loc: {
          start: {
            line: 74,
            column: 68
          },
          end: {
            line: 74,
            column: 137
          }
        },
        line: 74
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 81,
            column: 59
          },
          end: {
            line: 81,
            column: 60
          }
        },
        loc: {
          start: {
            line: 81,
            column: 91
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 81
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 84,
            column: 62
          },
          end: {
            line: 84,
            column: 63
          }
        },
        loc: {
          start: {
            line: 84,
            column: 68
          },
          end: {
            line: 90,
            column: 16
          }
        },
        line: 84
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 87,
            column: 37
          },
          end: {
            line: 87,
            column: 38
          }
        },
        loc: {
          start: {
            line: 87,
            column: 47
          },
          end: {
            line: 87,
            column: 61
          }
        },
        line: 87
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 10,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 10,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 18,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 18,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 21,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 21,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 24,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 24,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 29,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 29,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 37
          }
        }, {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 27,
            column: 55
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 26
          }
        }, {
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 38,
            column: 48
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "10": {
        loc: {
          start: {
            line: 48,
            column: 68
          },
          end: {
            line: 58,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 14
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: 58,
            column: 14
          },
          end: {
            line: 58,
            column: 16
          }
        }],
        line: 48
      },
      "11": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 67,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 67,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "12": {
        loc: {
          start: {
            line: 74,
            column: 68
          },
          end: {
            line: 74,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 91
          },
          end: {
            line: 74,
            column: 132
          }
        }, {
          start: {
            line: 74,
            column: 135
          },
          end: {
            line: 74,
            column: 137
          }
        }],
        line: 74
      },
      "13": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 83,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 83,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "14": {
        loc: {
          start: {
            line: 84,
            column: 68
          },
          end: {
            line: 90,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 14
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: 90,
            column: 14
          },
          end: {
            line: 90,
            column: 16
          }
        }],
        line: 84
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutExercises.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutExercises.ts"],
      sourcesContent: ["import React, { useCallback } from 'react';\nimport { useToast } from '@/shared/hooks/use-toast';\n\n// Types locaux temporaires jusqu'\xE0 ce que les types soient correctement export\xE9s\ninterface ExerciseSet {\n  id: string;\n  reps: number;\n  weight: number;\n  completed: boolean;\n  rest_time?: number;\n  timestamp?: string;\n}\n\ninterface WorkoutExercise {\n  id: string;\n  name: string;\n  sets: ExerciseSet[];\n  notes?: string;\n}\n\ninterface WorkoutSession {\n  id: string;\n  exercises: WorkoutExercise[];\n  // autres propri\xE9t\xE9s selon vos besoins\n}\n\nexport interface UseWorkoutExercisesReturn {\n  addExercise: (exercise: Omit<WorkoutExercise, 'id'>) => Promise<void>;\n  updateExerciseSet: (\n    exerciseId: string,\n    setIndex: number,\n    updates: Partial<ExerciseSet>\n  ) => Promise<void>;\n  completeExercise: (exerciseId: string) => Promise<void>;\n  addSetToExercise: (exerciseId: string, newSet?: Partial<ExerciseSet>) => Promise<void>;\n  removeSetFromExercise: (exerciseId: string, setIndex: number) => Promise<void>;\n}\n\nexport const useWorkoutExercises = (\n  currentSession: WorkoutSession | null,\n  updateSession: (updates: Partial<WorkoutSession>) => void,\n  saveWeightHistory: (exerciseName: string, weight: number) => void\n): UseWorkoutExercisesReturn => {\n  const { toast } = useToast();\n\n  const addExercise = useCallback(\n    async (exercise: Omit<WorkoutExercise, 'id'>) => {\n      if (!currentSession) return;\n      const newEx: WorkoutExercise = { ...exercise, id: crypto.randomUUID() };\n      updateSession({\n        exercises: [...currentSession.exercises, newEx],\n      });\n    },\n    [currentSession, updateSession]\n  );\n\n  const updateExerciseSet = useCallback(\n    async (exerciseId: string, setIndex: number, updates: Partial<ExerciseSet>) => {\n      if (!currentSession) return;\n\n      const updatedExercises = currentSession.exercises.map(ex => {\n        if (ex.id !== exerciseId) return ex;\n\n        const updatedSets = ex.sets.map((set, index) => {\n          if (index !== setIndex) return set;\n\n          // Ajouter timestamp si le set devient compl\xE9t\xE9\n          const setUpdates = { ...updates };\n          if (updates.completed && !set.completed) {\n            setUpdates.timestamp = new Date().toISOString();\n          }\n\n          return { ...set, ...setUpdates };\n        });\n\n        // Marquer l'exercice termin\xE9 si toutes les s\xE9ries le sont\n        const completed = updatedSets.every(s => s.completed);\n\n        return { ...ex, sets: updatedSets, completed };\n      });\n\n      updateSession({ exercises: updatedExercises });\n\n      // Sauvegarder l'historique des poids\n      if (updates.weight && updates.weight > 0) {\n        const exercise = currentSession.exercises.find(e => e.id === exerciseId);\n        if (exercise) {\n          saveWeightHistory(exercise.name, updates.weight);\n        }\n      }\n    },\n    [currentSession, updateSession, saveWeightHistory]\n  );\n\n  const completeExercise = useCallback(\n    async (exerciseId: string) => {\n      if (!currentSession) return;\n\n      const updatedExercises = currentSession.exercises.map(ex =>\n        ex.id === exerciseId\n          ? {\n              ...ex,\n              completed: true,\n              sets: ex.sets.map(set => ({\n                ...set,\n                completed: true,\n                timestamp: new Date().toISOString(),\n              })),\n            }\n          : ex\n      );\n\n      updateSession({ exercises: updatedExercises });\n\n      toast({\n        title: 'Exercice termin\xE9',\n        description: 'Bravo ! Toutes les s\xE9ries sont compl\xE9t\xE9es',\n      });\n    },\n    [currentSession, updateSession, toast]\n  );\n\n  const addSetToExercise = useCallback(\n    async (exerciseId: string, newSet?: Partial<ExerciseSet>) => {\n      if (!currentSession) return;\n\n      const defaultSet: ExerciseSet = {\n        reps: 0,\n        weight: 0,\n        completed: false,\n        ...newSet,\n      };\n\n      const updatedExercises = currentSession.exercises.map(ex =>\n        ex.id === exerciseId ? { ...ex, sets: [...ex.sets, defaultSet] } : ex\n      );\n\n      updateSession({ exercises: updatedExercises });\n\n      toast({\n        title: 'S\xE9rie ajout\xE9e',\n        description: \"Nouvelle s\xE9rie ajout\xE9e \xE0 l'exercice\",\n      });\n    },\n    [currentSession, updateSession, toast]\n  );\n\n  const removeSetFromExercise = useCallback(\n    async (exerciseId: string, setIndex: number) => {\n      if (!currentSession) return;\n\n      const updatedExercises = currentSession.exercises.map(ex =>\n        ex.id === exerciseId\n          ? {\n              ...ex,\n              sets: ex.sets.filter((_, i) => i !== setIndex),\n              completed: false, // R\xE9initialiser le statut de l'exercice\n            }\n          : ex\n      );\n\n      updateSession({ exercises: updatedExercises });\n\n      toast({\n        title: 'S\xE9rie supprim\xE9e',\n        description: \"La s\xE9rie a \xE9t\xE9 retir\xE9e de l'exercice\",\n      });\n    },\n    [currentSession, updateSession, toast]\n  );\n\n  return {\n    addExercise,\n    updateExerciseSet,\n    completeExercise,\n    addSetToExercise,\n    removeSetFromExercise,\n  };\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e28f66673bd44d6de135d966322be764a9b84567"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1eha7aifc0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1eha7aifc0();
cov_1eha7aifc0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1eha7aifc0().s[1]++;
exports.useWorkoutExercises = void 0;
const react_1 =
/* istanbul ignore next */
(cov_1eha7aifc0().s[2]++, require("react"));
const use_toast_1 =
/* istanbul ignore next */
(cov_1eha7aifc0().s[3]++, require("@/shared/hooks/use-toast"));
/* istanbul ignore next */
cov_1eha7aifc0().s[4]++;
const useWorkoutExercises = (currentSession, updateSession, saveWeightHistory) => {
  /* istanbul ignore next */
  cov_1eha7aifc0().f[0]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_1eha7aifc0().s[5]++, (0, use_toast_1.useToast)());
  const addExercise =
  /* istanbul ignore next */
  (cov_1eha7aifc0().s[6]++, (0, react_1.useCallback)(async exercise => {
    /* istanbul ignore next */
    cov_1eha7aifc0().f[1]++;
    cov_1eha7aifc0().s[7]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_1eha7aifc0().b[0][0]++;
      cov_1eha7aifc0().s[8]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1eha7aifc0().b[0][1]++;
    }
    const newEx =
    /* istanbul ignore next */
    (cov_1eha7aifc0().s[9]++, {
      ...exercise,
      id: crypto.randomUUID()
    });
    /* istanbul ignore next */
    cov_1eha7aifc0().s[10]++;
    updateSession({
      exercises: [...currentSession.exercises, newEx]
    });
  }, [currentSession, updateSession]));
  const updateExerciseSet =
  /* istanbul ignore next */
  (cov_1eha7aifc0().s[11]++, (0, react_1.useCallback)(async (exerciseId, setIndex, updates) => {
    /* istanbul ignore next */
    cov_1eha7aifc0().f[2]++;
    cov_1eha7aifc0().s[12]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_1eha7aifc0().b[1][0]++;
      cov_1eha7aifc0().s[13]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1eha7aifc0().b[1][1]++;
    }
    const updatedExercises =
    /* istanbul ignore next */
    (cov_1eha7aifc0().s[14]++, currentSession.exercises.map(ex => {
      /* istanbul ignore next */
      cov_1eha7aifc0().f[3]++;
      cov_1eha7aifc0().s[15]++;
      if (ex.id !== exerciseId) {
        /* istanbul ignore next */
        cov_1eha7aifc0().b[2][0]++;
        cov_1eha7aifc0().s[16]++;
        return ex;
      } else
      /* istanbul ignore next */
      {
        cov_1eha7aifc0().b[2][1]++;
      }
      const updatedSets =
      /* istanbul ignore next */
      (cov_1eha7aifc0().s[17]++, ex.sets.map((set, index) => {
        /* istanbul ignore next */
        cov_1eha7aifc0().f[4]++;
        cov_1eha7aifc0().s[18]++;
        if (index !== setIndex) {
          /* istanbul ignore next */
          cov_1eha7aifc0().b[3][0]++;
          cov_1eha7aifc0().s[19]++;
          return set;
        } else
        /* istanbul ignore next */
        {
          cov_1eha7aifc0().b[3][1]++;
        }
        // Ajouter timestamp si le set devient complété
        const setUpdates =
        /* istanbul ignore next */
        (cov_1eha7aifc0().s[20]++, {
          ...updates
        });
        /* istanbul ignore next */
        cov_1eha7aifc0().s[21]++;
        if (
        /* istanbul ignore next */
        (cov_1eha7aifc0().b[5][0]++, updates.completed) &&
        /* istanbul ignore next */
        (cov_1eha7aifc0().b[5][1]++, !set.completed)) {
          /* istanbul ignore next */
          cov_1eha7aifc0().b[4][0]++;
          cov_1eha7aifc0().s[22]++;
          setUpdates.timestamp = new Date().toISOString();
        } else
        /* istanbul ignore next */
        {
          cov_1eha7aifc0().b[4][1]++;
        }
        cov_1eha7aifc0().s[23]++;
        return {
          ...set,
          ...setUpdates
        };
      }));
      // Marquer l'exercice terminé si toutes les séries le sont
      const completed =
      /* istanbul ignore next */
      (cov_1eha7aifc0().s[24]++, updatedSets.every(s => {
        /* istanbul ignore next */
        cov_1eha7aifc0().f[5]++;
        cov_1eha7aifc0().s[25]++;
        return s.completed;
      }));
      /* istanbul ignore next */
      cov_1eha7aifc0().s[26]++;
      return {
        ...ex,
        sets: updatedSets,
        completed
      };
    }));
    /* istanbul ignore next */
    cov_1eha7aifc0().s[27]++;
    updateSession({
      exercises: updatedExercises
    });
    // Sauvegarder l'historique des poids
    /* istanbul ignore next */
    cov_1eha7aifc0().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_1eha7aifc0().b[7][0]++, updates.weight) &&
    /* istanbul ignore next */
    (cov_1eha7aifc0().b[7][1]++, updates.weight > 0)) {
      /* istanbul ignore next */
      cov_1eha7aifc0().b[6][0]++;
      const exercise =
      /* istanbul ignore next */
      (cov_1eha7aifc0().s[29]++, currentSession.exercises.find(e => {
        /* istanbul ignore next */
        cov_1eha7aifc0().f[6]++;
        cov_1eha7aifc0().s[30]++;
        return e.id === exerciseId;
      }));
      /* istanbul ignore next */
      cov_1eha7aifc0().s[31]++;
      if (exercise) {
        /* istanbul ignore next */
        cov_1eha7aifc0().b[8][0]++;
        cov_1eha7aifc0().s[32]++;
        saveWeightHistory(exercise.name, updates.weight);
      } else
      /* istanbul ignore next */
      {
        cov_1eha7aifc0().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1eha7aifc0().b[6][1]++;
    }
  }, [currentSession, updateSession, saveWeightHistory]));
  const completeExercise =
  /* istanbul ignore next */
  (cov_1eha7aifc0().s[33]++, (0, react_1.useCallback)(async exerciseId => {
    /* istanbul ignore next */
    cov_1eha7aifc0().f[7]++;
    cov_1eha7aifc0().s[34]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_1eha7aifc0().b[9][0]++;
      cov_1eha7aifc0().s[35]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1eha7aifc0().b[9][1]++;
    }
    const updatedExercises =
    /* istanbul ignore next */
    (cov_1eha7aifc0().s[36]++, currentSession.exercises.map(ex => {
      /* istanbul ignore next */
      cov_1eha7aifc0().f[8]++;
      cov_1eha7aifc0().s[37]++;
      return ex.id === exerciseId ?
      /* istanbul ignore next */
      (cov_1eha7aifc0().b[10][0]++, {
        ...ex,
        completed: true,
        sets: ex.sets.map(set => {
          /* istanbul ignore next */
          cov_1eha7aifc0().f[9]++;
          cov_1eha7aifc0().s[38]++;
          return {
            ...set,
            completed: true,
            timestamp: new Date().toISOString()
          };
        })
      }) :
      /* istanbul ignore next */
      (cov_1eha7aifc0().b[10][1]++, ex);
    }));
    /* istanbul ignore next */
    cov_1eha7aifc0().s[39]++;
    updateSession({
      exercises: updatedExercises
    });
    /* istanbul ignore next */
    cov_1eha7aifc0().s[40]++;
    toast({
      title: 'Exercice terminé',
      description: 'Bravo ! Toutes les séries sont complétées'
    });
  }, [currentSession, updateSession, toast]));
  const addSetToExercise =
  /* istanbul ignore next */
  (cov_1eha7aifc0().s[41]++, (0, react_1.useCallback)(async (exerciseId, newSet) => {
    /* istanbul ignore next */
    cov_1eha7aifc0().f[10]++;
    cov_1eha7aifc0().s[42]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_1eha7aifc0().b[11][0]++;
      cov_1eha7aifc0().s[43]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1eha7aifc0().b[11][1]++;
    }
    const defaultSet =
    /* istanbul ignore next */
    (cov_1eha7aifc0().s[44]++, {
      reps: 0,
      weight: 0,
      completed: false,
      ...newSet
    });
    const updatedExercises =
    /* istanbul ignore next */
    (cov_1eha7aifc0().s[45]++, currentSession.exercises.map(ex => {
      /* istanbul ignore next */
      cov_1eha7aifc0().f[11]++;
      cov_1eha7aifc0().s[46]++;
      return ex.id === exerciseId ?
      /* istanbul ignore next */
      (cov_1eha7aifc0().b[12][0]++, {
        ...ex,
        sets: [...ex.sets, defaultSet]
      }) :
      /* istanbul ignore next */
      (cov_1eha7aifc0().b[12][1]++, ex);
    }));
    /* istanbul ignore next */
    cov_1eha7aifc0().s[47]++;
    updateSession({
      exercises: updatedExercises
    });
    /* istanbul ignore next */
    cov_1eha7aifc0().s[48]++;
    toast({
      title: 'Série ajoutée',
      description: "Nouvelle série ajoutée à l'exercice"
    });
  }, [currentSession, updateSession, toast]));
  const removeSetFromExercise =
  /* istanbul ignore next */
  (cov_1eha7aifc0().s[49]++, (0, react_1.useCallback)(async (exerciseId, setIndex) => {
    /* istanbul ignore next */
    cov_1eha7aifc0().f[12]++;
    cov_1eha7aifc0().s[50]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_1eha7aifc0().b[13][0]++;
      cov_1eha7aifc0().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1eha7aifc0().b[13][1]++;
    }
    const updatedExercises =
    /* istanbul ignore next */
    (cov_1eha7aifc0().s[52]++, currentSession.exercises.map(ex => {
      /* istanbul ignore next */
      cov_1eha7aifc0().f[13]++;
      cov_1eha7aifc0().s[53]++;
      return ex.id === exerciseId ?
      /* istanbul ignore next */
      (cov_1eha7aifc0().b[14][0]++, {
        ...ex,
        sets: ex.sets.filter((_, i) => {
          /* istanbul ignore next */
          cov_1eha7aifc0().f[14]++;
          cov_1eha7aifc0().s[54]++;
          return i !== setIndex;
        }),
        completed: false // Réinitialiser le statut de l'exercice
      }) :
      /* istanbul ignore next */
      (cov_1eha7aifc0().b[14][1]++, ex);
    }));
    /* istanbul ignore next */
    cov_1eha7aifc0().s[55]++;
    updateSession({
      exercises: updatedExercises
    });
    /* istanbul ignore next */
    cov_1eha7aifc0().s[56]++;
    toast({
      title: 'Série supprimée',
      description: "La série a été retirée de l'exercice"
    });
  }, [currentSession, updateSession, toast]));
  /* istanbul ignore next */
  cov_1eha7aifc0().s[57]++;
  return {
    addExercise,
    updateExerciseSet,
    completeExercise,
    addSetToExercise,
    removeSetFromExercise
  };
};
/* istanbul ignore next */
cov_1eha7aifc0().s[58]++;
exports.useWorkoutExercises = useWorkoutExercises;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,