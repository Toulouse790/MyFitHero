5931f9eab718151402348a78b65977ca
"use strict";

/* istanbul ignore next */
function cov_1w5m9i148j() {
  var path = "/workspaces/MyFitHero/src/features/ai-coach/utils/health-orchestrator-mapping.ts";
  var hash = "4b4eaa3a8e357d8d97e575f565db44ebec97e8a6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/ai-coach/utils/health-orchestrator-mapping.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 40
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 40
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "4": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 48
        }
      },
      "5": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 64
        }
      },
      "6": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 66
        }
      },
      "7": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 66
        }
      },
      "8": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "9": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "10": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "11": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 27,
          column: 6
        }
      },
      "12": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "13": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 58
        }
      },
      "14": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 125,
          column: 6
        }
      },
      "15": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 155,
          column: 6
        }
      },
      "16": {
        start: {
          line: 161,
          column: 19
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "17": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 168,
          column: 51
        }
      },
      "18": {
        start: {
          line: 170,
          column: 22
        },
        end: {
          line: 173,
          column: 46
        }
      },
      "19": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 175,
          column: 54
        }
      },
      "20": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 177,
          column: 58
        }
      },
      "21": {
        start: {
          line: 179,
          column: 23
        },
        end: {
          line: 179,
          column: 62
        }
      },
      "22": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 180,
          column: 62
        }
      },
      "23": {
        start: {
          line: 186,
          column: 21
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "24": {
        start: {
          line: 193,
          column: 19
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "25": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 204,
          column: 7
        }
      },
      "26": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "27": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 89
        }
      },
      "28": {
        start: {
          line: 206,
          column: 26
        },
        end: {
          line: 206,
          column: 78
        }
      },
      "29": {
        start: {
          line: 206,
          column: 72
        },
        end: {
          line: 206,
          column: 77
        }
      },
      "30": {
        start: {
          line: 207,
          column: 26
        },
        end: {
          line: 207,
          column: 42
        }
      },
      "31": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "32": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 122
        }
      },
      "33": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 96
        }
      },
      "34": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 92
        }
      },
      "35": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 216,
          column: 76
        }
      },
      "36": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 20
        }
      },
      "37": {
        start: {
          line: 223,
          column: 19
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "38": {
        start: {
          line: 230,
          column: 32
        },
        end: {
          line: 232,
          column: 33
        }
      },
      "39": {
        start: {
          line: 234,
          column: 30
        },
        end: {
          line: 235,
          column: 32
        }
      },
      "40": {
        start: {
          line: 237,
          column: 24
        },
        end: {
          line: 240,
          column: 34
        }
      },
      "41": {
        start: {
          line: 242,
          column: 29
        },
        end: {
          line: 244,
          column: 33
        }
      },
      "42": {
        start: {
          line: 246,
          column: 25
        },
        end: {
          line: 246,
          column: 55
        }
      },
      "43": {
        start: {
          line: 247,
          column: 27
        },
        end: {
          line: 247,
          column: 59
        }
      },
      "44": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 254,
          column: 6
        }
      },
      "45": {
        start: {
          line: 260,
          column: 18
        },
        end: {
          line: 265,
          column: 5
        }
      },
      "46": {
        start: {
          line: 266,
          column: 19
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "47": {
        start: {
          line: 272,
          column: 20
        },
        end: {
          line: 272,
          column: 21
        }
      },
      "48": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 289,
          column: 7
        }
      },
      "49": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "50": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 28
        }
      },
      "51": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 85
        }
      },
      "52": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 85
        }
      },
      "53": {
        start: {
          line: 280,
          column: 13
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "54": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 28
        }
      },
      "55": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 86
        }
      },
      "56": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 81
        }
      },
      "57": {
        start: {
          line: 285,
          column: 13
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "58": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 27
        }
      },
      "59": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 77
        }
      },
      "60": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "61": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 102
        }
      },
      "62": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 83
        }
      },
      "63": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "64": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 89
        }
      },
      "65": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 77
        }
      },
      "66": {
        start: {
          line: 299,
          column: 4
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "67": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 24
        }
      },
      "68": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 68
        }
      },
      "69": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "70": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 44
        }
      },
      "71": {
        start: {
          line: 307,
          column: 9
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "72": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 40
        }
      },
      "73": {
        start: {
          line: 310,
          column: 9
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "74": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 42
        }
      },
      "75": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 313,
          column: 17
        }
      },
      "76": {
        start: {
          line: 319,
          column: 26
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "77": {
        start: {
          line: 326,
          column: 32
        },
        end: {
          line: 331,
          column: 5
        }
      },
      "78": {
        start: {
          line: 333,
          column: 21
        },
        end: {
          line: 333,
          column: 80
        }
      },
      "79": {
        start: {
          line: 333,
          column: 67
        },
        end: {
          line: 333,
          column: 72
        }
      },
      "80": {
        start: {
          line: 334,
          column: 39
        },
        end: {
          line: 334,
          column: 67
        }
      },
      "81": {
        start: {
          line: 336,
          column: 29
        },
        end: {
          line: 336,
          column: 71
        }
      },
      "82": {
        start: {
          line: 337,
          column: 26
        },
        end: {
          line: 337,
          column: 67
        }
      },
      "83": {
        start: {
          line: 338,
          column: 24
        },
        end: {
          line: 338,
          column: 76
        }
      },
      "84": {
        start: {
          line: 340,
          column: 25
        },
        end: {
          line: 340,
          column: 62
        }
      },
      "85": {
        start: {
          line: 341,
          column: 30
        },
        end: {
          line: 341,
          column: 66
        }
      },
      "86": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 347,
          column: 6
        }
      },
      "87": {
        start: {
          line: 352,
          column: 18
        },
        end: {
          line: 352,
          column: 66
        }
      },
      "88": {
        start: {
          line: 352,
          column: 57
        },
        end: {
          line: 352,
          column: 62
        }
      },
      "89": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 353,
          column: 25
        }
      },
      "90": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 359,
          column: 6
        }
      },
      "91": {
        start: {
          line: 362,
          column: 19
        },
        end: {
          line: 362,
          column: 40
        }
      },
      "92": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 35
        }
      },
      "93": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 35
        }
      },
      "94": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 365,
          column: 25
        }
      },
      "95": {
        start: {
          line: 367,
          column: 4
        },
        end: {
          line: 368,
          column: 18
        }
      },
      "96": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 18
        }
      },
      "97": {
        start: {
          line: 369,
          column: 4
        },
        end: {
          line: 370,
          column: 17
        }
      },
      "98": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 17
        }
      },
      "99": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 372,
          column: 17
        }
      },
      "100": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 372,
          column: 17
        }
      },
      "101": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 373,
          column: 14
        }
      },
      "102": {
        start: {
          line: 376,
          column: 16
        },
        end: {
          line: 376,
          column: 17
        }
      },
      "103": {
        start: {
          line: 378,
          column: 25
        },
        end: {
          line: 378,
          column: 66
        }
      },
      "104": {
        start: {
          line: 379,
          column: 27
        },
        end: {
          line: 379,
          column: 72
        }
      },
      "105": {
        start: {
          line: 380,
          column: 26
        },
        end: {
          line: 380,
          column: 66
        }
      },
      "106": {
        start: {
          line: 381,
          column: 27
        },
        end: {
          line: 381,
          column: 72
        }
      },
      "107": {
        start: {
          line: 383,
          column: 4
        },
        end: {
          line: 384,
          column: 19
        }
      },
      "108": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 19
        }
      },
      "109": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 387,
          column: 19
        }
      },
      "110": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 19
        }
      },
      "111": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 390,
          column: 19
        }
      },
      "112": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 19
        }
      },
      "113": {
        start: {
          line: 392,
          column: 4
        },
        end: {
          line: 393,
          column: 19
        }
      },
      "114": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 393,
          column: 19
        }
      },
      "115": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 394,
          column: 17
        }
      },
      "116": {
        start: {
          line: 397,
          column: 19
        },
        end: {
          line: 397,
          column: 40
        }
      },
      "117": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 65
        }
      },
      "118": {
        start: {
          line: 398,
          column: 40
        },
        end: {
          line: 398,
          column: 45
        }
      },
      "119": {
        start: {
          line: 399,
          column: 21
        },
        end: {
          line: 399,
          column: 97
        }
      },
      "120": {
        start: {
          line: 399,
          column: 49
        },
        end: {
          line: 399,
          column: 77
        }
      },
      "121": {
        start: {
          line: 400,
          column: 30
        },
        end: {
          line: 400,
          column: 49
        }
      },
      "122": {
        start: {
          line: 402,
          column: 4
        },
        end: {
          line: 402,
          column: 54
        }
      },
      "123": {
        start: {
          line: 405,
          column: 28
        },
        end: {
          line: 405,
          column: 30
        }
      },
      "124": {
        start: {
          line: 406,
          column: 25
        },
        end: {
          line: 406,
          column: 66
        }
      },
      "125": {
        start: {
          line: 407,
          column: 27
        },
        end: {
          line: 407,
          column: 72
        }
      },
      "126": {
        start: {
          line: 408,
          column: 26
        },
        end: {
          line: 408,
          column: 65
        }
      },
      "127": {
        start: {
          line: 409,
          column: 27
        },
        end: {
          line: 409,
          column: 72
        }
      },
      "128": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 413,
          column: 5
        }
      },
      "129": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 412,
          column: 107
        }
      },
      "130": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 416,
          column: 5
        }
      },
      "131": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 415,
          column: 116
        }
      },
      "132": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 419,
          column: 5
        }
      },
      "133": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 418,
          column: 103
        }
      },
      "134": {
        start: {
          line: 420,
          column: 4
        },
        end: {
          line: 422,
          column: 5
        }
      },
      "135": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 421,
          column: 126
        }
      },
      "136": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 423,
          column: 27
        }
      },
      "137": {
        start: {
          line: 426,
          column: 21
        },
        end: {
          line: 426,
          column: 23
        }
      },
      "138": {
        start: {
          line: 428,
          column: 26
        },
        end: {
          line: 428,
          column: 154
        }
      },
      "139": {
        start: {
          line: 428,
          column: 82
        },
        end: {
          line: 428,
          column: 125
        }
      },
      "140": {
        start: {
          line: 429,
          column: 4
        },
        end: {
          line: 446,
          column: 5
        }
      },
      "141": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 431,
          column: 95
        }
      },
      "142": {
        start: {
          line: 432,
          column: 12
        },
        end: {
          line: 432,
          column: 70
        }
      },
      "143": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 18
        }
      },
      "144": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 98
        }
      },
      "145": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 71
        }
      },
      "146": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 18
        }
      },
      "147": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 80
        }
      },
      "148": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 440,
          column: 68
        }
      },
      "149": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 18
        }
      },
      "150": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 98
        }
      },
      "151": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 444,
          column: 95
        }
      },
      "152": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 445,
          column: 18
        }
      },
      "153": {
        start: {
          line: 447,
          column: 4
        },
        end: {
          line: 447,
          column: 20
        }
      },
      "154": {
        start: {
          line: 450,
          column: 17
        },
        end: {
          line: 455,
          column: 5
        }
      },
      "155": {
        start: {
          line: 457,
          column: 21
        },
        end: {
          line: 457,
          column: 73
        }
      },
      "156": {
        start: {
          line: 457,
          column: 60
        },
        end: {
          line: 457,
          column: 65
        }
      },
      "157": {
        start: {
          line: 458,
          column: 4
        },
        end: {
          line: 463,
          column: 5
        }
      },
      "158": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 76
        }
      },
      "159": {
        start: {
          line: 461,
          column: 9
        },
        end: {
          line: 463,
          column: 5
        }
      },
      "160": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 462,
          column: 84
        }
      },
      "161": {
        start: {
          line: 464,
          column: 4
        },
        end: {
          line: 464,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "dbToHealthData",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 23
          }
        },
        loc: {
          start: {
            line: 15,
            column: 32
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "healthDataToDb",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 23
          }
        },
        loc: {
          start: {
            line: 32,
            column: 36
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 32
      },
      "2": {
        name: "dbToHealthAnalysis",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 27
          }
        },
        loc: {
          start: {
            line: 58,
            column: 40
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 58
      },
      "3": {
        name: "healthAnalysisToDb",
        decl: {
          start: {
            line: 130,
            column: 9
          },
          end: {
            line: 130,
            column: 27
          }
        },
        loc: {
          start: {
            line: 130,
            column: 38
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 130
      },
      "4": {
        name: "calculateGlobalHealthScore",
        decl: {
          start: {
            line: 160,
            column: 9
          },
          end: {
            line: 160,
            column: 35
          }
        },
        loc: {
          start: {
            line: 160,
            column: 48
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 160
      },
      "5": {
        name: "generateCrossPillarInsights",
        decl: {
          start: {
            line: 185,
            column: 9
          },
          end: {
            line: 185,
            column: 36
          }
        },
        loc: {
          start: {
            line: 185,
            column: 49
          },
          end: {
            line: 218,
            column: 1
          }
        },
        line: 185
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 200,
            column: 35
          },
          end: {
            line: 200,
            column: 36
          }
        },
        loc: {
          start: {
            line: 200,
            column: 56
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 200
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 206,
            column: 54
          },
          end: {
            line: 206,
            column: 55
          }
        },
        loc: {
          start: {
            line: 206,
            column: 72
          },
          end: {
            line: 206,
            column: 77
          }
        },
        line: 206
      },
      "8": {
        name: "calculatePerformanceMetrics",
        decl: {
          start: {
            line: 222,
            column: 9
          },
          end: {
            line: 222,
            column: 36
          }
        },
        loc: {
          start: {
            line: 222,
            column: 49
          },
          end: {
            line: 255,
            column: 1
          }
        },
        line: 222
      },
      "9": {
        name: "evaluateHealthRisks",
        decl: {
          start: {
            line: 259,
            column: 9
          },
          end: {
            line: 259,
            column: 28
          }
        },
        loc: {
          start: {
            line: 259,
            column: 41
          },
          end: {
            line: 314,
            column: 1
          }
        },
        line: 259
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 274,
            column: 35
          },
          end: {
            line: 274,
            column: 36
          }
        },
        loc: {
          start: {
            line: 274,
            column: 56
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 274
      },
      "11": {
        name: "generatePredictiveMetrics",
        decl: {
          start: {
            line: 318,
            column: 9
          },
          end: {
            line: 318,
            column: 34
          }
        },
        loc: {
          start: {
            line: 318,
            column: 63
          },
          end: {
            line: 348,
            column: 1
          }
        },
        line: 318
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 333,
            column: 57
          },
          end: {
            line: 333,
            column: 58
          }
        },
        loc: {
          start: {
            line: 333,
            column: 67
          },
          end: {
            line: 333,
            column: 72
          }
        },
        line: 333
      },
      "13": {
        name: "calculateDynamicWeights",
        decl: {
          start: {
            line: 350,
            column: 9
          },
          end: {
            line: 350,
            column: 32
          }
        },
        loc: {
          start: {
            line: 350,
            column: 41
          },
          end: {
            line: 360,
            column: 1
          }
        },
        line: 350
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 352,
            column: 47
          },
          end: {
            line: 352,
            column: 48
          }
        },
        loc: {
          start: {
            line: 352,
            column: 57
          },
          end: {
            line: 352,
            column: 62
          }
        },
        line: 352
      },
      "15": {
        name: "calculateBalanceBonus",
        decl: {
          start: {
            line: 361,
            column: 9
          },
          end: {
            line: 361,
            column: 30
          }
        },
        loc: {
          start: {
            line: 361,
            column: 39
          },
          end: {
            line: 374,
            column: 1
          }
        },
        line: 361
      },
      "16": {
        name: "calculateSynergyBonus",
        decl: {
          start: {
            line: 375,
            column: 9
          },
          end: {
            line: 375,
            column: 30
          }
        },
        loc: {
          start: {
            line: 375,
            column: 43
          },
          end: {
            line: 395,
            column: 1
          }
        },
        line: 375
      },
      "17": {
        name: "calculatePillarBalance",
        decl: {
          start: {
            line: 396,
            column: 9
          },
          end: {
            line: 396,
            column: 31
          }
        },
        loc: {
          start: {
            line: 396,
            column: 40
          },
          end: {
            line: 403,
            column: 1
          }
        },
        line: 396
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 398,
            column: 30
          },
          end: {
            line: 398,
            column: 31
          }
        },
        loc: {
          start: {
            line: 398,
            column: 40
          },
          end: {
            line: 398,
            column: 45
          }
        },
        line: 398
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 399,
            column: 35
          },
          end: {
            line: 399,
            column: 36
          }
        },
        loc: {
          start: {
            line: 399,
            column: 49
          },
          end: {
            line: 399,
            column: 77
          }
        },
        line: 399
      },
      "20": {
        name: "generateCrossPillarRecommendations",
        decl: {
          start: {
            line: 404,
            column: 9
          },
          end: {
            line: 404,
            column: 43
          }
        },
        loc: {
          start: {
            line: 404,
            column: 56
          },
          end: {
            line: 424,
            column: 1
          }
        },
        line: 404
      },
      "21": {
        name: "generatePersonalizedStrategy",
        decl: {
          start: {
            line: 425,
            column: 9
          },
          end: {
            line: 425,
            column: 37
          }
        },
        loc: {
          start: {
            line: 425,
            column: 58
          },
          end: {
            line: 448,
            column: 1
          }
        },
        line: 425
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 428,
            column: 56
          },
          end: {
            line: 428,
            column: 57
          }
        },
        loc: {
          start: {
            line: 428,
            column: 82
          },
          end: {
            line: 428,
            column: 125
          }
        },
        line: 428
      },
      "23": {
        name: "generateHabitFormationTips",
        decl: {
          start: {
            line: 449,
            column: 9
          },
          end: {
            line: 449,
            column: 35
          }
        },
        loc: {
          start: {
            line: 449,
            column: 44
          },
          end: {
            line: 465,
            column: 1
          }
        },
        line: 449
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 457,
            column: 50
          },
          end: {
            line: 457,
            column: 51
          }
        },
        loc: {
          start: {
            line: 457,
            column: 60
          },
          end: {
            line: 457,
            column: 65
          }
        },
        line: 457
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 41
          }
        }, {
          start: {
            line: 16,
            column: 45
          },
          end: {
            line: 16,
            column: 47
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 59
          }
        }, {
          start: {
            line: 38,
            column: 63
          },
          end: {
            line: 38,
            column: 64
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 39,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 39,
            column: 65
          }
        }, {
          start: {
            line: 39,
            column: 69
          },
          end: {
            line: 39,
            column: 70
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 59
          }
        }, {
          start: {
            line: 40,
            column: 63
          },
          end: {
            line: 40,
            column: 64
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 65
          }
        }, {
          start: {
            line: 41,
            column: 69
          },
          end: {
            line: 41,
            column: 70
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 52
          }
        }, {
          start: {
            line: 59,
            column: 56
          },
          end: {
            line: 59,
            column: 58
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 72,
            column: 49
          }
        }, {
          start: {
            line: 72,
            column: 53
          },
          end: {
            line: 78,
            column: 9
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 27
          },
          end: {
            line: 73,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 27
          },
          end: {
            line: 73,
            column: 59
          }
        }, {
          start: {
            line: 73,
            column: 63
          },
          end: {
            line: 73,
            column: 65
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 74,
            column: 30
          },
          end: {
            line: 74,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 30
          },
          end: {
            line: 74,
            column: 58
          }
        }, {
          start: {
            line: 74,
            column: 62
          },
          end: {
            line: 74,
            column: 64
          }
        }],
        line: 74
      },
      "9": {
        loc: {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 66
          }
        }, {
          start: {
            line: 75,
            column: 70
          },
          end: {
            line: 75,
            column: 72
          }
        }],
        line: 75
      },
      "10": {
        loc: {
          start: {
            line: 79,
            column: 28
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 28
          },
          end: {
            line: 79,
            column: 57
          }
        }, {
          start: {
            line: 79,
            column: 61
          },
          end: {
            line: 85,
            column: 9
          }
        }],
        line: 79
      },
      "11": {
        loc: {
          start: {
            line: 86,
            column: 21
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 21
          },
          end: {
            line: 86,
            column: 43
          }
        }, {
          start: {
            line: 86,
            column: 47
          },
          end: {
            line: 91,
            column: 9
          }
        }],
        line: 86
      },
      "12": {
        loc: {
          start: {
            line: 87,
            column: 30
          },
          end: {
            line: 87,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 30
          },
          end: {
            line: 87,
            column: 51
          }
        }, {
          start: {
            line: 87,
            column: 55
          },
          end: {
            line: 87,
            column: 60
          }
        }],
        line: 87
      },
      "13": {
        loc: {
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 41
          }
        }, {
          start: {
            line: 92,
            column: 45
          },
          end: {
            line: 98,
            column: 9
          }
        }],
        line: 92
      },
      "14": {
        loc: {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 99,
            column: 55
          }
        }, {
          start: {
            line: 99,
            column: 59
          },
          end: {
            line: 109,
            column: 9
          }
        }],
        line: 99
      },
      "15": {
        loc: {
          start: {
            line: 110,
            column: 33
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 33
          },
          end: {
            line: 110,
            column: 67
          }
        }, {
          start: {
            line: 110,
            column: 71
          },
          end: {
            line: 115,
            column: 9
          }
        }],
        line: 110
      },
      "16": {
        loc: {
          start: {
            line: 116,
            column: 33
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 33
          },
          end: {
            line: 116,
            column: 67
          }
        }, {
          start: {
            line: 116,
            column: 71
          },
          end: {
            line: 122,
            column: 9
          }
        }],
        line: 116
      },
      "17": {
        loc: {
          start: {
            line: 162,
            column: 17
          },
          end: {
            line: 162,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 17
          },
          end: {
            line: 162,
            column: 53
          }
        }, {
          start: {
            line: 162,
            column: 57
          },
          end: {
            line: 162,
            column: 58
          }
        }],
        line: 162
      },
      "18": {
        loc: {
          start: {
            line: 163,
            column: 19
          },
          end: {
            line: 163,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 19
          },
          end: {
            line: 163,
            column: 59
          }
        }, {
          start: {
            line: 163,
            column: 63
          },
          end: {
            line: 163,
            column: 64
          }
        }],
        line: 163
      },
      "19": {
        loc: {
          start: {
            line: 164,
            column: 18
          },
          end: {
            line: 164,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 18
          },
          end: {
            line: 164,
            column: 52
          }
        }, {
          start: {
            line: 164,
            column: 56
          },
          end: {
            line: 164,
            column: 57
          }
        }],
        line: 164
      },
      "20": {
        loc: {
          start: {
            line: 165,
            column: 19
          },
          end: {
            line: 165,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 19
          },
          end: {
            line: 165,
            column: 59
          }
        }, {
          start: {
            line: 165,
            column: 63
          },
          end: {
            line: 165,
            column: 64
          }
        }],
        line: 165
      },
      "21": {
        loc: {
          start: {
            line: 194,
            column: 17
          },
          end: {
            line: 194,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 17
          },
          end: {
            line: 194,
            column: 53
          }
        }, {
          start: {
            line: 194,
            column: 57
          },
          end: {
            line: 194,
            column: 58
          }
        }],
        line: 194
      },
      "22": {
        loc: {
          start: {
            line: 195,
            column: 19
          },
          end: {
            line: 195,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 19
          },
          end: {
            line: 195,
            column: 59
          }
        }, {
          start: {
            line: 195,
            column: 63
          },
          end: {
            line: 195,
            column: 64
          }
        }],
        line: 195
      },
      "23": {
        loc: {
          start: {
            line: 196,
            column: 18
          },
          end: {
            line: 196,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 18
          },
          end: {
            line: 196,
            column: 52
          }
        }, {
          start: {
            line: 196,
            column: 56
          },
          end: {
            line: 196,
            column: 57
          }
        }],
        line: 196
      },
      "24": {
        loc: {
          start: {
            line: 197,
            column: 19
          },
          end: {
            line: 197,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 19
          },
          end: {
            line: 197,
            column: 59
          }
        }, {
          start: {
            line: 197,
            column: 63
          },
          end: {
            line: 197,
            column: 64
          }
        }],
        line: 197
      },
      "25": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "26": {
        loc: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "27": {
        loc: {
          start: {
            line: 224,
            column: 17
          },
          end: {
            line: 224,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 17
          },
          end: {
            line: 224,
            column: 53
          }
        }, {
          start: {
            line: 224,
            column: 57
          },
          end: {
            line: 224,
            column: 58
          }
        }],
        line: 224
      },
      "28": {
        loc: {
          start: {
            line: 225,
            column: 19
          },
          end: {
            line: 225,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 19
          },
          end: {
            line: 225,
            column: 59
          }
        }, {
          start: {
            line: 225,
            column: 63
          },
          end: {
            line: 225,
            column: 64
          }
        }],
        line: 225
      },
      "29": {
        loc: {
          start: {
            line: 226,
            column: 18
          },
          end: {
            line: 226,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 18
          },
          end: {
            line: 226,
            column: 52
          }
        }, {
          start: {
            line: 226,
            column: 56
          },
          end: {
            line: 226,
            column: 57
          }
        }],
        line: 226
      },
      "30": {
        loc: {
          start: {
            line: 227,
            column: 19
          },
          end: {
            line: 227,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 19
          },
          end: {
            line: 227,
            column: 59
          }
        }, {
          start: {
            line: 227,
            column: 63
          },
          end: {
            line: 227,
            column: 64
          }
        }],
        line: 227
      },
      "31": {
        loc: {
          start: {
            line: 267,
            column: 17
          },
          end: {
            line: 267,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 17
          },
          end: {
            line: 267,
            column: 53
          }
        }, {
          start: {
            line: 267,
            column: 57
          },
          end: {
            line: 267,
            column: 58
          }
        }],
        line: 267
      },
      "32": {
        loc: {
          start: {
            line: 268,
            column: 19
          },
          end: {
            line: 268,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 19
          },
          end: {
            line: 268,
            column: 59
          }
        }, {
          start: {
            line: 268,
            column: 63
          },
          end: {
            line: 268,
            column: 64
          }
        }],
        line: 268
      },
      "33": {
        loc: {
          start: {
            line: 269,
            column: 18
          },
          end: {
            line: 269,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 18
          },
          end: {
            line: 269,
            column: 52
          }
        }, {
          start: {
            line: 269,
            column: 56
          },
          end: {
            line: 269,
            column: 57
          }
        }],
        line: 269
      },
      "34": {
        loc: {
          start: {
            line: 270,
            column: 19
          },
          end: {
            line: 270,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 19
          },
          end: {
            line: 270,
            column: 59
          }
        }, {
          start: {
            line: 270,
            column: 63
          },
          end: {
            line: 270,
            column: 64
          }
        }],
        line: 270
      },
      "35": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        }, {
          start: {
            line: 280,
            column: 13
          },
          end: {
            line: 288,
            column: 9
          }
        }],
        line: 275
      },
      "36": {
        loc: {
          start: {
            line: 280,
            column: 13
          },
          end: {
            line: 288,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 13
          },
          end: {
            line: 288,
            column: 9
          }
        }, {
          start: {
            line: 285,
            column: 13
          },
          end: {
            line: 288,
            column: 9
          }
        }],
        line: 280
      },
      "37": {
        loc: {
          start: {
            line: 285,
            column: 13
          },
          end: {
            line: 288,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 13
          },
          end: {
            line: 288,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "38": {
        loc: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "39": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 29
          }
        }, {
          start: {
            line: 291,
            column: 33
          },
          end: {
            line: 291,
            column: 52
          }
        }],
        line: 291
      },
      "40": {
        loc: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "41": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 28
          }
        }, {
          start: {
            line: 295,
            column: 32
          },
          end: {
            line: 295,
            column: 51
          }
        }],
        line: 295
      },
      "42": {
        loc: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "43": {
        loc: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        }, {
          start: {
            line: 307,
            column: 9
          },
          end: {
            line: 312,
            column: 5
          }
        }],
        line: 304
      },
      "44": {
        loc: {
          start: {
            line: 307,
            column: 9
          },
          end: {
            line: 312,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 9
          },
          end: {
            line: 312,
            column: 5
          }
        }, {
          start: {
            line: 310,
            column: 9
          },
          end: {
            line: 312,
            column: 5
          }
        }],
        line: 307
      },
      "45": {
        loc: {
          start: {
            line: 310,
            column: 9
          },
          end: {
            line: 312,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 9
          },
          end: {
            line: 312,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "46": {
        loc: {
          start: {
            line: 320,
            column: 17
          },
          end: {
            line: 320,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 17
          },
          end: {
            line: 320,
            column: 53
          }
        }, {
          start: {
            line: 320,
            column: 57
          },
          end: {
            line: 320,
            column: 58
          }
        }],
        line: 320
      },
      "47": {
        loc: {
          start: {
            line: 321,
            column: 19
          },
          end: {
            line: 321,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 19
          },
          end: {
            line: 321,
            column: 59
          }
        }, {
          start: {
            line: 321,
            column: 63
          },
          end: {
            line: 321,
            column: 64
          }
        }],
        line: 321
      },
      "48": {
        loc: {
          start: {
            line: 322,
            column: 18
          },
          end: {
            line: 322,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 18
          },
          end: {
            line: 322,
            column: 52
          }
        }, {
          start: {
            line: 322,
            column: 56
          },
          end: {
            line: 322,
            column: 57
          }
        }],
        line: 322
      },
      "49": {
        loc: {
          start: {
            line: 323,
            column: 19
          },
          end: {
            line: 323,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 19
          },
          end: {
            line: 323,
            column: 59
          }
        }, {
          start: {
            line: 323,
            column: 63
          },
          end: {
            line: 323,
            column: 64
          }
        }],
        line: 323
      },
      "50": {
        loc: {
          start: {
            line: 336,
            column: 29
          },
          end: {
            line: 336,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 29
          },
          end: {
            line: 336,
            column: 65
          }
        }, {
          start: {
            line: 336,
            column: 69
          },
          end: {
            line: 336,
            column: 71
          }
        }],
        line: 336
      },
      "51": {
        loc: {
          start: {
            line: 337,
            column: 26
          },
          end: {
            line: 337,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 26
          },
          end: {
            line: 337,
            column: 61
          }
        }, {
          start: {
            line: 337,
            column: 65
          },
          end: {
            line: 337,
            column: 67
          }
        }],
        line: 337
      },
      "52": {
        loc: {
          start: {
            line: 355,
            column: 17
          },
          end: {
            line: 355,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 355,
            column: 40
          },
          end: {
            line: 355,
            column: 44
          }
        }, {
          start: {
            line: 355,
            column: 47
          },
          end: {
            line: 355,
            column: 51
          }
        }],
        line: 355
      },
      "53": {
        loc: {
          start: {
            line: 356,
            column: 19
          },
          end: {
            line: 356,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 356,
            column: 44
          },
          end: {
            line: 356,
            column: 48
          }
        }, {
          start: {
            line: 356,
            column: 51
          },
          end: {
            line: 356,
            column: 55
          }
        }],
        line: 356
      },
      "54": {
        loc: {
          start: {
            line: 357,
            column: 18
          },
          end: {
            line: 357,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 357,
            column: 42
          },
          end: {
            line: 357,
            column: 46
          }
        }, {
          start: {
            line: 357,
            column: 49
          },
          end: {
            line: 357,
            column: 53
          }
        }],
        line: 357
      },
      "55": {
        loc: {
          start: {
            line: 358,
            column: 19
          },
          end: {
            line: 358,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 358,
            column: 44
          },
          end: {
            line: 358,
            column: 48
          }
        }, {
          start: {
            line: 358,
            column: 51
          },
          end: {
            line: 358,
            column: 55
          }
        }],
        line: 358
      },
      "56": {
        loc: {
          start: {
            line: 367,
            column: 4
          },
          end: {
            line: 368,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 4
          },
          end: {
            line: 368,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "57": {
        loc: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 370,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 370,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "58": {
        loc: {
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 372,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 372,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "59": {
        loc: {
          start: {
            line: 378,
            column: 25
          },
          end: {
            line: 378,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 25
          },
          end: {
            line: 378,
            column: 61
          }
        }, {
          start: {
            line: 378,
            column: 65
          },
          end: {
            line: 378,
            column: 66
          }
        }],
        line: 378
      },
      "60": {
        loc: {
          start: {
            line: 379,
            column: 27
          },
          end: {
            line: 379,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 379,
            column: 27
          },
          end: {
            line: 379,
            column: 67
          }
        }, {
          start: {
            line: 379,
            column: 71
          },
          end: {
            line: 379,
            column: 72
          }
        }],
        line: 379
      },
      "61": {
        loc: {
          start: {
            line: 380,
            column: 26
          },
          end: {
            line: 380,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 26
          },
          end: {
            line: 380,
            column: 61
          }
        }, {
          start: {
            line: 380,
            column: 65
          },
          end: {
            line: 380,
            column: 66
          }
        }],
        line: 380
      },
      "62": {
        loc: {
          start: {
            line: 381,
            column: 27
          },
          end: {
            line: 381,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 27
          },
          end: {
            line: 381,
            column: 67
          }
        }, {
          start: {
            line: 381,
            column: 71
          },
          end: {
            line: 381,
            column: 72
          }
        }],
        line: 381
      },
      "63": {
        loc: {
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 384,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 384,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 383
      },
      "64": {
        loc: {
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 383,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 383,
            column: 26
          }
        }, {
          start: {
            line: 383,
            column: 30
          },
          end: {
            line: 383,
            column: 50
          }
        }],
        line: 383
      },
      "65": {
        loc: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 387,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 387,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "66": {
        loc: {
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 386,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 386,
            column: 27
          }
        }, {
          start: {
            line: 386,
            column: 31
          },
          end: {
            line: 386,
            column: 49
          }
        }],
        line: 386
      },
      "67": {
        loc: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 390,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 390,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "68": {
        loc: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 389,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 389,
            column: 28
          }
        }, {
          start: {
            line: 389,
            column: 32
          },
          end: {
            line: 389,
            column: 51
          }
        }],
        line: 389
      },
      "69": {
        loc: {
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 393,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 393,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "70": {
        loc: {
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 392,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 392,
            column: 28
          }
        }, {
          start: {
            line: 392,
            column: 32
          },
          end: {
            line: 392,
            column: 51
          }
        }],
        line: 392
      },
      "71": {
        loc: {
          start: {
            line: 406,
            column: 25
          },
          end: {
            line: 406,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 25
          },
          end: {
            line: 406,
            column: 61
          }
        }, {
          start: {
            line: 406,
            column: 65
          },
          end: {
            line: 406,
            column: 66
          }
        }],
        line: 406
      },
      "72": {
        loc: {
          start: {
            line: 407,
            column: 27
          },
          end: {
            line: 407,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 27
          },
          end: {
            line: 407,
            column: 67
          }
        }, {
          start: {
            line: 407,
            column: 71
          },
          end: {
            line: 407,
            column: 72
          }
        }],
        line: 407
      },
      "73": {
        loc: {
          start: {
            line: 408,
            column: 26
          },
          end: {
            line: 408,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 26
          },
          end: {
            line: 408,
            column: 60
          }
        }, {
          start: {
            line: 408,
            column: 64
          },
          end: {
            line: 408,
            column: 65
          }
        }],
        line: 408
      },
      "74": {
        loc: {
          start: {
            line: 409,
            column: 27
          },
          end: {
            line: 409,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 409,
            column: 27
          },
          end: {
            line: 409,
            column: 67
          }
        }, {
          start: {
            line: 409,
            column: 71
          },
          end: {
            line: 409,
            column: 72
          }
        }],
        line: 409
      },
      "75": {
        loc: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "76": {
        loc: {
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 411,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 411,
            column: 25
          }
        }, {
          start: {
            line: 411,
            column: 29
          },
          end: {
            line: 411,
            column: 48
          }
        }],
        line: 411
      },
      "77": {
        loc: {
          start: {
            line: 414,
            column: 4
          },
          end: {
            line: 416,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 4
          },
          end: {
            line: 416,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "78": {
        loc: {
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 414,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 414,
            column: 26
          }
        }, {
          start: {
            line: 414,
            column: 30
          },
          end: {
            line: 414,
            column: 47
          }
        }],
        line: 414
      },
      "79": {
        loc: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "80": {
        loc: {
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 417,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 417,
            column: 27
          }
        }, {
          start: {
            line: 417,
            column: 32
          },
          end: {
            line: 417,
            column: 49
          }
        }, {
          start: {
            line: 417,
            column: 53
          },
          end: {
            line: 417,
            column: 71
          }
        }],
        line: 417
      },
      "81": {
        loc: {
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 422,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 422,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "82": {
        loc: {
          start: {
            line: 420,
            column: 8
          },
          end: {
            line: 420,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 8
          },
          end: {
            line: 420,
            column: 27
          }
        }, {
          start: {
            line: 420,
            column: 31
          },
          end: {
            line: 420,
            column: 49
          }
        }, {
          start: {
            line: 420,
            column: 53
          },
          end: {
            line: 420,
            column: 70
          }
        }],
        line: 420
      },
      "83": {
        loc: {
          start: {
            line: 428,
            column: 82
          },
          end: {
            line: 428,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 428,
            column: 102
          },
          end: {
            line: 428,
            column: 119
          }
        }, {
          start: {
            line: 428,
            column: 122
          },
          end: {
            line: 428,
            column: 125
          }
        }],
        line: 428
      },
      "84": {
        loc: {
          start: {
            line: 429,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 433,
            column: 18
          }
        }, {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 437,
            column: 18
          }
        }, {
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 441,
            column: 18
          }
        }, {
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 445,
            column: 18
          }
        }],
        line: 429
      },
      "85": {
        loc: {
          start: {
            line: 458,
            column: 4
          },
          end: {
            line: 463,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 4
          },
          end: {
            line: 463,
            column: 5
          }
        }, {
          start: {
            line: 461,
            column: 9
          },
          end: {
            line: 463,
            column: 5
          }
        }],
        line: 458
      },
      "86": {
        loc: {
          start: {
            line: 461,
            column: 9
          },
          end: {
            line: 463,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 461,
            column: 9
          },
          end: {
            line: 463,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 461
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0, 0],
      "81": [0, 0],
      "82": [0, 0, 0],
      "83": [0, 0],
      "84": [0, 0, 0, 0],
      "85": [0, 0],
      "86": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/ai-coach/utils/health-orchestrator-mapping.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/ai-coach/utils/health-orchestrator-mapping.ts"],
      sourcesContent: ["import { HealthData, HealthAnalysis, DbHealthData, DbHealthAnalysis } from '@/features/ai-coach/types/health-orchestrator';\n\n/**\n * Conversion des donn\xE9es Health de snake_case (DB) vers camelCase (App)\n */\nexport function dbToHealthData(dbData: DbHealthData): HealthData {\n  const pillarData = dbData.pillar_data || {};\n  \n  return {\n    id: dbData.id,\n    userId: dbData.user_id,\n    date: dbData.health_date,\n    workoutData: pillarData.workoutData,\n    nutritionData: pillarData.nutritionData,\n    sleepData: pillarData.sleepData,\n    hydrationData: pillarData.hydrationData,\n    createdAt: new Date(dbData.created_at),\n    updatedAt: new Date(dbData.updated_at),\n  };\n}\n\n/**\n * Conversion des donn\xE9es Health de camelCase (App) vers snake_case (DB)\n */\nexport function healthDataToDb(healthData: HealthData): Partial<DbHealthData> {\n  return {\n    id: healthData.id,\n    user_id: healthData.userId,\n    health_date: healthData.date,\n    global_health_score: calculateGlobalHealthScore(healthData),\n    fitness_score: healthData.workoutData?.workoutScore || 0,\n    nutrition_score: healthData.nutritionData?.nutritionScore || 0,\n    recovery_score: healthData.sleepData?.recoveryScore || 0,\n    hydration_score: healthData.hydrationData?.hydrationScore || 0,\n    pillar_data: {\n      workoutData: healthData.workoutData,\n      nutritionData: healthData.nutritionData,\n      sleepData: healthData.sleepData,\n      hydrationData: healthData.hydrationData,\n    },\n    health_ai_analysis: {\n      analysisVersion: '1.0',\n      timestamp: new Date().toISOString(),\n    },\n    updated_at: new Date().toISOString(),\n  };\n}\n\n/**\n * Conversion des analyses Health de snake_case (DB) vers camelCase (App)\n */\nexport function dbToHealthAnalysis(dbAnalysis: DbHealthAnalysis): HealthAnalysis {\n  const aiAnalysis = dbAnalysis.health_ai_analysis || {};\n  \n  return {\n    id: dbAnalysis.id,\n    userId: dbAnalysis.user_id,\n    healthDataId: dbAnalysis.health_data_id,\n    analysisDate: new Date(dbAnalysis.analysis_date),\n    globalHealthScore: dbAnalysis.global_health_score,\n    pillarScores: {\n      fitness: dbAnalysis.fitness_score,\n      nutrition: dbAnalysis.nutrition_score,\n      recovery: dbAnalysis.recovery_score,\n      hydration: dbAnalysis.hydration_score,\n    },\n    balanceMetrics: aiAnalysis.balanceMetrics || {\n      pillarHarmony: dbAnalysis.balance_harmony_score || 70,\n      consistencyScore: dbAnalysis.consistency_score || 70,\n      synergisticEffect: dbAnalysis.synergistic_effect_score || 70,\n      weakestLink: 'fitness',\n      strongestPillar: 'fitness',\n    },\n    performanceMetrics: aiAnalysis.performanceMetrics || {\n      physicalPerformance: 75,\n      mentalPerformance: 75,\n      energyLevel: 75,\n      recoveryCapacity: 75,\n      adaptationRate: 75,\n    },\n    healthRisks: aiAnalysis.healthRisks || {\n      overallRiskLevel: dbAnalysis.risk_level as any || 'low',\n      specificRisks: [],\n      preventiveActions: [],\n      urgentConcerns: [],\n    },\n    aiInsights: aiAnalysis.aiInsights || {\n      keyStrengths: [],\n      improvementPriorities: [],\n      crossPillarRecommendations: [],\n      personalizedStrategy: [],\n      habitFormationTips: [],\n    },\n    predictiveMetrics: aiAnalysis.predictiveMetrics || {\n      next7DaysProjection: {\n        fitness: 75,\n        nutrition: 75,\n        recovery: 75,\n        hydration: 75,\n      },\n      goalAchievementProbability: 75,\n      burnoutRisk: 25,\n      plateauPrediction: 30,\n    },\n    crossPillarCorrelations: aiAnalysis.crossPillarCorrelations || {\n      workoutNutritionCorr: 0,\n      sleepPerformanceCorr: 0,\n      hydrationRecoveryCorr: 0,\n      nutritionSleepCorr: 0,\n    },\n    optimizationSuggestions: aiAnalysis.optimizationSuggestions || {\n      workoutTiming: [],\n      nutritionTiming: [],\n      sleepOptimization: [],\n      hydrationStrategy: [],\n      recoveryProtocol: [],\n    },\n    createdAt: new Date(dbAnalysis.created_at),\n    updatedAt: new Date(dbAnalysis.updated_at),\n  };\n}\n\n/**\n * Conversion des analyses Health de camelCase (App) vers snake_case (DB)\n */\nexport function healthAnalysisToDb(analysis: HealthAnalysis): Partial<DbHealthAnalysis> {\n  return {\n    id: analysis.id,\n    user_id: analysis.userId,\n    health_data_id: analysis.healthDataId,\n    analysis_date: analysis.analysisDate.toISOString(),\n    global_health_score: analysis.globalHealthScore,\n    fitness_score: analysis.pillarScores.fitness,\n    nutrition_score: analysis.pillarScores.nutrition,\n    recovery_score: analysis.pillarScores.recovery,\n    hydration_score: analysis.pillarScores.hydration,\n    balance_harmony_score: analysis.balanceMetrics.pillarHarmony,\n    consistency_score: analysis.balanceMetrics.consistencyScore,\n    synergistic_effect_score: analysis.balanceMetrics.synergisticEffect,\n    risk_level: analysis.healthRisks.overallRiskLevel,\n    health_ai_analysis: {\n      balanceMetrics: analysis.balanceMetrics,\n      performanceMetrics: analysis.performanceMetrics,\n      healthRisks: analysis.healthRisks,\n      aiInsights: analysis.aiInsights,\n      predictiveMetrics: analysis.predictiveMetrics,\n      crossPillarCorrelations: analysis.crossPillarCorrelations,\n      optimizationSuggestions: analysis.optimizationSuggestions,\n    },\n    updated_at: new Date().toISOString(),\n  };\n}\n\n/**\n * Calcul du score de sant\xE9 global avec algorithme IA sophistiqu\xE9\n */\nexport function calculateGlobalHealthScore(healthData: HealthData): number {\n  const scores = {\n    fitness: healthData.workoutData?.workoutScore || 0,\n    nutrition: healthData.nutritionData?.nutritionScore || 0,\n    recovery: healthData.sleepData?.sleepQuality || 0,\n    hydration: healthData.hydrationData?.hydrationScore || 0,\n  };\n\n  // Pond\xE9ration dynamique bas\xE9e sur l'\xE9quilibre\n  const weights = calculateDynamicWeights(scores);\n  \n  // Score de base pond\xE9r\xE9\n  const baseScore = \n    (scores.fitness * weights.fitness) +\n    (scores.nutrition * weights.nutrition) +\n    (scores.recovery * weights.recovery) +\n    (scores.hydration * weights.hydration);\n\n  // Bonus/malus pour l'\xE9quilibre entre piliers\n  const balanceBonus = calculateBalanceBonus(scores);\n  \n  // Bonus pour l'effet synergique\n  const synergyBonus = calculateSynergyBonus(healthData);\n  \n  // Score final avec plafonnement\n  const finalScore = baseScore + balanceBonus + synergyBonus;\n  \n  return Math.min(100, Math.max(0, Math.round(finalScore)));\n}\n\n/**\n * G\xE9n\xE9ration d'insights IA cross-piliers sophistiqu\xE9s\n */\nexport function generateCrossPillarInsights(healthData: HealthData): HealthAnalysis['aiInsights'] {\n  const insights = {\n    keyStrengths: [] as string[],\n    improvementPriorities: [] as string[],\n    crossPillarRecommendations: [] as string[],\n    personalizedStrategy: [] as string[],\n    habitFormationTips: [] as string[],\n  };\n\n  const scores = {\n    fitness: healthData.workoutData?.workoutScore || 0,\n    nutrition: healthData.nutritionData?.nutritionScore || 0,\n    recovery: healthData.sleepData?.sleepQuality || 0,\n    hydration: healthData.hydrationData?.hydrationScore || 0,\n  };\n\n  // Identification des forces\n  Object.entries(scores).forEach(([pillar, score]) => {\n    if (score >= 85) {\n      insights.keyStrengths.push(`Excellence en ${pillar}: score de ${score}/100`);\n    }\n  });\n\n  // Priorisation des am\xE9liorations\n  const sortedPillars = Object.entries(scores).sort(([,a], [,b]) => a - b);\n  const weakestPillar = sortedPillars[0];\n  \n  if (weakestPillar[1] < 60) {\n    insights.improvementPriorities.push(`Priorit\xE9 critique: am\xE9liorer ${weakestPillar[0]} (${weakestPillar[1]}/100)`);\n  }\n\n  // Recommandations cross-piliers\n  insights.crossPillarRecommendations.push(...generateCrossPillarRecommendations(healthData));\n  \n  // Strat\xE9gie personnalis\xE9e\n  insights.personalizedStrategy.push(...generatePersonalizedStrategy(healthData, scores));\n  \n  // Tips formation d'habitudes\n  insights.habitFormationTips.push(...generateHabitFormationTips(scores));\n\n  return insights;\n}\n\n/**\n * Calcul des m\xE9triques de performance globales\n */\nexport function calculatePerformanceMetrics(healthData: HealthData): HealthAnalysis['performanceMetrics'] {\n  const scores = {\n    fitness: healthData.workoutData?.workoutScore || 0,\n    nutrition: healthData.nutritionData?.nutritionScore || 0,\n    recovery: healthData.sleepData?.sleepQuality || 0,\n    hydration: healthData.hydrationData?.hydrationScore || 0,\n  };\n\n  // Performance physique (fitness + recovery + hydration)\n  const physicalPerformance = Math.round(\n    (scores.fitness * 0.5) + \n    (scores.recovery * 0.3) + \n    (scores.hydration * 0.2)\n  );\n\n  // Performance mentale (nutrition + recovery)\n  const mentalPerformance = Math.round(\n    (scores.nutrition * 0.4) + \n    (scores.recovery * 0.6)\n  );\n\n  // Niveau d'\xE9nergie (tous les piliers avec pond\xE9ration)\n  const energyLevel = Math.round(\n    (scores.fitness * 0.25) +\n    (scores.nutrition * 0.3) +\n    (scores.recovery * 0.3) +\n    (scores.hydration * 0.15)\n  );\n\n  // Capacit\xE9 de r\xE9cup\xE9ration (recovery + nutrition + hydration)\n  const recoveryCapacity = Math.round(\n    (scores.recovery * 0.5) +\n    (scores.nutrition * 0.3) +\n    (scores.hydration * 0.2)\n  );\n\n  // Taux d'adaptation (\xE9quilibre g\xE9n\xE9ral)\n  const balanceScore = calculatePillarBalance(scores);\n  const adaptationRate = Math.min(100, balanceScore + 10);\n\n  return {\n    physicalPerformance: Math.min(100, Math.max(0, physicalPerformance)),\n    mentalPerformance: Math.min(100, Math.max(0, mentalPerformance)),\n    energyLevel: Math.min(100, Math.max(0, energyLevel)),\n    recoveryCapacity: Math.min(100, Math.max(0, recoveryCapacity)),\n    adaptationRate: Math.min(100, Math.max(0, adaptationRate)),\n  };\n}\n\n/**\n * \xC9valuation des risques sant\xE9\n */\nexport function evaluateHealthRisks(healthData: HealthData): HealthAnalysis['healthRisks'] {\n  const risks = {\n    overallRiskLevel: 'low' as HealthAnalysis['healthRisks']['overallRiskLevel'],\n    specificRisks: [] as string[],\n    preventiveActions: [] as string[],\n    urgentConcerns: [] as string[],\n  };\n\n  const scores = {\n    fitness: healthData.workoutData?.workoutScore || 0,\n    nutrition: healthData.nutritionData?.nutritionScore || 0,\n    recovery: healthData.sleepData?.sleepQuality || 0,\n    hydration: healthData.hydrationData?.hydrationScore || 0,\n  };\n\n  let riskScore = 0;\n\n  // \xC9valuation par pilier\n  Object.entries(scores).forEach(([pillar, score]) => {\n    if (score < 30) {\n      riskScore += 30;\n      risks.specificRisks.push(`${pillar}: risque \xE9lev\xE9 (score ${score}/100)`);\n      risks.urgentConcerns.push(`Am\xE9lioration urgente requise pour ${pillar}`);\n    } else if (score < 50) {\n      riskScore += 15;\n      risks.specificRisks.push(`${pillar}: risque mod\xE9r\xE9 (score ${score}/100)`);\n      risks.preventiveActions.push(`Renforcer les habitudes de ${pillar}`);\n    } else if (score < 70) {\n      riskScore += 5;\n      risks.preventiveActions.push(`Maintenir et optimiser ${pillar}`);\n    }\n  });\n\n  // Risques sp\xE9cifiques cross-piliers\n  if (scores.nutrition < 60 && scores.fitness > 80) {\n    risks.specificRisks.push('D\xE9s\xE9quilibre: haute activit\xE9 physique avec nutrition insuffisante');\n    risks.preventiveActions.push('Augmenter l\\'apport calorique et prot\xE9ique');\n  }\n\n  if (scores.recovery < 60 && scores.fitness > 70) {\n    risks.specificRisks.push('Risque de surentra\xEEnement: r\xE9cup\xE9ration insuffisante');\n    risks.urgentConcerns.push('Prioriser le sommeil et la r\xE9cup\xE9ration');\n  }\n\n  if (healthData.hydrationData?.dehydrationRisk === 'severe') {\n    riskScore += 25;\n    risks.urgentConcerns.push('D\xE9shydratation s\xE9v\xE8re d\xE9tect\xE9e');\n  }\n\n  // D\xE9termination du niveau de risque global\n  if (riskScore >= 60) {\n    risks.overallRiskLevel = 'critical';\n  } else if (riskScore >= 40) {\n    risks.overallRiskLevel = 'high';\n  } else if (riskScore >= 20) {\n    risks.overallRiskLevel = 'medium';\n  }\n\n  return risks;\n}\n\n/**\n * G\xE9n\xE9ration de pr\xE9dictions pour les 7 prochains jours\n */\nexport function generatePredictiveMetrics(healthData: HealthData, historicalData?: HealthData[]): HealthAnalysis['predictiveMetrics'] {\n  const currentScores = {\n    fitness: healthData.workoutData?.workoutScore || 0,\n    nutrition: healthData.nutritionData?.nutritionScore || 0,\n    recovery: healthData.sleepData?.sleepQuality || 0,\n    hydration: healthData.hydrationData?.hydrationScore || 0,\n  };\n\n  // Projection bas\xE9e sur les tendances (simplifi\xE9e sans historique complet)\n  const next7DaysProjection = {\n    fitness: Math.min(100, currentScores.fitness + Math.random() * 10 - 5),\n    nutrition: Math.min(100, currentScores.nutrition + Math.random() * 10 - 5),\n    recovery: Math.min(100, currentScores.recovery + Math.random() * 10 - 5),\n    hydration: Math.min(100, currentScores.hydration + Math.random() * 10 - 5),\n  };\n\n  // Probabilit\xE9 d'atteinte des objectifs\n  const avgScore = Object.values(currentScores).reduce((a, b) => a + b, 0) / 4;\n  const goalAchievementProbability = Math.min(100, avgScore + 10);\n\n  // Risque de burnout bas\xE9 sur l'intensit\xE9 et la r\xE9cup\xE9ration\n  const workoutIntensity = healthData.workoutData?.avgIntensity || 50;\n  const recoveryScore = healthData.sleepData?.recoveryScore || 70;\n  const burnoutRisk = Math.max(0, (workoutIntensity - recoveryScore) + 20);\n\n  // Pr\xE9diction de plateau\n  const balanceScore = calculatePillarBalance(currentScores);\n  const plateauPrediction = Math.max(0, 100 - balanceScore - 20);\n\n  return {\n    next7DaysProjection,\n    goalAchievementProbability: Math.round(goalAchievementProbability),\n    burnoutRisk: Math.round(Math.min(100, burnoutRisk)),\n    plateauPrediction: Math.round(Math.min(100, plateauPrediction)),\n  };\n}\n\n// Fonctions utilitaires\nfunction calculateDynamicWeights(scores: Record<string, number>) {\n  // Plus un pilier est faible, plus son poids augmente pour l'\xE9quilibrage\n  const total = Object.values(scores).reduce((a, b) => a + b, 0);\n  const avg = total / 4;\n  \n  return {\n    fitness: scores.fitness < avg ? 0.28 : 0.25,\n    nutrition: scores.nutrition < avg ? 0.28 : 0.25,\n    recovery: scores.recovery < avg ? 0.27 : 0.25,\n    hydration: scores.hydration < avg ? 0.27 : 0.25,\n  };\n}\n\nfunction calculateBalanceBonus(scores: Record<string, number>): number {\n  const values = Object.values(scores);\n  const max = Math.max(...values);\n  const min = Math.min(...values);\n  const gap = max - min;\n  \n  // Bonus d\xE9croissant selon l'\xE9cart entre le meilleur et le pire pilier\n  if (gap <= 10) return 10; // Excellent \xE9quilibre\n  if (gap <= 20) return 5;  // Bon \xE9quilibre\n  if (gap <= 30) return 0;  // \xC9quilibre moyen\n  return -5; // D\xE9s\xE9quilibre p\xE9nalisant\n}\n\nfunction calculateSynergyBonus(healthData: HealthData): number {\n  let bonus = 0;\n  \n  // Synergies sp\xE9cifiques\n  const workoutScore = healthData.workoutData?.workoutScore || 0;\n  const nutritionScore = healthData.nutritionData?.nutritionScore || 0;\n  const recoveryScore = healthData.sleepData?.recoveryScore || 0;\n  const hydrationScore = healthData.hydrationData?.hydrationScore || 0;\n\n  // Synergie workout-nutrition\n  if (workoutScore >= 80 && nutritionScore >= 80) bonus += 3;\n  \n  // Synergie recovery-performance\n  if (recoveryScore >= 80 && workoutScore >= 70) bonus += 3;\n  \n  // Synergie hydration-recovery\n  if (hydrationScore >= 80 && recoveryScore >= 70) bonus += 2;\n  \n  // Synergie nutrition-recovery\n  if (nutritionScore >= 80 && recoveryScore >= 80) bonus += 2;\n  \n  return bonus;\n}\n\nfunction calculatePillarBalance(scores: Record<string, number>): number {\n  const values = Object.values(scores);\n  const avg = values.reduce((a, b) => a + b, 0) / values.length;\n  const variance = values.reduce((acc, val) => acc + Math.pow(val - avg, 2), 0) / values.length;\n  const standardDeviation = Math.sqrt(variance);\n  \n  // Score d'\xE9quilibre: plus la d\xE9viation est faible, meilleur est l'\xE9quilibre\n  return Math.max(0, 100 - (standardDeviation * 2));\n}\n\nfunction generateCrossPillarRecommendations(healthData: HealthData): string[] {\n  const recommendations = [];\n  \n  const workoutScore = healthData.workoutData?.workoutScore || 0;\n  const nutritionScore = healthData.nutritionData?.nutritionScore || 0;\n  const recoveryScore = healthData.sleepData?.sleepQuality || 0;\n  const hydrationScore = healthData.hydrationData?.hydrationScore || 0;\n\n  // Recommandations bas\xE9es sur les corr\xE9lations\n  if (workoutScore > 80 && nutritionScore < 60) {\n    recommendations.push('Optimisez votre nutrition post-entra\xEEnement pour maximiser la r\xE9cup\xE9ration');\n  }\n  \n  if (recoveryScore < 70 && workoutScore > 70) {\n    recommendations.push('R\xE9duisez temporairement l\\'intensit\xE9 d\\'entra\xEEnement pour am\xE9liorer la r\xE9cup\xE9ration');\n  }\n  \n  if (hydrationScore < 70 && (workoutScore > 70 || recoveryScore < 70)) {\n    recommendations.push('Augmentez votre hydratation pour optimiser performance et r\xE9cup\xE9ration');\n  }\n  \n  if (nutritionScore > 85 && recoveryScore > 85 && workoutScore < 70) {\n    recommendations.push('Votre base nutrition/r\xE9cup\xE9ration est excellente: intensifiez progressivement l\\'entra\xEEnement');\n  }\n\n  return recommendations;\n}\n\nfunction generatePersonalizedStrategy(healthData: HealthData, scores: Record<string, number>): string[] {\n  const strategy = [];\n  \n  // Strat\xE9gie bas\xE9e sur le pilier le plus faible\n  const weakestPillar = Object.entries(scores).reduce((min, [pillar, score]) => \n    score < min.score ? { pillar, score } : min, { pillar: '', score: 100 }\n  );\n\n  switch (weakestPillar.pillar) {\n    case 'fitness':\n      strategy.push('Focus: \xE9tablir une routine d\\'entra\xEEnement progressive et durable');\n      strategy.push('Commencez par 3 s\xE9ances/semaine de 30min');\n      break;\n    case 'nutrition':\n      strategy.push('Focus: optimiser l\\'alimentation avec un plan nutritionnel structur\xE9');\n      strategy.push('Priorisez les prot\xE9ines et l\\'hydratation');\n      break;\n    case 'recovery':\n      strategy.push('Focus: am\xE9liorer la qualit\xE9 et la dur\xE9e du sommeil');\n      strategy.push('\xC9tablissez une routine de coucher fixe');\n      break;\n    case 'hydration':\n      strategy.push('Focus: maintenir une hydratation optimale tout au long de la journ\xE9e');\n      strategy.push('Objectif: boire r\xE9guli\xE8rement, pas seulement quand vous avez soif');\n      break;\n  }\n\n  return strategy;\n}\n\nfunction generateHabitFormationTips(scores: Record<string, number>): string[] {\n  const tips = [\n    'Cr\xE9ez des d\xE9clencheurs visuels pour vos nouvelles habitudes',\n    'Commencez petit: 1% d\\'am\xE9lioration quotidienne est suffisant',\n    'Liez vos nouvelles habitudes \xE0 des habitudes existantes',\n    'Suivez vos progr\xE8s quotidiennement pour maintenir la motivation',\n  ];\n\n  // Tips sp\xE9cifiques selon les scores\n  const avgScore = Object.values(scores).reduce((a, b) => a + b, 0) / 4;\n  \n  if (avgScore < 50) {\n    tips.push('Focus sur UN pilier \xE0 la fois pour \xE9viter la surcharge');\n  } else if (avgScore > 80) {\n    tips.push('Maintenez vos excellentes habitudes en \xE9vitant la complaisance');\n  }\n\n  return tips;\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4b4eaa3a8e357d8d97e575f565db44ebec97e8a6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1w5m9i148j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1w5m9i148j();
cov_1w5m9i148j().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1w5m9i148j().s[1]++;
exports.dbToHealthData = dbToHealthData;
/* istanbul ignore next */
cov_1w5m9i148j().s[2]++;
exports.healthDataToDb = healthDataToDb;
/* istanbul ignore next */
cov_1w5m9i148j().s[3]++;
exports.dbToHealthAnalysis = dbToHealthAnalysis;
/* istanbul ignore next */
cov_1w5m9i148j().s[4]++;
exports.healthAnalysisToDb = healthAnalysisToDb;
/* istanbul ignore next */
cov_1w5m9i148j().s[5]++;
exports.calculateGlobalHealthScore = calculateGlobalHealthScore;
/* istanbul ignore next */
cov_1w5m9i148j().s[6]++;
exports.generateCrossPillarInsights = generateCrossPillarInsights;
/* istanbul ignore next */
cov_1w5m9i148j().s[7]++;
exports.calculatePerformanceMetrics = calculatePerformanceMetrics;
/* istanbul ignore next */
cov_1w5m9i148j().s[8]++;
exports.evaluateHealthRisks = evaluateHealthRisks;
/* istanbul ignore next */
cov_1w5m9i148j().s[9]++;
exports.generatePredictiveMetrics = generatePredictiveMetrics;
/**
 * Conversion des données Health de snake_case (DB) vers camelCase (App)
 */
function dbToHealthData(dbData) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[0]++;
  const pillarData =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[10]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[0][0]++, dbData.pillar_data) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[0][1]++, {}));
  /* istanbul ignore next */
  cov_1w5m9i148j().s[11]++;
  return {
    id: dbData.id,
    userId: dbData.user_id,
    date: dbData.health_date,
    workoutData: pillarData.workoutData,
    nutritionData: pillarData.nutritionData,
    sleepData: pillarData.sleepData,
    hydrationData: pillarData.hydrationData,
    createdAt: new Date(dbData.created_at),
    updatedAt: new Date(dbData.updated_at)
  };
}
/**
 * Conversion des données Health de camelCase (App) vers snake_case (DB)
 */
function healthDataToDb(healthData) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[1]++;
  cov_1w5m9i148j().s[12]++;
  return {
    id: healthData.id,
    user_id: healthData.userId,
    health_date: healthData.date,
    global_health_score: calculateGlobalHealthScore(healthData),
    fitness_score:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[1][0]++, healthData.workoutData?.workoutScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[1][1]++, 0),
    nutrition_score:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[2][0]++, healthData.nutritionData?.nutritionScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[2][1]++, 0),
    recovery_score:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[3][0]++, healthData.sleepData?.recoveryScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[3][1]++, 0),
    hydration_score:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[4][0]++, healthData.hydrationData?.hydrationScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[4][1]++, 0),
    pillar_data: {
      workoutData: healthData.workoutData,
      nutritionData: healthData.nutritionData,
      sleepData: healthData.sleepData,
      hydrationData: healthData.hydrationData
    },
    health_ai_analysis: {
      analysisVersion: '1.0',
      timestamp: new Date().toISOString()
    },
    updated_at: new Date().toISOString()
  };
}
/**
 * Conversion des analyses Health de snake_case (DB) vers camelCase (App)
 */
function dbToHealthAnalysis(dbAnalysis) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[2]++;
  const aiAnalysis =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[13]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[5][0]++, dbAnalysis.health_ai_analysis) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[5][1]++, {}));
  /* istanbul ignore next */
  cov_1w5m9i148j().s[14]++;
  return {
    id: dbAnalysis.id,
    userId: dbAnalysis.user_id,
    healthDataId: dbAnalysis.health_data_id,
    analysisDate: new Date(dbAnalysis.analysis_date),
    globalHealthScore: dbAnalysis.global_health_score,
    pillarScores: {
      fitness: dbAnalysis.fitness_score,
      nutrition: dbAnalysis.nutrition_score,
      recovery: dbAnalysis.recovery_score,
      hydration: dbAnalysis.hydration_score
    },
    balanceMetrics:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[6][0]++, aiAnalysis.balanceMetrics) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[6][1]++, {
      pillarHarmony:
      /* istanbul ignore next */
      (cov_1w5m9i148j().b[7][0]++, dbAnalysis.balance_harmony_score) ||
      /* istanbul ignore next */
      (cov_1w5m9i148j().b[7][1]++, 70),
      consistencyScore:
      /* istanbul ignore next */
      (cov_1w5m9i148j().b[8][0]++, dbAnalysis.consistency_score) ||
      /* istanbul ignore next */
      (cov_1w5m9i148j().b[8][1]++, 70),
      synergisticEffect:
      /* istanbul ignore next */
      (cov_1w5m9i148j().b[9][0]++, dbAnalysis.synergistic_effect_score) ||
      /* istanbul ignore next */
      (cov_1w5m9i148j().b[9][1]++, 70),
      weakestLink: 'fitness',
      strongestPillar: 'fitness'
    }),
    performanceMetrics:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[10][0]++, aiAnalysis.performanceMetrics) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[10][1]++, {
      physicalPerformance: 75,
      mentalPerformance: 75,
      energyLevel: 75,
      recoveryCapacity: 75,
      adaptationRate: 75
    }),
    healthRisks:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[11][0]++, aiAnalysis.healthRisks) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[11][1]++, {
      overallRiskLevel:
      /* istanbul ignore next */
      (cov_1w5m9i148j().b[12][0]++, dbAnalysis.risk_level) ||
      /* istanbul ignore next */
      (cov_1w5m9i148j().b[12][1]++, 'low'),
      specificRisks: [],
      preventiveActions: [],
      urgentConcerns: []
    }),
    aiInsights:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[13][0]++, aiAnalysis.aiInsights) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[13][1]++, {
      keyStrengths: [],
      improvementPriorities: [],
      crossPillarRecommendations: [],
      personalizedStrategy: [],
      habitFormationTips: []
    }),
    predictiveMetrics:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[14][0]++, aiAnalysis.predictiveMetrics) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[14][1]++, {
      next7DaysProjection: {
        fitness: 75,
        nutrition: 75,
        recovery: 75,
        hydration: 75
      },
      goalAchievementProbability: 75,
      burnoutRisk: 25,
      plateauPrediction: 30
    }),
    crossPillarCorrelations:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[15][0]++, aiAnalysis.crossPillarCorrelations) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[15][1]++, {
      workoutNutritionCorr: 0,
      sleepPerformanceCorr: 0,
      hydrationRecoveryCorr: 0,
      nutritionSleepCorr: 0
    }),
    optimizationSuggestions:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[16][0]++, aiAnalysis.optimizationSuggestions) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[16][1]++, {
      workoutTiming: [],
      nutritionTiming: [],
      sleepOptimization: [],
      hydrationStrategy: [],
      recoveryProtocol: []
    }),
    createdAt: new Date(dbAnalysis.created_at),
    updatedAt: new Date(dbAnalysis.updated_at)
  };
}
/**
 * Conversion des analyses Health de camelCase (App) vers snake_case (DB)
 */
function healthAnalysisToDb(analysis) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[3]++;
  cov_1w5m9i148j().s[15]++;
  return {
    id: analysis.id,
    user_id: analysis.userId,
    health_data_id: analysis.healthDataId,
    analysis_date: analysis.analysisDate.toISOString(),
    global_health_score: analysis.globalHealthScore,
    fitness_score: analysis.pillarScores.fitness,
    nutrition_score: analysis.pillarScores.nutrition,
    recovery_score: analysis.pillarScores.recovery,
    hydration_score: analysis.pillarScores.hydration,
    balance_harmony_score: analysis.balanceMetrics.pillarHarmony,
    consistency_score: analysis.balanceMetrics.consistencyScore,
    synergistic_effect_score: analysis.balanceMetrics.synergisticEffect,
    risk_level: analysis.healthRisks.overallRiskLevel,
    health_ai_analysis: {
      balanceMetrics: analysis.balanceMetrics,
      performanceMetrics: analysis.performanceMetrics,
      healthRisks: analysis.healthRisks,
      aiInsights: analysis.aiInsights,
      predictiveMetrics: analysis.predictiveMetrics,
      crossPillarCorrelations: analysis.crossPillarCorrelations,
      optimizationSuggestions: analysis.optimizationSuggestions
    },
    updated_at: new Date().toISOString()
  };
}
/**
 * Calcul du score de santé global avec algorithme IA sophistiqué
 */
function calculateGlobalHealthScore(healthData) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[4]++;
  const scores =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[16]++, {
    fitness:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[17][0]++, healthData.workoutData?.workoutScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[17][1]++, 0),
    nutrition:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[18][0]++, healthData.nutritionData?.nutritionScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[18][1]++, 0),
    recovery:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[19][0]++, healthData.sleepData?.sleepQuality) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[19][1]++, 0),
    hydration:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[20][0]++, healthData.hydrationData?.hydrationScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[20][1]++, 0)
  });
  // Pondération dynamique basée sur l'équilibre
  const weights =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[17]++, calculateDynamicWeights(scores));
  // Score de base pondéré
  const baseScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[18]++, scores.fitness * weights.fitness + scores.nutrition * weights.nutrition + scores.recovery * weights.recovery + scores.hydration * weights.hydration);
  // Bonus/malus pour l'équilibre entre piliers
  const balanceBonus =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[19]++, calculateBalanceBonus(scores));
  // Bonus pour l'effet synergique
  const synergyBonus =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[20]++, calculateSynergyBonus(healthData));
  // Score final avec plafonnement
  const finalScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[21]++, baseScore + balanceBonus + synergyBonus);
  /* istanbul ignore next */
  cov_1w5m9i148j().s[22]++;
  return Math.min(100, Math.max(0, Math.round(finalScore)));
}
/**
 * Génération d'insights IA cross-piliers sophistiqués
 */
function generateCrossPillarInsights(healthData) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[5]++;
  const insights =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[23]++, {
    keyStrengths: [],
    improvementPriorities: [],
    crossPillarRecommendations: [],
    personalizedStrategy: [],
    habitFormationTips: []
  });
  const scores =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[24]++, {
    fitness:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[21][0]++, healthData.workoutData?.workoutScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[21][1]++, 0),
    nutrition:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[22][0]++, healthData.nutritionData?.nutritionScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[22][1]++, 0),
    recovery:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[23][0]++, healthData.sleepData?.sleepQuality) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[23][1]++, 0),
    hydration:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[24][0]++, healthData.hydrationData?.hydrationScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[24][1]++, 0)
  });
  // Identification des forces
  /* istanbul ignore next */
  cov_1w5m9i148j().s[25]++;
  Object.entries(scores).forEach(([pillar, score]) => {
    /* istanbul ignore next */
    cov_1w5m9i148j().f[6]++;
    cov_1w5m9i148j().s[26]++;
    if (score >= 85) {
      /* istanbul ignore next */
      cov_1w5m9i148j().b[25][0]++;
      cov_1w5m9i148j().s[27]++;
      insights.keyStrengths.push(`Excellence en ${pillar}: score de ${score}/100`);
    } else
    /* istanbul ignore next */
    {
      cov_1w5m9i148j().b[25][1]++;
    }
  });
  // Priorisation des améliorations
  const sortedPillars =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[28]++, Object.entries(scores).sort(([, a], [, b]) => {
    /* istanbul ignore next */
    cov_1w5m9i148j().f[7]++;
    cov_1w5m9i148j().s[29]++;
    return a - b;
  }));
  const weakestPillar =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[30]++, sortedPillars[0]);
  /* istanbul ignore next */
  cov_1w5m9i148j().s[31]++;
  if (weakestPillar[1] < 60) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[26][0]++;
    cov_1w5m9i148j().s[32]++;
    insights.improvementPriorities.push(`Priorité critique: améliorer ${weakestPillar[0]} (${weakestPillar[1]}/100)`);
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[26][1]++;
  }
  // Recommandations cross-piliers
  cov_1w5m9i148j().s[33]++;
  insights.crossPillarRecommendations.push(...generateCrossPillarRecommendations(healthData));
  // Stratégie personnalisée
  /* istanbul ignore next */
  cov_1w5m9i148j().s[34]++;
  insights.personalizedStrategy.push(...generatePersonalizedStrategy(healthData, scores));
  // Tips formation d'habitudes
  /* istanbul ignore next */
  cov_1w5m9i148j().s[35]++;
  insights.habitFormationTips.push(...generateHabitFormationTips(scores));
  /* istanbul ignore next */
  cov_1w5m9i148j().s[36]++;
  return insights;
}
/**
 * Calcul des métriques de performance globales
 */
function calculatePerformanceMetrics(healthData) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[8]++;
  const scores =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[37]++, {
    fitness:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[27][0]++, healthData.workoutData?.workoutScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[27][1]++, 0),
    nutrition:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[28][0]++, healthData.nutritionData?.nutritionScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[28][1]++, 0),
    recovery:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[29][0]++, healthData.sleepData?.sleepQuality) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[29][1]++, 0),
    hydration:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[30][0]++, healthData.hydrationData?.hydrationScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[30][1]++, 0)
  });
  // Performance physique (fitness + recovery + hydration)
  const physicalPerformance =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[38]++, Math.round(scores.fitness * 0.5 + scores.recovery * 0.3 + scores.hydration * 0.2));
  // Performance mentale (nutrition + recovery)
  const mentalPerformance =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[39]++, Math.round(scores.nutrition * 0.4 + scores.recovery * 0.6));
  // Niveau d'énergie (tous les piliers avec pondération)
  const energyLevel =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[40]++, Math.round(scores.fitness * 0.25 + scores.nutrition * 0.3 + scores.recovery * 0.3 + scores.hydration * 0.15));
  // Capacité de récupération (recovery + nutrition + hydration)
  const recoveryCapacity =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[41]++, Math.round(scores.recovery * 0.5 + scores.nutrition * 0.3 + scores.hydration * 0.2));
  // Taux d'adaptation (équilibre général)
  const balanceScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[42]++, calculatePillarBalance(scores));
  const adaptationRate =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[43]++, Math.min(100, balanceScore + 10));
  /* istanbul ignore next */
  cov_1w5m9i148j().s[44]++;
  return {
    physicalPerformance: Math.min(100, Math.max(0, physicalPerformance)),
    mentalPerformance: Math.min(100, Math.max(0, mentalPerformance)),
    energyLevel: Math.min(100, Math.max(0, energyLevel)),
    recoveryCapacity: Math.min(100, Math.max(0, recoveryCapacity)),
    adaptationRate: Math.min(100, Math.max(0, adaptationRate))
  };
}
/**
 * Évaluation des risques santé
 */
function evaluateHealthRisks(healthData) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[9]++;
  const risks =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[45]++, {
    overallRiskLevel: 'low',
    specificRisks: [],
    preventiveActions: [],
    urgentConcerns: []
  });
  const scores =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[46]++, {
    fitness:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[31][0]++, healthData.workoutData?.workoutScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[31][1]++, 0),
    nutrition:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[32][0]++, healthData.nutritionData?.nutritionScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[32][1]++, 0),
    recovery:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[33][0]++, healthData.sleepData?.sleepQuality) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[33][1]++, 0),
    hydration:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[34][0]++, healthData.hydrationData?.hydrationScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[34][1]++, 0)
  });
  let riskScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[47]++, 0);
  // Évaluation par pilier
  /* istanbul ignore next */
  cov_1w5m9i148j().s[48]++;
  Object.entries(scores).forEach(([pillar, score]) => {
    /* istanbul ignore next */
    cov_1w5m9i148j().f[10]++;
    cov_1w5m9i148j().s[49]++;
    if (score < 30) {
      /* istanbul ignore next */
      cov_1w5m9i148j().b[35][0]++;
      cov_1w5m9i148j().s[50]++;
      riskScore += 30;
      /* istanbul ignore next */
      cov_1w5m9i148j().s[51]++;
      risks.specificRisks.push(`${pillar}: risque élevé (score ${score}/100)`);
      /* istanbul ignore next */
      cov_1w5m9i148j().s[52]++;
      risks.urgentConcerns.push(`Amélioration urgente requise pour ${pillar}`);
    } else {
      /* istanbul ignore next */
      cov_1w5m9i148j().b[35][1]++;
      cov_1w5m9i148j().s[53]++;
      if (score < 50) {
        /* istanbul ignore next */
        cov_1w5m9i148j().b[36][0]++;
        cov_1w5m9i148j().s[54]++;
        riskScore += 15;
        /* istanbul ignore next */
        cov_1w5m9i148j().s[55]++;
        risks.specificRisks.push(`${pillar}: risque modéré (score ${score}/100)`);
        /* istanbul ignore next */
        cov_1w5m9i148j().s[56]++;
        risks.preventiveActions.push(`Renforcer les habitudes de ${pillar}`);
      } else {
        /* istanbul ignore next */
        cov_1w5m9i148j().b[36][1]++;
        cov_1w5m9i148j().s[57]++;
        if (score < 70) {
          /* istanbul ignore next */
          cov_1w5m9i148j().b[37][0]++;
          cov_1w5m9i148j().s[58]++;
          riskScore += 5;
          /* istanbul ignore next */
          cov_1w5m9i148j().s[59]++;
          risks.preventiveActions.push(`Maintenir et optimiser ${pillar}`);
        } else
        /* istanbul ignore next */
        {
          cov_1w5m9i148j().b[37][1]++;
        }
      }
    }
  });
  // Risques spécifiques cross-piliers
  /* istanbul ignore next */
  cov_1w5m9i148j().s[60]++;
  if (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[39][0]++, scores.nutrition < 60) &&
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[39][1]++, scores.fitness > 80)) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[38][0]++;
    cov_1w5m9i148j().s[61]++;
    risks.specificRisks.push('Déséquilibre: haute activité physique avec nutrition insuffisante');
    /* istanbul ignore next */
    cov_1w5m9i148j().s[62]++;
    risks.preventiveActions.push('Augmenter l\'apport calorique et protéique');
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[38][1]++;
  }
  cov_1w5m9i148j().s[63]++;
  if (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[41][0]++, scores.recovery < 60) &&
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[41][1]++, scores.fitness > 70)) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[40][0]++;
    cov_1w5m9i148j().s[64]++;
    risks.specificRisks.push('Risque de surentraînement: récupération insuffisante');
    /* istanbul ignore next */
    cov_1w5m9i148j().s[65]++;
    risks.urgentConcerns.push('Prioriser le sommeil et la récupération');
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[40][1]++;
  }
  cov_1w5m9i148j().s[66]++;
  if (healthData.hydrationData?.dehydrationRisk === 'severe') {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[42][0]++;
    cov_1w5m9i148j().s[67]++;
    riskScore += 25;
    /* istanbul ignore next */
    cov_1w5m9i148j().s[68]++;
    risks.urgentConcerns.push('Déshydratation sévère détectée');
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[42][1]++;
  }
  // Détermination du niveau de risque global
  cov_1w5m9i148j().s[69]++;
  if (riskScore >= 60) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[43][0]++;
    cov_1w5m9i148j().s[70]++;
    risks.overallRiskLevel = 'critical';
  } else {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[43][1]++;
    cov_1w5m9i148j().s[71]++;
    if (riskScore >= 40) {
      /* istanbul ignore next */
      cov_1w5m9i148j().b[44][0]++;
      cov_1w5m9i148j().s[72]++;
      risks.overallRiskLevel = 'high';
    } else {
      /* istanbul ignore next */
      cov_1w5m9i148j().b[44][1]++;
      cov_1w5m9i148j().s[73]++;
      if (riskScore >= 20) {
        /* istanbul ignore next */
        cov_1w5m9i148j().b[45][0]++;
        cov_1w5m9i148j().s[74]++;
        risks.overallRiskLevel = 'medium';
      } else
      /* istanbul ignore next */
      {
        cov_1w5m9i148j().b[45][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1w5m9i148j().s[75]++;
  return risks;
}
/**
 * Génération de prédictions pour les 7 prochains jours
 */
function generatePredictiveMetrics(healthData, historicalData) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[11]++;
  const currentScores =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[76]++, {
    fitness:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[46][0]++, healthData.workoutData?.workoutScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[46][1]++, 0),
    nutrition:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[47][0]++, healthData.nutritionData?.nutritionScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[47][1]++, 0),
    recovery:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[48][0]++, healthData.sleepData?.sleepQuality) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[48][1]++, 0),
    hydration:
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[49][0]++, healthData.hydrationData?.hydrationScore) ||
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[49][1]++, 0)
  });
  // Projection basée sur les tendances (simplifiée sans historique complet)
  const next7DaysProjection =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[77]++, {
    fitness: Math.min(100, currentScores.fitness + Math.random() * 10 - 5),
    nutrition: Math.min(100, currentScores.nutrition + Math.random() * 10 - 5),
    recovery: Math.min(100, currentScores.recovery + Math.random() * 10 - 5),
    hydration: Math.min(100, currentScores.hydration + Math.random() * 10 - 5)
  });
  // Probabilité d'atteinte des objectifs
  const avgScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[78]++, Object.values(currentScores).reduce((a, b) => {
    /* istanbul ignore next */
    cov_1w5m9i148j().f[12]++;
    cov_1w5m9i148j().s[79]++;
    return a + b;
  }, 0) / 4);
  const goalAchievementProbability =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[80]++, Math.min(100, avgScore + 10));
  // Risque de burnout basé sur l'intensité et la récupération
  const workoutIntensity =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[81]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[50][0]++, healthData.workoutData?.avgIntensity) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[50][1]++, 50));
  const recoveryScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[82]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[51][0]++, healthData.sleepData?.recoveryScore) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[51][1]++, 70));
  const burnoutRisk =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[83]++, Math.max(0, workoutIntensity - recoveryScore + 20));
  // Prédiction de plateau
  const balanceScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[84]++, calculatePillarBalance(currentScores));
  const plateauPrediction =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[85]++, Math.max(0, 100 - balanceScore - 20));
  /* istanbul ignore next */
  cov_1w5m9i148j().s[86]++;
  return {
    next7DaysProjection,
    goalAchievementProbability: Math.round(goalAchievementProbability),
    burnoutRisk: Math.round(Math.min(100, burnoutRisk)),
    plateauPrediction: Math.round(Math.min(100, plateauPrediction))
  };
}
// Fonctions utilitaires
function calculateDynamicWeights(scores) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[13]++;
  // Plus un pilier est faible, plus son poids augmente pour l'équilibrage
  const total =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[87]++, Object.values(scores).reduce((a, b) => {
    /* istanbul ignore next */
    cov_1w5m9i148j().f[14]++;
    cov_1w5m9i148j().s[88]++;
    return a + b;
  }, 0));
  const avg =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[89]++, total / 4);
  /* istanbul ignore next */
  cov_1w5m9i148j().s[90]++;
  return {
    fitness: scores.fitness < avg ?
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[52][0]++, 0.28) :
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[52][1]++, 0.25),
    nutrition: scores.nutrition < avg ?
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[53][0]++, 0.28) :
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[53][1]++, 0.25),
    recovery: scores.recovery < avg ?
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[54][0]++, 0.27) :
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[54][1]++, 0.25),
    hydration: scores.hydration < avg ?
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[55][0]++, 0.27) :
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[55][1]++, 0.25)
  };
}
function calculateBalanceBonus(scores) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[15]++;
  const values =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[91]++, Object.values(scores));
  const max =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[92]++, Math.max(...values));
  const min =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[93]++, Math.min(...values));
  const gap =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[94]++, max - min);
  // Bonus décroissant selon l'écart entre le meilleur et le pire pilier
  /* istanbul ignore next */
  cov_1w5m9i148j().s[95]++;
  if (gap <= 10) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[56][0]++;
    cov_1w5m9i148j().s[96]++;
    return 10;
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[56][1]++;
  } // Excellent équilibre
  cov_1w5m9i148j().s[97]++;
  if (gap <= 20) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[57][0]++;
    cov_1w5m9i148j().s[98]++;
    return 5;
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[57][1]++;
  } // Bon équilibre
  cov_1w5m9i148j().s[99]++;
  if (gap <= 30) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[58][0]++;
    cov_1w5m9i148j().s[100]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[58][1]++;
  } // Équilibre moyen
  cov_1w5m9i148j().s[101]++;
  return -5; // Déséquilibre pénalisant
}
function calculateSynergyBonus(healthData) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[16]++;
  let bonus =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[102]++, 0);
  // Synergies spécifiques
  const workoutScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[103]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[59][0]++, healthData.workoutData?.workoutScore) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[59][1]++, 0));
  const nutritionScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[104]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[60][0]++, healthData.nutritionData?.nutritionScore) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[60][1]++, 0));
  const recoveryScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[105]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[61][0]++, healthData.sleepData?.recoveryScore) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[61][1]++, 0));
  const hydrationScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[106]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[62][0]++, healthData.hydrationData?.hydrationScore) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[62][1]++, 0));
  // Synergie workout-nutrition
  /* istanbul ignore next */
  cov_1w5m9i148j().s[107]++;
  if (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[64][0]++, workoutScore >= 80) &&
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[64][1]++, nutritionScore >= 80)) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[63][0]++;
    cov_1w5m9i148j().s[108]++;
    bonus += 3;
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[63][1]++;
  }
  // Synergie recovery-performance
  cov_1w5m9i148j().s[109]++;
  if (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[66][0]++, recoveryScore >= 80) &&
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[66][1]++, workoutScore >= 70)) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[65][0]++;
    cov_1w5m9i148j().s[110]++;
    bonus += 3;
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[65][1]++;
  }
  // Synergie hydration-recovery
  cov_1w5m9i148j().s[111]++;
  if (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[68][0]++, hydrationScore >= 80) &&
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[68][1]++, recoveryScore >= 70)) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[67][0]++;
    cov_1w5m9i148j().s[112]++;
    bonus += 2;
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[67][1]++;
  }
  // Synergie nutrition-recovery
  cov_1w5m9i148j().s[113]++;
  if (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[70][0]++, nutritionScore >= 80) &&
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[70][1]++, recoveryScore >= 80)) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[69][0]++;
    cov_1w5m9i148j().s[114]++;
    bonus += 2;
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[69][1]++;
  }
  cov_1w5m9i148j().s[115]++;
  return bonus;
}
function calculatePillarBalance(scores) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[17]++;
  const values =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[116]++, Object.values(scores));
  const avg =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[117]++, values.reduce((a, b) => {
    /* istanbul ignore next */
    cov_1w5m9i148j().f[18]++;
    cov_1w5m9i148j().s[118]++;
    return a + b;
  }, 0) / values.length);
  const variance =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[119]++, values.reduce((acc, val) => {
    /* istanbul ignore next */
    cov_1w5m9i148j().f[19]++;
    cov_1w5m9i148j().s[120]++;
    return acc + Math.pow(val - avg, 2);
  }, 0) / values.length);
  const standardDeviation =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[121]++, Math.sqrt(variance));
  // Score d'équilibre: plus la déviation est faible, meilleur est l'équilibre
  /* istanbul ignore next */
  cov_1w5m9i148j().s[122]++;
  return Math.max(0, 100 - standardDeviation * 2);
}
function generateCrossPillarRecommendations(healthData) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[20]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[123]++, []);
  const workoutScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[124]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[71][0]++, healthData.workoutData?.workoutScore) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[71][1]++, 0));
  const nutritionScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[125]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[72][0]++, healthData.nutritionData?.nutritionScore) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[72][1]++, 0));
  const recoveryScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[126]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[73][0]++, healthData.sleepData?.sleepQuality) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[73][1]++, 0));
  const hydrationScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[127]++,
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[74][0]++, healthData.hydrationData?.hydrationScore) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[74][1]++, 0));
  // Recommandations basées sur les corrélations
  /* istanbul ignore next */
  cov_1w5m9i148j().s[128]++;
  if (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[76][0]++, workoutScore > 80) &&
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[76][1]++, nutritionScore < 60)) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[75][0]++;
    cov_1w5m9i148j().s[129]++;
    recommendations.push('Optimisez votre nutrition post-entraînement pour maximiser la récupération');
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[75][1]++;
  }
  cov_1w5m9i148j().s[130]++;
  if (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[78][0]++, recoveryScore < 70) &&
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[78][1]++, workoutScore > 70)) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[77][0]++;
    cov_1w5m9i148j().s[131]++;
    recommendations.push('Réduisez temporairement l\'intensité d\'entraînement pour améliorer la récupération');
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[77][1]++;
  }
  cov_1w5m9i148j().s[132]++;
  if (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[80][0]++, hydrationScore < 70) && (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[80][1]++, workoutScore > 70) ||
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[80][2]++, recoveryScore < 70))) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[79][0]++;
    cov_1w5m9i148j().s[133]++;
    recommendations.push('Augmentez votre hydratation pour optimiser performance et récupération');
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[79][1]++;
  }
  cov_1w5m9i148j().s[134]++;
  if (
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[82][0]++, nutritionScore > 85) &&
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[82][1]++, recoveryScore > 85) &&
  /* istanbul ignore next */
  (cov_1w5m9i148j().b[82][2]++, workoutScore < 70)) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[81][0]++;
    cov_1w5m9i148j().s[135]++;
    recommendations.push('Votre base nutrition/récupération est excellente: intensifiez progressivement l\'entraînement');
  } else
  /* istanbul ignore next */
  {
    cov_1w5m9i148j().b[81][1]++;
  }
  cov_1w5m9i148j().s[136]++;
  return recommendations;
}
function generatePersonalizedStrategy(healthData, scores) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[21]++;
  const strategy =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[137]++, []);
  // Stratégie basée sur le pilier le plus faible
  const weakestPillar =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[138]++, Object.entries(scores).reduce((min, [pillar, score]) => {
    /* istanbul ignore next */
    cov_1w5m9i148j().f[22]++;
    cov_1w5m9i148j().s[139]++;
    return score < min.score ?
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[83][0]++, {
      pillar,
      score
    }) :
    /* istanbul ignore next */
    (cov_1w5m9i148j().b[83][1]++, min);
  }, {
    pillar: '',
    score: 100
  }));
  /* istanbul ignore next */
  cov_1w5m9i148j().s[140]++;
  switch (weakestPillar.pillar) {
    case 'fitness':
      /* istanbul ignore next */
      cov_1w5m9i148j().b[84][0]++;
      cov_1w5m9i148j().s[141]++;
      strategy.push('Focus: établir une routine d\'entraînement progressive et durable');
      /* istanbul ignore next */
      cov_1w5m9i148j().s[142]++;
      strategy.push('Commencez par 3 séances/semaine de 30min');
      /* istanbul ignore next */
      cov_1w5m9i148j().s[143]++;
      break;
    case 'nutrition':
      /* istanbul ignore next */
      cov_1w5m9i148j().b[84][1]++;
      cov_1w5m9i148j().s[144]++;
      strategy.push('Focus: optimiser l\'alimentation avec un plan nutritionnel structuré');
      /* istanbul ignore next */
      cov_1w5m9i148j().s[145]++;
      strategy.push('Priorisez les protéines et l\'hydratation');
      /* istanbul ignore next */
      cov_1w5m9i148j().s[146]++;
      break;
    case 'recovery':
      /* istanbul ignore next */
      cov_1w5m9i148j().b[84][2]++;
      cov_1w5m9i148j().s[147]++;
      strategy.push('Focus: améliorer la qualité et la durée du sommeil');
      /* istanbul ignore next */
      cov_1w5m9i148j().s[148]++;
      strategy.push('Établissez une routine de coucher fixe');
      /* istanbul ignore next */
      cov_1w5m9i148j().s[149]++;
      break;
    case 'hydration':
      /* istanbul ignore next */
      cov_1w5m9i148j().b[84][3]++;
      cov_1w5m9i148j().s[150]++;
      strategy.push('Focus: maintenir une hydratation optimale tout au long de la journée');
      /* istanbul ignore next */
      cov_1w5m9i148j().s[151]++;
      strategy.push('Objectif: boire régulièrement, pas seulement quand vous avez soif');
      /* istanbul ignore next */
      cov_1w5m9i148j().s[152]++;
      break;
  }
  /* istanbul ignore next */
  cov_1w5m9i148j().s[153]++;
  return strategy;
}
function generateHabitFormationTips(scores) {
  /* istanbul ignore next */
  cov_1w5m9i148j().f[23]++;
  const tips =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[154]++, ['Créez des déclencheurs visuels pour vos nouvelles habitudes', 'Commencez petit: 1% d\'amélioration quotidienne est suffisant', 'Liez vos nouvelles habitudes à des habitudes existantes', 'Suivez vos progrès quotidiennement pour maintenir la motivation']);
  // Tips spécifiques selon les scores
  const avgScore =
  /* istanbul ignore next */
  (cov_1w5m9i148j().s[155]++, Object.values(scores).reduce((a, b) => {
    /* istanbul ignore next */
    cov_1w5m9i148j().f[24]++;
    cov_1w5m9i148j().s[156]++;
    return a + b;
  }, 0) / 4);
  /* istanbul ignore next */
  cov_1w5m9i148j().s[157]++;
  if (avgScore < 50) {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[85][0]++;
    cov_1w5m9i148j().s[158]++;
    tips.push('Focus sur UN pilier à la fois pour éviter la surcharge');
  } else {
    /* istanbul ignore next */
    cov_1w5m9i148j().b[85][1]++;
    cov_1w5m9i148j().s[159]++;
    if (avgScore > 80) {
      /* istanbul ignore next */
      cov_1w5m9i148j().b[86][0]++;
      cov_1w5m9i148j().s[160]++;
      tips.push('Maintenez vos excellentes habitudes en évitant la complaisance');
    } else
    /* istanbul ignore next */
    {
      cov_1w5m9i148j().b[86][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1w5m9i148j().s[161]++;
  return tips;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,