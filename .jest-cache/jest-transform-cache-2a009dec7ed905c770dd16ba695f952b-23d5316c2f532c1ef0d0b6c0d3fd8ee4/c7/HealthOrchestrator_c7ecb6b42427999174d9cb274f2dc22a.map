{"version":3,"names":["react_1","cov_13o443zsq0","s","__importStar","require","framer_motion_1","supabase_1","card_1","button_1","badge_1","dialog_1","lucide_react_1","health_orchestrator_mapping_1","initialHealthOrchestratorState","currentState","healthData","healthAnalysis","weeklySummary","healthGoals","pillarStatuses","historicalData","isLoading","error","showDetailedAnalysis","selectedTimeframe","globalHealthScore","pillarScores","fitness","nutrition","recovery","hydration","balanceScore","riskLevel","lastSyncTime","healthOrchestratorReducer","state","action","f","type","b","payload","global","pillars","balance","risk","HealthOrchestrator","dispatch","useReducer","userId","setUserId","useState","useEffect","getUser","data","user","supabase","auth","id","syncAllPillarsData","userIdParam","today","Date","toISOString","split","workoutData","nutritionData","sleepData","hydrationData","Promise","allSettled","fetchWorkoutData","fetchNutritionData","fetchSleepData","fetchHydrationData","now","date","status","value","undefined","createdAt","updatedAt","calculatePillarStatuses","performGlobalAnalysis","console","calculateGlobalHealthScore","aiInsights","generateCrossPillarInsights","performanceMetrics","calculatePerformanceMetrics","healthRisks","evaluateHealthRisks","predictiveMetrics","generatePredictiveMetrics","workoutScore","nutritionScore","sleepQuality","hydrationScore","calculatePillarBalance","analysis","healthDataId","analysisDate","balanceMetrics","pillarHarmony","consistencyScore","synergisticEffect","calculateSynergyEffect","weakestLink","findWeakestPillar","strongestPillar","findStrongestPillar","crossPillarCorrelations","calculateCrossPillarCorrelations","optimizationSuggestions","generateOptimizationSuggestions","overallRiskLevel","saveHealthAnalysis","dbHealthData","healthDataToDb","healthError","from","upsert","analysisError","user_id","health_data_id","analysis_date","global_health_score","fitness_score","nutrition_score","recovery_score","hydration_score","balance_harmony_score","consistency_score","synergistic_effect_score","risk_level","health_ai_analysis","jsx_runtime_1","jsx","className","children","jsxs","motion","div","initial","opacity","y","animate","Brain","scale","Array","map","_","i","x","Math","random","transition","duration","repeat","Infinity","delay","Badge","getHealthScoreBadgeColor","getHealthScoreLabel","cx","cy","r","stroke","strokeWidth","fill","circle","strokeLinecap","strokeDasharray","ease","x1","y1","x2","y2","offset","stopColor","Sparkles","toLocaleTimeString","Object","entries","pillar","score","index","pillarIcons","Activity","Heart","Clock","Zap","pillarColors","Icon","whileHover","width","getPillarStatusText","Card","CardHeader","CardTitle","CardContent","physicalPerformance","mentalPerformance","energyLevel","BarChart3","crossPillarRecommendations","length","Lightbulb","recommendation","ArrowRight","Target","goalAchievementProbability","Flame","burnoutRisk","Star","keyStrengths","Award","strength","CheckCircle","improvementPriorities","TrendingUp","priority","AlertTriangle","personalizedStrategy","Users","strategy","Settings","Button","onClick","disabled","RefreshCw","variant","Eye","Dialog","DialogTrigger","asChild","DialogContent","DialogHeader","DialogTitle","HealthGoalsForm","statusColors","excellent","good","fair","poor","critical","trendIcons","improving","stable","declining","TrendingDown","TrendIcon","trend","name","lastUpdated","urgentConcerns","Shield","concern","AnimatePresence","exit","size","exports","formData","setFormData","targetGlobalScore","pillarPriorities","timeFrame","min","max","onChange","e","Number","target","totalWorkouts","totalDuration","avgIntensity","recoveryScore","strengthProgress","cardioProgress","totalCalories","proteinGrams","carbsGrams","fatGrams","mealQuality","sleepDuration","sleepEfficiency","circadianAlignment","totalIntake","dailyGoal","efficiencyScore","dehydrationRisk","getStatusFromScore","dataPoints","scores","values","avg","reduce","a","variance","acc","val","pow","standardDeviation","sqrt","round","synergyScore","weakest","current","strongest","workoutNutritionCorr","sleepPerformanceCorr","hydrationRecoveryCorr","nutritionSleepCorr","workoutTiming","nutritionTiming","sleepOptimization","hydrationStrategy","recoveryProtocol","default"],"sources":["/workspaces/MyFitHero/src/features/ai-coach/components/HealthOrchestrator.tsx"],"sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { \n  Brain, \n  Heart, \n  Zap, \n  Target, \n  TrendingUp, \n  TrendingDown,\n  AlertTriangle,\n  CheckCircle,\n  Activity,\n  Calendar,\n  BarChart3,\n  Eye,\n  Sparkles,\n  Shield,\n  Award,\n  Clock,\n  Flame,\n  Settings,\n  RefreshCw,\n  ArrowRight,\n  Star,\n  Lightbulb,\n  Users\n} from 'lucide-react';\nimport { \n  HealthData, \n  HealthAnalysis, \n  HealthTrackingState, \n  WeeklyHealthSummary,\n  HealthGoals,\n  PillarStatus\n} from '@/features/ai-coach/types/health-orchestrator';\nimport { \n  dbToHealthData, \n  healthDataToDb, \n  calculateGlobalHealthScore, \n  generateCrossPillarInsights,\n  calculatePerformanceMetrics,\n  evaluateHealthRisks,\n  generatePredictiveMetrics\n} from '@/features/ai-coach/utils/health-orchestrator-mapping';\n\n// Types pour le state machine React\ninterface HealthOrchestratorState {\n  currentState: HealthTrackingState;\n  healthData: HealthData | undefined;\n  healthAnalysis: HealthAnalysis | undefined;\n  weeklySummary: WeeklyHealthSummary | undefined;\n  healthGoals: HealthGoals | undefined;\n  pillarStatuses: PillarStatus[];\n  historicalData: HealthData[];\n  isLoading: boolean;\n  error: string | undefined;\n  showDetailedAnalysis: boolean;\n  selectedTimeframe: 'today' | 'week' | 'month' | 'quarter';\n  globalHealthScore: number;\n  pillarScores: {\n    fitness: number;\n    nutrition: number;\n    recovery: number;\n    hydration: number;\n  };\n  balanceScore: number;\n  riskLevel: string;\n  lastSyncTime: Date | undefined;\n}\n\ntype HealthOrchestratorAction =\n  | { type: 'SET_STATE'; payload: HealthTrackingState }\n  | { type: 'SET_HEALTH_DATA'; payload: HealthData }\n  | { type: 'SET_ANALYSIS'; payload: HealthAnalysis }\n  | { type: 'SET_WEEKLY_SUMMARY'; payload: WeeklyHealthSummary }\n  | { type: 'SET_GOALS'; payload: HealthGoals }\n  | { type: 'SET_PILLAR_STATUSES'; payload: PillarStatus[] }\n  | { type: 'SET_HISTORICAL_DATA'; payload: HealthData[] }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | undefined }\n  | { type: 'TOGGLE_DETAILED_ANALYSIS' }\n  | { type: 'SET_TIMEFRAME'; payload: 'today' | 'week' | 'month' | 'quarter' }\n  | { type: 'UPDATE_SCORES'; payload: { global: number; pillars: any; balance: number; risk: string } }\n  | { type: 'SET_LAST_SYNC'; payload: Date }\n  | { type: 'RESET_STATE' };\n\nconst initialHealthOrchestratorState: HealthOrchestratorState = {\n  currentState: 'idle',\n  healthData: null,\n  healthAnalysis: null,\n  weeklySummary: null,\n  healthGoals: null,\n  pillarStatuses: [],\n  historicalData: [],\n  isLoading: false,\n  error: null,\n  showDetailedAnalysis: false,\n  selectedTimeframe: 'today',\n  globalHealthScore: 0,\n  pillarScores: {\n    fitness: 0,\n    nutrition: 0,\n    recovery: 0,\n    hydration: 0,\n  },\n  balanceScore: 0,\n  riskLevel: 'low',\n  lastSyncTime: null,\n};\n\nfunction healthOrchestratorReducer(state: HealthOrchestratorState, action: HealthOrchestratorAction): HealthOrchestratorState {\n  switch (action.type) {\n    case 'SET_STATE':\n      return { ...state, currentState: action.payload };\n    case 'SET_HEALTH_DATA':\n      return { ...state, healthData: action.payload };\n    case 'SET_ANALYSIS':\n      return { ...state, healthAnalysis: action.payload };\n    case 'SET_WEEKLY_SUMMARY':\n      return { ...state, weeklySummary: action.payload };\n    case 'SET_GOALS':\n      return { ...state, healthGoals: action.payload };\n    case 'SET_PILLAR_STATUSES':\n      return { ...state, pillarStatuses: action.payload };\n    case 'SET_HISTORICAL_DATA':\n      return { ...state, historicalData: action.payload };\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    case 'TOGGLE_DETAILED_ANALYSIS':\n      return { ...state, showDetailedAnalysis: !state.showDetailedAnalysis };\n    case 'SET_TIMEFRAME':\n      return { ...state, selectedTimeframe: action.payload };\n    case 'UPDATE_SCORES':\n      return { \n        ...state, \n        globalHealthScore: action.payload.global,\n        pillarScores: action.payload.pillars,\n        balanceScore: action.payload.balance,\n        riskLevel: action.payload.risk \n      };\n    case 'SET_LAST_SYNC':\n      return { ...state, lastSyncTime: action.payload };\n    case 'RESET_STATE':\n      return initialHealthOrchestratorState;\n    default:\n      return state;\n  }\n}\n\nexport const HealthOrchestrator: React.FC = () => {\n  const [state, dispatch] = useReducer(healthOrchestratorReducer, initialHealthOrchestratorState);\n  const [userId, setUserId] = useState<string | null>(null);\n\n  // Gestion de l'authentification\n  useEffect(() => {\n    const getUser = async () => {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        setUserId(user.id);\n        await syncAllPillarsData(user.id);\n      }\n    };\n    getUser();\n  }, []);\n\n  // Synchronisation de toutes les donnÃ©es des piliers\n  const syncAllPillarsData = async (userIdParam: string) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_STATE', payload: 'syncing_pillars' });\n\n    try {\n      const today = new Date().toISOString().split('T')[0];\n      \n      // Chargement parallÃ¨le de toutes les donnÃ©es des piliers\n      const [workoutData, nutritionData, sleepData, hydrationData] = await Promise.allSettled([\n        fetchWorkoutData(userIdParam, today),\n        fetchNutritionData(userIdParam, today),\n        fetchSleepData(userIdParam, today),\n        fetchHydrationData(userIdParam, today),\n      ]);\n\n      // AgrÃ©gation des donnÃ©es\n      const healthData: HealthData = {\n        id: `health_${Date.now()}`,\n        userId: userIdParam,\n        date: today,\n        workoutData: workoutData.status === 'fulfilled' ? workoutData.value : undefined,\n        nutritionData: nutritionData.status === 'fulfilled' ? nutritionData.value : undefined,\n        sleepData: sleepData.status === 'fulfilled' ? sleepData.value : undefined,\n        hydrationData: hydrationData.status === 'fulfilled' ? hydrationData.value : undefined,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n\n      dispatch({ type: 'SET_HEALTH_DATA', payload: healthData });\n      \n      // Mise Ã  jour des statuts des piliers\n      const pillarStatuses = calculatePillarStatuses(healthData);\n      dispatch({ type: 'SET_PILLAR_STATUSES', payload: pillarStatuses });\n\n      // Analyse IA globale\n      await performGlobalAnalysis(healthData);\n      \n      dispatch({ type: 'SET_LAST_SYNC', payload: new Date() });\n      dispatch({ type: 'SET_STATE', payload: 'idle' });\n    } catch (error: any) {\n      console.error('Erreur synchronisation piliers:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Erreur lors de la synchronisation des donnÃ©es' });\n      dispatch({ type: 'SET_STATE', payload: 'error' });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  // Analyse IA globale sophistiquÃ©e\n  const performGlobalAnalysis = async (healthData: HealthData) => {\n    dispatch({ type: 'SET_STATE', payload: 'analyzing_health' });\n\n    try {\n      // Calcul du score global\n      const globalHealthScore = calculateGlobalHealthScore(healthData);\n      \n      // GÃ©nÃ©ration des insights cross-piliers\n      const aiInsights = generateCrossPillarInsights(healthData);\n      \n      // Calcul des mÃ©triques de performance\n      const performanceMetrics = calculatePerformanceMetrics(healthData);\n      \n      // Ãvaluation des risques\n      const healthRisks = evaluateHealthRisks(healthData);\n      \n      // PrÃ©dictions\n      const predictiveMetrics = generatePredictiveMetrics(healthData, state.historicalData);\n      \n      // MÃ©triques d'Ã©quilibre\n      const pillarScores = {\n        fitness: healthData.workoutData?.workoutScore || 0,\n        nutrition: healthData.nutritionData?.nutritionScore || 0,\n        recovery: healthData.sleepData?.sleepQuality || 0,\n        hydration: healthData.hydrationData?.hydrationScore || 0,\n      };\n      \n      const balanceScore = calculatePillarBalance(pillarScores);\n\n      // CrÃ©ation de l'analyse complÃ¨te\n      const analysis: HealthAnalysis = {\n        id: `analysis_${healthData.id}`,\n        userId: healthData.userId,\n        healthDataId: healthData.id,\n        analysisDate: new Date(),\n        globalHealthScore,\n        pillarScores,\n        balanceMetrics: {\n          pillarHarmony: balanceScore,\n          consistencyScore: 75, // NÃ©cessiterait historique complet\n          synergisticEffect: calculateSynergyEffect(healthData),\n          weakestLink: findWeakestPillar(pillarScores),\n          strongestPillar: findStrongestPillar(pillarScores),\n        },\n        performanceMetrics,\n        healthRisks,\n        aiInsights,\n        predictiveMetrics,\n        crossPillarCorrelations: calculateCrossPillarCorrelations(healthData),\n        optimizationSuggestions: generateOptimizationSuggestions(healthData),\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n\n      dispatch({ type: 'SET_ANALYSIS', payload: analysis });\n      dispatch({ type: 'UPDATE_SCORES', payload: { \n        global: globalHealthScore,\n        pillars: pillarScores,\n        balance: balanceScore,\n        risk: healthRisks.overallRiskLevel \n      }});\n\n      // Sauvegarde en base\n      await saveHealthAnalysis(healthData, analysis);\n      \n    } catch (error: any) {\n      console.error('Erreur analyse globale:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Erreur lors de l\\'analyse globale' });\n    }\n  };\n\n  // Sauvegarde des donnÃ©es et analyses\n  const saveHealthAnalysis = async (healthData: HealthData, analysis: HealthAnalysis) => {\n    try {\n      // Sauvegarde donnÃ©es santÃ©\n      const dbHealthData = healthDataToDb(healthData);\n      const { error: healthError } = await supabase\n        .from('health_data')\n        .upsert(dbHealthData);\n\n      if (healthError) throw healthError;\n\n      // Sauvegarde analyse\n      const { error: analysisError } = await supabase\n        .from('health_analysis')\n        .upsert({\n          id: analysis.id,\n          user_id: analysis.userId,\n          health_data_id: analysis.healthDataId,\n          analysis_date: analysis.analysisDate.toISOString(),\n          global_health_score: analysis.globalHealthScore,\n          fitness_score: analysis.pillarScores.fitness,\n          nutrition_score: analysis.pillarScores.nutrition,\n          recovery_score: analysis.pillarScores.recovery,\n          hydration_score: analysis.pillarScores.hydration,\n          balance_harmony_score: analysis.balanceMetrics.pillarHarmony,\n          consistency_score: analysis.balanceMetrics.consistencyScore,\n          synergistic_effect_score: analysis.balanceMetrics.synergisticEffect,\n          risk_level: analysis.healthRisks.overallRiskLevel,\n          health_ai_analysis: {\n            balanceMetrics: analysis.balanceMetrics,\n            performanceMetrics: analysis.performanceMetrics,\n            healthRisks: analysis.healthRisks,\n            aiInsights: analysis.aiInsights,\n            predictiveMetrics: analysis.predictiveMetrics,\n            crossPillarCorrelations: analysis.crossPillarCorrelations,\n            optimizationSuggestions: analysis.optimizationSuggestions,\n          }\n        });\n\n      if (analysisError) throw analysisError;\n    } catch (error: any) {\n      console.error('Erreur sauvegarde:', error);\n    }\n  };\n\n  // Rendu du composant principal\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        \n        {/* Header avec score global */}\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"text-center space-y-4\"\n        >\n          <div className=\"flex items-center justify-center gap-3 mb-6\">\n            <div className=\"p-3 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full\">\n              <Brain className=\"w-8 h-8 text-white\" />\n            </div>\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent\">\n              Health Orchestrator AI\n            </h1>\n          </div>\n\n          {/* Score global et badge de santÃ© */}\n          <div className=\"max-w-3xl mx-auto\">\n            <motion.div\n              initial={{ scale: 0.9 }}\n              animate={{ scale: 1 }}\n              className=\"bg-white/10 backdrop-blur-sm rounded-xl p-8 border border-white/20 relative overflow-hidden\"\n            >\n              {/* Effet de particules de fond */}\n              <div className=\"absolute inset-0 opacity-20\">\n                {[...Array(5)].map((_, i) => (\n                  <motion.div\n                    key={i}\n                    initial={{ x: -100, y: Math.random() * 400 }}\n                    animate={{ x: 500, y: Math.random() * 400 }}\n                    transition={{ duration: 8, repeat: Infinity, delay: i * 1.5 }}\n                    className=\"absolute w-2 h-2 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full\"\n                  />\n                ))}\n              </div>\n              \n              <div className=\"relative z-10\">\n                <div className=\"text-center mb-6\">\n                  <div className=\"text-6xl font-bold text-white mb-2\">\n                    {state.globalHealthScore}/100\n                  </div>\n                  <div className=\"text-xl text-white/80 mb-4\">\n                    Score SantÃ© Global\n                  </div>\n                  <Badge \n                    className={`text-lg px-4 py-2 ${getHealthScoreBadgeColor(state.globalHealthScore)}`}\n                  >\n                    {getHealthScoreLabel(state.globalHealthScore)}\n                  </Badge>\n                </div>\n                \n                {/* Barre de progression circulaire */}\n                <div className=\"flex justify-center mb-6\">\n                  <div className=\"relative\">\n                    <svg className=\"w-32 h-32 transform -rotate-90\">\n                      <circle\n                        cx=\"64\"\n                        cy=\"64\"\n                        r=\"56\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"8\"\n                        fill=\"none\"\n                        className=\"text-white/20\"\n                      />\n                      <motion.circle\n                        cx=\"64\"\n                        cy=\"64\"\n                        r=\"56\"\n                        stroke=\"url(#gradient)\"\n                        strokeWidth=\"8\"\n                        fill=\"none\"\n                        strokeLinecap=\"round\"\n                        initial={{ strokeDasharray: \"0 350\" }}\n                        animate={{ strokeDasharray: `${state.globalHealthScore * 3.5} 350` }}\n                        transition={{ duration: 2, ease: \"easeOut\" }}\n                      />\n                      <defs>\n                        <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                          <stop offset=\"0%\" stopColor=\"#8B5CF6\" />\n                          <stop offset=\"100%\" stopColor=\"#3B82F6\" />\n                        </linearGradient>\n                      </defs>\n                    </svg>\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                      <Sparkles className=\"w-8 h-8 text-yellow-400\" />\n                    </div>\n                  </div>\n                </div>\n\n                {/* DerniÃ¨re synchronisation */}\n                <div className=\"text-center text-white/60 text-sm\">\n                  DerniÃ¨re mise Ã  jour: {state.lastSyncTime?.toLocaleTimeString('fr-FR') || 'Jamais'}\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        </motion.div>\n\n        {/* Scores des piliers */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\"\n        >\n          {Object.entries(state.pillarScores).map(([pillar, score], index) => {\n            const pillarIcons = {\n              fitness: Activity,\n              nutrition: Heart,\n              recovery: Clock,\n              hydration: Zap,\n            };\n            const pillarColors = {\n              fitness: 'from-red-500 to-orange-500',\n              nutrition: 'from-green-500 to-emerald-500',\n              recovery: 'from-purple-500 to-pink-500',\n              hydration: 'from-blue-500 to-cyan-500',\n            };\n            const Icon = pillarIcons[pillar as keyof typeof pillarIcons];\n            \n            return (\n              <motion.div\n                key={pillar}\n                initial={{ opacity: 0, scale: 0.9 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ delay: 0.3 + index * 0.1 }}\n                whileHover={{ scale: 1.05 }}\n                className=\"bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20 cursor-pointer group\"\n              >\n                <div className=\"flex items-center gap-3 mb-3\">\n                  <div className={`p-2 bg-gradient-to-r ${pillarColors[pillar as keyof typeof pillarColors]} rounded-lg`}>\n                    <Icon className=\"w-5 h-5 text-white\" />\n                  </div>\n                  <span className=\"text-white/80 font-medium capitalize\">{pillar}</span>\n                </div>\n                <div className=\"text-2xl font-bold text-white mb-2\">\n                  {score}/100\n                </div>\n                <div className=\"w-full bg-white/20 rounded-full h-2\">\n                  <motion.div\n                    initial={{ width: 0 }}\n                    animate={{ width: `${score}%` }}\n                    transition={{ duration: 1, delay: 0.5 + index * 0.1 }}\n                    className={`bg-gradient-to-r ${pillarColors[pillar as keyof typeof pillarColors]} h-2 rounded-full`}\n                  />\n                </div>\n                <div className=\"mt-2 text-xs text-white/60\">\n                  {getPillarStatusText(score)}\n                </div>\n              </motion.div>\n            );\n          })}\n        </motion.div>\n\n        {/* Interface principale */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          \n          {/* Colonne gauche - Analyse et insights */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            \n            {/* Analyse IA */}\n            {state.healthAnalysis && (\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.4 }}\n              >\n                <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                  <CardHeader>\n                    <CardTitle className=\"text-white flex items-center gap-2\">\n                      <Brain className=\"w-5 h-5\" />\n                      Analyse IA Cross-Piliers\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    \n                    {/* MÃ©triques de performance */}\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">Performance Physique</div>\n                        <div className=\"text-xl font-bold text-white\">\n                          {state.healthAnalysis.performanceMetrics.physicalPerformance}/100\n                        </div>\n                        <Activity className=\"w-4 h-4 text-red-400 mx-auto mt-1\" />\n                      </div>\n                      \n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">Performance Mentale</div>\n                        <div className=\"text-xl font-bold text-white\">\n                          {state.healthAnalysis.performanceMetrics.mentalPerformance}/100\n                        </div>\n                        <Brain className=\"w-4 h-4 text-purple-400 mx-auto mt-1\" />\n                      </div>\n                      \n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">Niveau d'Ã©nergie</div>\n                        <div className=\"text-xl font-bold text-white\">\n                          {state.healthAnalysis.performanceMetrics.energyLevel}/100\n                        </div>\n                        <Zap className=\"w-4 h-4 text-yellow-400 mx-auto mt-1\" />\n                      </div>\n                    </div>\n\n                    {/* Ãquilibre des piliers */}\n                    <div className=\"space-y-3\">\n                      <h4 className=\"text-white font-medium flex items-center gap-2\">\n                        <BarChart3 className=\"w-4 h-4\" />\n                        Ãquilibre des piliers ({state.balanceScore}/100)\n                      </h4>\n                      <div className=\"relative\">\n                        <div className=\"w-full bg-white/20 rounded-full h-4\">\n                          <motion.div\n                            initial={{ width: 0 }}\n                            animate={{ width: `${state.balanceScore}%` }}\n                            transition={{ duration: 1.5, delay: 0.8 }}\n                            className=\"bg-gradient-to-r from-purple-500 to-blue-500 h-4 rounded-full relative overflow-hidden\"\n                          >\n                            <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-pulse\" />\n                          </motion.div>\n                        </div>\n                        <div className=\"text-center mt-2\">\n                          <span className=\"text-sm text-white/70\">\n                            {state.balanceScore >= 80 ? 'Excellent Ã©quilibre' :\n                             state.balanceScore >= 60 ? 'Bon Ã©quilibre' :\n                             state.balanceScore >= 40 ? 'Ãquilibre moyen' : 'DÃ©sÃ©quilibre Ã  corriger'}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Recommandations cross-piliers */}\n                    {state.healthAnalysis.aiInsights.crossPillarRecommendations.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <h5 className=\"text-blue-300 font-medium flex items-center gap-2\">\n                          <Lightbulb className=\"w-4 h-4\" />\n                          Recommandations cross-piliers\n                        </h5>\n                        <div className=\"space-y-1\">\n                          {state.healthAnalysis.aiInsights.crossPillarRecommendations.map((recommendation, index) => (\n                            <div key={index} className=\"flex items-center gap-2 text-sm text-white/80\">\n                              <ArrowRight className=\"w-3 h-3 text-blue-400\" />\n                              {recommendation}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* PrÃ©dictions */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 pt-4 border-t border-white/10\">\n                      <div className=\"space-y-2\">\n                        <div className=\"text-sm text-white/70\">ProbabilitÃ© d'atteinte des objectifs</div>\n                        <div className=\"flex items-center gap-2\">\n                          <Target className=\"w-4 h-4 text-green-400\" />\n                          <span className=\"text-white font-medium\">\n                            {state.healthAnalysis.predictiveMetrics.goalAchievementProbability}%\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <div className=\"text-sm text-white/70\">Risque de burnout</div>\n                        <div className=\"flex items-center gap-2\">\n                          <Flame className=\"w-4 h-4 text-red-400\" />\n                          <span className=\"text-white font-medium\">\n                            {state.healthAnalysis.predictiveMetrics.burnoutRisk}%\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n\n            {/* Insights et stratÃ©gie personnalisÃ©e */}\n            {state.healthAnalysis && (\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.6 }}\n              >\n                <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                  <CardHeader>\n                    <CardTitle className=\"text-white flex items-center gap-2\">\n                      <Star className=\"w-5 h-5\" />\n                      StratÃ©gie personnalisÃ©e IA\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    \n                    {/* Forces clÃ©s */}\n                    {state.healthAnalysis.aiInsights.keyStrengths.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <h5 className=\"text-green-300 font-medium flex items-center gap-2\">\n                          <Award className=\"w-4 h-4\" />\n                          Vos forces\n                        </h5>\n                        <div className=\"space-y-1\">\n                          {state.healthAnalysis.aiInsights.keyStrengths.map((strength, index) => (\n                            <div key={index} className=\"flex items-center gap-2 text-sm text-white/80\">\n                              <CheckCircle className=\"w-3 h-3 text-green-400\" />\n                              {strength}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* PrioritÃ©s d'amÃ©lioration */}\n                    {state.healthAnalysis.aiInsights.improvementPriorities.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <h5 className=\"text-orange-300 font-medium flex items-center gap-2\">\n                          <TrendingUp className=\"w-4 h-4\" />\n                          PrioritÃ©s d'amÃ©lioration\n                        </h5>\n                        <div className=\"space-y-1\">\n                          {state.healthAnalysis.aiInsights.improvementPriorities.map((priority, index) => (\n                            <div key={index} className=\"flex items-center gap-2 text-sm text-white/80\">\n                              <AlertTriangle className=\"w-3 h-3 text-orange-400\" />\n                              {priority}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* StratÃ©gie personnalisÃ©e */}\n                    {state.healthAnalysis.aiInsights.personalizedStrategy.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <h5 className=\"text-purple-300 font-medium flex items-center gap-2\">\n                          <Users className=\"w-4 h-4\" />\n                          Votre plan d'action\n                        </h5>\n                        <div className=\"space-y-1\">\n                          {state.healthAnalysis.aiInsights.personalizedStrategy.map((strategy, index) => (\n                            <div key={index} className=\"flex items-center gap-2 text-sm text-white/80\">\n                              <Star className=\"w-3 h-3 text-purple-400\" />\n                              {strategy}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n          </div>\n\n          {/* Colonne droite - Actions et statuts */}\n          <div className=\"space-y-6\">\n            \n            {/* Actions rapides */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.5 }}\n            >\n              <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                <CardHeader>\n                  <CardTitle className=\"text-white flex items-center gap-2\">\n                    <Settings className=\"w-5 h-5\" />\n                    Actions rapides\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  \n                  <Button \n                    onClick={() => userId && syncAllPillarsData(userId)}\n                    className=\"w-full bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600 text-white\"\n                    disabled={state.isLoading}\n                  >\n                    <RefreshCw className={`w-4 h-4 mr-2 ${state.isLoading ? 'animate-spin' : ''}`} />\n                    Synchroniser tous les piliers\n                  </Button>\n\n                  <Button \n                    variant=\"outline\" \n                    className=\"w-full border-white/20 text-white hover:bg-white/10\"\n                    onClick={() => dispatch({ type: 'TOGGLE_DETAILED_ANALYSIS' })}\n                  >\n                    <Eye className=\"w-4 h-4 mr-2\" />\n                    {state.showDetailedAnalysis ? 'Masquer' : 'Afficher'} l'analyse dÃ©taillÃ©e\n                  </Button>\n\n                  <Dialog>\n                    <DialogTrigger asChild>\n                      <Button \n                        variant=\"outline\"\n                        className=\"w-full border-white/20 text-white hover:bg-white/10\"\n                      >\n                        <Target className=\"w-4 h-4 mr-2\" />\n                        DÃ©finir objectifs santÃ©\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"bg-slate-900 border-slate-700 text-white max-w-2xl\">\n                      <DialogHeader>\n                        <DialogTitle>Objectifs de santÃ© personnalisÃ©s</DialogTitle>\n                      </DialogHeader>\n                      <HealthGoalsForm />\n                    </DialogContent>\n                  </Dialog>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            {/* Statut des piliers */}\n            {state.pillarStatuses.length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.7 }}\n              >\n                <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                  <CardHeader>\n                    <CardTitle className=\"text-white flex items-center gap-2\">\n                      <BarChart3 className=\"w-5 h-5\" />\n                      Statut des piliers\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3\">\n                    {state.pillarStatuses.map((pillar, index) => {\n                      const statusColors = {\n                        excellent: 'text-green-400 bg-green-500/20',\n                        good: 'text-blue-400 bg-blue-500/20',\n                        fair: 'text-yellow-400 bg-yellow-500/20',\n                        poor: 'text-orange-400 bg-orange-500/20',\n                        critical: 'text-red-400 bg-red-500/20',\n                      };\n                      \n                      const trendIcons = {\n                        improving: TrendingUp,\n                        stable: BarChart3,\n                        declining: TrendingDown,\n                      };\n                      \n                      const TrendIcon = trendIcons[pillar.trend];\n                      \n                      return (\n                        <motion.div\n                          key={pillar.name}\n                          initial={{ opacity: 0, x: 10 }}\n                          animate={{ opacity: 1, x: 0 }}\n                          transition={{ delay: 0.8 + index * 0.1 }}\n                          className=\"flex items-center justify-between p-3 bg-white/5 rounded-lg hover:bg-white/10 transition-colors\"\n                        >\n                          <div className=\"space-y-1\">\n                            <div className=\"text-sm text-white font-medium capitalize\">\n                              {pillar.name}\n                            </div>\n                            <div className=\"text-xs text-white/70\">\n                              Mis Ã  jour: {pillar.lastUpdated.toLocaleTimeString('fr-FR')}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Badge \n                              className={`${statusColors[pillar.status]} border-current`}\n                            >\n                              {pillar.score}/100\n                            </Badge>\n                            <TrendIcon className={`w-4 h-4 ${\n                              pillar.trend === 'improving' ? 'text-green-400' :\n                              pillar.trend === 'stable' ? 'text-blue-400' : 'text-red-400'\n                            }`} />\n                          </div>\n                        </motion.div>\n                      );\n                    })}\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n\n            {/* Alertes santÃ© */}\n            {state.healthAnalysis?.healthRisks?.urgentConcerns && state.healthAnalysis.healthRisks.urgentConcerns.length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.9 }}\n              >\n                <Card className=\"bg-red-500/10 backdrop-blur-sm border-red-500/30\">\n                  <CardHeader>\n                    <CardTitle className=\"text-red-300 flex items-center gap-2\">\n                      <Shield className=\"w-5 h-5\" />\n                      Alertes santÃ©\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-2\">\n                    {state.healthAnalysis?.healthRisks?.urgentConcerns?.map((concern, index) => (\n                      <div key={index} className=\"flex items-center gap-2 text-sm text-red-200\">\n                        <AlertTriangle className=\"w-4 h-4 text-red-400\" />\n                        {concern}\n                      </div>\n                    ))}\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n          </div>\n        </div>\n\n        {/* Ãtat de chargement global */}\n        <AnimatePresence>\n          {state.isLoading && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\"\n            >\n              <div className=\"bg-white/10 backdrop-blur-sm rounded-xl p-8 text-center\">\n                <div className=\"animate-spin w-8 h-8 border-2 border-white/30 border-t-white rounded-full mx-auto mb-4\" />\n                <div className=\"text-white font-medium\">\n                  {state.currentState === 'syncing_pillars' && 'Synchronisation des piliers...'}\n                  {state.currentState === 'analyzing_health' && 'Analyse IA globale...'}\n                  {state.currentState === 'generating_insights' && 'GÃ©nÃ©ration des insights...'}\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Erreurs */}\n        <AnimatePresence>\n          {state.error && (\n            <motion.div\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: 50 }}\n              className=\"fixed bottom-4 right-4 bg-red-500 text-white p-4 rounded-lg shadow-lg max-w-md\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Erreur</span>\n              </div>\n              <div className=\"text-sm mt-1\">{state.error}</div>\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/10 mt-2\"\n                onClick={() => dispatch({ type: 'SET_ERROR', payload: null })}\n              >\n                Fermer\n              </Button>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\n// Composant formulaire d'objectifs\nconst HealthGoalsForm: React.FC = () => {\n  const [formData, setFormData] = useState({\n    targetGlobalScore: 85,\n    pillarPriorities: {\n      fitness: 'high' as const,\n      nutrition: 'high' as const,\n      recovery: 'medium' as const,\n      hydration: 'medium' as const,\n    },\n    timeFrame: 'monthly' as const,\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <label className=\"block text-sm font-medium text-white/80 mb-2\">\n          Score santÃ© cible: {formData.targetGlobalScore}/100\n        </label>\n        <input\n          type=\"range\"\n          min=\"60\"\n          max=\"100\"\n          value={formData.targetGlobalScore}\n          onChange={(e) => setFormData({ ...formData, targetGlobalScore: Number(e.target.value) })}\n          className=\"w-full\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-white/80 mb-3\">PrioritÃ©s par pilier</label>\n        <div className=\"grid grid-cols-2 gap-4\">\n          {Object.entries(formData.pillarPriorities).map(([pillar, priority]) => (\n            <div key={pillar}>\n              <label className=\"block text-xs text-white/70 mb-1 capitalize\">{pillar}</label>\n              <select\n                value={priority}\n                onChange={(e) => setFormData({\n                  ...formData,\n                  pillarPriorities: {\n                    ...formData.pillarPriorities,\n                    [pillar]: e.target.value as any\n                  }\n                })}\n                className=\"w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white text-sm\"\n              >\n                <option value=\"low\">Faible</option>\n                <option value=\"medium\">Moyenne</option>\n                <option value=\"high\">ÃlevÃ©e</option>\n              </select>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <Button className=\"w-full bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600 text-white\">\n        <Target className=\"w-4 h-4 mr-2\" />\n        DÃ©finir les objectifs\n      </Button>\n    </div>\n  );\n};\n\n// Fonctions utilitaires\nasync function fetchWorkoutData(userId: string, date: string) {\n  // Simulation - en rÃ©alitÃ©, on ferait appel aux donnÃ©es workout\n  return {\n    totalWorkouts: 1,\n    totalDuration: 60,\n    avgIntensity: 75,\n    workoutScore: 80,\n    recoveryScore: 75,\n    strengthProgress: 78,\n    cardioProgress: 82,\n  };\n}\n\nasync function fetchNutritionData(userId: string, date: string) {\n  // Simulation - en rÃ©alitÃ©, on ferait appel aux donnÃ©es nutrition\n  return {\n    totalCalories: 2200,\n    proteinGrams: 120,\n    carbsGrams: 250,\n    fatGrams: 80,\n    nutritionScore: 85,\n    hydrationScore: 80,\n    mealQuality: 88,\n  };\n}\n\nasync function fetchSleepData(userId: string, date: string) {\n  // Simulation - en rÃ©alitÃ©, on ferait appel aux donnÃ©es sleep\n  return {\n    sleepDuration: 480,\n    sleepEfficiency: 85,\n    sleepQuality: 82,\n    recoveryScore: 78,\n    circadianAlignment: 80,\n  };\n}\n\nasync function fetchHydrationData(userId: string, date: string) {\n  // Simulation - en rÃ©alitÃ©, on ferait appel aux donnÃ©es hydration\n  return {\n    totalIntake: 2500,\n    dailyGoal: 2500,\n    hydrationScore: 90,\n    efficiencyScore: 85,\n    dehydrationRisk: 'optimal' as const,\n  };\n}\n\nfunction calculatePillarStatuses(healthData: HealthData): PillarStatus[] {\n  return [\n    {\n      name: 'fitness',\n      score: healthData.workoutData?.workoutScore || 0,\n      status: getStatusFromScore(healthData.workoutData?.workoutScore || 0),\n      lastUpdated: new Date(),\n      trend: 'stable',\n      dataPoints: 7,\n    },\n    {\n      name: 'nutrition',\n      score: healthData.nutritionData?.nutritionScore || 0,\n      status: getStatusFromScore(healthData.nutritionData?.nutritionScore || 0),\n      lastUpdated: new Date(),\n      trend: 'improving',\n      dataPoints: 7,\n    },\n    {\n      name: 'recovery',\n      score: healthData.sleepData?.sleepQuality || 0,\n      status: getStatusFromScore(healthData.sleepData?.sleepQuality || 0),\n      lastUpdated: new Date(),\n      trend: 'stable',\n      dataPoints: 7,\n    },\n    {\n      name: 'hydration',\n      score: healthData.hydrationData?.hydrationScore || 0,\n      status: getStatusFromScore(healthData.hydrationData?.hydrationScore || 0),\n      lastUpdated: new Date(),\n      trend: 'improving',\n      dataPoints: 7,\n    },\n  ];\n}\n\nfunction getStatusFromScore(score: number): PillarStatus['status'] {\n  if (score >= 90) return 'excellent';\n  if (score >= 75) return 'good';\n  if (score >= 60) return 'fair';\n  if (score >= 40) return 'poor';\n  return 'critical';\n}\n\nfunction getHealthScoreBadgeColor(score: number): string {\n  if (score >= 90) return 'bg-green-500 text-white';\n  if (score >= 75) return 'bg-blue-500 text-white';\n  if (score >= 60) return 'bg-yellow-500 text-white';\n  if (score >= 40) return 'bg-orange-500 text-white';\n  return 'bg-red-500 text-white';\n}\n\nfunction getHealthScoreLabel(score: number): string {\n  if (score >= 90) return 'Excellent';\n  if (score >= 75) return 'TrÃ¨s bon';\n  if (score >= 60) return 'Bon';\n  if (score >= 40) return 'Moyen';\n  return 'Ã amÃ©liorer';\n}\n\nfunction getPillarStatusText(score: number): string {\n  if (score >= 85) return 'Excellent';\n  if (score >= 70) return 'Bon';\n  if (score >= 55) return 'Moyen';\n  if (score >= 40) return 'Faible';\n  return 'Critique';\n}\n\nfunction calculatePillarBalance(scores: Record<string, number>): number {\n  const values = Object.values(scores);\n  const avg = values.reduce((a, b) => a + b, 0) / values.length;\n  const variance = values.reduce((acc, val) => acc + Math.pow(val - avg, 2), 0) / values.length;\n  const standardDeviation = Math.sqrt(variance);\n  \n  return Math.max(0, Math.round(100 - (standardDeviation * 2)));\n}\n\nfunction calculateSynergyEffect(healthData: HealthData): number {\n  // Calcul de l'effet synergique entre les piliers\n  let synergyScore = 70; // Base\n  \n  const workoutScore = healthData.workoutData?.workoutScore || 0;\n  const nutritionScore = healthData.nutritionData?.nutritionScore || 0;\n  const recoveryScore = healthData.sleepData?.recoveryScore || 0;\n  const hydrationScore = healthData.hydrationData?.hydrationScore || 0;\n\n  // Bonus pour les synergies\n  if (workoutScore >= 80 && nutritionScore >= 80) synergyScore += 10;\n  if (recoveryScore >= 80 && workoutScore >= 70) synergyScore += 8;\n  if (hydrationScore >= 80 && recoveryScore >= 70) synergyScore += 6;\n  if (nutritionScore >= 80 && recoveryScore >= 80) synergyScore += 6;\n  \n  return Math.min(100, synergyScore);\n}\n\nfunction findWeakestPillar(scores: Record<string, number>): 'fitness' | 'nutrition' | 'recovery' | 'hydration' {\n  const entries = Object.entries(scores);\n  const weakest = entries.reduce((min, current) => \n    current[1] < min[1] ? current : min\n  );\n  return weakest[0] as 'fitness' | 'nutrition' | 'recovery' | 'hydration';\n}\n\nfunction findStrongestPillar(scores: Record<string, number>): 'fitness' | 'nutrition' | 'recovery' | 'hydration' {\n  const entries = Object.entries(scores);\n  const strongest = entries.reduce((max, current) => \n    current[1] > max[1] ? current : max\n  );\n  return strongest[0] as 'fitness' | 'nutrition' | 'recovery' | 'hydration';\n}\n\nfunction calculateCrossPillarCorrelations(healthData: HealthData) {\n  // CorrÃ©lations simplifiÃ©es pour dÃ©mo\n  return {\n    workoutNutritionCorr: 75,\n    sleepPerformanceCorr: 80,\n    hydrationRecoveryCorr: 70,\n    nutritionSleepCorr: 65,\n  };\n}\n\nfunction generateOptimizationSuggestions(healthData: HealthData) {\n  return {\n    workoutTiming: ['EntraÃ®nez-vous 2-3h avant le coucher pour optimiser la rÃ©cupÃ©ration'],\n    nutritionTiming: ['Consommez des protÃ©ines dans les 30min post-entraÃ®nement'],\n    sleepOptimization: ['Maintenez une tempÃ©rature de 18-20Â°C dans votre chambre'],\n    hydrationStrategy: ['Buvez 500ml au rÃ©veil, hydratez-vous toutes les 2h'],\n    recoveryProtocol: ['IntÃ©grez 10min de mÃ©ditation avant le coucher'],\n  };\n}\n\nexport default HealthOrchestrator;"],"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","ignoreList":[]}