34b8a9c0e839232c9c3172798a03be23
"use strict";

/* istanbul ignore next */
function cov_2kj0po1gqc() {
  var path = "/workspaces/MyFitHero/src/core/auth/auth.store.ts";
  var hash = "1e0c7a95b53a200a0c49952deb4ebeb4ab2033cb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/core/auth/auth.store.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "4": {
        start: {
          line: 6,
          column: 26
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "5": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 197,
          column: 4
        }
      },
      "7": {
        start: {
          line: 14,
          column: 88
        },
        end: {
          line: 189,
          column: 1
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "10": {
        start: {
          line: 20,
          column: 46
        },
        end: {
          line: 24,
          column: 14
        }
      },
      "11": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "12": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "13": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "14": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 36,
          column: 17
        }
      },
      "15": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "16": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "17": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 24
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 46
        }
      },
      "19": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "20": {
        start: {
          line: 57,
          column: 46
        },
        end: {
          line: 57,
          column: 116
        }
      },
      "21": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 59,
          column: 28
        }
      },
      "22": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 28
        }
      },
      "23": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "24": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 76,
          column: 17
        }
      },
      "25": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 82,
          column: 19
        }
      },
      "26": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 89,
          column: 15
        }
      },
      "27": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 24
        }
      },
      "28": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 33
        }
      },
      "29": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "30": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 59
        }
      },
      "31": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 30
        }
      },
      "32": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 104,
          column: 15
        }
      },
      "33": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 46
        }
      },
      "34": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "35": {
        start: {
          line: 111,
          column: 46
        },
        end: {
          line: 113,
          column: 14
        }
      },
      "36": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 115,
          column: 28
        }
      },
      "37": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 28
        }
      },
      "38": {
        start: {
          line: 116,
          column: 32
        },
        end: {
          line: 116,
          column: 42
        }
      },
      "39": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "40": {
        start: {
          line: 118,
          column: 36
        },
        end: {
          line: 123,
          column: 17
        }
      },
      "41": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 127,
          column: 19
        }
      },
      "42": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 134,
          column: 15
        }
      },
      "43": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 24
        }
      },
      "44": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 33
        }
      },
      "45": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "46": {
        start: {
          line: 142,
          column: 29
        },
        end: {
          line: 142,
          column: 78
        }
      },
      "47": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "48": {
        start: {
          line: 144,
          column: 43
        },
        end: {
          line: 144,
          column: 89
        }
      },
      "49": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 168,
          column: 17
        }
      },
      "50": {
        start: {
          line: 146,
          column: 33
        },
        end: {
          line: 161,
          column: 21
        }
      },
      "51": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 167,
          column: 23
        }
      },
      "52": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 174,
          column: 19
        }
      },
      "53": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 181,
          column: 15
        }
      },
      "54": {
        start: {
          line: 185,
          column: 23
        },
        end: {
          line: 185,
          column: 61
        }
      },
      "55": {
        start: {
          line: 186,
          column: 29
        },
        end: {
          line: 186,
          column: 45
        }
      },
      "56": {
        start: {
          line: 187,
          column: 25
        },
        end: {
          line: 187,
          column: 39
        }
      },
      "57": {
        start: {
          line: 188,
          column: 21
        },
        end: {
          line: 188,
          column: 38
        }
      },
      "58": {
        start: {
          line: 191,
          column: 55
        },
        end: {
          line: 191,
          column: 67
        }
      },
      "59": {
        start: {
          line: 192,
          column: 28
        },
        end: {
          line: 196,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 73
          },
          end: {
            line: 14,
            column: 74
          }
        },
        loc: {
          start: {
            line: 14,
            column: 88
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 12
          },
          end: {
            line: 17,
            column: 13
          }
        },
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        loc: {
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 94,
            column: 13
          },
          end: {
            line: 94,
            column: 14
          }
        },
        loc: {
          start: {
            line: 94,
            column: 25
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 94
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 108,
            column: 20
          }
        },
        loc: {
          start: {
            line: 108,
            column: 35
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 108
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 139,
            column: 15
          },
          end: {
            line: 139,
            column: 16
          }
        },
        loc: {
          start: {
            line: 139,
            column: 27
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 139
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 185,
            column: 13
          },
          end: {
            line: 185,
            column: 14
          }
        },
        loc: {
          start: {
            line: 185,
            column: 23
          },
          end: {
            line: 185,
            column: 61
          }
        },
        line: 185
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 186,
            column: 16
          },
          end: {
            line: 186,
            column: 17
          }
        },
        loc: {
          start: {
            line: 186,
            column: 29
          },
          end: {
            line: 186,
            column: 45
          }
        },
        line: 186
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 187,
            column: 14
          },
          end: {
            line: 187,
            column: 15
          }
        },
        loc: {
          start: {
            line: 187,
            column: 25
          },
          end: {
            line: 187,
            column: 39
          }
        },
        line: 187
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 188,
            column: 15
          },
          end: {
            line: 188,
            column: 16
          }
        },
        loc: {
          start: {
            line: 188,
            column: 21
          },
          end: {
            line: 188,
            column: 38
          }
        },
        line: 188
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 191,
            column: 49
          },
          end: {
            line: 191,
            column: 50
          }
        },
        loc: {
          start: {
            line: 191,
            column: 55
          },
          end: {
            line: 191,
            column: 67
          }
        },
        line: 191
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 192,
            column: 17
          }
        },
        loc: {
          start: {
            line: 192,
            column: 28
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 192
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 26,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 26,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 29
          }
        }, {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 27,
            column: 49
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 55
          }
        }, {
          start: {
            line: 35,
            column: 59
          },
          end: {
            line: 35,
            column: 83
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 36
          }
        }, {
          start: {
            line: 47,
            column: 40
          },
          end: {
            line: 47,
            column: 70
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 59,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 59,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 29
          }
        }, {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 49
          }
        }],
        line: 60
      },
      "8": {
        loc: {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 55
          }
        }, {
          start: {
            line: 75,
            column: 59
          },
          end: {
            line: 75,
            column: 83
          }
        }],
        line: 75
      },
      "9": {
        loc: {
          start: {
            line: 87,
            column: 23
          },
          end: {
            line: 87,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 23
          },
          end: {
            line: 87,
            column: 36
          }
        }, {
          start: {
            line: 87,
            column: 40
          },
          end: {
            line: 87,
            column: 69
          }
        }],
        line: 87
      },
      "10": {
        loc: {
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 36
          }
        }, {
          start: {
            line: 102,
            column: 40
          },
          end: {
            line: 102,
            column: 71
          }
        }],
        line: 102
      },
      "11": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 115,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 115,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "12": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "13": {
        loc: {
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 117,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 117,
            column: 27
          }
        }, {
          start: {
            line: 117,
            column: 31
          },
          end: {
            line: 117,
            column: 44
          }
        }],
        line: 117
      },
      "14": {
        loc: {
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 132,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 132,
            column: 36
          }
        }, {
          start: {
            line: 132,
            column: 40
          },
          end: {
            line: 132,
            column: 81
          }
        }],
        line: 132
      },
      "15": {
        loc: {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: 170,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }],
        line: 143
      },
      "16": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 168,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 168,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "17": {
        loc: {
          start: {
            line: 160,
            column: 35
          },
          end: {
            line: 160,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 35
          },
          end: {
            line: 160,
            column: 59
          }
        }, {
          start: {
            line: 160,
            column: 63
          },
          end: {
            line: 160,
            column: 87
          }
        }],
        line: 160
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/core/auth/auth.store.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/core/auth/auth.store.ts"],
      sourcesContent: ["import { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\nimport { AuthState, User, SignUpData, SignInData, UpdateProfileData } from './auth.types';\nimport { supabaseAuth } from '@/core/api/supabase.client';\n\ninterface AuthStore extends AuthState {\n  // Actions\n  signUp: (data: SignUpData) => Promise<void>;\n  signIn: (data: SignInData) => Promise<void>;\n  signOut: () => Promise<void>;\n  updateProfile: (data: UpdateProfileData) => Promise<void>;\n  checkAuth: () => Promise<void>;\n  setUser: (user: User | null) => void;\n  setSession: (session: any) => void;\n  setError: (error: string | null) => void;\n  resetAuth: () => void;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  session: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\nexport const useAuthStore = create<AuthStore>()(\n  persist(\n    (set, get) => ({\n      ...initialState,\n\n      // Sign up\n      signUp: async (data: SignUpData) => {\n        set({ isLoading: true, error: null });\n        try {\n          const { data: authData, error } = await supabaseAuth.signUp(\n            data.email,\n            data.password,\n            {\n              username: data.username,\n              firstName: data.firstName,\n              lastName: data.lastName,\n            }\n          );\n\n          if (error) throw error;\n\n          if (authData.user && authData.session) {\n            const user: User = {\n              id: authData.user.id,\n              email: authData.user.email!,\n              username: authData.user.user_metadata?.username,\n              firstName: authData.user.user_metadata?.firstName,\n              lastName: authData.user.user_metadata?.lastName,\n              createdAt: authData.user.created_at,\n              updatedAt: authData.user.updated_at || authData.user.created_at,\n            };\n\n            set({\n              user,\n              session: authData.session,\n              isAuthenticated: true,\n              isLoading: false,\n            });\n          }\n        } catch (error: any) {\n          set({\n            error: error.message || \"Erreur lors de l'inscription\",\n            isLoading: false,\n          });\n          throw error;\n        }\n      },\n\n      // Sign in\n      signIn: async (data: SignInData) => {\n        set({ isLoading: true, error: null });\n        try {\n          const { data: authData, error } = await supabaseAuth.signIn(\n            data.email,\n            data.password\n          );\n\n          if (error) throw error;\n\n          if (authData.user && authData.session) {\n            const user: User = {\n              id: authData.user.id,\n              email: authData.user.email!,\n              username: authData.user.user_metadata?.username,\n              firstName: authData.user.user_metadata?.firstName,\n              lastName: authData.user.user_metadata?.lastName,\n              sport: authData.user.user_metadata?.sport,\n              weight: authData.user.user_metadata?.weight,\n              height: authData.user.user_metadata?.height,\n              age: authData.user.user_metadata?.age,\n              gender: authData.user.user_metadata?.gender,\n              lifestyle: authData.user.user_metadata?.lifestyle,\n              primaryGoals: authData.user.user_metadata?.primaryGoals,\n              createdAt: authData.user.created_at,\n              updatedAt: authData.user.updated_at || authData.user.created_at,\n            };\n\n            set({\n              user,\n              session: authData.session,\n              isAuthenticated: true,\n              isLoading: false,\n            });\n          }\n        } catch (error: any) {\n          set({\n            error: error.message || 'Erreur lors de la connexion',\n            isLoading: false,\n          });\n          throw error;\n        }\n      },\n\n      // Sign out\n      signOut: async () => {\n        set({ isLoading: true });\n        try {\n          await supabaseAuth.signOut();\n          set(initialState);\n        } catch (error: any) {\n          set({\n            error: error.message || 'Erreur lors de la d\xE9connexion',\n            isLoading: false,\n          });\n        }\n      },\n\n      // Update profile\n      updateProfile: async (data: UpdateProfileData) => {\n        set({ isLoading: true, error: null });\n        try {\n          const { data: authData, error } = await supabaseAuth.updateUser({\n            data,\n          });\n\n          if (error) throw error;\n\n          const currentUser = get().user;\n          if (currentUser && authData.user) {\n            const updatedUser: User = {\n              ...currentUser,\n              ...data,\n              lifestyle: data.lifestyle as User['lifestyle'],\n              updatedAt: new Date().toISOString(),\n            };\n\n            set({\n              user: updatedUser,\n              isLoading: false,\n            });\n          }\n        } catch (error: any) {\n          set({\n            error: error.message || 'Erreur lors de la mise \xE0 jour du profil',\n            isLoading: false,\n          });\n          throw error;\n        }\n      },\n\n      // Check auth\n      checkAuth: async () => {\n        set({ isLoading: true });\n        try {\n          const { data } = await supabaseAuth.getSession();\n          \n          if (data.session) {\n            const { data: userData } = await supabaseAuth.getUser();\n            \n            if (userData.user) {\n              const user: User = {\n                id: userData.user.id,\n                email: userData.user.email!,\n                username: userData.user.user_metadata?.username,\n                firstName: userData.user.user_metadata?.firstName,\n                lastName: userData.user.user_metadata?.lastName,\n                sport: userData.user.user_metadata?.sport,\n                weight: userData.user.user_metadata?.weight,\n                height: userData.user.user_metadata?.height,\n                age: userData.user.user_metadata?.age,\n                gender: userData.user.user_metadata?.gender,\n                lifestyle: userData.user.user_metadata?.lifestyle,\n                primaryGoals: userData.user.user_metadata?.primaryGoals,\n                createdAt: userData.user.created_at,\n                updatedAt: userData.user.updated_at || userData.user.created_at,\n              };\n\n              set({\n                user,\n                session: data.session,\n                isAuthenticated: true,\n                isLoading: false,\n              });\n            }\n          } else {\n            set({\n              ...initialState,\n              isLoading: false,\n            });\n          }\n        } catch (error: any) {\n          set({\n            ...initialState,\n            isLoading: false,\n          });\n        }\n      },\n\n      // Setters\n      setUser: (user) => set({ user, isAuthenticated: !!user }),\n      setSession: (session) => set({ session }),\n      setError: (error) => set({ error }),\n      resetAuth: () => set(initialState),\n    }),\n    {\n      name: 'auth-storage',\n      storage: createJSONStorage(() => localStorage),\n      partialize: (state) => ({\n        user: state.user,\n        session: state.session,\n        isAuthenticated: state.isAuthenticated,\n      }),\n    }\n  )\n);\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1e0c7a95b53a200a0c49952deb4ebeb4ab2033cb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2kj0po1gqc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2kj0po1gqc();
cov_2kj0po1gqc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2kj0po1gqc().s[1]++;
exports.useAuthStore = void 0;
const zustand_1 =
/* istanbul ignore next */
(cov_2kj0po1gqc().s[2]++, require("zustand"));
const middleware_1 =
/* istanbul ignore next */
(cov_2kj0po1gqc().s[3]++, require("zustand/middleware"));
const supabase_client_1 =
/* istanbul ignore next */
(cov_2kj0po1gqc().s[4]++, require("@/core/api/supabase.client"));
const initialState =
/* istanbul ignore next */
(cov_2kj0po1gqc().s[5]++, {
  user: null,
  session: null,
  isAuthenticated: false,
  isLoading: false,
  error: null
});
/* istanbul ignore next */
cov_2kj0po1gqc().s[6]++;
exports.useAuthStore = (0, zustand_1.create)()((0, middleware_1.persist)((set, get) => {
  /* istanbul ignore next */
  cov_2kj0po1gqc().f[0]++;
  cov_2kj0po1gqc().s[7]++;
  return {
    ...initialState,
    // Sign up
    signUp: async data => {
      /* istanbul ignore next */
      cov_2kj0po1gqc().f[1]++;
      cov_2kj0po1gqc().s[8]++;
      set({
        isLoading: true,
        error: null
      });
      /* istanbul ignore next */
      cov_2kj0po1gqc().s[9]++;
      try {
        const {
          data: authData,
          error
        } =
        /* istanbul ignore next */
        (cov_2kj0po1gqc().s[10]++, await supabase_client_1.supabaseAuth.signUp(data.email, data.password, {
          username: data.username,
          firstName: data.firstName,
          lastName: data.lastName
        }));
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[11]++;
        if (error) {
          /* istanbul ignore next */
          cov_2kj0po1gqc().b[0][0]++;
          cov_2kj0po1gqc().s[12]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2kj0po1gqc().b[0][1]++;
        }
        cov_2kj0po1gqc().s[13]++;
        if (
        /* istanbul ignore next */
        (cov_2kj0po1gqc().b[2][0]++, authData.user) &&
        /* istanbul ignore next */
        (cov_2kj0po1gqc().b[2][1]++, authData.session)) {
          /* istanbul ignore next */
          cov_2kj0po1gqc().b[1][0]++;
          const user =
          /* istanbul ignore next */
          (cov_2kj0po1gqc().s[14]++, {
            id: authData.user.id,
            email: authData.user.email,
            username: authData.user.user_metadata?.username,
            firstName: authData.user.user_metadata?.firstName,
            lastName: authData.user.user_metadata?.lastName,
            createdAt: authData.user.created_at,
            updatedAt:
            /* istanbul ignore next */
            (cov_2kj0po1gqc().b[3][0]++, authData.user.updated_at) ||
            /* istanbul ignore next */
            (cov_2kj0po1gqc().b[3][1]++, authData.user.created_at)
          });
          /* istanbul ignore next */
          cov_2kj0po1gqc().s[15]++;
          set({
            user,
            session: authData.session,
            isAuthenticated: true,
            isLoading: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_2kj0po1gqc().b[1][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[16]++;
        set({
          error:
          /* istanbul ignore next */
          (cov_2kj0po1gqc().b[4][0]++, error.message) ||
          /* istanbul ignore next */
          (cov_2kj0po1gqc().b[4][1]++, "Erreur lors de l'inscription"),
          isLoading: false
        });
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[17]++;
        throw error;
      }
    },
    // Sign in
    signIn: async data => {
      /* istanbul ignore next */
      cov_2kj0po1gqc().f[2]++;
      cov_2kj0po1gqc().s[18]++;
      set({
        isLoading: true,
        error: null
      });
      /* istanbul ignore next */
      cov_2kj0po1gqc().s[19]++;
      try {
        const {
          data: authData,
          error
        } =
        /* istanbul ignore next */
        (cov_2kj0po1gqc().s[20]++, await supabase_client_1.supabaseAuth.signIn(data.email, data.password));
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[21]++;
        if (error) {
          /* istanbul ignore next */
          cov_2kj0po1gqc().b[5][0]++;
          cov_2kj0po1gqc().s[22]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2kj0po1gqc().b[5][1]++;
        }
        cov_2kj0po1gqc().s[23]++;
        if (
        /* istanbul ignore next */
        (cov_2kj0po1gqc().b[7][0]++, authData.user) &&
        /* istanbul ignore next */
        (cov_2kj0po1gqc().b[7][1]++, authData.session)) {
          /* istanbul ignore next */
          cov_2kj0po1gqc().b[6][0]++;
          const user =
          /* istanbul ignore next */
          (cov_2kj0po1gqc().s[24]++, {
            id: authData.user.id,
            email: authData.user.email,
            username: authData.user.user_metadata?.username,
            firstName: authData.user.user_metadata?.firstName,
            lastName: authData.user.user_metadata?.lastName,
            sport: authData.user.user_metadata?.sport,
            weight: authData.user.user_metadata?.weight,
            height: authData.user.user_metadata?.height,
            age: authData.user.user_metadata?.age,
            gender: authData.user.user_metadata?.gender,
            lifestyle: authData.user.user_metadata?.lifestyle,
            primaryGoals: authData.user.user_metadata?.primaryGoals,
            createdAt: authData.user.created_at,
            updatedAt:
            /* istanbul ignore next */
            (cov_2kj0po1gqc().b[8][0]++, authData.user.updated_at) ||
            /* istanbul ignore next */
            (cov_2kj0po1gqc().b[8][1]++, authData.user.created_at)
          });
          /* istanbul ignore next */
          cov_2kj0po1gqc().s[25]++;
          set({
            user,
            session: authData.session,
            isAuthenticated: true,
            isLoading: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_2kj0po1gqc().b[6][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[26]++;
        set({
          error:
          /* istanbul ignore next */
          (cov_2kj0po1gqc().b[9][0]++, error.message) ||
          /* istanbul ignore next */
          (cov_2kj0po1gqc().b[9][1]++, 'Erreur lors de la connexion'),
          isLoading: false
        });
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[27]++;
        throw error;
      }
    },
    // Sign out
    signOut: async () => {
      /* istanbul ignore next */
      cov_2kj0po1gqc().f[3]++;
      cov_2kj0po1gqc().s[28]++;
      set({
        isLoading: true
      });
      /* istanbul ignore next */
      cov_2kj0po1gqc().s[29]++;
      try {
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[30]++;
        await supabase_client_1.supabaseAuth.signOut();
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[31]++;
        set(initialState);
      } catch (error) {
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[32]++;
        set({
          error:
          /* istanbul ignore next */
          (cov_2kj0po1gqc().b[10][0]++, error.message) ||
          /* istanbul ignore next */
          (cov_2kj0po1gqc().b[10][1]++, 'Erreur lors de la déconnexion'),
          isLoading: false
        });
      }
    },
    // Update profile
    updateProfile: async data => {
      /* istanbul ignore next */
      cov_2kj0po1gqc().f[4]++;
      cov_2kj0po1gqc().s[33]++;
      set({
        isLoading: true,
        error: null
      });
      /* istanbul ignore next */
      cov_2kj0po1gqc().s[34]++;
      try {
        const {
          data: authData,
          error
        } =
        /* istanbul ignore next */
        (cov_2kj0po1gqc().s[35]++, await supabase_client_1.supabaseAuth.updateUser({
          data
        }));
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[36]++;
        if (error) {
          /* istanbul ignore next */
          cov_2kj0po1gqc().b[11][0]++;
          cov_2kj0po1gqc().s[37]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2kj0po1gqc().b[11][1]++;
        }
        const currentUser =
        /* istanbul ignore next */
        (cov_2kj0po1gqc().s[38]++, get().user);
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[39]++;
        if (
        /* istanbul ignore next */
        (cov_2kj0po1gqc().b[13][0]++, currentUser) &&
        /* istanbul ignore next */
        (cov_2kj0po1gqc().b[13][1]++, authData.user)) {
          /* istanbul ignore next */
          cov_2kj0po1gqc().b[12][0]++;
          const updatedUser =
          /* istanbul ignore next */
          (cov_2kj0po1gqc().s[40]++, {
            ...currentUser,
            ...data,
            lifestyle: data.lifestyle,
            updatedAt: new Date().toISOString()
          });
          /* istanbul ignore next */
          cov_2kj0po1gqc().s[41]++;
          set({
            user: updatedUser,
            isLoading: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_2kj0po1gqc().b[12][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[42]++;
        set({
          error:
          /* istanbul ignore next */
          (cov_2kj0po1gqc().b[14][0]++, error.message) ||
          /* istanbul ignore next */
          (cov_2kj0po1gqc().b[14][1]++, 'Erreur lors de la mise à jour du profil'),
          isLoading: false
        });
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[43]++;
        throw error;
      }
    },
    // Check auth
    checkAuth: async () => {
      /* istanbul ignore next */
      cov_2kj0po1gqc().f[5]++;
      cov_2kj0po1gqc().s[44]++;
      set({
        isLoading: true
      });
      /* istanbul ignore next */
      cov_2kj0po1gqc().s[45]++;
      try {
        const {
          data
        } =
        /* istanbul ignore next */
        (cov_2kj0po1gqc().s[46]++, await supabase_client_1.supabaseAuth.getSession());
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[47]++;
        if (data.session) {
          /* istanbul ignore next */
          cov_2kj0po1gqc().b[15][0]++;
          const {
            data: userData
          } =
          /* istanbul ignore next */
          (cov_2kj0po1gqc().s[48]++, await supabase_client_1.supabaseAuth.getUser());
          /* istanbul ignore next */
          cov_2kj0po1gqc().s[49]++;
          if (userData.user) {
            /* istanbul ignore next */
            cov_2kj0po1gqc().b[16][0]++;
            const user =
            /* istanbul ignore next */
            (cov_2kj0po1gqc().s[50]++, {
              id: userData.user.id,
              email: userData.user.email,
              username: userData.user.user_metadata?.username,
              firstName: userData.user.user_metadata?.firstName,
              lastName: userData.user.user_metadata?.lastName,
              sport: userData.user.user_metadata?.sport,
              weight: userData.user.user_metadata?.weight,
              height: userData.user.user_metadata?.height,
              age: userData.user.user_metadata?.age,
              gender: userData.user.user_metadata?.gender,
              lifestyle: userData.user.user_metadata?.lifestyle,
              primaryGoals: userData.user.user_metadata?.primaryGoals,
              createdAt: userData.user.created_at,
              updatedAt:
              /* istanbul ignore next */
              (cov_2kj0po1gqc().b[17][0]++, userData.user.updated_at) ||
              /* istanbul ignore next */
              (cov_2kj0po1gqc().b[17][1]++, userData.user.created_at)
            });
            /* istanbul ignore next */
            cov_2kj0po1gqc().s[51]++;
            set({
              user,
              session: data.session,
              isAuthenticated: true,
              isLoading: false
            });
          } else
          /* istanbul ignore next */
          {
            cov_2kj0po1gqc().b[16][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_2kj0po1gqc().b[15][1]++;
          cov_2kj0po1gqc().s[52]++;
          set({
            ...initialState,
            isLoading: false
          });
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2kj0po1gqc().s[53]++;
        set({
          ...initialState,
          isLoading: false
        });
      }
    },
    // Setters
    setUser: user => {
      /* istanbul ignore next */
      cov_2kj0po1gqc().f[6]++;
      cov_2kj0po1gqc().s[54]++;
      return set({
        user,
        isAuthenticated: !!user
      });
    },
    setSession: session => {
      /* istanbul ignore next */
      cov_2kj0po1gqc().f[7]++;
      cov_2kj0po1gqc().s[55]++;
      return set({
        session
      });
    },
    setError: error => {
      /* istanbul ignore next */
      cov_2kj0po1gqc().f[8]++;
      cov_2kj0po1gqc().s[56]++;
      return set({
        error
      });
    },
    resetAuth: () => {
      /* istanbul ignore next */
      cov_2kj0po1gqc().f[9]++;
      cov_2kj0po1gqc().s[57]++;
      return set(initialState);
    }
  };
}, {
  name: 'auth-storage',
  storage: (0, middleware_1.createJSONStorage)(() => {
    /* istanbul ignore next */
    cov_2kj0po1gqc().f[10]++;
    cov_2kj0po1gqc().s[58]++;
    return localStorage;
  }),
  partialize: state => {
    /* istanbul ignore next */
    cov_2kj0po1gqc().f[11]++;
    cov_2kj0po1gqc().s[59]++;
    return {
      user: state.user,
      session: state.session,
      isAuthenticated: state.isAuthenticated
    };
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmtqMHBvMWdxYyIsImFjdHVhbENvdmVyYWdlIiwicyIsInp1c3RhbmRfMSIsInJlcXVpcmUiLCJtaWRkbGV3YXJlXzEiLCJzdXBhYmFzZV9jbGllbnRfMSIsImluaXRpYWxTdGF0ZSIsInVzZXIiLCJzZXNzaW9uIiwiaXNBdXRoZW50aWNhdGVkIiwiaXNMb2FkaW5nIiwiZXJyb3IiLCJleHBvcnRzIiwidXNlQXV0aFN0b3JlIiwiY3JlYXRlIiwicGVyc2lzdCIsInNldCIsImdldCIsImYiLCJzaWduVXAiLCJkYXRhIiwiYXV0aERhdGEiLCJzdXBhYmFzZUF1dGgiLCJlbWFpbCIsInBhc3N3b3JkIiwidXNlcm5hbWUiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsImIiLCJpZCIsInVzZXJfbWV0YWRhdGEiLCJjcmVhdGVkQXQiLCJjcmVhdGVkX2F0IiwidXBkYXRlZEF0IiwidXBkYXRlZF9hdCIsIm1lc3NhZ2UiLCJzaWduSW4iLCJzcG9ydCIsIndlaWdodCIsImhlaWdodCIsImFnZSIsImdlbmRlciIsImxpZmVzdHlsZSIsInByaW1hcnlHb2FscyIsInNpZ25PdXQiLCJ1cGRhdGVQcm9maWxlIiwidXBkYXRlVXNlciIsImN1cnJlbnRVc2VyIiwidXBkYXRlZFVzZXIiLCJEYXRlIiwidG9JU09TdHJpbmciLCJjaGVja0F1dGgiLCJnZXRTZXNzaW9uIiwidXNlckRhdGEiLCJnZXRVc2VyIiwic2V0VXNlciIsInNldFNlc3Npb24iLCJzZXRFcnJvciIsInJlc2V0QXV0aCIsIm5hbWUiLCJzdG9yYWdlIiwiY3JlYXRlSlNPTlN0b3JhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJwYXJ0aWFsaXplIiwic3RhdGUiXSwic291cmNlcyI6WyIvd29ya3NwYWNlcy9NeUZpdEhlcm8vc3JjL2NvcmUvYXV0aC9hdXRoLnN0b3JlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ3p1c3RhbmQnO1xuaW1wb3J0IHsgcGVyc2lzdCwgY3JlYXRlSlNPTlN0b3JhZ2UgfSBmcm9tICd6dXN0YW5kL21pZGRsZXdhcmUnO1xuaW1wb3J0IHsgQXV0aFN0YXRlLCBVc2VyLCBTaWduVXBEYXRhLCBTaWduSW5EYXRhLCBVcGRhdGVQcm9maWxlRGF0YSB9IGZyb20gJy4vYXV0aC50eXBlcyc7XG5pbXBvcnQgeyBzdXBhYmFzZUF1dGggfSBmcm9tICdAL2NvcmUvYXBpL3N1cGFiYXNlLmNsaWVudCc7XG5cbmludGVyZmFjZSBBdXRoU3RvcmUgZXh0ZW5kcyBBdXRoU3RhdGUge1xuICAvLyBBY3Rpb25zXG4gIHNpZ25VcDogKGRhdGE6IFNpZ25VcERhdGEpID0+IFByb21pc2U8dm9pZD47XG4gIHNpZ25JbjogKGRhdGE6IFNpZ25JbkRhdGEpID0+IFByb21pc2U8dm9pZD47XG4gIHNpZ25PdXQ6ICgpID0+IFByb21pc2U8dm9pZD47XG4gIHVwZGF0ZVByb2ZpbGU6IChkYXRhOiBVcGRhdGVQcm9maWxlRGF0YSkgPT4gUHJvbWlzZTx2b2lkPjtcbiAgY2hlY2tBdXRoOiAoKSA9PiBQcm9taXNlPHZvaWQ+O1xuICBzZXRVc2VyOiAodXNlcjogVXNlciB8IG51bGwpID0+IHZvaWQ7XG4gIHNldFNlc3Npb246IChzZXNzaW9uOiBhbnkpID0+IHZvaWQ7XG4gIHNldEVycm9yOiAoZXJyb3I6IHN0cmluZyB8IG51bGwpID0+IHZvaWQ7XG4gIHJlc2V0QXV0aDogKCkgPT4gdm9pZDtcbn1cblxuY29uc3QgaW5pdGlhbFN0YXRlOiBBdXRoU3RhdGUgPSB7XG4gIHVzZXI6IG51bGwsXG4gIHNlc3Npb246IG51bGwsXG4gIGlzQXV0aGVudGljYXRlZDogZmFsc2UsXG4gIGlzTG9hZGluZzogZmFsc2UsXG4gIGVycm9yOiBudWxsLFxufTtcblxuZXhwb3J0IGNvbnN0IHVzZUF1dGhTdG9yZSA9IGNyZWF0ZTxBdXRoU3RvcmU+KCkoXG4gIHBlcnNpc3QoXG4gICAgKHNldCwgZ2V0KSA9PiAoe1xuICAgICAgLi4uaW5pdGlhbFN0YXRlLFxuXG4gICAgICAvLyBTaWduIHVwXG4gICAgICBzaWduVXA6IGFzeW5jIChkYXRhOiBTaWduVXBEYXRhKSA9PiB7XG4gICAgICAgIHNldCh7IGlzTG9hZGluZzogdHJ1ZSwgZXJyb3I6IG51bGwgfSk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgeyBkYXRhOiBhdXRoRGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQXV0aC5zaWduVXAoXG4gICAgICAgICAgICBkYXRhLmVtYWlsLFxuICAgICAgICAgICAgZGF0YS5wYXNzd29yZCxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgdXNlcm5hbWU6IGRhdGEudXNlcm5hbWUsXG4gICAgICAgICAgICAgIGZpcnN0TmFtZTogZGF0YS5maXJzdE5hbWUsXG4gICAgICAgICAgICAgIGxhc3ROYW1lOiBkYXRhLmxhc3ROYW1lLFxuICAgICAgICAgICAgfVxuICAgICAgICAgICk7XG5cbiAgICAgICAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xuXG4gICAgICAgICAgaWYgKGF1dGhEYXRhLnVzZXIgJiYgYXV0aERhdGEuc2Vzc2lvbikge1xuICAgICAgICAgICAgY29uc3QgdXNlcjogVXNlciA9IHtcbiAgICAgICAgICAgICAgaWQ6IGF1dGhEYXRhLnVzZXIuaWQsXG4gICAgICAgICAgICAgIGVtYWlsOiBhdXRoRGF0YS51c2VyLmVtYWlsISxcbiAgICAgICAgICAgICAgdXNlcm5hbWU6IGF1dGhEYXRhLnVzZXIudXNlcl9tZXRhZGF0YT8udXNlcm5hbWUsXG4gICAgICAgICAgICAgIGZpcnN0TmFtZTogYXV0aERhdGEudXNlci51c2VyX21ldGFkYXRhPy5maXJzdE5hbWUsXG4gICAgICAgICAgICAgIGxhc3ROYW1lOiBhdXRoRGF0YS51c2VyLnVzZXJfbWV0YWRhdGE/Lmxhc3ROYW1lLFxuICAgICAgICAgICAgICBjcmVhdGVkQXQ6IGF1dGhEYXRhLnVzZXIuY3JlYXRlZF9hdCxcbiAgICAgICAgICAgICAgdXBkYXRlZEF0OiBhdXRoRGF0YS51c2VyLnVwZGF0ZWRfYXQgfHwgYXV0aERhdGEudXNlci5jcmVhdGVkX2F0LFxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgc2V0KHtcbiAgICAgICAgICAgICAgdXNlcixcbiAgICAgICAgICAgICAgc2Vzc2lvbjogYXV0aERhdGEuc2Vzc2lvbixcbiAgICAgICAgICAgICAgaXNBdXRoZW50aWNhdGVkOiB0cnVlLFxuICAgICAgICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAgICAgc2V0KHtcbiAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlIHx8IFwiRXJyZXVyIGxvcnMgZGUgbCdpbnNjcmlwdGlvblwiLFxuICAgICAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgfSxcblxuICAgICAgLy8gU2lnbiBpblxuICAgICAgc2lnbkluOiBhc3luYyAoZGF0YTogU2lnbkluRGF0YSkgPT4ge1xuICAgICAgICBzZXQoeyBpc0xvYWRpbmc6IHRydWUsIGVycm9yOiBudWxsIH0pO1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHsgZGF0YTogYXV0aERhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUF1dGguc2lnbkluKFxuICAgICAgICAgICAgZGF0YS5lbWFpbCxcbiAgICAgICAgICAgIGRhdGEucGFzc3dvcmRcbiAgICAgICAgICApO1xuXG4gICAgICAgICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcblxuICAgICAgICAgIGlmIChhdXRoRGF0YS51c2VyICYmIGF1dGhEYXRhLnNlc3Npb24pIHtcbiAgICAgICAgICAgIGNvbnN0IHVzZXI6IFVzZXIgPSB7XG4gICAgICAgICAgICAgIGlkOiBhdXRoRGF0YS51c2VyLmlkLFxuICAgICAgICAgICAgICBlbWFpbDogYXV0aERhdGEudXNlci5lbWFpbCEsXG4gICAgICAgICAgICAgIHVzZXJuYW1lOiBhdXRoRGF0YS51c2VyLnVzZXJfbWV0YWRhdGE/LnVzZXJuYW1lLFxuICAgICAgICAgICAgICBmaXJzdE5hbWU6IGF1dGhEYXRhLnVzZXIudXNlcl9tZXRhZGF0YT8uZmlyc3ROYW1lLFxuICAgICAgICAgICAgICBsYXN0TmFtZTogYXV0aERhdGEudXNlci51c2VyX21ldGFkYXRhPy5sYXN0TmFtZSxcbiAgICAgICAgICAgICAgc3BvcnQ6IGF1dGhEYXRhLnVzZXIudXNlcl9tZXRhZGF0YT8uc3BvcnQsXG4gICAgICAgICAgICAgIHdlaWdodDogYXV0aERhdGEudXNlci51c2VyX21ldGFkYXRhPy53ZWlnaHQsXG4gICAgICAgICAgICAgIGhlaWdodDogYXV0aERhdGEudXNlci51c2VyX21ldGFkYXRhPy5oZWlnaHQsXG4gICAgICAgICAgICAgIGFnZTogYXV0aERhdGEudXNlci51c2VyX21ldGFkYXRhPy5hZ2UsXG4gICAgICAgICAgICAgIGdlbmRlcjogYXV0aERhdGEudXNlci51c2VyX21ldGFkYXRhPy5nZW5kZXIsXG4gICAgICAgICAgICAgIGxpZmVzdHlsZTogYXV0aERhdGEudXNlci51c2VyX21ldGFkYXRhPy5saWZlc3R5bGUsXG4gICAgICAgICAgICAgIHByaW1hcnlHb2FsczogYXV0aERhdGEudXNlci51c2VyX21ldGFkYXRhPy5wcmltYXJ5R29hbHMsXG4gICAgICAgICAgICAgIGNyZWF0ZWRBdDogYXV0aERhdGEudXNlci5jcmVhdGVkX2F0LFxuICAgICAgICAgICAgICB1cGRhdGVkQXQ6IGF1dGhEYXRhLnVzZXIudXBkYXRlZF9hdCB8fCBhdXRoRGF0YS51c2VyLmNyZWF0ZWRfYXQsXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBzZXQoe1xuICAgICAgICAgICAgICB1c2VyLFxuICAgICAgICAgICAgICBzZXNzaW9uOiBhdXRoRGF0YS5zZXNzaW9uLFxuICAgICAgICAgICAgICBpc0F1dGhlbnRpY2F0ZWQ6IHRydWUsXG4gICAgICAgICAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgICAgICBzZXQoe1xuICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfHwgJ0VycmV1ciBsb3JzIGRlIGxhIGNvbm5leGlvbicsXG4gICAgICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgICB9LFxuXG4gICAgICAvLyBTaWduIG91dFxuICAgICAgc2lnbk91dDogYXN5bmMgKCkgPT4ge1xuICAgICAgICBzZXQoeyBpc0xvYWRpbmc6IHRydWUgfSk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgYXdhaXQgc3VwYWJhc2VBdXRoLnNpZ25PdXQoKTtcbiAgICAgICAgICBzZXQoaW5pdGlhbFN0YXRlKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgICAgIHNldCh7XG4gICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSB8fCAnRXJyZXVyIGxvcnMgZGUgbGEgZMOpY29ubmV4aW9uJyxcbiAgICAgICAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG5cbiAgICAgIC8vIFVwZGF0ZSBwcm9maWxlXG4gICAgICB1cGRhdGVQcm9maWxlOiBhc3luYyAoZGF0YTogVXBkYXRlUHJvZmlsZURhdGEpID0+IHtcbiAgICAgICAgc2V0KHsgaXNMb2FkaW5nOiB0cnVlLCBlcnJvcjogbnVsbCB9KTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCB7IGRhdGE6IGF1dGhEYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VBdXRoLnVwZGF0ZVVzZXIoe1xuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XG5cbiAgICAgICAgICBjb25zdCBjdXJyZW50VXNlciA9IGdldCgpLnVzZXI7XG4gICAgICAgICAgaWYgKGN1cnJlbnRVc2VyICYmIGF1dGhEYXRhLnVzZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZWRVc2VyOiBVc2VyID0ge1xuICAgICAgICAgICAgICAuLi5jdXJyZW50VXNlcixcbiAgICAgICAgICAgICAgLi4uZGF0YSxcbiAgICAgICAgICAgICAgbGlmZXN0eWxlOiBkYXRhLmxpZmVzdHlsZSBhcyBVc2VyWydsaWZlc3R5bGUnXSxcbiAgICAgICAgICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBzZXQoe1xuICAgICAgICAgICAgICB1c2VyOiB1cGRhdGVkVXNlcixcbiAgICAgICAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgICAgIHNldCh7XG4gICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSB8fCAnRXJyZXVyIGxvcnMgZGUgbGEgbWlzZSDDoCBqb3VyIGR1IHByb2ZpbCcsXG4gICAgICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgICB9LFxuXG4gICAgICAvLyBDaGVjayBhdXRoXG4gICAgICBjaGVja0F1dGg6IGFzeW5jICgpID0+IHtcbiAgICAgICAgc2V0KHsgaXNMb2FkaW5nOiB0cnVlIH0pO1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgc3VwYWJhc2VBdXRoLmdldFNlc3Npb24oKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoZGF0YS5zZXNzaW9uKSB7XG4gICAgICAgICAgICBjb25zdCB7IGRhdGE6IHVzZXJEYXRhIH0gPSBhd2FpdCBzdXBhYmFzZUF1dGguZ2V0VXNlcigpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAodXNlckRhdGEudXNlcikge1xuICAgICAgICAgICAgICBjb25zdCB1c2VyOiBVc2VyID0ge1xuICAgICAgICAgICAgICAgIGlkOiB1c2VyRGF0YS51c2VyLmlkLFxuICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyRGF0YS51c2VyLmVtYWlsISxcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlckRhdGEudXNlci51c2VyX21ldGFkYXRhPy51c2VybmFtZSxcbiAgICAgICAgICAgICAgICBmaXJzdE5hbWU6IHVzZXJEYXRhLnVzZXIudXNlcl9tZXRhZGF0YT8uZmlyc3ROYW1lLFxuICAgICAgICAgICAgICAgIGxhc3ROYW1lOiB1c2VyRGF0YS51c2VyLnVzZXJfbWV0YWRhdGE/Lmxhc3ROYW1lLFxuICAgICAgICAgICAgICAgIHNwb3J0OiB1c2VyRGF0YS51c2VyLnVzZXJfbWV0YWRhdGE/LnNwb3J0LFxuICAgICAgICAgICAgICAgIHdlaWdodDogdXNlckRhdGEudXNlci51c2VyX21ldGFkYXRhPy53ZWlnaHQsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiB1c2VyRGF0YS51c2VyLnVzZXJfbWV0YWRhdGE/LmhlaWdodCxcbiAgICAgICAgICAgICAgICBhZ2U6IHVzZXJEYXRhLnVzZXIudXNlcl9tZXRhZGF0YT8uYWdlLFxuICAgICAgICAgICAgICAgIGdlbmRlcjogdXNlckRhdGEudXNlci51c2VyX21ldGFkYXRhPy5nZW5kZXIsXG4gICAgICAgICAgICAgICAgbGlmZXN0eWxlOiB1c2VyRGF0YS51c2VyLnVzZXJfbWV0YWRhdGE/LmxpZmVzdHlsZSxcbiAgICAgICAgICAgICAgICBwcmltYXJ5R29hbHM6IHVzZXJEYXRhLnVzZXIudXNlcl9tZXRhZGF0YT8ucHJpbWFyeUdvYWxzLFxuICAgICAgICAgICAgICAgIGNyZWF0ZWRBdDogdXNlckRhdGEudXNlci5jcmVhdGVkX2F0LFxuICAgICAgICAgICAgICAgIHVwZGF0ZWRBdDogdXNlckRhdGEudXNlci51cGRhdGVkX2F0IHx8IHVzZXJEYXRhLnVzZXIuY3JlYXRlZF9hdCxcbiAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICBzZXQoe1xuICAgICAgICAgICAgICAgIHVzZXIsXG4gICAgICAgICAgICAgICAgc2Vzc2lvbjogZGF0YS5zZXNzaW9uLFxuICAgICAgICAgICAgICAgIGlzQXV0aGVudGljYXRlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0KHtcbiAgICAgICAgICAgICAgLi4uaW5pdGlhbFN0YXRlLFxuICAgICAgICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAgICAgc2V0KHtcbiAgICAgICAgICAgIC4uLmluaXRpYWxTdGF0ZSxcbiAgICAgICAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG5cbiAgICAgIC8vIFNldHRlcnNcbiAgICAgIHNldFVzZXI6ICh1c2VyKSA9PiBzZXQoeyB1c2VyLCBpc0F1dGhlbnRpY2F0ZWQ6ICEhdXNlciB9KSxcbiAgICAgIHNldFNlc3Npb246IChzZXNzaW9uKSA9PiBzZXQoeyBzZXNzaW9uIH0pLFxuICAgICAgc2V0RXJyb3I6IChlcnJvcikgPT4gc2V0KHsgZXJyb3IgfSksXG4gICAgICByZXNldEF1dGg6ICgpID0+IHNldChpbml0aWFsU3RhdGUpLFxuICAgIH0pLFxuICAgIHtcbiAgICAgIG5hbWU6ICdhdXRoLXN0b3JhZ2UnLFxuICAgICAgc3RvcmFnZTogY3JlYXRlSlNPTlN0b3JhZ2UoKCkgPT4gbG9jYWxTdG9yYWdlKSxcbiAgICAgIHBhcnRpYWxpemU6IChzdGF0ZSkgPT4gKHtcbiAgICAgICAgdXNlcjogc3RhdGUudXNlcixcbiAgICAgICAgc2Vzc2lvbjogc3RhdGUuc2Vzc2lvbixcbiAgICAgICAgaXNBdXRoZW50aWNhdGVkOiBzdGF0ZS5pc0F1dGhlbnRpY2F0ZWQsXG4gICAgICB9KSxcbiAgICB9XG4gIClcbik7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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