{"version":3,"names":["cov_1pmji3cmyz","actualCoverage","react_1","s","__importDefault","require","card_1","button_1","badge_1","progress_1","lucide_react_1","WorkoutSessionComponent","currentSession","sessionTimer","isSessionActive","onStartSession","onPauseSession","onEndSession","onCompleteExercise","f","formatTime","seconds","mins","Math","floor","secs","toString","padStart","completedExercises","b","exercises","filter","e","completed","length","totalExercises","progressPercentage","jsx_runtime_1","jsxs","Card","children","jsx","CardHeader","CardTitle","className","Dumbbell","CardContent","Button","onClick","Play","name","Badge","variant","Timer","CheckCircle","Progress","value","Pause","Square","map","exercise","sets","reps","duration_seconds","category","weight","size","id","exports"],"sources":["/workspaces/MyFitHero/src/features/workout/components/WorkoutSession.tsx"],"sourcesContent":["// src/features/workout/components/WorkoutSession.tsx\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  Play, \n  Pause, \n  Square, \n  Timer, \n  CheckCircle,\n  Dumbbell \n} from 'lucide-react';\n\ninterface Exercise {\n  id: string;\n  name: string;\n  category: string;\n  sets?: number;\n  reps?: number;\n  weight?: number;\n  duration_seconds?: number;\n  rest_seconds?: number;\n  completed?: boolean;\n}\n\ninterface WorkoutSession {\n  id: string;\n  name: string;\n  description?: string;\n  duration_minutes: number;\n  calories_burned?: number;\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  exercises: Exercise[];\n  started_at?: Date;\n  completed_at?: Date;\n  workout_type: 'strength' | 'cardio' | 'flexibility' | 'sports' | 'other';\n}\n\ninterface WorkoutSessionProps {\n  currentSession: WorkoutSession | null;\n  sessionTimer: number;\n  isSessionActive: boolean;\n  onStartSession: () => void;\n  onPauseSession: () => void;\n  onEndSession: () => void;\n  onCompleteExercise: (exerciseId: string) => void;\n}\n\nexport const WorkoutSessionComponent: React.FC<WorkoutSessionProps> = ({\n  currentSession,\n  sessionTimer,\n  isSessionActive,\n  onStartSession,\n  onPauseSession,\n  onEndSession,\n  onCompleteExercise\n}) => {\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const completedExercises = currentSession?.exercises.filter(e => e.completed).length || 0;\n  const totalExercises = currentSession?.exercises.length || 0;\n  const progressPercentage = totalExercises > 0 ? (completedExercises / totalExercises) * 100 : 0;\n\n  if (!currentSession) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <Dumbbell className=\"mr-2 h-5 w-5\" />\n            Aucune session active\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-muted-foreground mb-4\">\n            Commencez une nouvelle séance d'entraînement\n          </p>\n          <Button onClick={onStartSession} className=\"w-full\">\n            <Play className=\"mr-2 h-4 w-4\" />\n            Démarrer un entraînement\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* En-tête de session */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <Dumbbell className=\"mr-2 h-5 w-5\" />\n              {currentSession.name}\n            </div>\n            <Badge variant={isSessionActive ? 'default' : 'secondary'}>\n              {isSessionActive ? 'En cours' : 'En pause'}\n            </Badge>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 gap-4 mb-4\">\n            <div className=\"text-center\">\n              <Timer className=\"h-8 w-8 mx-auto mb-2 text-blue-500\" />\n              <p className=\"text-2xl font-bold\">{formatTime(sessionTimer)}</p>\n              <p className=\"text-xs text-muted-foreground\">Temps écoulé</p>\n            </div>\n            <div className=\"text-center\">\n              <CheckCircle className=\"h-8 w-8 mx-auto mb-2 text-green-500\" />\n              <p className=\"text-2xl font-bold\">{completedExercises}/{totalExercises}</p>\n              <p className=\"text-xs text-muted-foreground\">Exercices</p>\n            </div>\n          </div>\n\n          <Progress value={progressPercentage} className=\"mb-4\" />\n\n          <div className=\"flex gap-2\">\n            {!isSessionActive ? (\n              <Button onClick={onStartSession} className=\"flex-1\">\n                <Play className=\"mr-2 h-4 w-4\" />\n                Reprendre\n              </Button>\n            ) : (\n              <Button onClick={onPauseSession} variant=\"outline\" className=\"flex-1\">\n                <Pause className=\"mr-2 h-4 w-4\" />\n                Pause\n              </Button>\n            )}\n            <Button onClick={onEndSession} variant=\"destructive\">\n              <Square className=\"mr-2 h-4 w-4\" />\n              Terminer\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Liste des exercices */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Exercices</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {currentSession.exercises.map((exercise) => (\n              <div\n                key={exercise.id}\n                className={`p-3 rounded-lg border ${\n                  exercise.completed \n                    ? 'bg-green-50 border-green-200' \n                    : 'bg-gray-50 border-gray-200'\n                }`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h4 className=\"font-medium\">{exercise.name}</h4>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {exercise.sets && exercise.reps \n                        ? `${exercise.sets} séries × ${exercise.reps} reps`\n                        : exercise.duration_seconds \n                        ? `${Math.floor(exercise.duration_seconds / 60)}min`\n                        : exercise.category\n                      }\n                      {exercise.weight && ` - ${exercise.weight}kg`}\n                    </p>\n                  </div>\n                  <Button\n                    size=\"sm\"\n                    variant={exercise.completed ? \"secondary\" : \"default\"}\n                    onClick={() => onCompleteExercise(exercise.id)}\n                  >\n                    {exercise.completed ? (\n                      <CheckCircle className=\"h-4 w-4\" />\n                    ) : (\n                      \"Compléter\"\n                    )}\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};"],"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","ignoreList":[]}