8dda96a2d317ae7494050bbdac3df232
"use strict";

/* istanbul ignore next */
function cov_c41zo5yr7() {
  var path = "/workspaces/MyFitHero/src/features/nutrition/components/SmartNutritionTracker.tsx";
  var hash = "33d9705b8892753304ba82c4f96062b69253f757";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/nutrition/components/SmartNutritionTracker.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "25": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 39
        }
      },
      "26": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 50
        }
      },
      "27": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "28": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 46
        }
      },
      "29": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 48
        }
      },
      "30": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "31": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 86
        }
      },
      "32": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 67,
          column: 1
        }
      },
      "33": {
        start: {
          line: 68,
          column: 25
        },
        end: {
          line: 163,
          column: 1
        }
      },
      "34": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "35": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 73
        }
      },
      "36": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 77,
          column: 14
        }
      },
      "37": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 83,
          column: 14
        }
      },
      "38": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 85,
          column: 70
        }
      },
      "39": {
        start: {
          line: 86,
          column: 34
        },
        end: {
          line: 86,
          column: 88
        }
      },
      "40": {
        start: {
          line: 86,
          column: 65
        },
        end: {
          line: 86,
          column: 84
        }
      },
      "41": {
        start: {
          line: 87,
          column: 32
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "42": {
        start: {
          line: 87,
          column: 67
        },
        end: {
          line: 91,
          column: 13
        }
      },
      "43": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 96,
          column: 14
        }
      },
      "44": {
        start: {
          line: 99,
          column: 29
        },
        end: {
          line: 99,
          column: 94
        }
      },
      "45": {
        start: {
          line: 99,
          column: 68
        },
        end: {
          line: 99,
          column: 93
        }
      },
      "46": {
        start: {
          line: 100,
          column: 34
        },
        end: {
          line: 100,
          column: 88
        }
      },
      "47": {
        start: {
          line: 100,
          column: 65
        },
        end: {
          line: 100,
          column: 84
        }
      },
      "48": {
        start: {
          line: 101,
          column: 32
        },
        end: {
          line: 105,
          column: 49
        }
      },
      "49": {
        start: {
          line: 101,
          column: 67
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "50": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 109,
          column: 14
        }
      },
      "51": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 119,
          column: 14
        }
      },
      "52": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 125,
          column: 14
        }
      },
      "53": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 136,
          column: 14
        }
      },
      "54": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 151,
          column: 14
        }
      },
      "55": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 76
        }
      },
      "56": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 45
        }
      },
      "57": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 76
        }
      },
      "58": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 78
        }
      },
      "59": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 25
        }
      },
      "60": {
        start: {
          line: 164,
          column: 30
        },
        end: {
          line: 425,
          column: 1
        }
      },
      "61": {
        start: {
          line: 165,
          column: 30
        },
        end: {
          line: 165,
          column: 85
        }
      },
      "62": {
        start: {
          line: 166,
          column: 60
        },
        end: {
          line: 166,
          column: 88
        }
      },
      "63": {
        start: {
          line: 167,
          column: 44
        },
        end: {
          line: 167,
          column: 105
        }
      },
      "64": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 174,
          column: 31
        }
      },
      "65": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 24
        }
      },
      "66": {
        start: {
          line: 175,
          column: 26
        },
        end: {
          line: 199,
          column: 30
        }
      },
      "67": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "68": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 67
        }
      },
      "69": {
        start: {
          line: 179,
          column: 59
        },
        end: {
          line: 187,
          column: 61
        }
      },
      "70": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 189,
          column: 33
        }
      },
      "71": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 33
        }
      },
      "72": {
        start: {
          line: 191,
          column: 33
        },
        end: {
          line: 191,
          column: 67
        }
      },
      "73": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 78
        }
      },
      "74": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 48
        }
      },
      "75": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 63
        }
      },
      "76": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 92
        }
      },
      "77": {
        start: {
          line: 200,
          column: 30
        },
        end: {
          line: 238,
          column: 5
        }
      },
      "78": {
        start: {
          line: 201,
          column: 30
        },
        end: {
          line: 201,
          column: 92
        }
      },
      "79": {
        start: {
          line: 201,
          column: 62
        },
        end: {
          line: 201,
          column: 88
        }
      },
      "80": {
        start: {
          line: 202,
          column: 28
        },
        end: {
          line: 207,
          column: 63
        }
      },
      "81": {
        start: {
          line: 202,
          column: 64
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "82": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 237,
          column: 10
        }
      },
      "83": {
        start: {
          line: 242,
          column: 28
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "84": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 54
        }
      },
      "85": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 39
        }
      },
      "86": {
        start: {
          line: 246,
          column: 30
        },
        end: {
          line: 275,
          column: 5
        }
      },
      "87": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "88": {
        start: {
          line: 248,
          column: 28
        },
        end: {
          line: 268,
          column: 13
        }
      },
      "89": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 63
        }
      },
      "90": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 58
        }
      },
      "91": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 92
        }
      },
      "92": {
        start: {
          line: 276,
          column: 31
        },
        end: {
          line: 365,
          column: 5
        }
      },
      "93": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 278,
          column: 19
        }
      },
      "94": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 19
        }
      },
      "95": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "96": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 52
        }
      },
      "97": {
        start: {
          line: 282,
          column: 29
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "98": {
        start: {
          line: 294,
          column: 58
        },
        end: {
          line: 298,
          column: 25
        }
      },
      "99": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 300,
          column: 32
        }
      },
      "100": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 300,
          column: 32
        }
      },
      "101": {
        start: {
          line: 302,
          column: 27
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "102": {
        start: {
          line: 305,
          column: 36
        },
        end: {
          line: 305,
          column: 264
        }
      },
      "103": {
        start: {
          line: 306,
          column: 29
        },
        end: {
          line: 356,
          column: 13
        }
      },
      "104": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 357,
          column: 60
        }
      },
      "105": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 34
        }
      },
      "106": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 63
        }
      },
      "107": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 92
        }
      },
      "108": {
        start: {
          line: 369,
          column: 23
        },
        end: {
          line: 411,
          column: 10
        }
      },
      "109": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 373,
          column: 9
        }
      },
      "110": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 77
        }
      },
      "111": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 19
        }
      },
      "112": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 56
        }
      },
      "113": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 410,
          column: 9
        }
      },
      "114": {
        start: {
          line: 377,
          column: 32
        },
        end: {
          line: 402,
          column: 83
        }
      },
      "115": {
        start: {
          line: 402,
          column: 29
        },
        end: {
          line: 402,
          column: 82
        }
      },
      "116": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 405,
          column: 20
        }
      },
      "117": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 404,
          column: 86
        }
      },
      "118": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 408,
          column: 63
        }
      },
      "119": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 409,
          column: 94
        }
      },
      "120": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 424,
          column: 645
        }
      },
      "121": {
        start: {
          line: 417,
          column: 597
        },
        end: {
          line: 417,
          column: 626
        }
      },
      "122": {
        start: {
          line: 417,
          column: 1646
        },
        end: {
          line: 417,
          column: 2369
        }
      },
      "123": {
        start: {
          line: 417,
          column: 2219
        },
        end: {
          line: 417,
          column: 2274
        }
      },
      "124": {
        start: {
          line: 417,
          column: 2740
        },
        end: {
          line: 417,
          column: 2766
        }
      },
      "125": {
        start: {
          line: 417,
          column: 3165
        },
        end: {
          line: 417,
          column: 3586
        }
      },
      "126": {
        start: {
          line: 417,
          column: 3216
        },
        end: {
          line: 417,
          column: 3239
        }
      },
      "127": {
        start: {
          line: 417,
          column: 4287
        },
        end: {
          line: 417,
          column: 4324
        }
      },
      "128": {
        start: {
          line: 417,
          column: 6160
        },
        end: {
          line: 417,
          column: 6441
        }
      },
      "129": {
        start: {
          line: 417,
          column: 8162
        },
        end: {
          line: 417,
          column: 8268
        }
      },
      "130": {
        start: {
          line: 417,
          column: 8806
        },
        end: {
          line: 417,
          column: 8839
        }
      },
      "131": {
        start: {
          line: 417,
          column: 9252
        },
        end: {
          line: 417,
          column: 9282
        }
      },
      "132": {
        start: {
          line: 417,
          column: 9530
        },
        end: {
          line: 417,
          column: 9549
        }
      },
      "133": {
        start: {
          line: 424,
          column: 49
        },
        end: {
          line: 424,
          column: 452
        }
      },
      "134": {
        start: {
          line: 424,
          column: 100
        },
        end: {
          line: 424,
          column: 126
        }
      },
      "135": {
        start: {
          line: 424,
          column: 509
        },
        end: {
          line: 424,
          column: 539
        }
      },
      "136": {
        start: {
          line: 426,
          column: 0
        },
        end: {
          line: 426,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 25
          },
          end: {
            line: 68,
            column: 26
          }
        },
        loc: {
          start: {
            line: 68,
            column: 44
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 86,
            column: 50
          },
          end: {
            line: 86,
            column: 51
          }
        },
        loc: {
          start: {
            line: 86,
            column: 65
          },
          end: {
            line: 86,
            column: 84
          }
        },
        line: 86
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 87,
            column: 48
          },
          end: {
            line: 87,
            column: 49
          }
        },
        loc: {
          start: {
            line: 87,
            column: 67
          },
          end: {
            line: 91,
            column: 13
          }
        },
        line: 87
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 99,
            column: 60
          },
          end: {
            line: 99,
            column: 61
          }
        },
        loc: {
          start: {
            line: 99,
            column: 68
          },
          end: {
            line: 99,
            column: 93
          }
        },
        line: 99
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 100,
            column: 50
          },
          end: {
            line: 100,
            column: 51
          }
        },
        loc: {
          start: {
            line: 100,
            column: 65
          },
          end: {
            line: 100,
            column: 84
          }
        },
        line: 100
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 101,
            column: 48
          },
          end: {
            line: 101,
            column: 49
          }
        },
        loc: {
          start: {
            line: 101,
            column: 67
          },
          end: {
            line: 105,
            column: 13
          }
        },
        line: 101
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 31
          }
        },
        loc: {
          start: {
            line: 164,
            column: 62
          },
          end: {
            line: 425,
            column: 1
          }
        },
        line: 164
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 172,
            column: 28
          }
        },
        loc: {
          start: {
            line: 172,
            column: 33
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 172
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 175,
            column: 51
          },
          end: {
            line: 175,
            column: 52
          }
        },
        loc: {
          start: {
            line: 175,
            column: 63
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 175
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 200,
            column: 30
          },
          end: {
            line: 200,
            column: 31
          }
        },
        loc: {
          start: {
            line: 200,
            column: 45
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 200
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 201,
            column: 47
          },
          end: {
            line: 201,
            column: 48
          }
        },
        loc: {
          start: {
            line: 201,
            column: 62
          },
          end: {
            line: 201,
            column: 88
          }
        },
        line: 201
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 202,
            column: 45
          },
          end: {
            line: 202,
            column: 46
          }
        },
        loc: {
          start: {
            line: 202,
            column: 64
          },
          end: {
            line: 207,
            column: 9
          }
        },
        line: 202
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 242,
            column: 28
          },
          end: {
            line: 242,
            column: 29
          }
        },
        loc: {
          start: {
            line: 242,
            column: 42
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 242
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 246,
            column: 30
          },
          end: {
            line: 246,
            column: 31
          }
        },
        loc: {
          start: {
            line: 246,
            column: 66
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 246
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 276,
            column: 31
          },
          end: {
            line: 276,
            column: 32
          }
        },
        loc: {
          start: {
            line: 276,
            column: 43
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 276
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 369,
            column: 48
          },
          end: {
            line: 369,
            column: 49
          }
        },
        loc: {
          start: {
            line: 369,
            column: 65
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 369
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 402,
            column: 21
          },
          end: {
            line: 402,
            column: 22
          }
        },
        loc: {
          start: {
            line: 402,
            column: 29
          },
          end: {
            line: 402,
            column: 82
          }
        },
        line: 402
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 403,
            column: 23
          },
          end: {
            line: 403,
            column: 24
          }
        },
        loc: {
          start: {
            line: 403,
            column: 29
          },
          end: {
            line: 405,
            column: 13
          }
        },
        line: 403
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 417,
            column: 591
          },
          end: {
            line: 417,
            column: 592
          }
        },
        loc: {
          start: {
            line: 417,
            column: 597
          },
          end: {
            line: 417,
            column: 626
          }
        },
        line: 417
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 417,
            column: 1635
          },
          end: {
            line: 417,
            column: 1636
          }
        },
        loc: {
          start: {
            line: 417,
            column: 1646
          },
          end: {
            line: 417,
            column: 2369
          }
        },
        line: 417
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 417,
            column: 2213
          },
          end: {
            line: 417,
            column: 2214
          }
        },
        loc: {
          start: {
            line: 417,
            column: 2219
          },
          end: {
            line: 417,
            column: 2274
          }
        },
        line: 417
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 417,
            column: 2733
          },
          end: {
            line: 417,
            column: 2734
          }
        },
        loc: {
          start: {
            line: 417,
            column: 2740
          },
          end: {
            line: 417,
            column: 2766
          }
        },
        line: 417
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 417,
            column: 3154
          },
          end: {
            line: 417,
            column: 3155
          }
        },
        loc: {
          start: {
            line: 417,
            column: 3165
          },
          end: {
            line: 417,
            column: 3586
          }
        },
        line: 417
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 417,
            column: 3210
          },
          end: {
            line: 417,
            column: 3211
          }
        },
        loc: {
          start: {
            line: 417,
            column: 3216
          },
          end: {
            line: 417,
            column: 3239
          }
        },
        line: 417
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 417,
            column: 4281
          },
          end: {
            line: 417,
            column: 4282
          }
        },
        loc: {
          start: {
            line: 417,
            column: 4287
          },
          end: {
            line: 417,
            column: 4324
          }
        },
        line: 417
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 417,
            column: 6143
          },
          end: {
            line: 417,
            column: 6144
          }
        },
        loc: {
          start: {
            line: 417,
            column: 6160
          },
          end: {
            line: 417,
            column: 6441
          }
        },
        line: 417
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 417,
            column: 8145
          },
          end: {
            line: 417,
            column: 8146
          }
        },
        loc: {
          start: {
            line: 417,
            column: 8162
          },
          end: {
            line: 417,
            column: 8268
          }
        },
        line: 417
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 417,
            column: 8800
          },
          end: {
            line: 417,
            column: 8801
          }
        },
        loc: {
          start: {
            line: 417,
            column: 8806
          },
          end: {
            line: 417,
            column: 8839
          }
        },
        line: 417
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 417,
            column: 9246
          },
          end: {
            line: 417,
            column: 9247
          }
        },
        loc: {
          start: {
            line: 417,
            column: 9252
          },
          end: {
            line: 417,
            column: 9282
          }
        },
        line: 417
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 417,
            column: 9523
          },
          end: {
            line: 417,
            column: 9524
          }
        },
        loc: {
          start: {
            line: 417,
            column: 9530
          },
          end: {
            line: 417,
            column: 9549
          }
        },
        line: 417
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 424,
            column: 38
          },
          end: {
            line: 424,
            column: 39
          }
        },
        loc: {
          start: {
            line: 424,
            column: 49
          },
          end: {
            line: 424,
            column: 452
          }
        },
        line: 424
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 424,
            column: 94
          },
          end: {
            line: 424,
            column: 95
          }
        },
        loc: {
          start: {
            line: 424,
            column: 100
          },
          end: {
            line: 424,
            column: 126
          }
        },
        line: 424
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 424,
            column: 503
          },
          end: {
            line: 424,
            column: 504
          }
        },
        loc: {
          start: {
            line: 424,
            column: 509
          },
          end: {
            line: 424,
            column: 539
          }
        },
        line: 424
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 71,
            column: 73
          }
        }, {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 77,
            column: 14
          }
        }, {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 83,
            column: 14
          }
        }, {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 119,
            column: 14
          }
        }, {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 125,
            column: 14
          }
        }, {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 136,
            column: 14
          }
        }, {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 151,
            column: 14
          }
        }, {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 153,
            column: 76
          }
        }, {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 155,
            column: 45
          }
        }, {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 157,
            column: 76
          }
        }, {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 159,
            column: 78
          }
        }, {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 161,
            column: 25
          }
        }],
        line: 69
      },
      "17": {
        loc: {
          start: {
            line: 116,
            column: 29
          },
          end: {
            line: 116,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 29
          },
          end: {
            line: 116,
            column: 43
          }
        }, {
          start: {
            line: 116,
            column: 47
          },
          end: {
            line: 116,
            column: 71
          }
        }],
        line: 116
      },
      "18": {
        loc: {
          start: {
            line: 164,
            column: 41
          },
          end: {
            line: 164,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 164,
            column: 53
          },
          end: {
            line: 164,
            column: 55
          }
        }],
        line: 164
      },
      "19": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 189,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 189,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "20": {
        loc: {
          start: {
            line: 191,
            column: 51
          },
          end: {
            line: 191,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 51
          },
          end: {
            line: 191,
            column: 60
          }
        }, {
          start: {
            line: 191,
            column: 64
          },
          end: {
            line: 191,
            column: 66
          }
        }],
        line: 191
      },
      "21": {
        loc: {
          start: {
            line: 201,
            column: 69
          },
          end: {
            line: 201,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 69
          },
          end: {
            line: 201,
            column: 82
          }
        }, {
          start: {
            line: 201,
            column: 86
          },
          end: {
            line: 201,
            column: 87
          }
        }],
        line: 201
      },
      "22": {
        loc: {
          start: {
            line: 203,
            column: 39
          },
          end: {
            line: 203,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 39
          },
          end: {
            line: 203,
            column: 53
          }
        }, {
          start: {
            line: 203,
            column: 57
          },
          end: {
            line: 203,
            column: 58
          }
        }],
        line: 203
      },
      "23": {
        loc: {
          start: {
            line: 204,
            column: 51
          },
          end: {
            line: 204,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 51
          },
          end: {
            line: 204,
            column: 63
          }
        }, {
          start: {
            line: 204,
            column: 67
          },
          end: {
            line: 204,
            column: 68
          }
        }],
        line: 204
      },
      "24": {
        loc: {
          start: {
            line: 205,
            column: 31
          },
          end: {
            line: 205,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 31
          },
          end: {
            line: 205,
            column: 41
          }
        }, {
          start: {
            line: 205,
            column: 45
          },
          end: {
            line: 205,
            column: 46
          }
        }],
        line: 205
      },
      "25": {
        loc: {
          start: {
            line: 206,
            column: 35
          },
          end: {
            line: 206,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 35
          },
          end: {
            line: 206,
            column: 47
          }
        }, {
          start: {
            line: 206,
            column: 51
          },
          end: {
            line: 206,
            column: 52
          }
        }],
        line: 206
      },
      "26": {
        loc: {
          start: {
            line: 246,
            column: 47
          },
          end: {
            line: 246,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 246,
            column: 58
          },
          end: {
            line: 246,
            column: 61
          }
        }],
        line: 246
      },
      "27": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 278,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 278,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "28": {
        loc: {
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 300,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 300,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "29": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 373,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 373,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "30": {
        loc: {
          start: {
            line: 415,
            column: 2628
          },
          end: {
            line: 417,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 415,
            column: 2660
          },
          end: {
            line: 415,
            column: 2674
          }
        }, {
          start: {
            line: 416,
            column: 40
          },
          end: {
            line: 417,
            column: 105
          }
        }],
        line: 415
      },
      "31": {
        loc: {
          start: {
            line: 416,
            column: 40
          },
          end: {
            line: 417,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 416,
            column: 82
          },
          end: {
            line: 416,
            column: 111
          }
        }, {
          start: {
            line: 417,
            column: 44
          },
          end: {
            line: 417,
            column: 105
          }
        }],
        line: 416
      },
      "32": {
        loc: {
          start: {
            line: 417,
            column: 44
          },
          end: {
            line: 417,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 417,
            column: 77
          },
          end: {
            line: 417,
            column: 89
          }
        }, {
          start: {
            line: 417,
            column: 92
          },
          end: {
            line: 417,
            column: 105
          }
        }],
        line: 417
      },
      "33": {
        loc: {
          start: {
            line: 417,
            column: 205
          },
          end: {
            line: 417,
            column: 260
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 205
          },
          end: {
            line: 417,
            column: 234
          }
        }, {
          start: {
            line: 417,
            column: 238
          },
          end: {
            line: 417,
            column: 260
          }
        }],
        line: 417
      },
      "34": {
        loc: {
          start: {
            line: 417,
            column: 262
          },
          end: {
            line: 417,
            column: 321
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 262
          },
          end: {
            line: 417,
            column: 298
          }
        }, {
          start: {
            line: 417,
            column: 302
          },
          end: {
            line: 417,
            column: 321
          }
        }],
        line: 417
      },
      "35": {
        loc: {
          start: {
            line: 417,
            column: 323
          },
          end: {
            line: 417,
            column: 390
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 323
          },
          end: {
            line: 417,
            column: 362
          }
        }, {
          start: {
            line: 417,
            column: 366
          },
          end: {
            line: 417,
            column: 390
          }
        }],
        line: 417
      },
      "36": {
        loc: {
          start: {
            line: 417,
            column: 392
          },
          end: {
            line: 417,
            column: 453
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 392
          },
          end: {
            line: 417,
            column: 429
          }
        }, {
          start: {
            line: 417,
            column: 433
          },
          end: {
            line: 417,
            column: 453
          }
        }],
        line: 417
      },
      "37": {
        loc: {
          start: {
            line: 417,
            column: 455
          },
          end: {
            line: 417,
            column: 506
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 455
          },
          end: {
            line: 417,
            column: 485
          }
        }, {
          start: {
            line: 417,
            column: 489
          },
          end: {
            line: 417,
            column: 506
          }
        }],
        line: 417
      },
      "38": {
        loc: {
          start: {
            line: 417,
            column: 519
          },
          end: {
            line: 417,
            column: 4449
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 417,
            column: 546
          },
          end: {
            line: 417,
            column: 1003
          }
        }, {
          start: {
            line: 417,
            column: 1008
          },
          end: {
            line: 417,
            column: 4448
          }
        }],
        line: 417
      },
      "39": {
        loc: {
          start: {
            line: 417,
            column: 2946
          },
          end: {
            line: 417,
            column: 3592
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 2946
          },
          end: {
            line: 417,
            column: 2981
          }
        }, {
          start: {
            line: 417,
            column: 2986
          },
          end: {
            line: 417,
            column: 3591
          }
        }],
        line: 417
      },
      "40": {
        loc: {
          start: {
            line: 417,
            column: 3745
          },
          end: {
            line: 417,
            column: 3824
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 3745
          },
          end: {
            line: 417,
            column: 3781
          }
        }, {
          start: {
            line: 417,
            column: 3785
          },
          end: {
            line: 417,
            column: 3824
          }
        }],
        line: 417
      },
      "41": {
        loc: {
          start: {
            line: 417,
            column: 3962
          },
          end: {
            line: 417,
            column: 4232
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 417,
            column: 4005
          },
          end: {
            line: 417,
            column: 4206
          }
        }, {
          start: {
            line: 417,
            column: 4211
          },
          end: {
            line: 417,
            column: 4231
          }
        }],
        line: 417
      },
      "42": {
        loc: {
          start: {
            line: 417,
            column: 4451
          },
          end: {
            line: 417,
            column: 6456
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 4451
          },
          end: {
            line: 417,
            column: 4483
          }
        }, {
          start: {
            line: 417,
            column: 4488
          },
          end: {
            line: 417,
            column: 6455
          }
        }],
        line: 417
      },
      "43": {
        loc: {
          start: {
            line: 417,
            column: 5825
          },
          end: {
            line: 417,
            column: 6451
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 5825
          },
          end: {
            line: 417,
            column: 5868
          }
        }, {
          start: {
            line: 417,
            column: 5873
          },
          end: {
            line: 417,
            column: 6450
          }
        }],
        line: 417
      },
      "44": {
        loc: {
          start: {
            line: 417,
            column: 6458
          },
          end: {
            line: 417,
            column: 8283
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 6458
          },
          end: {
            line: 417,
            column: 6477
          }
        }, {
          start: {
            line: 417,
            column: 6482
          },
          end: {
            line: 417,
            column: 8282
          }
        }],
        line: 417
      },
      "45": {
        loc: {
          start: {
            line: 417,
            column: 7630
          },
          end: {
            line: 417,
            column: 8278
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 7630
          },
          end: {
            line: 417,
            column: 7679
          }
        }, {
          start: {
            line: 417,
            column: 7684
          },
          end: {
            line: 417,
            column: 8277
          }
        }],
        line: 417
      },
      "46": {
        loc: {
          start: {
            line: 417,
            column: 8285
          },
          end: {
            line: 417,
            column: 8924
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 8285
          },
          end: {
            line: 417,
            column: 8296
          }
        }, {
          start: {
            line: 417,
            column: 8301
          },
          end: {
            line: 417,
            column: 8923
          }
        }],
        line: 417
      },
      "47": {
        loc: {
          start: {
            line: 417,
            column: 8998
          },
          end: {
            line: 424,
            column: 636
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 8998
          },
          end: {
            line: 417,
            column: 9018
          }
        }, {
          start: {
            line: 417,
            column: 9023
          },
          end: {
            line: 424,
            column: 635
          }
        }],
        line: 417
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/nutrition/components/SmartNutritionTracker.tsx",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/nutrition/components/SmartNutritionTracker.tsx"],
      sourcesContent: ["import React, { useReducer, useEffect, useState, useCallback } from 'react';\nimport { \n  Apple, Camera, Search, Plus, TrendingUp, Target, \n  Clock, Zap, AlertCircle, CheckCircle, Brain, \n  BarChart3, Utensils, Scale, Timer, Award\n} from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { supabase } from '@/lib/supabase';\nimport { \n  NutritionData, \n  MealAnalysis, \n  NutritionTrackingState, \n  FoodSearchResult,\n  DailyNutritionSummary \n} from '@/features/nutrition/types';\nimport { \n  calculateNutritionScores, \n  generateNutritionRecommendations,\n  dbToNutritionData,\n  nutritionDataToDb,\n  dbToMealAnalysis,\n  mealAnalysisToDb\n} from '@/features/nutrition/services/nutrition-mapping';\n\n// =====================================\n// STATE MANAGEMENT (\xE0 la fa\xE7on Workout)\n// =====================================\n\ninterface NutritionState {\n  currentState: NutritionTrackingState;\n  todaysSummary: DailyNutritionSummary | null;\n  currentMeal: {\n    type: NutritionData['mealType'] | null;\n    items: NutritionData[];\n    totalCalories: number;\n    totalMacros: { protein: number; carbs: number; fat: number };\n  };\n  foodSearch: {\n    query: string;\n    results: FoodSearchResult[];\n    isSearching: boolean;\n  };\n  aiAnalysis: {\n    isAnalyzing: boolean;\n    currentAnalysis: MealAnalysis | null;\n    recommendations: string[];\n    insights: string[];\n  };\n  goals: {\n    dailyCalories: number;\n    proteinTarget: number;\n    carbTarget: number;\n    fatTarget: number;\n  };\n  progress: {\n    caloriesConsumed: number;\n    caloriesRemaining: number;\n    macroProgress: { protein: number; carbs: number; fat: number };\n    adherenceScore: number;\n  };\n  error: string | null;\n  lastUpdate: Date;\n}\n\ntype NutritionAction = \n  | { type: 'SET_STATE'; state: NutritionTrackingState }\n  | { type: 'SET_MEAL_TYPE'; mealType: NutritionData['mealType'] }\n  | { type: 'RESET_MEAL_TYPE' }\n  | { type: 'ADD_FOOD_ITEM'; item: NutritionData }\n  | { type: 'REMOVE_FOOD_ITEM'; itemId: string }\n  | { type: 'UPDATE_FOOD_SEARCH'; query: string; results?: FoodSearchResult[] }\n  | { type: 'START_AI_ANALYSIS' }\n  | { type: 'SET_AI_ANALYSIS'; analysis: MealAnalysis }\n  | { type: 'UPDATE_DAILY_SUMMARY'; summary: DailyNutritionSummary }\n  | { type: 'SET_ERROR'; error: string }\n  | { type: 'CLEAR_ERROR' }\n  | { type: 'UPDATE_GOALS'; goals: Partial<NutritionState['goals']> }\n  | { type: 'SYNC_COMPLETE' };\n\nconst initialState: NutritionState = {\n  currentState: 'idle',\n  todaysSummary: null,\n  currentMeal: {\n    type: null,\n    items: [],\n    totalCalories: 0,\n    totalMacros: { protein: 0, carbs: 0, fat: 0 }\n  },\n  foodSearch: {\n    query: '',\n    results: [],\n    isSearching: false\n  },\n  aiAnalysis: {\n    isAnalyzing: false,\n    currentAnalysis: null,\n    recommendations: [],\n    insights: []\n  },\n  goals: {\n    dailyCalories: 2000,\n    proteinTarget: 150,\n    carbTarget: 250,\n    fatTarget: 67\n  },\n  progress: {\n    caloriesConsumed: 0,\n    caloriesRemaining: 2000,\n    macroProgress: { protein: 0, carbs: 0, fat: 0 },\n    adherenceScore: 100\n  },\n  error: null,\n  lastUpdate: new Date()\n};\n\nconst nutritionReducer = (state: NutritionState, action: NutritionAction): NutritionState => {\n  switch (action.type) {\n    case 'SET_STATE':\n      return { ...state, currentState: action.state, error: null };\n      \n    case 'SET_MEAL_TYPE':\n      return {\n        ...state,\n        currentMeal: { ...state.currentMeal, type: action.mealType },\n        currentState: 'adding_meal'\n      };\n\n    case 'RESET_MEAL_TYPE':\n      return {\n        ...state,\n        currentMeal: { ...initialState.currentMeal },\n        currentState: 'idle'\n      };\n      \n    case 'ADD_FOOD_ITEM': {\n      const newItems = [...state.currentMeal.items, action.item];\n      const totalCalories = newItems.reduce((sum, item) => sum + item.calories, 0);\n      const totalMacros = newItems.reduce(\n        (totals, item) => ({\n          protein: totals.protein + item.macros.protein,\n          carbs: totals.carbs + item.macros.carbohydrates,\n          fat: totals.fat + item.macros.fat\n        }),\n        { protein: 0, carbs: 0, fat: 0 }\n      );\n      \n      return {\n        ...state,\n        currentMeal: { ...state.currentMeal, items: newItems, totalCalories, totalMacros },\n        lastUpdate: new Date()\n      };\n    }\n    \n    case 'REMOVE_FOOD_ITEM': {\n      const newItems = state.currentMeal.items.filter(item => item.id !== action.itemId);\n      const totalCalories = newItems.reduce((sum, item) => sum + item.calories, 0);\n      const totalMacros = newItems.reduce(\n        (totals, item) => ({\n          protein: totals.protein + item.macros.protein,\n          carbs: totals.carbs + item.macros.carbohydrates,\n          fat: totals.fat + item.macros.fat\n        }),\n        { protein: 0, carbs: 0, fat: 0 }\n      );\n      \n      return {\n        ...state,\n        currentMeal: { ...state.currentMeal, items: newItems, totalCalories, totalMacros }\n      };\n    }\n    \n    case 'UPDATE_FOOD_SEARCH':\n      return {\n        ...state,\n        foodSearch: {\n          query: action.query,\n          results: action.results || state.foodSearch.results,\n          isSearching: !action.results\n        }\n      };\n      \n    case 'START_AI_ANALYSIS':\n      return {\n        ...state,\n        currentState: 'analyzing_meal',\n        aiAnalysis: { ...state.aiAnalysis, isAnalyzing: true }\n      };\n      \n    case 'SET_AI_ANALYSIS':\n      return {\n        ...state,\n        currentState: 'idle',\n        aiAnalysis: {\n          isAnalyzing: false,\n          currentAnalysis: action.analysis,\n          recommendations: action.analysis.aiRecommendations.improvements,\n          insights: action.analysis.aiRecommendations.alternatives\n        }\n      };\n      \n    case 'UPDATE_DAILY_SUMMARY':\n      return {\n        ...state,\n        todaysSummary: action.summary,\n        progress: {\n          caloriesConsumed: action.summary.totalCalories,\n          caloriesRemaining: action.summary.nutritionGoals.calorieGoal - action.summary.totalCalories,\n          macroProgress: {\n            protein: (action.summary.macroTotals.protein / action.summary.nutritionGoals.proteinGoal) * 100,\n            carbs: (action.summary.macroTotals.carbohydrates / action.summary.nutritionGoals.carbGoal) * 100,\n            fat: (action.summary.macroTotals.fat / action.summary.nutritionGoals.fatGoal) * 100\n          },\n          adherenceScore: action.summary.adherenceScores.calorieAdherence\n        }\n      };\n      \n    case 'SET_ERROR':\n      return { ...state, error: action.error, currentState: 'error' };\n      \n    case 'CLEAR_ERROR':\n      return { ...state, error: null };\n      \n    case 'UPDATE_GOALS':\n      return { ...state, goals: { ...state.goals, ...action.goals } };\n      \n    case 'SYNC_COMPLETE':\n      return { ...state, currentState: 'idle', lastUpdate: new Date() };\n      \n    default:\n      return state;\n  }\n};\n\n// =====================================\n// COMPOSANT PRINCIPAL\n// =====================================\n\ninterface SmartNutritionTrackerProps {\n  userId: string;\n  className?: string;\n}\n\nexport const SmartNutritionTracker: React.FC<SmartNutritionTrackerProps> = ({\n  userId,\n  className = ''\n}) => {\n  const [state, dispatch] = useReducer(nutritionReducer, initialState);\n  const [showMealTypeSelector, setShowMealTypeSelector] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n\n  // =====================================\n  // HOOKS ET EFFETS\n  // =====================================\n\n  // Chargement des donn\xE9es journali\xE8res\n  useEffect(() => {\n    loadDailyData();\n  }, [userId, selectedDate]);\n\n  const loadDailyData = useCallback(async () => {\n    try {\n      dispatch({ type: 'SET_STATE', state: 'syncing_data' });\n      \n      // Charger les repas du jour\n      const { data: mealsData, error: mealsError } = await supabase\n        .from('meals')\n        .select(`\n          *,\n          meal_analysis:meal_analysis(*)\n        `)\n        .eq('user_id', userId)\n        .gte('created_at', `${selectedDate}T00:00:00`)\n        .lt('created_at', `${selectedDate}T23:59:59`);\n\n      if (mealsError) throw mealsError;\n\n      // Construire le r\xE9sum\xE9 journalier\n      const dailySummary = buildDailySummary(mealsData || []);\n      dispatch({ type: 'UPDATE_DAILY_SUMMARY', summary: dailySummary });\n      dispatch({ type: 'SYNC_COMPLETE' });\n      \n    } catch (error) {\n      console.error('Erreur chargement donn\xE9es:', error);\n      dispatch({ type: 'SET_ERROR', error: 'Erreur lors du chargement des donn\xE9es' });\n    }\n  }, [userId, selectedDate]);\n\n  const buildDailySummary = (mealsData: any[]): DailyNutritionSummary => {\n    const totalCalories = mealsData.reduce((sum, meal) => sum + (meal.calories || 0), 0);\n    const macroTotals = mealsData.reduce(\n      (totals, meal) => ({\n        protein: totals.protein + (meal.protein_g || 0),\n        carbohydrates: totals.carbohydrates + (meal.carbs_g || 0),\n        fat: totals.fat + (meal.fat_g || 0),\n        fiber: totals.fiber + (meal.fiber_g || 0)\n      }),\n      { protein: 0, carbohydrates: 0, fat: 0, fiber: 0 }\n    );\n\n    return {\n      date: selectedDate,\n      userId,\n      totalCalories,\n      macroTotals,\n      mealBreakdown: {\n        breakfast: { calories: 0, percentage: 0 },\n        lunch: { calories: 0, percentage: 0 },\n        dinner: { calories: 0, percentage: 0 },\n        snacks: { calories: 0, percentage: 0 }\n      },\n      nutritionGoals: {\n        calorieGoal: state.goals.dailyCalories,\n        proteinGoal: state.goals.proteinTarget,\n        carbGoal: state.goals.carbTarget,\n        fatGoal: state.goals.fatTarget,\n      },\n      adherenceScores: {\n        calorieAdherence: Math.min(100, (totalCalories / state.goals.dailyCalories) * 100),\n        macroAdherence: 85,\n        mealTimingAdherence: 90,\n        foodQualityScore: 88\n      },\n      aiInsights: {\n        dayRating: 85,\n        keyWins: [\"Excellent apport en prot\xE9ines\", \"Hydratation optimale\"],\n        improvementAreas: [\"Augmenter les fibres\", \"\xC9quilibrer les collations\"],\n        tomorrowSuggestions: [\"Pr\xE9parer des l\xE9gumes \xE0 croquer\", \"Planifier le petit-d\xE9jeuner\"]\n      }\n    };\n  };\n\n  // =====================================\n  // GESTION DES REPAS\n  // =====================================\n\n  const handleStartMeal = (mealType: NutritionData['mealType']) => {\n    dispatch({ type: 'SET_MEAL_TYPE', mealType });\n    setShowMealTypeSelector(false);\n  };\n\n  const handleAddFoodItem = async (foodData: FoodSearchResult, quantity: number = 100) => {\n    try {\n      const newItem: NutritionData = {\n        id: `temp_${Date.now()}`,\n        userId,\n        mealId: `meal_${Date.now()}`,\n        name: foodData.name,\n        quantity,\n        unit: 'g',\n        calories: Math.round((foodData.nutritionPer100g.calories * quantity) / 100),\n        macros: {\n          protein: (foodData.nutritionPer100g.protein * quantity) / 100,\n          carbohydrates: (foodData.nutritionPer100g.carbohydrates * quantity) / 100,\n          fat: (foodData.nutritionPer100g.fat * quantity) / 100,\n          fiber: (foodData.nutritionPer100g.fiber * quantity) / 100,\n          sugar: 0,\n          sodium: 0\n        },\n        mealType: state.currentMeal.type!,\n        mealTiming: new Date(),\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n\n      dispatch({ type: 'ADD_FOOD_ITEM', item: newItem });\n      \n    } catch (error) {\n      console.error('Erreur ajout aliment:', error);\n      dispatch({ type: 'SET_ERROR', error: 'Erreur lors de l\\'ajout de l\\'aliment' });\n    }\n  };\n\n  const handleFinalizeMeal = async () => {\n    if (state.currentMeal.items.length === 0) return;\n    \n    try {\n      dispatch({ type: 'START_AI_ANALYSIS' });\n      \n      // Sauvegarder le repas\n      const mealData = {\n        id: `meal_${Date.now()}`,\n        user_id: userId,\n        name: `${state.currentMeal.type} - ${new Date().toLocaleTimeString()}`,\n        meal_type: state.currentMeal.type,\n        calories: state.currentMeal.totalCalories,\n        protein_g: state.currentMeal.totalMacros.protein,\n        carbs_g: state.currentMeal.totalMacros.carbs,\n        fat_g: state.currentMeal.totalMacros.fat,\n        fiber_g: 0,\n        created_at: new Date().toISOString()\n      };\n\n      const { data: savedMeal, error: mealError } = await supabase\n        .from('meals')\n        .insert(mealData)\n        .select()\n        .single();\n\n      if (mealError) throw mealError;\n\n      // Analyse IA\n      const scores = calculateNutritionScores(\n        state.currentMeal.totalCalories,\n        state.currentMeal.totalMacros.protein,\n        state.currentMeal.totalMacros.carbs,\n        state.currentMeal.totalMacros.fat,\n        0, // fiber\n        0  // sugar\n      );\n\n      const recommendations = generateNutritionRecommendations(\n        state.currentMeal.totalCalories,\n        state.currentMeal.totalMacros.protein,\n        state.currentMeal.totalMacros.carbs,\n        state.currentMeal.totalMacros.fat,\n        0,\n        state.currentMeal.type!\n      );\n\n      const analysis: MealAnalysis = {\n        id: `analysis_${Date.now()}`,\n        userId,\n        mealId: savedMeal.id,\n        totalCalories: state.currentMeal.totalCalories,\n        macroBreakdown: {\n          protein: {\n            grams: state.currentMeal.totalMacros.protein,\n            percentage: (state.currentMeal.totalMacros.protein * 4 / state.currentMeal.totalCalories) * 100,\n            calories: state.currentMeal.totalMacros.protein * 4\n          },\n          carbs: {\n            grams: state.currentMeal.totalMacros.carbs,\n            percentage: (state.currentMeal.totalMacros.carbs * 4 / state.currentMeal.totalCalories) * 100,\n            calories: state.currentMeal.totalMacros.carbs * 4\n          },\n          fat: {\n            grams: state.currentMeal.totalMacros.fat,\n            percentage: (state.currentMeal.totalMacros.fat * 9 / state.currentMeal.totalCalories) * 100,\n            calories: state.currentMeal.totalMacros.fat * 9\n          }\n        },\n        nutritionScores: {\n          overallQuality: scores.overallQuality,\n          macroBalance: scores.macroBalance,\n          micronutrientDensity: 75,\n          processedFoodRatio: 30,\n          satietyIndex: 80,\n          inflammatoryIndex: 10\n        },\n        aiRecommendations: {\n          improvements: recommendations,\n          alternatives: [\"Remplacer par des alternatives compl\xE8tes\", \"Ajouter des l\xE9gumes color\xE9s\"],\n          timing: [\"Optimal pour ce moment de la journ\xE9e\"],\n          portionAdjustments: []\n        },\n        complianceMetrics: {\n          calorieTarget: { actual: state.currentMeal.totalCalories, target: 500, variance: 0 },\n          proteinTarget: { actual: state.currentMeal.totalMacros.protein, target: 25, variance: 0 },\n          carbTarget: { actual: state.currentMeal.totalMacros.carbs, target: 60, variance: 0 },\n          fatTarget: { actual: state.currentMeal.totalMacros.fat, target: 20, variance: 0 }\n        },\n        metabolicImpact: {\n          estimatedGlycemicLoad: 25,\n          insulinResponse: 'moderate',\n          satietyDuration: 3.5,\n          energyProvision: 'sustained'\n        },\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n\n      dispatch({ type: 'SET_AI_ANALYSIS', analysis });\n      \n      // Recharger les donn\xE9es journali\xE8res\n      await loadDailyData();\n      \n    } catch (error) {\n      console.error('Erreur finalisation repas:', error);\n      dispatch({ type: 'SET_ERROR', error: 'Erreur lors de la sauvegarde du repas' });\n    }\n  };\n\n  // =====================================\n  // RECHERCHE D'ALIMENTS\n  // =====================================\n\n  const searchFood = useCallback(async (query: string) => {\n    if (query.length < 2) {\n      dispatch({ type: 'UPDATE_FOOD_SEARCH', query: '', results: [] });\n      return;\n    }\n\n    dispatch({ type: 'UPDATE_FOOD_SEARCH', query });\n\n    try {\n      // Simulation base de donn\xE9es alimentaire (remplacer par vraie API)\n      const mockResults: FoodSearchResult[] = [\n        {\n          id: '1',\n          name: 'Pomme Golden',\n          category: 'Fruits',\n          nutritionPer100g: { calories: 52, protein: 0.3, carbohydrates: 14, fat: 0.2, fiber: 2.4 },\n          verified: true,\n          popularity: 95\n        },\n        {\n          id: '2', \n          name: 'Blanc de poulet grill\xE9',\n          category: 'Viandes',\n          nutritionPer100g: { calories: 165, protein: 31, carbohydrates: 0, fat: 3.6, fiber: 0 },\n          verified: true,\n          popularity: 88\n        },\n        {\n          id: '3',\n          name: 'Avoine compl\xE8te',\n          category: 'C\xE9r\xE9ales',\n          nutritionPer100g: { calories: 389, protein: 17, carbohydrates: 66, fat: 7, fiber: 10 },\n          verified: true,\n          popularity: 82\n        }\n      ].filter(item => item.name.toLowerCase().includes(query.toLowerCase()));\n\n      setTimeout(() => {\n        dispatch({ type: 'UPDATE_FOOD_SEARCH', query, results: mockResults });\n      }, 500);\n\n    } catch (error) {\n      console.error('Erreur recherche aliments:', error);\n      dispatch({ type: 'SET_ERROR', error: 'Erreur lors de la recherche d\\'aliments' });\n    }\n  }, []);\n\n  // =====================================\n  // RENDU INTERFACE\n  // =====================================\n\n  return (\n    <div className={`bg-white rounded-2xl shadow-xl border border-gray-100 ${className}`}>\n      {/* Header avec stats rapides */}\n      <div className=\"bg-gradient-to-r from-green-600 to-emerald-600 p-6 text-white\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <Apple className=\"h-8 w-8\" />\n            <div>\n              <h2 className=\"text-2xl font-bold\">Smart Nutrition</h2>\n              <p className=\"text-green-100\">IA Nutritionnelle Avanc\xE9e</p>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-bold\">{state.progress.caloriesConsumed}</div>\n            <div className=\"text-sm text-green-100\">kcal aujourd'hui</div>\n          </div>\n        </div>\n\n        {/* Progress bars rapides */}\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div>\n            <div className=\"text-xs mb-1\">Prot\xE9ines</div>\n            <div className=\"bg-green-800 rounded-full h-2\">\n              <div \n                className=\"bg-white rounded-full h-2 transition-all duration-300\"\n                style={{ width: `${Math.min(100, state.progress.macroProgress.protein)}%` }}\n              />\n            </div>\n          </div>\n          <div>\n            <div className=\"text-xs mb-1\">Glucides</div>\n            <div className=\"bg-green-800 rounded-full h-2\">\n              <div \n                className=\"bg-white rounded-full h-2 transition-all duration-300\"\n                style={{ width: `${Math.min(100, state.progress.macroProgress.carbs)}%` }}\n              />\n            </div>\n          </div>\n          <div>\n            <div className=\"text-xs mb-1\">Lipides</div>\n            <div className=\"bg-green-800 rounded-full h-2\">\n              <div \n                className=\"bg-white rounded-full h-2 transition-all duration-300\"\n                style={{ width: `${Math.min(100, state.progress.macroProgress.fat)}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Contenu principal */}\n      <div className=\"p-6\">\n        {/* \xC9tat actuel avec machine d'\xE9tat */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center space-x-2 mb-2\">\n            <div className={`w-3 h-3 rounded-full ${\n              state.currentState === 'idle' ? 'bg-green-500' :\n              state.currentState === 'analyzing_meal' ? 'bg-yellow-500 animate-pulse' :\n              state.currentState === 'error' ? 'bg-red-500' : 'bg-blue-500'\n            }`} />\n            <span className=\"text-sm font-medium text-gray-600\">\n              {state.currentState === 'idle' && 'Pr\xEAt pour l\\'analyse'}\n              {state.currentState === 'adding_meal' && 'Ajout en cours...'}\n              {state.currentState === 'analyzing_meal' && 'Analyse IA en cours...'}\n              {state.currentState === 'syncing_data' && 'Synchronisation...'}\n              {state.currentState === 'error' && 'Erreur d\xE9tect\xE9e'}\n            </span>\n          </div>\n        </div>\n\n        {/* Bouton principal */}\n        {!state.currentMeal.type ? (\n          <button\n            onClick={() => setShowMealTypeSelector(true)}\n            className=\"w-full bg-gradient-to-r from-green-600 to-emerald-600 text-white py-4 px-6 rounded-xl font-medium transition-all duration-200 transform hover:scale-105 hover:shadow-lg flex items-center justify-center space-x-2\"\n          >\n            <Plus className=\"h-5 w-5\" />\n            <span>Ajouter un repas</span>\n          </button>\n        ) : (\n          <div className=\"space-y-4\">\n            {/* Repas en cours */}\n            <div className=\"bg-gray-50 rounded-xl p-4\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"font-semibold text-gray-800 capitalize\">\n                  {state.currentMeal.type?.replace('_', ' ')}\n                </h3>\n                <div className=\"text-lg font-bold text-green-600\">\n                  {state.currentMeal.totalCalories} kcal\n                </div>\n              </div>\n              \n              {/* Aliments ajout\xE9s */}\n              <div className=\"space-y-2 mb-4\">\n                {state.currentMeal.items.map((item) => (\n                  <div key={item.id} className=\"flex items-center justify-between bg-white rounded-lg p-3\">\n                    <div>\n                      <div className=\"font-medium\">{item.name}</div>\n                      <div className=\"text-sm text-gray-500\">{item.quantity}{item.unit}</div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"font-medium\">{item.calories} kcal</div>\n                      <button\n                        onClick={() => dispatch({ type: 'REMOVE_FOOD_ITEM', itemId: item.id })}\n                        className=\"text-red-500 text-sm hover:text-red-700\"\n                      >\n                        Retirer\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Recherche d'aliments */}\n              <div className=\"mb-4\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    value={state.foodSearch.query}\n                    onChange={(e) => searchFood(e.target.value)}\n                    placeholder=\"Rechercher un aliment...\"\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                  />\n                </div>\n                \n                {/* R\xE9sultats de recherche */}\n                {state.foodSearch.results.length > 0 && (\n                  <div className=\"mt-2 bg-white border border-gray-200 rounded-lg shadow-lg max-h-60 overflow-y-auto\">\n                    {state.foodSearch.results.map((food) => (\n                      <button\n                        key={food.id}\n                        onClick={() => handleAddFoodItem(food)}\n                        className=\"w-full text-left p-3 hover:bg-gray-50 border-b border-gray-100 last:border-b-0\"\n                      >\n                        <div className=\"font-medium\">{food.name}</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {food.nutritionPer100g.calories} kcal/100g - {food.category}\n                        </div>\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {/* Actions */}\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={handleFinalizeMeal}\n                  disabled={state.currentMeal.items.length === 0 || state.currentState === 'analyzing_meal'}\n                  className=\"flex-1 bg-green-600 text-white py-2 px-4 rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {state.currentState === 'analyzing_meal' ? (\n                    <div className=\"flex items-center justify-center\">\n                      <Brain className=\"h-4 w-4 mr-2 animate-pulse\" />\n                      Analyse IA...\n                    </div>\n                  ) : (\n                    'Finaliser le repas'\n                  )}\n                </button>\n                <button\n                  onClick={() => dispatch({ type: 'RESET_MEAL_TYPE' })}\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-600 hover:bg-gray-50\"\n                >\n                  Annuler\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Analyse IA r\xE9cente */}\n        {state.aiAnalysis.currentAnalysis && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mt-6 bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-200\"\n          >\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <Brain className=\"h-5 w-5 text-blue-600\" />\n              <h3 className=\"font-semibold text-blue-900\">Analyse IA du dernier repas</h3>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div className=\"bg-white rounded-lg p-3 text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {state.aiAnalysis.currentAnalysis.nutritionScores.overallQuality}\n                </div>\n                <div className=\"text-sm text-gray-600\">Qualit\xE9 globale</div>\n              </div>\n              <div className=\"bg-white rounded-lg p-3 text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {state.aiAnalysis.currentAnalysis.nutritionScores.macroBalance}\n                </div>\n                <div className=\"text-sm text-gray-600\">\xC9quilibre macros</div>\n              </div>\n            </div>\n\n            {/* Recommandations */}\n            {state.aiAnalysis.recommendations.length > 0 && (\n              <div>\n                <h4 className=\"font-medium text-gray-800 mb-2\">Recommandations IA</h4>\n                <div className=\"space-y-1\">\n                  {state.aiAnalysis.recommendations.slice(0, 3).map((rec, index) => (\n                    <div key={index} className=\"text-sm text-gray-600 flex items-start space-x-2\">\n                      <CheckCircle className=\"h-4 w-4 text-green-500 mt-0.5 flex-shrink-0\" />\n                      <span>{rec}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </motion.div>\n        )}\n\n        {/* R\xE9sum\xE9 journalier */}\n        {state.todaysSummary && (\n          <div className=\"mt-6 space-y-4\">\n            <h3 className=\"font-semibold text-gray-800 flex items-center space-x-2\">\n              <BarChart3 className=\"h-5 w-5\" />\n              <span>R\xE9sum\xE9 de la journ\xE9e</span>\n            </h3>\n            \n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\n                <div className=\"text-2xl font-bold text-gray-800\">\n                  {Math.round(state.todaysSummary.adherenceScores.calorieAdherence)}%\n                </div>\n                <div className=\"text-sm text-gray-600\">Adh\xE9rence calorique</div>\n              </div>\n              <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">\n                  {state.todaysSummary.aiInsights.dayRating}\n                </div>\n                <div className=\"text-sm text-gray-600\">Score IA du jour</div>\n              </div>\n            </div>\n\n            {/* Insights IA */}\n            {state.todaysSummary.aiInsights.keyWins.length > 0 && (\n              <div className=\"bg-green-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-green-800 mb-2 flex items-center space-x-2\">\n                  <Award className=\"h-4 w-4\" />\n                  <span>Points forts aujourd'hui</span>\n                </h4>\n                <div className=\"space-y-1\">\n                  {state.todaysSummary.aiInsights.keyWins.map((win, index) => (\n                    <div key={index} className=\"text-sm text-green-700\">\u2022 {win}</div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Erreurs */}\n        {state.error && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mt-4 bg-red-50 border border-red-200 rounded-lg p-4\"\n          >\n            <div className=\"flex items-center space-x-2\">\n              <AlertCircle className=\"h-5 w-5 text-red-500\" />\n              <span className=\"text-red-700\">{state.error}</span>\n              <button\n                onClick={() => dispatch({ type: 'CLEAR_ERROR' })}\n                className=\"ml-auto text-red-500 hover:text-red-700\"\n              >\n                Fermer\n              </button>\n            </div>\n          </motion.div>\n        )}\n      </div>\n\n      {/* Modal s\xE9lection type de repas */}\n      <AnimatePresence>\n        {showMealTypeSelector && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n            onClick={() => setShowMealTypeSelector(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              className=\"bg-white rounded-2xl p-6 max-w-md w-full mx-4\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Type de repas</h3>\n              <div className=\"grid grid-cols-2 gap-3\">\n                {[\n                  { type: 'breakfast' as const, label: 'Petit-d\xE9jeuner', icon: '\uD83C\uDF05' },\n                  { type: 'lunch' as const, label: 'D\xE9jeuner', icon: '\u2600\uFE0F' },\n                  { type: 'dinner' as const, label: 'D\xEEner', icon: '\uD83C\uDF19' },\n                  { type: 'snack' as const, label: 'Collation', icon: '\uD83C\uDF4E' },\n                  { type: 'pre_workout' as const, label: 'Pr\xE9-training', icon: '\uD83D\uDCAA' },\n                  { type: 'post_workout' as const, label: 'Post-training', icon: '\uD83C\uDFC6' }\n                ].map((meal) => (\n                  <button\n                    key={meal.type}\n                    onClick={() => handleStartMeal(meal.type)}\n                    className=\"p-4 border border-gray-200 rounded-xl hover:bg-gray-50 hover:border-green-300 transition-all text-center\"\n                  >\n                    <div className=\"text-2xl mb-2\">{meal.icon}</div>\n                    <div className=\"font-medium text-gray-800\">{meal.label}</div>\n                  </button>\n                ))}\n              </div>\n              <button\n                onClick={() => setShowMealTypeSelector(false)}\n                className=\"w-full mt-4 py-2 text-gray-600 hover:text-gray-800\"\n              >\n                Annuler\n              </button>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "33d9705b8892753304ba82c4f96062b69253f757"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_c41zo5yr7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_c41zo5yr7();
var __createBinding =
/* istanbul ignore next */
(cov_c41zo5yr7().s[0]++,
/* istanbul ignore next */
(cov_c41zo5yr7().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_c41zo5yr7().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_c41zo5yr7().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_c41zo5yr7().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_c41zo5yr7().f[0]++;
  cov_c41zo5yr7().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_c41zo5yr7().b[2][0]++;
    cov_c41zo5yr7().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_c41zo5yr7().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_c41zo5yr7().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_c41zo5yr7().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_c41zo5yr7().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_c41zo5yr7().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_c41zo5yr7().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_c41zo5yr7().b[5][1]++,
  /* istanbul ignore next */
  (cov_c41zo5yr7().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_c41zo5yr7().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_c41zo5yr7().b[3][0]++;
    cov_c41zo5yr7().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_c41zo5yr7().f[1]++;
        cov_c41zo5yr7().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_c41zo5yr7().b[3][1]++;
  }
  cov_c41zo5yr7().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_c41zo5yr7().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_c41zo5yr7().f[2]++;
  cov_c41zo5yr7().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_c41zo5yr7().b[7][0]++;
    cov_c41zo5yr7().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_c41zo5yr7().b[7][1]++;
  }
  cov_c41zo5yr7().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_c41zo5yr7().s[11]++,
/* istanbul ignore next */
(cov_c41zo5yr7().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_c41zo5yr7().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_c41zo5yr7().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_c41zo5yr7().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_c41zo5yr7().f[3]++;
  cov_c41zo5yr7().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_c41zo5yr7().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_c41zo5yr7().f[4]++;
  cov_c41zo5yr7().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_c41zo5yr7().s[14]++,
/* istanbul ignore next */
(cov_c41zo5yr7().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_c41zo5yr7().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_c41zo5yr7().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_c41zo5yr7().f[5]++;
  cov_c41zo5yr7().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_c41zo5yr7().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_c41zo5yr7().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_c41zo5yr7().b[11][0]++;
    cov_c41zo5yr7().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_c41zo5yr7().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_c41zo5yr7().s[17]++, {});
  /* istanbul ignore next */
  cov_c41zo5yr7().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_c41zo5yr7().b[13][0]++;
    cov_c41zo5yr7().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_c41zo5yr7().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_c41zo5yr7().b[14][0]++;
        cov_c41zo5yr7().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_c41zo5yr7().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_c41zo5yr7().b[13][1]++;
  }
  cov_c41zo5yr7().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_c41zo5yr7().s[23]++;
  return result;
}));
/* istanbul ignore next */
cov_c41zo5yr7().s[24]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_c41zo5yr7().s[25]++;
exports.SmartNutritionTracker = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_c41zo5yr7().s[26]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_c41zo5yr7().s[27]++, __importStar(require("react")));
const lucide_react_1 =
/* istanbul ignore next */
(cov_c41zo5yr7().s[28]++, require("lucide-react"));
const framer_motion_1 =
/* istanbul ignore next */
(cov_c41zo5yr7().s[29]++, require("framer-motion"));
const supabase_1 =
/* istanbul ignore next */
(cov_c41zo5yr7().s[30]++, require("@/lib/supabase"));
const nutrition_mapping_1 =
/* istanbul ignore next */
(cov_c41zo5yr7().s[31]++, require("@/features/nutrition/services/nutrition-mapping"));
const initialState =
/* istanbul ignore next */
(cov_c41zo5yr7().s[32]++, {
  currentState: 'idle',
  todaysSummary: null,
  currentMeal: {
    type: null,
    items: [],
    totalCalories: 0,
    totalMacros: {
      protein: 0,
      carbs: 0,
      fat: 0
    }
  },
  foodSearch: {
    query: '',
    results: [],
    isSearching: false
  },
  aiAnalysis: {
    isAnalyzing: false,
    currentAnalysis: null,
    recommendations: [],
    insights: []
  },
  goals: {
    dailyCalories: 2000,
    proteinTarget: 150,
    carbTarget: 250,
    fatTarget: 67
  },
  progress: {
    caloriesConsumed: 0,
    caloriesRemaining: 2000,
    macroProgress: {
      protein: 0,
      carbs: 0,
      fat: 0
    },
    adherenceScore: 100
  },
  error: null,
  lastUpdate: new Date()
});
/* istanbul ignore next */
cov_c41zo5yr7().s[33]++;
const nutritionReducer = (state, action) => {
  /* istanbul ignore next */
  cov_c41zo5yr7().f[6]++;
  cov_c41zo5yr7().s[34]++;
  switch (action.type) {
    case 'SET_STATE':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][0]++;
      cov_c41zo5yr7().s[35]++;
      return {
        ...state,
        currentState: action.state,
        error: null
      };
    case 'SET_MEAL_TYPE':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][1]++;
      cov_c41zo5yr7().s[36]++;
      return {
        ...state,
        currentMeal: {
          ...state.currentMeal,
          type: action.mealType
        },
        currentState: 'adding_meal'
      };
    case 'RESET_MEAL_TYPE':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][2]++;
      cov_c41zo5yr7().s[37]++;
      return {
        ...state,
        currentMeal: {
          ...initialState.currentMeal
        },
        currentState: 'idle'
      };
    case 'ADD_FOOD_ITEM':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][3]++;
      {
        const newItems =
        /* istanbul ignore next */
        (cov_c41zo5yr7().s[38]++, [...state.currentMeal.items, action.item]);
        const totalCalories =
        /* istanbul ignore next */
        (cov_c41zo5yr7().s[39]++, newItems.reduce((sum, item) => {
          /* istanbul ignore next */
          cov_c41zo5yr7().f[7]++;
          cov_c41zo5yr7().s[40]++;
          return sum + item.calories;
        }, 0));
        const totalMacros =
        /* istanbul ignore next */
        (cov_c41zo5yr7().s[41]++, newItems.reduce((totals, item) => {
          /* istanbul ignore next */
          cov_c41zo5yr7().f[8]++;
          cov_c41zo5yr7().s[42]++;
          return {
            protein: totals.protein + item.macros.protein,
            carbs: totals.carbs + item.macros.carbohydrates,
            fat: totals.fat + item.macros.fat
          };
        }, {
          protein: 0,
          carbs: 0,
          fat: 0
        }));
        /* istanbul ignore next */
        cov_c41zo5yr7().s[43]++;
        return {
          ...state,
          currentMeal: {
            ...state.currentMeal,
            items: newItems,
            totalCalories,
            totalMacros
          },
          lastUpdate: new Date()
        };
      }
    case 'REMOVE_FOOD_ITEM':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][4]++;
      {
        const newItems =
        /* istanbul ignore next */
        (cov_c41zo5yr7().s[44]++, state.currentMeal.items.filter(item => {
          /* istanbul ignore next */
          cov_c41zo5yr7().f[9]++;
          cov_c41zo5yr7().s[45]++;
          return item.id !== action.itemId;
        }));
        const totalCalories =
        /* istanbul ignore next */
        (cov_c41zo5yr7().s[46]++, newItems.reduce((sum, item) => {
          /* istanbul ignore next */
          cov_c41zo5yr7().f[10]++;
          cov_c41zo5yr7().s[47]++;
          return sum + item.calories;
        }, 0));
        const totalMacros =
        /* istanbul ignore next */
        (cov_c41zo5yr7().s[48]++, newItems.reduce((totals, item) => {
          /* istanbul ignore next */
          cov_c41zo5yr7().f[11]++;
          cov_c41zo5yr7().s[49]++;
          return {
            protein: totals.protein + item.macros.protein,
            carbs: totals.carbs + item.macros.carbohydrates,
            fat: totals.fat + item.macros.fat
          };
        }, {
          protein: 0,
          carbs: 0,
          fat: 0
        }));
        /* istanbul ignore next */
        cov_c41zo5yr7().s[50]++;
        return {
          ...state,
          currentMeal: {
            ...state.currentMeal,
            items: newItems,
            totalCalories,
            totalMacros
          }
        };
      }
    case 'UPDATE_FOOD_SEARCH':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][5]++;
      cov_c41zo5yr7().s[51]++;
      return {
        ...state,
        foodSearch: {
          query: action.query,
          results:
          /* istanbul ignore next */
          (cov_c41zo5yr7().b[17][0]++, action.results) ||
          /* istanbul ignore next */
          (cov_c41zo5yr7().b[17][1]++, state.foodSearch.results),
          isSearching: !action.results
        }
      };
    case 'START_AI_ANALYSIS':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][6]++;
      cov_c41zo5yr7().s[52]++;
      return {
        ...state,
        currentState: 'analyzing_meal',
        aiAnalysis: {
          ...state.aiAnalysis,
          isAnalyzing: true
        }
      };
    case 'SET_AI_ANALYSIS':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][7]++;
      cov_c41zo5yr7().s[53]++;
      return {
        ...state,
        currentState: 'idle',
        aiAnalysis: {
          isAnalyzing: false,
          currentAnalysis: action.analysis,
          recommendations: action.analysis.aiRecommendations.improvements,
          insights: action.analysis.aiRecommendations.alternatives
        }
      };
    case 'UPDATE_DAILY_SUMMARY':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][8]++;
      cov_c41zo5yr7().s[54]++;
      return {
        ...state,
        todaysSummary: action.summary,
        progress: {
          caloriesConsumed: action.summary.totalCalories,
          caloriesRemaining: action.summary.nutritionGoals.calorieGoal - action.summary.totalCalories,
          macroProgress: {
            protein: action.summary.macroTotals.protein / action.summary.nutritionGoals.proteinGoal * 100,
            carbs: action.summary.macroTotals.carbohydrates / action.summary.nutritionGoals.carbGoal * 100,
            fat: action.summary.macroTotals.fat / action.summary.nutritionGoals.fatGoal * 100
          },
          adherenceScore: action.summary.adherenceScores.calorieAdherence
        }
      };
    case 'SET_ERROR':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][9]++;
      cov_c41zo5yr7().s[55]++;
      return {
        ...state,
        error: action.error,
        currentState: 'error'
      };
    case 'CLEAR_ERROR':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][10]++;
      cov_c41zo5yr7().s[56]++;
      return {
        ...state,
        error: null
      };
    case 'UPDATE_GOALS':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][11]++;
      cov_c41zo5yr7().s[57]++;
      return {
        ...state,
        goals: {
          ...state.goals,
          ...action.goals
        }
      };
    case 'SYNC_COMPLETE':
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][12]++;
      cov_c41zo5yr7().s[58]++;
      return {
        ...state,
        currentState: 'idle',
        lastUpdate: new Date()
      };
    default:
      /* istanbul ignore next */
      cov_c41zo5yr7().b[16][13]++;
      cov_c41zo5yr7().s[59]++;
      return state;
  }
};
/* istanbul ignore next */
cov_c41zo5yr7().s[60]++;
const SmartNutritionTracker = ({
  userId,
  className =
  /* istanbul ignore next */
  (cov_c41zo5yr7().b[18][0]++, '')
}) => {
  /* istanbul ignore next */
  cov_c41zo5yr7().f[12]++;
  const [state, dispatch] =
  /* istanbul ignore next */
  (cov_c41zo5yr7().s[61]++, (0, react_1.useReducer)(nutritionReducer, initialState));
  const [showMealTypeSelector, setShowMealTypeSelector] =
  /* istanbul ignore next */
  (cov_c41zo5yr7().s[62]++, (0, react_1.useState)(false));
  const [selectedDate, setSelectedDate] =
  /* istanbul ignore next */
  (cov_c41zo5yr7().s[63]++, (0, react_1.useState)(new Date().toISOString().split('T')[0]));
  // =====================================
  // HOOKS ET EFFETS
  // =====================================
  // Chargement des données journalières
  /* istanbul ignore next */
  cov_c41zo5yr7().s[64]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_c41zo5yr7().f[13]++;
    cov_c41zo5yr7().s[65]++;
    loadDailyData();
  }, [userId, selectedDate]);
  const loadDailyData =
  /* istanbul ignore next */
  (cov_c41zo5yr7().s[66]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_c41zo5yr7().f[14]++;
    cov_c41zo5yr7().s[67]++;
    try {
      /* istanbul ignore next */
      cov_c41zo5yr7().s[68]++;
      dispatch({
        type: 'SET_STATE',
        state: 'syncing_data'
      });
      // Charger les repas du jour
      const {
        data: mealsData,
        error: mealsError
      } =
      /* istanbul ignore next */
      (cov_c41zo5yr7().s[69]++, await supabase_1.supabase.from('meals').select(`
          *,
          meal_analysis:meal_analysis(*)
        `).eq('user_id', userId).gte('created_at', `${selectedDate}T00:00:00`).lt('created_at', `${selectedDate}T23:59:59`));
      /* istanbul ignore next */
      cov_c41zo5yr7().s[70]++;
      if (mealsError) {
        /* istanbul ignore next */
        cov_c41zo5yr7().b[19][0]++;
        cov_c41zo5yr7().s[71]++;
        throw mealsError;
      } else
      /* istanbul ignore next */
      {
        cov_c41zo5yr7().b[19][1]++;
      }
      // Construire le résumé journalier
      const dailySummary =
      /* istanbul ignore next */
      (cov_c41zo5yr7().s[72]++, buildDailySummary(
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[20][0]++, mealsData) ||
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[20][1]++, [])));
      /* istanbul ignore next */
      cov_c41zo5yr7().s[73]++;
      dispatch({
        type: 'UPDATE_DAILY_SUMMARY',
        summary: dailySummary
      });
      /* istanbul ignore next */
      cov_c41zo5yr7().s[74]++;
      dispatch({
        type: 'SYNC_COMPLETE'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_c41zo5yr7().s[75]++;
      console.error('Erreur chargement données:', error);
      /* istanbul ignore next */
      cov_c41zo5yr7().s[76]++;
      dispatch({
        type: 'SET_ERROR',
        error: 'Erreur lors du chargement des données'
      });
    }
  }, [userId, selectedDate]));
  /* istanbul ignore next */
  cov_c41zo5yr7().s[77]++;
  const buildDailySummary = mealsData => {
    /* istanbul ignore next */
    cov_c41zo5yr7().f[15]++;
    const totalCalories =
    /* istanbul ignore next */
    (cov_c41zo5yr7().s[78]++, mealsData.reduce((sum, meal) => {
      /* istanbul ignore next */
      cov_c41zo5yr7().f[16]++;
      cov_c41zo5yr7().s[79]++;
      return sum + (
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[21][0]++, meal.calories) ||
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[21][1]++, 0));
    }, 0));
    const macroTotals =
    /* istanbul ignore next */
    (cov_c41zo5yr7().s[80]++, mealsData.reduce((totals, meal) => {
      /* istanbul ignore next */
      cov_c41zo5yr7().f[17]++;
      cov_c41zo5yr7().s[81]++;
      return {
        protein: totals.protein + (
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[22][0]++, meal.protein_g) ||
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[22][1]++, 0)),
        carbohydrates: totals.carbohydrates + (
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[23][0]++, meal.carbs_g) ||
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[23][1]++, 0)),
        fat: totals.fat + (
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[24][0]++, meal.fat_g) ||
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[24][1]++, 0)),
        fiber: totals.fiber + (
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[25][0]++, meal.fiber_g) ||
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[25][1]++, 0))
      };
    }, {
      protein: 0,
      carbohydrates: 0,
      fat: 0,
      fiber: 0
    }));
    /* istanbul ignore next */
    cov_c41zo5yr7().s[82]++;
    return {
      date: selectedDate,
      userId,
      totalCalories,
      macroTotals,
      mealBreakdown: {
        breakfast: {
          calories: 0,
          percentage: 0
        },
        lunch: {
          calories: 0,
          percentage: 0
        },
        dinner: {
          calories: 0,
          percentage: 0
        },
        snacks: {
          calories: 0,
          percentage: 0
        }
      },
      nutritionGoals: {
        calorieGoal: state.goals.dailyCalories,
        proteinGoal: state.goals.proteinTarget,
        carbGoal: state.goals.carbTarget,
        fatGoal: state.goals.fatTarget
      },
      adherenceScores: {
        calorieAdherence: Math.min(100, totalCalories / state.goals.dailyCalories * 100),
        macroAdherence: 85,
        mealTimingAdherence: 90,
        foodQualityScore: 88
      },
      aiInsights: {
        dayRating: 85,
        keyWins: ["Excellent apport en protéines", "Hydratation optimale"],
        improvementAreas: ["Augmenter les fibres", "Équilibrer les collations"],
        tomorrowSuggestions: ["Préparer des légumes à croquer", "Planifier le petit-déjeuner"]
      }
    };
  };
  // =====================================
  // GESTION DES REPAS
  // =====================================
  /* istanbul ignore next */
  cov_c41zo5yr7().s[83]++;
  const handleStartMeal = mealType => {
    /* istanbul ignore next */
    cov_c41zo5yr7().f[18]++;
    cov_c41zo5yr7().s[84]++;
    dispatch({
      type: 'SET_MEAL_TYPE',
      mealType
    });
    /* istanbul ignore next */
    cov_c41zo5yr7().s[85]++;
    setShowMealTypeSelector(false);
  };
  /* istanbul ignore next */
  cov_c41zo5yr7().s[86]++;
  const handleAddFoodItem = async (foodData, quantity =
  /* istanbul ignore next */
  (cov_c41zo5yr7().b[26][0]++, 100)) => {
    /* istanbul ignore next */
    cov_c41zo5yr7().f[19]++;
    cov_c41zo5yr7().s[87]++;
    try {
      const newItem =
      /* istanbul ignore next */
      (cov_c41zo5yr7().s[88]++, {
        id: `temp_${Date.now()}`,
        userId,
        mealId: `meal_${Date.now()}`,
        name: foodData.name,
        quantity,
        unit: 'g',
        calories: Math.round(foodData.nutritionPer100g.calories * quantity / 100),
        macros: {
          protein: foodData.nutritionPer100g.protein * quantity / 100,
          carbohydrates: foodData.nutritionPer100g.carbohydrates * quantity / 100,
          fat: foodData.nutritionPer100g.fat * quantity / 100,
          fiber: foodData.nutritionPer100g.fiber * quantity / 100,
          sugar: 0,
          sodium: 0
        },
        mealType: state.currentMeal.type,
        mealTiming: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      });
      /* istanbul ignore next */
      cov_c41zo5yr7().s[89]++;
      dispatch({
        type: 'ADD_FOOD_ITEM',
        item: newItem
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_c41zo5yr7().s[90]++;
      console.error('Erreur ajout aliment:', error);
      /* istanbul ignore next */
      cov_c41zo5yr7().s[91]++;
      dispatch({
        type: 'SET_ERROR',
        error: 'Erreur lors de l\'ajout de l\'aliment'
      });
    }
  };
  /* istanbul ignore next */
  cov_c41zo5yr7().s[92]++;
  const handleFinalizeMeal = async () => {
    /* istanbul ignore next */
    cov_c41zo5yr7().f[20]++;
    cov_c41zo5yr7().s[93]++;
    if (state.currentMeal.items.length === 0) {
      /* istanbul ignore next */
      cov_c41zo5yr7().b[27][0]++;
      cov_c41zo5yr7().s[94]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_c41zo5yr7().b[27][1]++;
    }
    cov_c41zo5yr7().s[95]++;
    try {
      /* istanbul ignore next */
      cov_c41zo5yr7().s[96]++;
      dispatch({
        type: 'START_AI_ANALYSIS'
      });
      // Sauvegarder le repas
      const mealData =
      /* istanbul ignore next */
      (cov_c41zo5yr7().s[97]++, {
        id: `meal_${Date.now()}`,
        user_id: userId,
        name: `${state.currentMeal.type} - ${new Date().toLocaleTimeString()}`,
        meal_type: state.currentMeal.type,
        calories: state.currentMeal.totalCalories,
        protein_g: state.currentMeal.totalMacros.protein,
        carbs_g: state.currentMeal.totalMacros.carbs,
        fat_g: state.currentMeal.totalMacros.fat,
        fiber_g: 0,
        created_at: new Date().toISOString()
      });
      const {
        data: savedMeal,
        error: mealError
      } =
      /* istanbul ignore next */
      (cov_c41zo5yr7().s[98]++, await supabase_1.supabase.from('meals').insert(mealData).select().single());
      /* istanbul ignore next */
      cov_c41zo5yr7().s[99]++;
      if (mealError) {
        /* istanbul ignore next */
        cov_c41zo5yr7().b[28][0]++;
        cov_c41zo5yr7().s[100]++;
        throw mealError;
      } else
      /* istanbul ignore next */
      {
        cov_c41zo5yr7().b[28][1]++;
      }
      // Analyse IA
      const scores =
      /* istanbul ignore next */
      (cov_c41zo5yr7().s[101]++, (0, nutrition_mapping_1.calculateNutritionScores)(state.currentMeal.totalCalories, state.currentMeal.totalMacros.protein, state.currentMeal.totalMacros.carbs, state.currentMeal.totalMacros.fat, 0,
      // fiber
      0 // sugar
      ));
      const recommendations =
      /* istanbul ignore next */
      (cov_c41zo5yr7().s[102]++, (0, nutrition_mapping_1.generateNutritionRecommendations)(state.currentMeal.totalCalories, state.currentMeal.totalMacros.protein, state.currentMeal.totalMacros.carbs, state.currentMeal.totalMacros.fat, 0, state.currentMeal.type));
      const analysis =
      /* istanbul ignore next */
      (cov_c41zo5yr7().s[103]++, {
        id: `analysis_${Date.now()}`,
        userId,
        mealId: savedMeal.id,
        totalCalories: state.currentMeal.totalCalories,
        macroBreakdown: {
          protein: {
            grams: state.currentMeal.totalMacros.protein,
            percentage: state.currentMeal.totalMacros.protein * 4 / state.currentMeal.totalCalories * 100,
            calories: state.currentMeal.totalMacros.protein * 4
          },
          carbs: {
            grams: state.currentMeal.totalMacros.carbs,
            percentage: state.currentMeal.totalMacros.carbs * 4 / state.currentMeal.totalCalories * 100,
            calories: state.currentMeal.totalMacros.carbs * 4
          },
          fat: {
            grams: state.currentMeal.totalMacros.fat,
            percentage: state.currentMeal.totalMacros.fat * 9 / state.currentMeal.totalCalories * 100,
            calories: state.currentMeal.totalMacros.fat * 9
          }
        },
        nutritionScores: {
          overallQuality: scores.overallQuality,
          macroBalance: scores.macroBalance,
          micronutrientDensity: 75,
          processedFoodRatio: 30,
          satietyIndex: 80,
          inflammatoryIndex: 10
        },
        aiRecommendations: {
          improvements: recommendations,
          alternatives: ["Remplacer par des alternatives complètes", "Ajouter des légumes colorés"],
          timing: ["Optimal pour ce moment de la journée"],
          portionAdjustments: []
        },
        complianceMetrics: {
          calorieTarget: {
            actual: state.currentMeal.totalCalories,
            target: 500,
            variance: 0
          },
          proteinTarget: {
            actual: state.currentMeal.totalMacros.protein,
            target: 25,
            variance: 0
          },
          carbTarget: {
            actual: state.currentMeal.totalMacros.carbs,
            target: 60,
            variance: 0
          },
          fatTarget: {
            actual: state.currentMeal.totalMacros.fat,
            target: 20,
            variance: 0
          }
        },
        metabolicImpact: {
          estimatedGlycemicLoad: 25,
          insulinResponse: 'moderate',
          satietyDuration: 3.5,
          energyProvision: 'sustained'
        },
        createdAt: new Date(),
        updatedAt: new Date()
      });
      /* istanbul ignore next */
      cov_c41zo5yr7().s[104]++;
      dispatch({
        type: 'SET_AI_ANALYSIS',
        analysis
      });
      // Recharger les données journalières
      /* istanbul ignore next */
      cov_c41zo5yr7().s[105]++;
      await loadDailyData();
    } catch (error) {
      /* istanbul ignore next */
      cov_c41zo5yr7().s[106]++;
      console.error('Erreur finalisation repas:', error);
      /* istanbul ignore next */
      cov_c41zo5yr7().s[107]++;
      dispatch({
        type: 'SET_ERROR',
        error: 'Erreur lors de la sauvegarde du repas'
      });
    }
  };
  // =====================================
  // RECHERCHE D'ALIMENTS
  // =====================================
  const searchFood =
  /* istanbul ignore next */
  (cov_c41zo5yr7().s[108]++, (0, react_1.useCallback)(async query => {
    /* istanbul ignore next */
    cov_c41zo5yr7().f[21]++;
    cov_c41zo5yr7().s[109]++;
    if (query.length < 2) {
      /* istanbul ignore next */
      cov_c41zo5yr7().b[29][0]++;
      cov_c41zo5yr7().s[110]++;
      dispatch({
        type: 'UPDATE_FOOD_SEARCH',
        query: '',
        results: []
      });
      /* istanbul ignore next */
      cov_c41zo5yr7().s[111]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_c41zo5yr7().b[29][1]++;
    }
    cov_c41zo5yr7().s[112]++;
    dispatch({
      type: 'UPDATE_FOOD_SEARCH',
      query
    });
    /* istanbul ignore next */
    cov_c41zo5yr7().s[113]++;
    try {
      // Simulation base de données alimentaire (remplacer par vraie API)
      const mockResults =
      /* istanbul ignore next */
      (cov_c41zo5yr7().s[114]++, [{
        id: '1',
        name: 'Pomme Golden',
        category: 'Fruits',
        nutritionPer100g: {
          calories: 52,
          protein: 0.3,
          carbohydrates: 14,
          fat: 0.2,
          fiber: 2.4
        },
        verified: true,
        popularity: 95
      }, {
        id: '2',
        name: 'Blanc de poulet grillé',
        category: 'Viandes',
        nutritionPer100g: {
          calories: 165,
          protein: 31,
          carbohydrates: 0,
          fat: 3.6,
          fiber: 0
        },
        verified: true,
        popularity: 88
      }, {
        id: '3',
        name: 'Avoine complète',
        category: 'Céréales',
        nutritionPer100g: {
          calories: 389,
          protein: 17,
          carbohydrates: 66,
          fat: 7,
          fiber: 10
        },
        verified: true,
        popularity: 82
      }].filter(item => {
        /* istanbul ignore next */
        cov_c41zo5yr7().f[22]++;
        cov_c41zo5yr7().s[115]++;
        return item.name.toLowerCase().includes(query.toLowerCase());
      }));
      /* istanbul ignore next */
      cov_c41zo5yr7().s[116]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_c41zo5yr7().f[23]++;
        cov_c41zo5yr7().s[117]++;
        dispatch({
          type: 'UPDATE_FOOD_SEARCH',
          query,
          results: mockResults
        });
      }, 500);
    } catch (error) {
      /* istanbul ignore next */
      cov_c41zo5yr7().s[118]++;
      console.error('Erreur recherche aliments:', error);
      /* istanbul ignore next */
      cov_c41zo5yr7().s[119]++;
      dispatch({
        type: 'SET_ERROR',
        error: 'Erreur lors de la recherche d\'aliments'
      });
    }
  }, []));
  // =====================================
  // RENDU INTERFACE
  // =====================================
  /* istanbul ignore next */
  cov_c41zo5yr7().s[120]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: `bg-white rounded-2xl shadow-xl border border-gray-100 ${className}`,
    children: [(0, jsx_runtime_1.jsxs)("div", {
      className: "bg-gradient-to-r from-green-600 to-emerald-600 p-6 text-white",
      children: [(0, jsx_runtime_1.jsxs)("div", {
        className: "flex items-center justify-between mb-4",
        children: [(0, jsx_runtime_1.jsxs)("div", {
          className: "flex items-center space-x-3",
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Apple, {
            className: "h-8 w-8"
          }), (0, jsx_runtime_1.jsxs)("div", {
            children: [(0, jsx_runtime_1.jsx)("h2", {
              className: "text-2xl font-bold",
              children: "Smart Nutrition"
            }), (0, jsx_runtime_1.jsx)("p", {
              className: "text-green-100",
              children: "IA Nutritionnelle Avanc\u00E9e"
            })]
          })]
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: "text-right",
          children: [(0, jsx_runtime_1.jsx)("div", {
            className: "text-2xl font-bold",
            children: state.progress.caloriesConsumed
          }), (0, jsx_runtime_1.jsx)("div", {
            className: "text-sm text-green-100",
            children: "kcal aujourd'hui"
          })]
        })]
      }), (0, jsx_runtime_1.jsxs)("div", {
        className: "grid grid-cols-3 gap-4",
        children: [(0, jsx_runtime_1.jsxs)("div", {
          children: [(0, jsx_runtime_1.jsx)("div", {
            className: "text-xs mb-1",
            children: "Prot\u00E9ines"
          }), (0, jsx_runtime_1.jsx)("div", {
            className: "bg-green-800 rounded-full h-2",
            children: (0, jsx_runtime_1.jsx)("div", {
              className: "bg-white rounded-full h-2 transition-all duration-300",
              style: {
                width: `${Math.min(100, state.progress.macroProgress.protein)}%`
              }
            })
          })]
        }), (0, jsx_runtime_1.jsxs)("div", {
          children: [(0, jsx_runtime_1.jsx)("div", {
            className: "text-xs mb-1",
            children: "Glucides"
          }), (0, jsx_runtime_1.jsx)("div", {
            className: "bg-green-800 rounded-full h-2",
            children: (0, jsx_runtime_1.jsx)("div", {
              className: "bg-white rounded-full h-2 transition-all duration-300",
              style: {
                width: `${Math.min(100, state.progress.macroProgress.carbs)}%`
              }
            })
          })]
        }), (0, jsx_runtime_1.jsxs)("div", {
          children: [(0, jsx_runtime_1.jsx)("div", {
            className: "text-xs mb-1",
            children: "Lipides"
          }), (0, jsx_runtime_1.jsx)("div", {
            className: "bg-green-800 rounded-full h-2",
            children: (0, jsx_runtime_1.jsx)("div", {
              className: "bg-white rounded-full h-2 transition-all duration-300",
              style: {
                width: `${Math.min(100, state.progress.macroProgress.fat)}%`
              }
            })
          })]
        })]
      })]
    }), (0, jsx_runtime_1.jsxs)("div", {
      className: "p-6",
      children: [(0, jsx_runtime_1.jsx)("div", {
        className: "mb-6",
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: "flex items-center space-x-2 mb-2",
          children: [(0, jsx_runtime_1.jsx)("div", {
            className: `w-3 h-3 rounded-full ${state.currentState === 'idle' ?
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[30][0]++, 'bg-green-500') :
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[30][1]++, state.currentState === 'analyzing_meal' ?
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[31][0]++, 'bg-yellow-500 animate-pulse') :
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[31][1]++, state.currentState === 'error' ?
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[32][0]++, 'bg-red-500') :
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[32][1]++, 'bg-blue-500')))}`
          }), (0, jsx_runtime_1.jsxs)("span", {
            className: "text-sm font-medium text-gray-600",
            children: [
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[33][0]++, state.currentState === 'idle') &&
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[33][1]++, 'Prêt pour l\'analyse'),
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[34][0]++, state.currentState === 'adding_meal') &&
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[34][1]++, 'Ajout en cours...'),
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[35][0]++, state.currentState === 'analyzing_meal') &&
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[35][1]++, 'Analyse IA en cours...'),
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[36][0]++, state.currentState === 'syncing_data') &&
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[36][1]++, 'Synchronisation...'),
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[37][0]++, state.currentState === 'error') &&
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[37][1]++, 'Erreur détectée')]
          })]
        })
      }), !state.currentMeal.type ?
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[38][0]++, (0, jsx_runtime_1.jsxs)("button", {
        onClick: () => {
          /* istanbul ignore next */
          cov_c41zo5yr7().f[24]++;
          cov_c41zo5yr7().s[121]++;
          return setShowMealTypeSelector(true);
        },
        className: "w-full bg-gradient-to-r from-green-600 to-emerald-600 text-white py-4 px-6 rounded-xl font-medium transition-all duration-200 transform hover:scale-105 hover:shadow-lg flex items-center justify-center space-x-2",
        children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, {
          className: "h-5 w-5"
        }), (0, jsx_runtime_1.jsx)("span", {
          children: "Ajouter un repas"
        })]
      })) :
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[38][1]++, (0, jsx_runtime_1.jsx)("div", {
        className: "space-y-4",
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: "bg-gray-50 rounded-xl p-4",
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: "flex items-center justify-between mb-3",
            children: [(0, jsx_runtime_1.jsx)("h3", {
              className: "font-semibold text-gray-800 capitalize",
              children: state.currentMeal.type?.replace('_', ' ')
            }), (0, jsx_runtime_1.jsxs)("div", {
              className: "text-lg font-bold text-green-600",
              children: [state.currentMeal.totalCalories, " kcal"]
            })]
          }), (0, jsx_runtime_1.jsx)("div", {
            className: "space-y-2 mb-4",
            children: state.currentMeal.items.map(item => {
              /* istanbul ignore next */
              cov_c41zo5yr7().f[25]++;
              cov_c41zo5yr7().s[122]++;
              return (0, jsx_runtime_1.jsxs)("div", {
                className: "flex items-center justify-between bg-white rounded-lg p-3",
                children: [(0, jsx_runtime_1.jsxs)("div", {
                  children: [(0, jsx_runtime_1.jsx)("div", {
                    className: "font-medium",
                    children: item.name
                  }), (0, jsx_runtime_1.jsxs)("div", {
                    className: "text-sm text-gray-500",
                    children: [item.quantity, item.unit]
                  })]
                }), (0, jsx_runtime_1.jsxs)("div", {
                  className: "text-right",
                  children: [(0, jsx_runtime_1.jsxs)("div", {
                    className: "font-medium",
                    children: [item.calories, " kcal"]
                  }), (0, jsx_runtime_1.jsx)("button", {
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_c41zo5yr7().f[26]++;
                      cov_c41zo5yr7().s[123]++;
                      return dispatch({
                        type: 'REMOVE_FOOD_ITEM',
                        itemId: item.id
                      });
                    },
                    className: "text-red-500 text-sm hover:text-red-700",
                    children: "Retirer"
                  })]
                })]
              }, item.id);
            })
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: "mb-4",
            children: [(0, jsx_runtime_1.jsxs)("div", {
              className: "relative",
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Search, {
                className: "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400"
              }), (0, jsx_runtime_1.jsx)("input", {
                type: "text",
                value: state.foodSearch.query,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_c41zo5yr7().f[27]++;
                  cov_c41zo5yr7().s[124]++;
                  return searchFood(e.target.value);
                },
                placeholder: "Rechercher un aliment...",
                className: "w-full pl-10 pr-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              })]
            }),
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[39][0]++, state.foodSearch.results.length > 0) &&
            /* istanbul ignore next */
            (cov_c41zo5yr7().b[39][1]++, (0, jsx_runtime_1.jsx)("div", {
              className: "mt-2 bg-white border border-gray-200 rounded-lg shadow-lg max-h-60 overflow-y-auto",
              children: state.foodSearch.results.map(food => {
                /* istanbul ignore next */
                cov_c41zo5yr7().f[28]++;
                cov_c41zo5yr7().s[125]++;
                return (0, jsx_runtime_1.jsxs)("button", {
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_c41zo5yr7().f[29]++;
                    cov_c41zo5yr7().s[126]++;
                    return handleAddFoodItem(food);
                  },
                  className: "w-full text-left p-3 hover:bg-gray-50 border-b border-gray-100 last:border-b-0",
                  children: [(0, jsx_runtime_1.jsx)("div", {
                    className: "font-medium",
                    children: food.name
                  }), (0, jsx_runtime_1.jsxs)("div", {
                    className: "text-sm text-gray-500",
                    children: [food.nutritionPer100g.calories, " kcal/100g - ", food.category]
                  })]
                }, food.id);
              })
            }))]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: "flex space-x-2",
            children: [(0, jsx_runtime_1.jsx)("button", {
              onClick: handleFinalizeMeal,
              disabled:
              /* istanbul ignore next */
              (cov_c41zo5yr7().b[40][0]++, state.currentMeal.items.length === 0) ||
              /* istanbul ignore next */
              (cov_c41zo5yr7().b[40][1]++, state.currentState === 'analyzing_meal'),
              className: "flex-1 bg-green-600 text-white py-2 px-4 rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed",
              children: state.currentState === 'analyzing_meal' ?
              /* istanbul ignore next */
              (cov_c41zo5yr7().b[41][0]++, (0, jsx_runtime_1.jsxs)("div", {
                className: "flex items-center justify-center",
                children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Brain, {
                  className: "h-4 w-4 mr-2 animate-pulse"
                }), "Analyse IA..."]
              })) :
              /* istanbul ignore next */
              (cov_c41zo5yr7().b[41][1]++, 'Finaliser le repas')
            }), (0, jsx_runtime_1.jsx)("button", {
              onClick: () => {
                /* istanbul ignore next */
                cov_c41zo5yr7().f[30]++;
                cov_c41zo5yr7().s[127]++;
                return dispatch({
                  type: 'RESET_MEAL_TYPE'
                });
              },
              className: "px-4 py-2 border border-gray-300 rounded-lg text-gray-600 hover:bg-gray-50",
              children: "Annuler"
            })]
          })]
        })
      })),
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[42][0]++, state.aiAnalysis.currentAnalysis) &&
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[42][1]++, (0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, {
        initial: {
          opacity: 0,
          y: 20
        },
        animate: {
          opacity: 1,
          y: 0
        },
        className: "mt-6 bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-200",
        children: [(0, jsx_runtime_1.jsxs)("div", {
          className: "flex items-center space-x-2 mb-4",
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Brain, {
            className: "h-5 w-5 text-blue-600"
          }), (0, jsx_runtime_1.jsx)("h3", {
            className: "font-semibold text-blue-900",
            children: "Analyse IA du dernier repas"
          })]
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: "grid grid-cols-2 gap-4 mb-4",
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: "bg-white rounded-lg p-3 text-center",
            children: [(0, jsx_runtime_1.jsx)("div", {
              className: "text-2xl font-bold text-green-600",
              children: state.aiAnalysis.currentAnalysis.nutritionScores.overallQuality
            }), (0, jsx_runtime_1.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "Qualit\u00E9 globale"
            })]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: "bg-white rounded-lg p-3 text-center",
            children: [(0, jsx_runtime_1.jsx)("div", {
              className: "text-2xl font-bold text-blue-600",
              children: state.aiAnalysis.currentAnalysis.nutritionScores.macroBalance
            }), (0, jsx_runtime_1.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "\u00C9quilibre macros"
            })]
          })]
        }),
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[43][0]++, state.aiAnalysis.recommendations.length > 0) &&
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[43][1]++, (0, jsx_runtime_1.jsxs)("div", {
          children: [(0, jsx_runtime_1.jsx)("h4", {
            className: "font-medium text-gray-800 mb-2",
            children: "Recommandations IA"
          }), (0, jsx_runtime_1.jsx)("div", {
            className: "space-y-1",
            children: state.aiAnalysis.recommendations.slice(0, 3).map((rec, index) => {
              /* istanbul ignore next */
              cov_c41zo5yr7().f[31]++;
              cov_c41zo5yr7().s[128]++;
              return (0, jsx_runtime_1.jsxs)("div", {
                className: "text-sm text-gray-600 flex items-start space-x-2",
                children: [(0, jsx_runtime_1.jsx)(lucide_react_1.CheckCircle, {
                  className: "h-4 w-4 text-green-500 mt-0.5 flex-shrink-0"
                }), (0, jsx_runtime_1.jsx)("span", {
                  children: rec
                })]
              }, index);
            })
          })]
        }))]
      })),
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[44][0]++, state.todaysSummary) &&
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[44][1]++, (0, jsx_runtime_1.jsxs)("div", {
        className: "mt-6 space-y-4",
        children: [(0, jsx_runtime_1.jsxs)("h3", {
          className: "font-semibold text-gray-800 flex items-center space-x-2",
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.BarChart3, {
            className: "h-5 w-5"
          }), (0, jsx_runtime_1.jsx)("span", {
            children: "R\u00E9sum\u00E9 de la journ\u00E9e"
          })]
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: "grid grid-cols-2 gap-4",
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: "bg-gray-50 rounded-lg p-4 text-center",
            children: [(0, jsx_runtime_1.jsxs)("div", {
              className: "text-2xl font-bold text-gray-800",
              children: [Math.round(state.todaysSummary.adherenceScores.calorieAdherence), "%"]
            }), (0, jsx_runtime_1.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "Adh\u00E9rence calorique"
            })]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: "bg-gray-50 rounded-lg p-4 text-center",
            children: [(0, jsx_runtime_1.jsx)("div", {
              className: "text-2xl font-bold text-purple-600",
              children: state.todaysSummary.aiInsights.dayRating
            }), (0, jsx_runtime_1.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "Score IA du jour"
            })]
          })]
        }),
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[45][0]++, state.todaysSummary.aiInsights.keyWins.length > 0) &&
        /* istanbul ignore next */
        (cov_c41zo5yr7().b[45][1]++, (0, jsx_runtime_1.jsxs)("div", {
          className: "bg-green-50 rounded-lg p-4",
          children: [(0, jsx_runtime_1.jsxs)("h4", {
            className: "font-medium text-green-800 mb-2 flex items-center space-x-2",
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Award, {
              className: "h-4 w-4"
            }), (0, jsx_runtime_1.jsx)("span", {
              children: "Points forts aujourd'hui"
            })]
          }), (0, jsx_runtime_1.jsx)("div", {
            className: "space-y-1",
            children: state.todaysSummary.aiInsights.keyWins.map((win, index) => {
              /* istanbul ignore next */
              cov_c41zo5yr7().f[32]++;
              cov_c41zo5yr7().s[129]++;
              return (0, jsx_runtime_1.jsxs)("div", {
                className: "text-sm text-green-700",
                children: ["\u2022 ", win]
              }, index);
            })
          })]
        }))]
      })),
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[46][0]++, state.error) &&
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[46][1]++, (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
        initial: {
          opacity: 0,
          y: 20
        },
        animate: {
          opacity: 1,
          y: 0
        },
        className: "mt-4 bg-red-50 border border-red-200 rounded-lg p-4",
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertCircle, {
            className: "h-5 w-5 text-red-500"
          }), (0, jsx_runtime_1.jsx)("span", {
            className: "text-red-700",
            children: state.error
          }), (0, jsx_runtime_1.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_c41zo5yr7().f[33]++;
              cov_c41zo5yr7().s[130]++;
              return dispatch({
                type: 'CLEAR_ERROR'
              });
            },
            className: "ml-auto text-red-500 hover:text-red-700",
            children: "Fermer"
          })]
        })
      }))]
    }), (0, jsx_runtime_1.jsx)(framer_motion_1.AnimatePresence, {
      children:
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[47][0]++, showMealTypeSelector) &&
      /* istanbul ignore next */
      (cov_c41zo5yr7().b[47][1]++, (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
        initial: {
          opacity: 0
        },
        animate: {
          opacity: 1
        },
        exit: {
          opacity: 0
        },
        className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",
        onClick: () => {
          /* istanbul ignore next */
          cov_c41zo5yr7().f[34]++;
          cov_c41zo5yr7().s[131]++;
          return setShowMealTypeSelector(false);
        },
        children: (0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, {
          initial: {
            scale: 0.9,
            opacity: 0
          },
          animate: {
            scale: 1,
            opacity: 1
          },
          exit: {
            scale: 0.9,
            opacity: 0
          },
          className: "bg-white rounded-2xl p-6 max-w-md w-full mx-4",
          onClick: e => {
            /* istanbul ignore next */
            cov_c41zo5yr7().f[35]++;
            cov_c41zo5yr7().s[132]++;
            return e.stopPropagation();
          },
          children: [(0, jsx_runtime_1.jsx)("h3", {
            className: "text-xl font-bold text-gray-800 mb-4",
            children: "Type de repas"
          }), (0, jsx_runtime_1.jsx)("div", {
            className: "grid grid-cols-2 gap-3",
            children: [{
              type: 'breakfast',
              label: 'Petit-déjeuner',
              icon: '🌅'
            }, {
              type: 'lunch',
              label: 'Déjeuner',
              icon: '☀️'
            }, {
              type: 'dinner',
              label: 'Dîner',
              icon: '🌙'
            }, {
              type: 'snack',
              label: 'Collation',
              icon: '🍎'
            }, {
              type: 'pre_workout',
              label: 'Pré-training',
              icon: '💪'
            }, {
              type: 'post_workout',
              label: 'Post-training',
              icon: '🏆'
            }].map(meal => {
              /* istanbul ignore next */
              cov_c41zo5yr7().f[36]++;
              cov_c41zo5yr7().s[133]++;
              return (0, jsx_runtime_1.jsxs)("button", {
                onClick: () => {
                  /* istanbul ignore next */
                  cov_c41zo5yr7().f[37]++;
                  cov_c41zo5yr7().s[134]++;
                  return handleStartMeal(meal.type);
                },
                className: "p-4 border border-gray-200 rounded-xl hover:bg-gray-50 hover:border-green-300 transition-all text-center",
                children: [(0, jsx_runtime_1.jsx)("div", {
                  className: "text-2xl mb-2",
                  children: meal.icon
                }), (0, jsx_runtime_1.jsx)("div", {
                  className: "font-medium text-gray-800",
                  children: meal.label
                })]
              }, meal.type);
            })
          }), (0, jsx_runtime_1.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_c41zo5yr7().f[38]++;
              cov_c41zo5yr7().s[135]++;
              return setShowMealTypeSelector(false);
            },
            className: "w-full mt-4 py-2 text-gray-600 hover:text-gray-800",
            children: "Annuler"
          })]
        })
      }))
    })]
  });
};
/* istanbul ignore next */
cov_c41zo5yr7().s[136]++;
exports.SmartNutritionTracker = SmartNutritionTracker;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,