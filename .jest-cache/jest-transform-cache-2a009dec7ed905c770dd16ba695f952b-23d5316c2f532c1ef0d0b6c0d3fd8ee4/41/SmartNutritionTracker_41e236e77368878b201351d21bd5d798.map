{"version":3,"names":["react_1","cov_c41zo5yr7","s","__importStar","require","lucide_react_1","framer_motion_1","supabase_1","nutrition_mapping_1","initialState","currentState","todaysSummary","currentMeal","type","items","totalCalories","totalMacros","protein","carbs","fat","foodSearch","query","results","isSearching","aiAnalysis","isAnalyzing","currentAnalysis","recommendations","insights","goals","dailyCalories","proteinTarget","carbTarget","fatTarget","progress","caloriesConsumed","caloriesRemaining","macroProgress","adherenceScore","error","lastUpdate","Date","nutritionReducer","state","action","f","b","mealType","newItems","item","reduce","sum","calories","totals","macros","carbohydrates","filter","id","itemId","analysis","aiRecommendations","improvements","alternatives","summary","nutritionGoals","calorieGoal","macroTotals","proteinGoal","carbGoal","fatGoal","adherenceScores","calorieAdherence","SmartNutritionTracker","userId","className","dispatch","useReducer","showMealTypeSelector","setShowMealTypeSelector","useState","selectedDate","setSelectedDate","toISOString","split","useEffect","loadDailyData","useCallback","data","mealsData","mealsError","supabase","from","select","eq","gte","lt","dailySummary","buildDailySummary","console","meal","protein_g","carbs_g","fat_g","fiber","fiber_g","date","mealBreakdown","breakfast","percentage","lunch","dinner","snacks","Math","min","macroAdherence","mealTimingAdherence","foodQualityScore","aiInsights","dayRating","keyWins","improvementAreas","tomorrowSuggestions","handleStartMeal","handleAddFoodItem","foodData","quantity","newItem","now","mealId","name","unit","round","nutritionPer100g","sugar","sodium","mealTiming","createdAt","updatedAt","handleFinalizeMeal","length","mealData","user_id","toLocaleTimeString","meal_type","created_at","savedMeal","mealError","insert","single","scores","calculateNutritionScores","generateNutritionRecommendations","macroBreakdown","grams","nutritionScores","overallQuality","macroBalance","micronutrientDensity","processedFoodRatio","satietyIndex","inflammatoryIndex","timing","portionAdjustments","complianceMetrics","calorieTarget","actual","target","variance","metabolicImpact","estimatedGlycemicLoad","insulinResponse","satietyDuration","energyProvision","searchFood","mockResults","category","verified","popularity","toLowerCase","includes","setTimeout","jsx_runtime_1","jsxs","children","jsx","Apple","style","width","onClick","Plus","replace","map","Search","value","onChange","e","placeholder","food","disabled","Brain","motion","div","initial","opacity","y","animate","slice","rec","index","CheckCircle","BarChart3","Award","win","AlertCircle","AnimatePresence","exit","scale","stopPropagation","label","icon","exports"],"sources":["/workspaces/MyFitHero/src/features/nutrition/components/SmartNutritionTracker.tsx"],"sourcesContent":["import React, { useReducer, useEffect, useState, useCallback } from 'react';\nimport { \n  Apple, Camera, Search, Plus, TrendingUp, Target, \n  Clock, Zap, AlertCircle, CheckCircle, Brain, \n  BarChart3, Utensils, Scale, Timer, Award\n} from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { supabase } from '@/lib/supabase';\nimport { \n  NutritionData, \n  MealAnalysis, \n  NutritionTrackingState, \n  FoodSearchResult,\n  DailyNutritionSummary \n} from '@/features/nutrition/types';\nimport { \n  calculateNutritionScores, \n  generateNutritionRecommendations,\n  dbToNutritionData,\n  nutritionDataToDb,\n  dbToMealAnalysis,\n  mealAnalysisToDb\n} from '@/features/nutrition/services/nutrition-mapping';\n\n// =====================================\n// STATE MANAGEMENT (à la façon Workout)\n// =====================================\n\ninterface NutritionState {\n  currentState: NutritionTrackingState;\n  todaysSummary: DailyNutritionSummary | null;\n  currentMeal: {\n    type: NutritionData['mealType'] | null;\n    items: NutritionData[];\n    totalCalories: number;\n    totalMacros: { protein: number; carbs: number; fat: number };\n  };\n  foodSearch: {\n    query: string;\n    results: FoodSearchResult[];\n    isSearching: boolean;\n  };\n  aiAnalysis: {\n    isAnalyzing: boolean;\n    currentAnalysis: MealAnalysis | null;\n    recommendations: string[];\n    insights: string[];\n  };\n  goals: {\n    dailyCalories: number;\n    proteinTarget: number;\n    carbTarget: number;\n    fatTarget: number;\n  };\n  progress: {\n    caloriesConsumed: number;\n    caloriesRemaining: number;\n    macroProgress: { protein: number; carbs: number; fat: number };\n    adherenceScore: number;\n  };\n  error: string | null;\n  lastUpdate: Date;\n}\n\ntype NutritionAction = \n  | { type: 'SET_STATE'; state: NutritionTrackingState }\n  | { type: 'SET_MEAL_TYPE'; mealType: NutritionData['mealType'] }\n  | { type: 'RESET_MEAL_TYPE' }\n  | { type: 'ADD_FOOD_ITEM'; item: NutritionData }\n  | { type: 'REMOVE_FOOD_ITEM'; itemId: string }\n  | { type: 'UPDATE_FOOD_SEARCH'; query: string; results?: FoodSearchResult[] }\n  | { type: 'START_AI_ANALYSIS' }\n  | { type: 'SET_AI_ANALYSIS'; analysis: MealAnalysis }\n  | { type: 'UPDATE_DAILY_SUMMARY'; summary: DailyNutritionSummary }\n  | { type: 'SET_ERROR'; error: string }\n  | { type: 'CLEAR_ERROR' }\n  | { type: 'UPDATE_GOALS'; goals: Partial<NutritionState['goals']> }\n  | { type: 'SYNC_COMPLETE' };\n\nconst initialState: NutritionState = {\n  currentState: 'idle',\n  todaysSummary: null,\n  currentMeal: {\n    type: null,\n    items: [],\n    totalCalories: 0,\n    totalMacros: { protein: 0, carbs: 0, fat: 0 }\n  },\n  foodSearch: {\n    query: '',\n    results: [],\n    isSearching: false\n  },\n  aiAnalysis: {\n    isAnalyzing: false,\n    currentAnalysis: null,\n    recommendations: [],\n    insights: []\n  },\n  goals: {\n    dailyCalories: 2000,\n    proteinTarget: 150,\n    carbTarget: 250,\n    fatTarget: 67\n  },\n  progress: {\n    caloriesConsumed: 0,\n    caloriesRemaining: 2000,\n    macroProgress: { protein: 0, carbs: 0, fat: 0 },\n    adherenceScore: 100\n  },\n  error: null,\n  lastUpdate: new Date()\n};\n\nconst nutritionReducer = (state: NutritionState, action: NutritionAction): NutritionState => {\n  switch (action.type) {\n    case 'SET_STATE':\n      return { ...state, currentState: action.state, error: null };\n      \n    case 'SET_MEAL_TYPE':\n      return {\n        ...state,\n        currentMeal: { ...state.currentMeal, type: action.mealType },\n        currentState: 'adding_meal'\n      };\n\n    case 'RESET_MEAL_TYPE':\n      return {\n        ...state,\n        currentMeal: { ...initialState.currentMeal },\n        currentState: 'idle'\n      };\n      \n    case 'ADD_FOOD_ITEM': {\n      const newItems = [...state.currentMeal.items, action.item];\n      const totalCalories = newItems.reduce((sum, item) => sum + item.calories, 0);\n      const totalMacros = newItems.reduce(\n        (totals, item) => ({\n          protein: totals.protein + item.macros.protein,\n          carbs: totals.carbs + item.macros.carbohydrates,\n          fat: totals.fat + item.macros.fat\n        }),\n        { protein: 0, carbs: 0, fat: 0 }\n      );\n      \n      return {\n        ...state,\n        currentMeal: { ...state.currentMeal, items: newItems, totalCalories, totalMacros },\n        lastUpdate: new Date()\n      };\n    }\n    \n    case 'REMOVE_FOOD_ITEM': {\n      const newItems = state.currentMeal.items.filter(item => item.id !== action.itemId);\n      const totalCalories = newItems.reduce((sum, item) => sum + item.calories, 0);\n      const totalMacros = newItems.reduce(\n        (totals, item) => ({\n          protein: totals.protein + item.macros.protein,\n          carbs: totals.carbs + item.macros.carbohydrates,\n          fat: totals.fat + item.macros.fat\n        }),\n        { protein: 0, carbs: 0, fat: 0 }\n      );\n      \n      return {\n        ...state,\n        currentMeal: { ...state.currentMeal, items: newItems, totalCalories, totalMacros }\n      };\n    }\n    \n    case 'UPDATE_FOOD_SEARCH':\n      return {\n        ...state,\n        foodSearch: {\n          query: action.query,\n          results: action.results || state.foodSearch.results,\n          isSearching: !action.results\n        }\n      };\n      \n    case 'START_AI_ANALYSIS':\n      return {\n        ...state,\n        currentState: 'analyzing_meal',\n        aiAnalysis: { ...state.aiAnalysis, isAnalyzing: true }\n      };\n      \n    case 'SET_AI_ANALYSIS':\n      return {\n        ...state,\n        currentState: 'idle',\n        aiAnalysis: {\n          isAnalyzing: false,\n          currentAnalysis: action.analysis,\n          recommendations: action.analysis.aiRecommendations.improvements,\n          insights: action.analysis.aiRecommendations.alternatives\n        }\n      };\n      \n    case 'UPDATE_DAILY_SUMMARY':\n      return {\n        ...state,\n        todaysSummary: action.summary,\n        progress: {\n          caloriesConsumed: action.summary.totalCalories,\n          caloriesRemaining: action.summary.nutritionGoals.calorieGoal - action.summary.totalCalories,\n          macroProgress: {\n            protein: (action.summary.macroTotals.protein / action.summary.nutritionGoals.proteinGoal) * 100,\n            carbs: (action.summary.macroTotals.carbohydrates / action.summary.nutritionGoals.carbGoal) * 100,\n            fat: (action.summary.macroTotals.fat / action.summary.nutritionGoals.fatGoal) * 100\n          },\n          adherenceScore: action.summary.adherenceScores.calorieAdherence\n        }\n      };\n      \n    case 'SET_ERROR':\n      return { ...state, error: action.error, currentState: 'error' };\n      \n    case 'CLEAR_ERROR':\n      return { ...state, error: null };\n      \n    case 'UPDATE_GOALS':\n      return { ...state, goals: { ...state.goals, ...action.goals } };\n      \n    case 'SYNC_COMPLETE':\n      return { ...state, currentState: 'idle', lastUpdate: new Date() };\n      \n    default:\n      return state;\n  }\n};\n\n// =====================================\n// COMPOSANT PRINCIPAL\n// =====================================\n\ninterface SmartNutritionTrackerProps {\n  userId: string;\n  className?: string;\n}\n\nexport const SmartNutritionTracker: React.FC<SmartNutritionTrackerProps> = ({\n  userId,\n  className = ''\n}) => {\n  const [state, dispatch] = useReducer(nutritionReducer, initialState);\n  const [showMealTypeSelector, setShowMealTypeSelector] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n\n  // =====================================\n  // HOOKS ET EFFETS\n  // =====================================\n\n  // Chargement des données journalières\n  useEffect(() => {\n    loadDailyData();\n  }, [userId, selectedDate]);\n\n  const loadDailyData = useCallback(async () => {\n    try {\n      dispatch({ type: 'SET_STATE', state: 'syncing_data' });\n      \n      // Charger les repas du jour\n      const { data: mealsData, error: mealsError } = await supabase\n        .from('meals')\n        .select(`\n          *,\n          meal_analysis:meal_analysis(*)\n        `)\n        .eq('user_id', userId)\n        .gte('created_at', `${selectedDate}T00:00:00`)\n        .lt('created_at', `${selectedDate}T23:59:59`);\n\n      if (mealsError) throw mealsError;\n\n      // Construire le résumé journalier\n      const dailySummary = buildDailySummary(mealsData || []);\n      dispatch({ type: 'UPDATE_DAILY_SUMMARY', summary: dailySummary });\n      dispatch({ type: 'SYNC_COMPLETE' });\n      \n    } catch (error) {\n      console.error('Erreur chargement données:', error);\n      dispatch({ type: 'SET_ERROR', error: 'Erreur lors du chargement des données' });\n    }\n  }, [userId, selectedDate]);\n\n  const buildDailySummary = (mealsData: any[]): DailyNutritionSummary => {\n    const totalCalories = mealsData.reduce((sum, meal) => sum + (meal.calories || 0), 0);\n    const macroTotals = mealsData.reduce(\n      (totals, meal) => ({\n        protein: totals.protein + (meal.protein_g || 0),\n        carbohydrates: totals.carbohydrates + (meal.carbs_g || 0),\n        fat: totals.fat + (meal.fat_g || 0),\n        fiber: totals.fiber + (meal.fiber_g || 0)\n      }),\n      { protein: 0, carbohydrates: 0, fat: 0, fiber: 0 }\n    );\n\n    return {\n      date: selectedDate,\n      userId,\n      totalCalories,\n      macroTotals,\n      mealBreakdown: {\n        breakfast: { calories: 0, percentage: 0 },\n        lunch: { calories: 0, percentage: 0 },\n        dinner: { calories: 0, percentage: 0 },\n        snacks: { calories: 0, percentage: 0 }\n      },\n      nutritionGoals: {\n        calorieGoal: state.goals.dailyCalories,\n        proteinGoal: state.goals.proteinTarget,\n        carbGoal: state.goals.carbTarget,\n        fatGoal: state.goals.fatTarget,\n      },\n      adherenceScores: {\n        calorieAdherence: Math.min(100, (totalCalories / state.goals.dailyCalories) * 100),\n        macroAdherence: 85,\n        mealTimingAdherence: 90,\n        foodQualityScore: 88\n      },\n      aiInsights: {\n        dayRating: 85,\n        keyWins: [\"Excellent apport en protéines\", \"Hydratation optimale\"],\n        improvementAreas: [\"Augmenter les fibres\", \"Équilibrer les collations\"],\n        tomorrowSuggestions: [\"Préparer des légumes à croquer\", \"Planifier le petit-déjeuner\"]\n      }\n    };\n  };\n\n  // =====================================\n  // GESTION DES REPAS\n  // =====================================\n\n  const handleStartMeal = (mealType: NutritionData['mealType']) => {\n    dispatch({ type: 'SET_MEAL_TYPE', mealType });\n    setShowMealTypeSelector(false);\n  };\n\n  const handleAddFoodItem = async (foodData: FoodSearchResult, quantity: number = 100) => {\n    try {\n      const newItem: NutritionData = {\n        id: `temp_${Date.now()}`,\n        userId,\n        mealId: `meal_${Date.now()}`,\n        name: foodData.name,\n        quantity,\n        unit: 'g',\n        calories: Math.round((foodData.nutritionPer100g.calories * quantity) / 100),\n        macros: {\n          protein: (foodData.nutritionPer100g.protein * quantity) / 100,\n          carbohydrates: (foodData.nutritionPer100g.carbohydrates * quantity) / 100,\n          fat: (foodData.nutritionPer100g.fat * quantity) / 100,\n          fiber: (foodData.nutritionPer100g.fiber * quantity) / 100,\n          sugar: 0,\n          sodium: 0\n        },\n        mealType: state.currentMeal.type!,\n        mealTiming: new Date(),\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n\n      dispatch({ type: 'ADD_FOOD_ITEM', item: newItem });\n      \n    } catch (error) {\n      console.error('Erreur ajout aliment:', error);\n      dispatch({ type: 'SET_ERROR', error: 'Erreur lors de l\\'ajout de l\\'aliment' });\n    }\n  };\n\n  const handleFinalizeMeal = async () => {\n    if (state.currentMeal.items.length === 0) return;\n    \n    try {\n      dispatch({ type: 'START_AI_ANALYSIS' });\n      \n      // Sauvegarder le repas\n      const mealData = {\n        id: `meal_${Date.now()}`,\n        user_id: userId,\n        name: `${state.currentMeal.type} - ${new Date().toLocaleTimeString()}`,\n        meal_type: state.currentMeal.type,\n        calories: state.currentMeal.totalCalories,\n        protein_g: state.currentMeal.totalMacros.protein,\n        carbs_g: state.currentMeal.totalMacros.carbs,\n        fat_g: state.currentMeal.totalMacros.fat,\n        fiber_g: 0,\n        created_at: new Date().toISOString()\n      };\n\n      const { data: savedMeal, error: mealError } = await supabase\n        .from('meals')\n        .insert(mealData)\n        .select()\n        .single();\n\n      if (mealError) throw mealError;\n\n      // Analyse IA\n      const scores = calculateNutritionScores(\n        state.currentMeal.totalCalories,\n        state.currentMeal.totalMacros.protein,\n        state.currentMeal.totalMacros.carbs,\n        state.currentMeal.totalMacros.fat,\n        0, // fiber\n        0  // sugar\n      );\n\n      const recommendations = generateNutritionRecommendations(\n        state.currentMeal.totalCalories,\n        state.currentMeal.totalMacros.protein,\n        state.currentMeal.totalMacros.carbs,\n        state.currentMeal.totalMacros.fat,\n        0,\n        state.currentMeal.type!\n      );\n\n      const analysis: MealAnalysis = {\n        id: `analysis_${Date.now()}`,\n        userId,\n        mealId: savedMeal.id,\n        totalCalories: state.currentMeal.totalCalories,\n        macroBreakdown: {\n          protein: {\n            grams: state.currentMeal.totalMacros.protein,\n            percentage: (state.currentMeal.totalMacros.protein * 4 / state.currentMeal.totalCalories) * 100,\n            calories: state.currentMeal.totalMacros.protein * 4\n          },\n          carbs: {\n            grams: state.currentMeal.totalMacros.carbs,\n            percentage: (state.currentMeal.totalMacros.carbs * 4 / state.currentMeal.totalCalories) * 100,\n            calories: state.currentMeal.totalMacros.carbs * 4\n          },\n          fat: {\n            grams: state.currentMeal.totalMacros.fat,\n            percentage: (state.currentMeal.totalMacros.fat * 9 / state.currentMeal.totalCalories) * 100,\n            calories: state.currentMeal.totalMacros.fat * 9\n          }\n        },\n        nutritionScores: {\n          overallQuality: scores.overallQuality,\n          macroBalance: scores.macroBalance,\n          micronutrientDensity: 75,\n          processedFoodRatio: 30,\n          satietyIndex: 80,\n          inflammatoryIndex: 10\n        },\n        aiRecommendations: {\n          improvements: recommendations,\n          alternatives: [\"Remplacer par des alternatives complètes\", \"Ajouter des légumes colorés\"],\n          timing: [\"Optimal pour ce moment de la journée\"],\n          portionAdjustments: []\n        },\n        complianceMetrics: {\n          calorieTarget: { actual: state.currentMeal.totalCalories, target: 500, variance: 0 },\n          proteinTarget: { actual: state.currentMeal.totalMacros.protein, target: 25, variance: 0 },\n          carbTarget: { actual: state.currentMeal.totalMacros.carbs, target: 60, variance: 0 },\n          fatTarget: { actual: state.currentMeal.totalMacros.fat, target: 20, variance: 0 }\n        },\n        metabolicImpact: {\n          estimatedGlycemicLoad: 25,\n          insulinResponse: 'moderate',\n          satietyDuration: 3.5,\n          energyProvision: 'sustained'\n        },\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n\n      dispatch({ type: 'SET_AI_ANALYSIS', analysis });\n      \n      // Recharger les données journalières\n      await loadDailyData();\n      \n    } catch (error) {\n      console.error('Erreur finalisation repas:', error);\n      dispatch({ type: 'SET_ERROR', error: 'Erreur lors de la sauvegarde du repas' });\n    }\n  };\n\n  // =====================================\n  // RECHERCHE D'ALIMENTS\n  // =====================================\n\n  const searchFood = useCallback(async (query: string) => {\n    if (query.length < 2) {\n      dispatch({ type: 'UPDATE_FOOD_SEARCH', query: '', results: [] });\n      return;\n    }\n\n    dispatch({ type: 'UPDATE_FOOD_SEARCH', query });\n\n    try {\n      // Simulation base de données alimentaire (remplacer par vraie API)\n      const mockResults: FoodSearchResult[] = [\n        {\n          id: '1',\n          name: 'Pomme Golden',\n          category: 'Fruits',\n          nutritionPer100g: { calories: 52, protein: 0.3, carbohydrates: 14, fat: 0.2, fiber: 2.4 },\n          verified: true,\n          popularity: 95\n        },\n        {\n          id: '2', \n          name: 'Blanc de poulet grillé',\n          category: 'Viandes',\n          nutritionPer100g: { calories: 165, protein: 31, carbohydrates: 0, fat: 3.6, fiber: 0 },\n          verified: true,\n          popularity: 88\n        },\n        {\n          id: '3',\n          name: 'Avoine complète',\n          category: 'Céréales',\n          nutritionPer100g: { calories: 389, protein: 17, carbohydrates: 66, fat: 7, fiber: 10 },\n          verified: true,\n          popularity: 82\n        }\n      ].filter(item => item.name.toLowerCase().includes(query.toLowerCase()));\n\n      setTimeout(() => {\n        dispatch({ type: 'UPDATE_FOOD_SEARCH', query, results: mockResults });\n      }, 500);\n\n    } catch (error) {\n      console.error('Erreur recherche aliments:', error);\n      dispatch({ type: 'SET_ERROR', error: 'Erreur lors de la recherche d\\'aliments' });\n    }\n  }, []);\n\n  // =====================================\n  // RENDU INTERFACE\n  // =====================================\n\n  return (\n    <div className={`bg-white rounded-2xl shadow-xl border border-gray-100 ${className}`}>\n      {/* Header avec stats rapides */}\n      <div className=\"bg-gradient-to-r from-green-600 to-emerald-600 p-6 text-white\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <Apple className=\"h-8 w-8\" />\n            <div>\n              <h2 className=\"text-2xl font-bold\">Smart Nutrition</h2>\n              <p className=\"text-green-100\">IA Nutritionnelle Avancée</p>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-bold\">{state.progress.caloriesConsumed}</div>\n            <div className=\"text-sm text-green-100\">kcal aujourd'hui</div>\n          </div>\n        </div>\n\n        {/* Progress bars rapides */}\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div>\n            <div className=\"text-xs mb-1\">Protéines</div>\n            <div className=\"bg-green-800 rounded-full h-2\">\n              <div \n                className=\"bg-white rounded-full h-2 transition-all duration-300\"\n                style={{ width: `${Math.min(100, state.progress.macroProgress.protein)}%` }}\n              />\n            </div>\n          </div>\n          <div>\n            <div className=\"text-xs mb-1\">Glucides</div>\n            <div className=\"bg-green-800 rounded-full h-2\">\n              <div \n                className=\"bg-white rounded-full h-2 transition-all duration-300\"\n                style={{ width: `${Math.min(100, state.progress.macroProgress.carbs)}%` }}\n              />\n            </div>\n          </div>\n          <div>\n            <div className=\"text-xs mb-1\">Lipides</div>\n            <div className=\"bg-green-800 rounded-full h-2\">\n              <div \n                className=\"bg-white rounded-full h-2 transition-all duration-300\"\n                style={{ width: `${Math.min(100, state.progress.macroProgress.fat)}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Contenu principal */}\n      <div className=\"p-6\">\n        {/* État actuel avec machine d'état */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center space-x-2 mb-2\">\n            <div className={`w-3 h-3 rounded-full ${\n              state.currentState === 'idle' ? 'bg-green-500' :\n              state.currentState === 'analyzing_meal' ? 'bg-yellow-500 animate-pulse' :\n              state.currentState === 'error' ? 'bg-red-500' : 'bg-blue-500'\n            }`} />\n            <span className=\"text-sm font-medium text-gray-600\">\n              {state.currentState === 'idle' && 'Prêt pour l\\'analyse'}\n              {state.currentState === 'adding_meal' && 'Ajout en cours...'}\n              {state.currentState === 'analyzing_meal' && 'Analyse IA en cours...'}\n              {state.currentState === 'syncing_data' && 'Synchronisation...'}\n              {state.currentState === 'error' && 'Erreur détectée'}\n            </span>\n          </div>\n        </div>\n\n        {/* Bouton principal */}\n        {!state.currentMeal.type ? (\n          <button\n            onClick={() => setShowMealTypeSelector(true)}\n            className=\"w-full bg-gradient-to-r from-green-600 to-emerald-600 text-white py-4 px-6 rounded-xl font-medium transition-all duration-200 transform hover:scale-105 hover:shadow-lg flex items-center justify-center space-x-2\"\n          >\n            <Plus className=\"h-5 w-5\" />\n            <span>Ajouter un repas</span>\n          </button>\n        ) : (\n          <div className=\"space-y-4\">\n            {/* Repas en cours */}\n            <div className=\"bg-gray-50 rounded-xl p-4\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"font-semibold text-gray-800 capitalize\">\n                  {state.currentMeal.type?.replace('_', ' ')}\n                </h3>\n                <div className=\"text-lg font-bold text-green-600\">\n                  {state.currentMeal.totalCalories} kcal\n                </div>\n              </div>\n              \n              {/* Aliments ajoutés */}\n              <div className=\"space-y-2 mb-4\">\n                {state.currentMeal.items.map((item) => (\n                  <div key={item.id} className=\"flex items-center justify-between bg-white rounded-lg p-3\">\n                    <div>\n                      <div className=\"font-medium\">{item.name}</div>\n                      <div className=\"text-sm text-gray-500\">{item.quantity}{item.unit}</div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"font-medium\">{item.calories} kcal</div>\n                      <button\n                        onClick={() => dispatch({ type: 'REMOVE_FOOD_ITEM', itemId: item.id })}\n                        className=\"text-red-500 text-sm hover:text-red-700\"\n                      >\n                        Retirer\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Recherche d'aliments */}\n              <div className=\"mb-4\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    value={state.foodSearch.query}\n                    onChange={(e) => searchFood(e.target.value)}\n                    placeholder=\"Rechercher un aliment...\"\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                  />\n                </div>\n                \n                {/* Résultats de recherche */}\n                {state.foodSearch.results.length > 0 && (\n                  <div className=\"mt-2 bg-white border border-gray-200 rounded-lg shadow-lg max-h-60 overflow-y-auto\">\n                    {state.foodSearch.results.map((food) => (\n                      <button\n                        key={food.id}\n                        onClick={() => handleAddFoodItem(food)}\n                        className=\"w-full text-left p-3 hover:bg-gray-50 border-b border-gray-100 last:border-b-0\"\n                      >\n                        <div className=\"font-medium\">{food.name}</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {food.nutritionPer100g.calories} kcal/100g - {food.category}\n                        </div>\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {/* Actions */}\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={handleFinalizeMeal}\n                  disabled={state.currentMeal.items.length === 0 || state.currentState === 'analyzing_meal'}\n                  className=\"flex-1 bg-green-600 text-white py-2 px-4 rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {state.currentState === 'analyzing_meal' ? (\n                    <div className=\"flex items-center justify-center\">\n                      <Brain className=\"h-4 w-4 mr-2 animate-pulse\" />\n                      Analyse IA...\n                    </div>\n                  ) : (\n                    'Finaliser le repas'\n                  )}\n                </button>\n                <button\n                  onClick={() => dispatch({ type: 'RESET_MEAL_TYPE' })}\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-600 hover:bg-gray-50\"\n                >\n                  Annuler\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Analyse IA récente */}\n        {state.aiAnalysis.currentAnalysis && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mt-6 bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-200\"\n          >\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <Brain className=\"h-5 w-5 text-blue-600\" />\n              <h3 className=\"font-semibold text-blue-900\">Analyse IA du dernier repas</h3>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div className=\"bg-white rounded-lg p-3 text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {state.aiAnalysis.currentAnalysis.nutritionScores.overallQuality}\n                </div>\n                <div className=\"text-sm text-gray-600\">Qualité globale</div>\n              </div>\n              <div className=\"bg-white rounded-lg p-3 text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {state.aiAnalysis.currentAnalysis.nutritionScores.macroBalance}\n                </div>\n                <div className=\"text-sm text-gray-600\">Équilibre macros</div>\n              </div>\n            </div>\n\n            {/* Recommandations */}\n            {state.aiAnalysis.recommendations.length > 0 && (\n              <div>\n                <h4 className=\"font-medium text-gray-800 mb-2\">Recommandations IA</h4>\n                <div className=\"space-y-1\">\n                  {state.aiAnalysis.recommendations.slice(0, 3).map((rec, index) => (\n                    <div key={index} className=\"text-sm text-gray-600 flex items-start space-x-2\">\n                      <CheckCircle className=\"h-4 w-4 text-green-500 mt-0.5 flex-shrink-0\" />\n                      <span>{rec}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </motion.div>\n        )}\n\n        {/* Résumé journalier */}\n        {state.todaysSummary && (\n          <div className=\"mt-6 space-y-4\">\n            <h3 className=\"font-semibold text-gray-800 flex items-center space-x-2\">\n              <BarChart3 className=\"h-5 w-5\" />\n              <span>Résumé de la journée</span>\n            </h3>\n            \n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\n                <div className=\"text-2xl font-bold text-gray-800\">\n                  {Math.round(state.todaysSummary.adherenceScores.calorieAdherence)}%\n                </div>\n                <div className=\"text-sm text-gray-600\">Adhérence calorique</div>\n              </div>\n              <div className=\"bg-gray-50 rounded-lg p-4 text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">\n                  {state.todaysSummary.aiInsights.dayRating}\n                </div>\n                <div className=\"text-sm text-gray-600\">Score IA du jour</div>\n              </div>\n            </div>\n\n            {/* Insights IA */}\n            {state.todaysSummary.aiInsights.keyWins.length > 0 && (\n              <div className=\"bg-green-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-green-800 mb-2 flex items-center space-x-2\">\n                  <Award className=\"h-4 w-4\" />\n                  <span>Points forts aujourd'hui</span>\n                </h4>\n                <div className=\"space-y-1\">\n                  {state.todaysSummary.aiInsights.keyWins.map((win, index) => (\n                    <div key={index} className=\"text-sm text-green-700\">• {win}</div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Erreurs */}\n        {state.error && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mt-4 bg-red-50 border border-red-200 rounded-lg p-4\"\n          >\n            <div className=\"flex items-center space-x-2\">\n              <AlertCircle className=\"h-5 w-5 text-red-500\" />\n              <span className=\"text-red-700\">{state.error}</span>\n              <button\n                onClick={() => dispatch({ type: 'CLEAR_ERROR' })}\n                className=\"ml-auto text-red-500 hover:text-red-700\"\n              >\n                Fermer\n              </button>\n            </div>\n          </motion.div>\n        )}\n      </div>\n\n      {/* Modal sélection type de repas */}\n      <AnimatePresence>\n        {showMealTypeSelector && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n            onClick={() => setShowMealTypeSelector(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              className=\"bg-white rounded-2xl p-6 max-w-md w-full mx-4\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <h3 className=\"text-xl font-bold text-gray-800 mb-4\">Type de repas</h3>\n              <div className=\"grid grid-cols-2 gap-3\">\n                {[\n                  { type: 'breakfast' as const, label: 'Petit-déjeuner', icon: '🌅' },\n                  { type: 'lunch' as const, label: 'Déjeuner', icon: '☀️' },\n                  { type: 'dinner' as const, label: 'Dîner', icon: '🌙' },\n                  { type: 'snack' as const, label: 'Collation', icon: '🍎' },\n                  { type: 'pre_workout' as const, label: 'Pré-training', icon: '💪' },\n                  { type: 'post_workout' as const, label: 'Post-training', icon: '🏆' }\n                ].map((meal) => (\n                  <button\n                    key={meal.type}\n                    onClick={() => handleStartMeal(meal.type)}\n                    className=\"p-4 border border-gray-200 rounded-xl hover:bg-gray-50 hover:border-green-300 transition-all text-center\"\n                  >\n                    <div className=\"text-2xl mb-2\">{meal.icon}</div>\n                    <div className=\"font-medium text-gray-800\">{meal.label}</div>\n                  </button>\n                ))}\n              </div>\n              <button\n                onClick={() => setShowMealTypeSelector(false)}\n                className=\"w-full mt-4 py-2 text-gray-600 hover:text-gray-800\"\n              >\n                Annuler\n              </button>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};"],"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","ignoreList":[]}