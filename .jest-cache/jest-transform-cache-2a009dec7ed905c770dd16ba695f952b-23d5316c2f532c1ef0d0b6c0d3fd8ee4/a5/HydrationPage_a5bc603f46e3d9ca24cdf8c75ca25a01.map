{"version":3,"names":["react_1","cov_tpk48ucqc","s","__importStar","require","wouter_1","lucide_react_1","appStore_1","use_toast_1","supabase_1","useRealtimeSync_1","skeleton_1","sportMapping_1","personalizedMessages_1","useDataLoader_1","AIModal_1","components_1","sportsHydrationData","endurance","emoji","goalModifierMl","contextualReminder","recommendedDrink","type","name","icon","Zap","amount","color","tips","Footprints","title","description","priority","Clock","Thermometer","contact","Shield","Dumbbell","court","Droplets","Trophy","strength","Coffee","Hydration","f","navigate","useLocation","appStoreUser","appStore","toast","useToast","isLoading","withLoader","setIsLoading","useDataLoader","onError","variant","currentMl","setCurrentMl","useState","selectedAmount","setSelectedAmount","dailyLogs","setDailyLogs","dailyStats","setDailyStats","lastDrinkTime","setLastDrinkTime","showReminders","setShowReminders","showCoachingModal","setShowCoachingModal","showDetailsModal","setShowDetailsModal","todayDate","Date","toISOString","split","userSportCategory","getSportCategoryForHydration","sport","sportConfig","personalizedGoalMl","useMemo","weight","b","baseGoalMl","adjustments","age","gender","primary_goals","includes","activityLevel","activity_level","Math","round","loadHydrationData","useCallback","id","today","data","statsData","error","statsError","supabase","from","select","eq","single","logsData","logsError","order","ascending","code","console","currentStats","currentLogs","water_intake_ml","length","logged_at","handleAddWater","context","newTotal","now","logError","insert","user_id","amount_ml","drink_type","log_date","hydration_context","upsert","stat_date","hydration_goal_ml","updated_at","onConflict","userName","first_name","username","progress","message","prev","handleRemoveLast","lastLog","deleteError","delete","useRealtimeSync","pillar","onUpdate","payload","userId","eventType","currentHydrationL","goalHydrationL","remaining","max","percentage","min","isGoalReached","getPersonalizedMessage","getHydrationPersonalizedMessage","getTodayTip","highPriorityTips","filter","tip","shouldShowContextualReminder","getTime","useEffect","jsx_runtime_1","jsx","className","children","jsxs","Skeleton","Array","map","_","i","todayTip","HydrationHeader","sportEmoji","personalizedMessage","HydrationProgress","HydrationQuickActions","onAddWater","HydrationCustomInput","onAmountChange","HydrationMessage","AIModal","open","onOpenChange","exports","default"],"sources":["/workspaces/MyFitHero/src/features/hydration/pages/HydrationPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useLocation } from 'wouter';\nimport {\n  Droplets,\n  Plus,\n  Target,\n  Clock,\n  Zap,\n  Sun,\n  Dumbbell,\n  Thermometer,\n  Coffee,\n  Minus,\n  RotateCcw,\n  Footprints,\n  Shield,\n  Trophy,\n  TrendingUp,\n  Calendar,\n  AlertCircle,\n  CheckCircle,\n  Bell,\n  Settings,\n  ChevronRight,\n  Brain,\n  Info,\n} from 'lucide-react';\nimport { appStore } from '@/store/appStore';\nimport { useToast } from '@/shared/hooks/use-toast';\nimport { supabase } from '@/lib/supabase';\nimport { useRealtimeSync } from '@/features/workout/hooks/useRealtimeSync';\nimport UniformHeader from '@/features/profile/components/UniformHeader';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\nimport { Database, HydrationLog as SupabaseHydrationLog, HydrationLogInsert } from '@/lib/types/database';\nimport { getSportCategoryForHydration, HydrationSportCategory } from '@/shared/utils/sportMapping';\nimport { getHydrationPersonalizedMessage } from '@/shared/utils/personalizedMessages';\nimport { useDataLoader } from '@/shared/hooks/useDataLoader';\nimport { AIModal } from '@/shared/components/AIModal';\n\n// Import des sous-composants\nimport {\n  HydrationHeader,\n  HydrationProgress,\n  HydrationQuickActions,\n  HydrationCustomInput,\n  HydrationMessage,\n} from '@/features/hydration/components';\n\n// --- TYPES & INTERFACES ---\ntype DrinkType = Database['public']['Tables']['hydration_logs']['Row']['drink_type'];\ntype HydrationContext = Database['public']['Tables']['hydration_logs']['Row']['hydration_context'];\n\ninterface RecommendedDrink {\n  type: DrinkType;\n  name: string;\n  icon: React.ElementType;\n  amount: number;\n  color: string;\n}\n\ninterface SportHydrationConfig {\n  emoji: string;\n  goalModifierMl: number;\n  contextualReminder: string;\n  recommendedDrink: RecommendedDrink;\n  tips: {\n    icon: React.ElementType;\n    title: string;\n    description: string;\n    priority: 'high' | 'medium' | 'low';\n  }[];\n}\n\ntype HydrationLog = SupabaseHydrationLog;\ntype DailyStats = Database['public']['Tables']['daily_stats']['Row'];\n\n// --- CONFIGURATION HYDRATATION PAR SPORT ---\nconst sportsHydrationData: Record<HydrationSportCategory, SportHydrationConfig> = {\n  endurance: {\n    emoji: '🏃‍♂️',\n    goalModifierMl: 1000,\n    contextualReminder:\n      \"Hydratez-vous toutes les 15-20 minutes pendant l'effort pour maintenir vos performances.\",\n    recommendedDrink: {\n      type: 'sports_drink',\n      name: 'Boisson Sport',\n      icon: Zap,\n      amount: 250,\n      color: 'bg-orange-500',\n    },\n    tips: [\n      {\n        icon: Footprints,\n        title: 'Pré-hydratation',\n        // Utilisation de guillemets doubles pour encapsuler l'apostrophe dans \"l'effort\"\n        description: \"Buvez 500ml 2-3h avant l'effort et 250ml 15min avant le départ.\",\n        priority: 'high',\n      },\n      {\n        icon: Clock,\n        // Utilisation de guillemets doubles pour encapsuler l'apostrophe\n        title: \"Pendant l'effort\",\n        description: \"150-250ml toutes les 15-20min selon l'intensité et la température.\",\n        priority: 'high',\n      },\n      {\n        icon: Thermometer,\n        title: 'Post-effort',\n        // Utilisation de guillemets doubles pour encapsuler l'apostrophe\n        description: \"Buvez 150% du poids perdu en sueur dans les 6h suivant l'effort.\",\n        priority: 'medium',\n      },\n    ],\n  },\n  contact: {\n    emoji: '🏈',\n    goalModifierMl: 750,\n    contextualReminder: 'Compensez les pertes intenses en sels minéraux avec des électrolytes.',\n    recommendedDrink: {\n      type: 'electrolytes',\n      name: 'Électrolytes',\n      icon: Shield,\n      amount: 500,\n      color: 'bg-purple-500',\n    },\n    tips: [\n      {\n        icon: Shield,\n        // Utilisation de guillemets doubles pour encapsuler l'apostrophe dans \"l'équipement\"\n        title: 'Électrolytes cruciaux',\n        description:\n          \"La sueur sous l'équipement fait perdre beaucoup de sodium. Compensez avec des boissons enrichies.\",\n        priority: 'high',\n      },\n      {\n        icon: Dumbbell,\n        title: 'Récupération accélérée',\n        description:\n          'Une hydratation optimale réduit les courbatures et accélère la réparation musculaire.',\n        priority: 'medium',\n      },\n    ],\n  },\n  court: {\n    emoji: '🎾',\n    goalModifierMl: 500,\n    contextualReminder: 'Profitez de chaque pause pour boire 150-200ml et maintenir votre niveau.',\n    recommendedDrink: {\n      type: 'water',\n      name: 'Eau Pure',\n      icon: Droplets,\n      amount: 250,\n      color: 'bg-blue-500',\n    },\n    tips: [\n      {\n        icon: Trophy,\n        title: 'Concentration optimale',\n        description:\n          'Même 2% de déshydratation réduit significativement vos réflexes et votre précision.',\n        priority: 'high',\n      },\n      {\n        icon: Zap,\n        title: 'Énergie constante',\n        description:\n          'Pour les matchs >1h, alternez eau pure et boisson isotonique toutes les 2 pauses.',\n        priority: 'medium',\n      },\n    ],\n  },\n  strength: {\n    emoji: '💪',\n    goalModifierMl: 250,\n    contextualReminder: 'Hydratez-vous entre chaque série pour maintenir force et concentration.',\n    recommendedDrink: {\n      type: 'water',\n      name: 'Eau Fraîche',\n      icon: Droplets,\n      amount: 300,\n      color: 'bg-blue-600',\n    },\n    tips: [\n      {\n        icon: Dumbbell,\n        title: 'Performance musculaire',\n        description:\n          '3% de déshydratation = 10-15% de perte de force. Hydratez-vous régulièrement.',\n        priority: 'high',\n      },\n      {\n        icon: Coffee,\n        title: 'Pré-workout et caféine',\n        description: 'Si vous prenez des stimulants, augmentez votre apport hydrique de 500ml.',\n        priority: 'medium',\n      },\n    ],\n  },\n};\n\n// --- COMPOSANT PRINCIPAL ---\nconst Hydration: React.FC = () => {\n  // --- HOOKS ET STATE ---\n  const [, navigate] = useLocation();\n  const { appStoreUser } = appStore();\n  const { toast } = useToast();\n  const { isLoading, withLoader, setIsLoading } = useDataLoader({\n    onError: (title, description) => toast({ title, description, variant: 'destructive' })\n  });\n\n  const [currentMl, setCurrentMl] = useState(0);\n  const [selectedAmount, setSelectedAmount] = useState(250);\n  const [dailyLogs, setDailyLogs] = useState<HydrationLog[]>([]);\n  const [dailyStats, setDailyStats] = useState<DailyStats | null>(null);\n  const [lastDrinkTime, setLastDrinkTime] = useState<Date | null>(null);\n  const [showReminders, setShowReminders] = useState(false);\n  const [showCoachingModal, setShowCoachingModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n\n  const todayDate = new Date().toISOString().split('T')[0];\n\n  // --- LOGIQUE DE PERSONNALISATION ---\n  const userSportCategory = getSportCategoryForHydration(appStoreUser?.sport);\n  const sportConfig = sportsHydrationData[userSportCategory];\n\n  // --- CALCUL OBJECTIF PERSONNALISÉ ---\n  const personalizedGoalMl = useMemo(() => {\n    const weight = appStoreUser?.weight ?? 70;\n    const baseGoalMl = weight * 35;\n\n    let adjustments = 0;\n    adjustments += sportConfig.goalModifierMl;\n\n    if (appStoreUser?.age) {\n      if (appStoreUser.age > 50) adjustments += 200;\n      if (appStoreUser.age < 25) adjustments += 300;\n    }\n\n    if (appStoreUser?.gender === 'male') {\n      adjustments += 300;\n    }\n\n    if (appStoreUser?.primary_goals?.includes('weight_loss')) {\n      adjustments += 500;\n    }\n\n    if (appStoreUser?.primary_goals?.includes('muscle_gain')) {\n      adjustments += 300;\n    }\n\n    const activityLevel = appStoreUser?.activity_level;\n    if (activityLevel === 'very_active') adjustments += 500;\n    else if (activityLevel === 'active') adjustments += 300;\n\n    return Math.round(baseGoalMl + adjustments);\n  }, [appStoreUser, sportConfig.goalModifierMl]);\n\n  // --- FONCTIONS DE DONNÉES ---\n  const loadHydrationData = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    try {\n      setIsLoading(true);\n\n      const today = new Date().toISOString().split('T')[0];\n\n      const { data: statsData, error: statsError } = await supabase\n        .from('daily_stats')\n        .select('*')\n        .eq('user_id', appStoreUser.id)\n        .eq('stat_date', today)\n        .single();\n\n      const { data: logsData, error: logsError } = await supabase\n        .from('hydration_logs')\n        .select('*')\n        .eq('user_id', appStoreUser.id)\n        .eq('log_date', today)\n        .order('logged_at', { ascending: false });\n\n      if (statsError && statsError.code !== 'PGRST116') {\n        console.error('Error fetching daily stats:', statsError);\n        toast({ title: 'Erreur de chargement des stats', variant: 'destructive' });\n      }\n\n      if (logsError) {\n        console.error('Error fetching hydration logs:', logsError);\n        toast({ title: 'Erreur de chargement des logs', variant: 'destructive' });\n      }\n\n      const currentStats = statsData as DailyStats | undefined;\n      const currentLogs = logsData as HydrationLog[] | undefined;\n\n      setDailyStats(currentStats);\n      setDailyLogs(currentLogs || []);\n\n      if (currentStats) {\n        setCurrentMl(currentStats.water_intake_ml ?? 0);\n      } else {\n        setCurrentMl(0);\n      }\n\n      if (currentLogs && currentLogs.length > 0) {\n        setLastDrinkTime(currentLogs[0].logged_at ? new Date(currentLogs[0].logged_at) : null);\n      }\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur chargement hydratation:', error);\n      toast({\n        title: 'Erreur inattendue',\n        description: \"Impossible de charger les données d'hydratation.\",\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [appStoreUser?.id, toast]);\n\n  // --- HANDLERS ---\n  const handleAddWater = useCallback(\n    async (amount: number, type: DrinkType = 'water', context: HydrationContext = 'normal') => {\n      if (!appStoreUser?.id) return;\n\n      try {\n        const newTotal = currentMl + amount;\n        const now = new Date();\n\n        setCurrentMl(newTotal);\n        setLastDrinkTime(now);\n\n        const { error: logError } = await (supabase as any).from('hydration_logs').insert({\n          user_id: appStoreUser.id,\n          amount_ml: amount,\n          drink_type: type,\n          logged_at: now.toISOString(),\n          log_date: todayDate,\n          hydration_context: context,\n        });\n\n        if (logError) throw logError;\n\n        const { error: statsError } = await (supabase as any).from('daily_stats').upsert(\n          {\n            user_id: appStoreUser.id,\n            stat_date: todayDate,\n            water_intake_ml: newTotal,\n            hydration_goal_ml: personalizedGoalMl,\n            updated_at: now.toISOString(),\n          },\n          {\n            onConflict: 'user_id,stat_date',\n          }\n        );\n\n        if (statsError) throw statsError;\n\n        const userName = appStoreUser.first_name || appStoreUser.username || 'Champion';\n        const progress = (newTotal / personalizedGoalMl) * 100;\n\n        let message = `+${amount}ml ajoutés ! `;\n        if (progress >= 100) {\n          message += `🎉 Objectif atteint ${userName} !`;\n        } else if (progress >= 75) {\n          message += `💪 Excellent ${userName}, presque fini !`;\n        } else {\n          message += `Continue ${userName} !`;\n        }\n\n        toast({\n          title: 'Hydratation ajoutée',\n          description: message,\n        });\n\n        await loadHydrationData();\n      } catch (error: any) {\n      // Erreur silencieuse\n        console.error('Erreur ajout hydratation:', error);\n        setCurrentMl(prev => prev - amount);\n        toast({\n          title: 'Erreur',\n          description: 'Impossible de sauvegarder. Réessayez.',\n          variant: 'destructive',\n        });\n      }\n    },\n    [appStoreUser?.id, currentMl, personalizedGoalMl, todayDate, loadHydrationData, toast]\n  );\n\n  const handleRemoveLast = useCallback(async () => {\n    if (dailyLogs.length === 0) return;\n\n    const lastLog = dailyLogs[0];\n    const newTotal = currentMl - lastLog.amount_ml;\n\n    try {\n      setCurrentMl(newTotal);\n\n      const { error: deleteError } = await supabase\n        .from('hydration_logs')\n        .delete()\n        .eq('id', lastLog.id);\n\n      if (deleteError) throw deleteError;\n\n      const { error: statsError } = await (supabase as any).from('daily_stats').upsert({\n        user_id: appStoreUser?.id!,\n        stat_date: todayDate,\n        water_intake_ml: newTotal,\n        hydration_goal_ml: personalizedGoalMl,\n        updated_at: new Date().toISOString(),\n      });\n\n      if (statsError) throw statsError;\n\n      toast({\n        title: 'Dernière entrée supprimée',\n        description: `-${lastLog.amount_ml}ml`,\n      });\n\n      await loadHydrationData();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur suppression:', error);\n      setCurrentMl(prev => prev + lastLog.amount_ml);\n      toast({\n        title: 'Erreur',\n        description: \"Impossible de supprimer l'entrée\",\n        variant: 'destructive',\n      });\n    }\n  }, [\n    dailyLogs,\n    currentMl,\n    appStoreUser?.id,\n    personalizedGoalMl,\n    todayDate,\n    loadHydrationData,\n    toast,\n  ]);\n\n  // --- SYNCHRONISATION TEMPS RÉEL ---\n  const {} = useRealtimeSync({\n    pillar: 'hydration',\n    onUpdate: payload => {\n      if (\n        payload.userId === appStoreUser?.id &&\n        (payload.eventType === 'INSERT' || payload.eventType === 'UPDATE')\n      ) {\n        loadHydrationData();\n      }\n    },\n  });\n\n  // --- CALCULS ---\n  const currentHydrationL = currentMl / 1000;\n  const goalHydrationL = personalizedGoalMl / 1000;\n  const remaining = Math.max(0, personalizedGoalMl - currentMl);\n  const percentage =\n    personalizedGoalMl > 0 ? Math.min((currentMl / personalizedGoalMl) * 100, 100) : 0;\n  const isGoalReached = percentage >= 100;\n\n  // --- MESSAGES PERSONNALISÉS ---\n  const getPersonalizedMessage = useCallback(() => {\n    return getHydrationPersonalizedMessage(percentage, isGoalReached, appStoreUser);\n  }, [percentage, isGoalReached, appStoreUser]);\n\n  // Conseil prioritaire du jour\n  const getTodayTip = useCallback(() => {\n    const highPriorityTips = sportConfig.tips.filter(tip => tip.priority === 'high');\n    return highPriorityTips[0] || sportConfig.tips[0];\n  }, [sportConfig.tips]);\n\n  // Afficher le rappel contextuel seulement si pertinent\n  const shouldShowContextualReminder = useCallback(() => {\n    return (\n      percentage < 80 &&\n      (!lastDrinkTime || new Date().getTime() - lastDrinkTime.getTime() > 2 * 60 * 60 * 1000)\n    );\n  }, [percentage, lastDrinkTime]);\n\n  // --- EFFECTS ---\n  useEffect(() => {\n    loadHydrationData();\n  }, [loadHydrationData]);\n\n  // --- RENDER ---\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"px-4 py-6 space-y-6 max-w-2xl mx-auto\">\n          <Skeleton className=\"h-20 w-full\" />\n          <Skeleton className=\"h-32 w-full\" />\n          <div className=\"grid grid-cols-2 gap-3\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <Skeleton key={i} className=\"h-20\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const todayTip = getTodayTip();\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-500 to-cyan-500 flex items-center justify-center p-4\">\n      <div className=\"bg-white shadow-xl rounded-2xl p-8 w-full max-w-md mx-auto\">\n        {/* Header avec icône Droplets */}\n        <HydrationHeader \n          sportEmoji={sportConfig.emoji}\n          personalizedMessage={getPersonalizedMessage()}\n        />\n\n        {/* Objectif principal */}\n        <HydrationProgress\n          currentHydrationL={currentHydrationL}\n          goalHydrationL={goalHydrationL}\n          percentage={percentage}\n          remaining={remaining}\n        />\n\n        {/* Boutons d'action rapide */}\n        <HydrationQuickActions\n          onAddWater={handleAddWater}\n        />\n\n        {/* Sélection personnalisée */}\n        <HydrationCustomInput\n          selectedAmount={selectedAmount}\n          onAmountChange={setSelectedAmount}\n          onAddWater={handleAddWater}\n        />\n\n        {/* Message motivationnel */}\n        <HydrationMessage\n          message={getPersonalizedMessage()}\n        />\n\n        {/* Coaching IA Modal */}\n        <AIModal\n          open={showCoachingModal}\n          onOpenChange={setShowCoachingModal}\n          pillar=\"hydration\"\n          title=\"Coaching IA\"\n          description=\"Analyse personnalisée et conseils\"\n        />\n\n        {/* Actions rapides supplémentaires - masquées pour le design simple */}\n        <div className=\"hidden\">\n          {/* Contenu masqué pour préserver la logique existante */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hydration;\n\n"],"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","ignoreList":[]}