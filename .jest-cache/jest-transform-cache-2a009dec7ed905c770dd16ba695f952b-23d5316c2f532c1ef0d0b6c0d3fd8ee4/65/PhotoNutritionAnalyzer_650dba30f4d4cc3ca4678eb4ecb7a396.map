{"version":3,"names":["react_1","cov_li0d5q77j","s","__importStar","require","lucide_react_1","button_1","card_1","badge_1","input_1","dialog_1","useFoodPhotoAnalysis_1","PhotoNutritionAnalyzer","isOpen","onClose","onFoodsConfirmed","className","b","f","fileInputRef","useRef","cameraInputRef","selectedImage","setSelectedImage","useState","showNutritionDetails","setShowNutritionDetails","state","analyzeImage","selectFood","deselectFood","adjustQuantity","confirmSelection","reset","getTotalNutrition","useFoodPhotoAnalysis","handleFileSelect","event","file","target","files","imageUrl","URL","createObjectURL","handleConfirm","confirmedFoods","length","handleClose","totalNutrition","renderFoodItem","food","isSelected","jsx_runtime_1","jsx","Card","onClick","id","children","jsxs","CardContent","name","Badge","variant","confidence","Math","round","CheckCircle","estimated_quantity","estimated_calories","e","stopPropagation","Button","size","max","Minus","Input","type","value","onChange","parseInt","min","Plus","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","Camera","X","isAnalyzing","current","click","Upload","ref","accept","capture","Loader2","src","alt","RotateCcw","error","AlertCircle","analysisResult","foods","EyeOff","Eye","map","index","selectedFoods","some","CardHeader","CardTitle","calories","Fragment","protein","carbs","fat","exports","default"],"sources":["/workspaces/MyFitHero/src/features/nutrition/components/PhotoNutritionAnalyzer.tsx"],"sourcesContent":["// src/features/nutrition/components/PhotoNutritionAnalyzer.tsx\nimport React, { useState, useRef } from 'react';\nimport { \n  Camera, \n  Upload, \n  X, \n  CheckCircle, \n  AlertCircle, \n  Loader2,\n  Plus,\n  Minus,\n  Eye,\n  EyeOff,\n  RotateCcw\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { useFoodPhotoAnalysis } from '@/features/nutrition/hooks/useFoodPhotoAnalysis';\nimport { RecognizedFood } from '@/features/nutrition/services/foodRecognition';\n\ninterface PhotoNutritionAnalyzerProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onFoodsConfirmed: (foods: RecognizedFood[]) => void;\n  className?: string;\n}\n\nexport const PhotoNutritionAnalyzer: React.FC<PhotoNutritionAnalyzerProps> = ({\n  isOpen,\n  onClose,\n  onFoodsConfirmed,\n  className = ''\n}) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const cameraInputRef = useRef<HTMLInputElement>(null);\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const [showNutritionDetails, setShowNutritionDetails] = useState(false);\n  \n  const {\n    state,\n    analyzeImage,\n    selectFood,\n    deselectFood,\n    adjustQuantity,\n    confirmSelection,\n    reset,\n    getTotalNutrition\n  } = useFoodPhotoAnalysis();\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    // Afficher l'aperçu de l'image\n    const imageUrl = URL.createObjectURL(file);\n    setSelectedImage(imageUrl);\n\n    // Analyser l'image\n    await analyzeImage(file);\n  };\n\n  const handleConfirm = async () => {\n    const confirmedFoods = await confirmSelection();\n    if (confirmedFoods.length > 0) {\n      onFoodsConfirmed(confirmedFoods);\n      handleClose();\n    }\n  };\n\n  const handleClose = () => {\n    reset();\n    setSelectedImage(null);\n    setShowNutritionDetails(false);\n    onClose();\n  };\n\n  const totalNutrition = getTotalNutrition();\n\n  const renderFoodItem = (food: RecognizedFood, isSelected: boolean) => (\n    <Card \n      key={food.food.id} \n      className={`cursor-pointer transition-all duration-200 ${\n        isSelected \n          ? 'ring-2 ring-blue-500 bg-blue-50' \n          : 'hover:bg-gray-50'\n      }`}\n      onClick={() => isSelected ? deselectFood(food.food.id) : selectFood(food)}\n    >\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"flex items-center gap-2\">\n            <h3 className=\"font-medium text-gray-900\">{food.food.name}</h3>\n            <Badge variant={food.confidence > 0.8 ? 'default' : 'secondary'}>\n              {Math.round(food.confidence * 100)}%\n            </Badge>\n          </div>\n          {isSelected && <CheckCircle className=\"h-5 w-5 text-blue-500\" />}\n        </div>\n        \n        <div className=\"text-sm text-gray-600 mb-3\">\n          <p>Quantité estimée: {Math.round(food.estimated_quantity)}g</p>\n          <p>Calories: {Math.round(food.estimated_calories)} kcal</p>\n        </div>\n\n        {isSelected && (\n          <div className=\"flex items-center gap-2\" onClick={(e) => e.stopPropagation()}>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => adjustQuantity(food.food.id, Math.max(10, food.estimated_quantity - 10))}\n            >\n              <Minus className=\"h-3 w-3\" />\n            </Button>\n            \n            <Input\n              type=\"number\"\n              value={Math.round(food.estimated_quantity)}\n              onChange={(e) => adjustQuantity(food.food.id, parseInt(e.target.value) || 0)}\n              className=\"w-20 text-center text-xs\"\n              min=\"1\"\n              max=\"1000\"\n            />\n            \n            <span className=\"text-xs text-gray-500\">g</span>\n            \n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => adjustQuantity(food.food.id, food.estimated_quantity + 10)}\n            >\n              <Plus className=\"h-3 w-3\" />\n            </Button>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className={`max-w-2xl max-h-[90vh] overflow-y-auto ${className}`}>\n        <DialogHeader>\n          <div className=\"flex items-center justify-between\">\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Camera className=\"h-5 w-5\" />\n              Analyse Nutritionnelle par Photo\n            </DialogTitle>\n            <Button variant=\"ghost\" size=\"sm\" onClick={handleClose}>\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Zone de sélection d'image */}\n          {!selectedImage && !state.isAnalyzing && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <Button\n                  variant=\"outline\"\n                  className=\"h-32 flex-col gap-2\"\n                  onClick={() => cameraInputRef.current?.click()}\n                >\n                  <Camera className=\"h-8 w-8\" />\n                  <span>Prendre une photo</span>\n                </Button>\n                \n                <Button\n                  variant=\"outline\"\n                  className=\"h-32 flex-col gap-2\"\n                  onClick={() => fileInputRef.current?.click()}\n                >\n                  <Upload className=\"h-8 w-8\" />\n                  <span>Choisir une image</span>\n                </Button>\n              </div>\n              \n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleFileSelect}\n                className=\"hidden\"\n              />\n              \n              <input\n                ref={cameraInputRef}\n                type=\"file\"\n                accept=\"image/*\"\n                capture=\"environment\"\n                onChange={handleFileSelect}\n                className=\"hidden\"\n              />\n              \n              <div className=\"text-sm text-gray-500 text-center\">\n                Formats supportés: JPG, PNG, WebP (max 10MB)\n              </div>\n            </div>\n          )}\n\n          {/* Analyse en cours */}\n          {state.isAnalyzing && (\n            <div className=\"flex flex-col items-center justify-center py-8 space-y-4\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-blue-500\" />\n              <div className=\"text-center\">\n                <h3 className=\"font-medium\">Analyse en cours...</h3>\n                <p className=\"text-sm text-gray-500\">\n                  Reconnaissance des aliments dans votre photo\n                </p>\n              </div>\n            </div>\n          )}\n\n          {/* Aperçu de l'image */}\n          {selectedImage && !state.isAnalyzing && (\n            <div className=\"space-y-4\">\n              <div className=\"relative\">\n                <img\n                  src={selectedImage}\n                  alt=\"Image à analyser\"\n                  className=\"w-full h-48 object-cover rounded-lg\"\n                />\n                <Button\n                  variant=\"secondary\"\n                  size=\"sm\"\n                  className=\"absolute top-2 right-2\"\n                  onClick={() => {\n                    setSelectedImage(null);\n                    reset();\n                  }}\n                >\n                  <RotateCcw className=\"h-4 w-4\" />\n                  Nouvelle photo\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {/* Erreur */}\n          {state.error && (\n            <Card className=\"border-red-200 bg-red-50\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center gap-2 text-red-600\">\n                  <AlertCircle className=\"h-5 w-5\" />\n                  <span className=\"font-medium\">Erreur d'analyse</span>\n                </div>\n                <p className=\"text-sm text-red-600 mt-1\">{state.error}</p>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Résultats de l'analyse */}\n          {state.analysisResult && state.analysisResult.foods.length > 0 && (\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-medium\">\n                  Aliments détectés ({state.analysisResult.foods.length})\n                </h3>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowNutritionDetails(!showNutritionDetails)}\n                >\n                  {showNutritionDetails ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                  {showNutritionDetails ? 'Masquer' : 'Détails'} nutrition\n                </Button>\n              </div>\n\n              <div className=\"grid gap-3\">\n                {state.analysisResult.foods.map((food, index) => {\n                  const isSelected = state.selectedFoods.some(f => f.food.id === food.food.id);\n                  return renderFoodItem(food, isSelected);\n                })}\n              </div>\n\n              {/* Résumé nutritionnel */}\n              {state.selectedFoods.length > 0 && (\n                <Card className=\"bg-green-50 border-green-200\">\n                  <CardHeader className=\"pb-3\">\n                    <CardTitle className=\"text-green-800 text-base\">\n                      Résumé nutritionnel ({state.selectedFoods.length} aliment(s))\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"pt-0\">\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                      <div className=\"text-center\">\n                        <div className=\"font-semibold text-green-800\">\n                          {Math.round(totalNutrition.calories)}\n                        </div>\n                        <div className=\"text-green-600\">Calories</div>\n                      </div>\n                      \n                      {showNutritionDetails && (\n                        <>\n                          <div className=\"text-center\">\n                            <div className=\"font-semibold text-green-800\">\n                              {Math.round(totalNutrition.protein)}g\n                            </div>\n                            <div className=\"text-green-600\">Protéines</div>\n                          </div>\n                          \n                          <div className=\"text-center\">\n                            <div className=\"font-semibold text-green-800\">\n                              {Math.round(totalNutrition.carbs)}g\n                            </div>\n                            <div className=\"text-green-600\">Glucides</div>\n                          </div>\n                          \n                          <div className=\"text-center\">\n                            <div className=\"font-semibold text-green-800\">\n                              {Math.round(totalNutrition.fat)}g\n                            </div>\n                            <div className=\"text-green-600\">Lipides</div>\n                          </div>\n                        </>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          )}\n\n          {/* Aucun aliment détecté */}\n          {state.analysisResult && state.analysisResult.foods.length === 0 && !state.error && (\n            <Card className=\"border-yellow-200 bg-yellow-50\">\n              <CardContent className=\"p-4 text-center\">\n                <AlertCircle className=\"h-8 w-8 text-yellow-600 mx-auto mb-2\" />\n                <h3 className=\"font-medium text-yellow-800\">Aucun aliment détecté</h3>\n                <p className=\"text-sm text-yellow-600 mt-1\">\n                  Essayez avec une photo plus claire ou un angle différent\n                </p>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Actions */}\n          {(selectedImage || state.analysisResult) && (\n            <div className=\"flex gap-2 pt-4 border-t\">\n              <Button variant=\"outline\" onClick={handleClose} className=\"flex-1\">\n                Annuler\n              </Button>\n              \n              {state.selectedFoods.length > 0 && (\n                <Button onClick={handleConfirm} className=\"flex-1\">\n                  Ajouter au journal ({state.selectedFoods.length})\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default PhotoNutritionAnalyzer;"],"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","ignoreList":[]}