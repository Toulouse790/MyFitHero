f86e6f529f570565b3ef26fe4c888c88
"use strict";

/* istanbul ignore next */
function cov_vwpaj5bky() {
  var path = "/workspaces/MyFitHero/src/features/hydration/hooks/useHydrationStore.ts";
  var hash = "4f191a86125927d42488b117df26703fc8023782";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/hydration/hooks/useHydrationStore.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 35
        }
      },
      "2": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 282,
          column: 4
        }
      },
      "6": {
        start: {
          line: 7,
          column: 93
        },
        end: {
          line: 274,
          column: 1
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "9": {
        start: {
          line: 19,
          column: 40
        },
        end: {
          line: 19,
          column: 80
        }
      },
      "10": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "11": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "12": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "13": {
        start: {
          line: 28,
          column: 51
        },
        end: {
          line: 32,
          column: 25
        }
      },
      "14": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "15": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "16": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 38,
          column: 16
        }
      },
      "17": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "18": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 42
        }
      },
      "19": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 93
        }
      },
      "20": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 54
        }
      },
      "21": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 24
        }
      },
      "22": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 46
        }
      },
      "23": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "24": {
        start: {
          line: 52,
          column: 51
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "25": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 62,
          column: 29
        }
      },
      "26": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 29
        }
      },
      "27": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 66,
          column: 16
        }
      },
      "28": {
        start: {
          line: 63,
          column: 26
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "29": {
        start: {
          line: 64,
          column: 62
        },
        end: {
          line: 64,
          column: 93
        }
      },
      "30": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 42
        }
      },
      "31": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 71,
          column: 100
        }
      },
      "32": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 54
        }
      },
      "33": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 24
        }
      },
      "34": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 46
        }
      },
      "35": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "36": {
        start: {
          line: 79,
          column: 38
        },
        end: {
          line: 79,
          column: 111
        }
      },
      "37": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 81,
          column: 29
        }
      },
      "38": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 29
        }
      },
      "39": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 85,
          column: 16
        }
      },
      "40": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "41": {
        start: {
          line: 83,
          column: 55
        },
        end: {
          line: 83,
          column: 70
        }
      },
      "42": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 42
        }
      },
      "43": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 90,
          column: 100
        }
      },
      "44": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 54
        }
      },
      "45": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 24
        }
      },
      "46": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 46
        }
      },
      "47": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "48": {
        start: {
          line: 98,
          column: 40
        },
        end: {
          line: 98,
          column: 80
        }
      },
      "49": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 100,
          column: 63
        }
      },
      "50": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 63
        }
      },
      "51": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 105,
          column: 57
        }
      },
      "52": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "53": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 58
        }
      },
      "54": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "55": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 56
        }
      },
      "56": {
        start: {
          line: 112,
          column: 51
        },
        end: {
          line: 112,
          column: 62
        }
      },
      "57": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 114,
          column: 29
        }
      },
      "58": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 29
        }
      },
      "59": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 118,
          column: 15
        }
      },
      "60": {
        start: {
          line: 122,
          column: 28
        },
        end: {
          line: 122,
          column: 96
        }
      },
      "61": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 54
        }
      },
      "62": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 24
        }
      },
      "63": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 46
        }
      },
      "64": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "65": {
        start: {
          line: 131,
          column: 40
        },
        end: {
          line: 131,
          column: 80
        }
      },
      "66": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 133,
          column: 63
        }
      },
      "67": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 63
        }
      },
      "68": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 139,
          column: 38
        }
      },
      "69": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "70": {
        start: {
          line: 148,
          column: 51
        },
        end: {
          line: 152,
          column: 25
        }
      },
      "71": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 154,
          column: 29
        }
      },
      "72": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 29
        }
      },
      "73": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 159,
          column: 16
        }
      },
      "74": {
        start: {
          line: 155,
          column: 26
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "75": {
        start: {
          line: 163,
          column: 28
        },
        end: {
          line: 163,
          column: 113
        }
      },
      "76": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 54
        }
      },
      "77": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 24
        }
      },
      "78": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 46
        }
      },
      "79": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "80": {
        start: {
          line: 171,
          column: 51
        },
        end: {
          line: 179,
          column: 25
        }
      },
      "81": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 181,
          column: 29
        }
      },
      "82": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 29
        }
      },
      "83": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 186,
          column: 16
        }
      },
      "84": {
        start: {
          line: 182,
          column: 26
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "85": {
        start: {
          line: 183,
          column: 57
        },
        end: {
          line: 183,
          column: 86
        }
      },
      "86": {
        start: {
          line: 190,
          column: 28
        },
        end: {
          line: 190,
          column: 114
        }
      },
      "87": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 54
        }
      },
      "88": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 24
        }
      },
      "89": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 46
        }
      },
      "90": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "91": {
        start: {
          line: 198,
          column: 40
        },
        end: {
          line: 198,
          column: 80
        }
      },
      "92": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 200,
          column: 63
        }
      },
      "93": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 63
        }
      },
      "94": {
        start: {
          line: 201,
          column: 51
        },
        end: {
          line: 205,
          column: 58
        }
      },
      "95": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 207,
          column: 29
        }
      },
      "96": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 29
        }
      },
      "97": {
        start: {
          line: 208,
          column: 31
        },
        end: {
          line: 208,
          column: 78
        }
      },
      "98": {
        start: {
          line: 208,
          column: 51
        },
        end: {
          line: 208,
          column: 64
        }
      },
      "99": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 213,
          column: 15
        }
      },
      "100": {
        start: {
          line: 217,
          column: 28
        },
        end: {
          line: 217,
          column: 110
        }
      },
      "101": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 54
        }
      },
      "102": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 24
        }
      },
      "103": {
        start: {
          line: 224,
          column: 41
        },
        end: {
          line: 224,
          column: 46
        }
      },
      "104": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "105": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 33
        }
      },
      "106": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 19
        }
      },
      "107": {
        start: {
          line: 229,
          column: 20
        },
        end: {
          line: 229,
          column: 30
        }
      },
      "108": {
        start: {
          line: 230,
          column: 22
        },
        end: {
          line: 230,
          column: 53
        }
      },
      "109": {
        start: {
          line: 232,
          column: 29
        },
        end: {
          line: 232,
          column: 93
        }
      },
      "110": {
        start: {
          line: 232,
          column: 53
        },
        end: {
          line: 232,
          column: 92
        }
      },
      "111": {
        start: {
          line: 233,
          column: 28
        },
        end: {
          line: 233,
          column: 89
        }
      },
      "112": {
        start: {
          line: 233,
          column: 64
        },
        end: {
          line: 233,
          column: 85
        }
      },
      "113": {
        start: {
          line: 234,
          column: 32
        },
        end: {
          line: 234,
          column: 77
        }
      },
      "114": {
        start: {
          line: 236,
          column: 26
        },
        end: {
          line: 236,
          column: 39
        }
      },
      "115": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 45
        }
      },
      "116": {
        start: {
          line: 238,
          column: 28
        },
        end: {
          line: 238,
          column: 91
        }
      },
      "117": {
        start: {
          line: 238,
          column: 52
        },
        end: {
          line: 238,
          column: 90
        }
      },
      "118": {
        start: {
          line: 239,
          column: 28
        },
        end: {
          line: 239,
          column: 88
        }
      },
      "119": {
        start: {
          line: 239,
          column: 63
        },
        end: {
          line: 239,
          column: 84
        }
      },
      "120": {
        start: {
          line: 240,
          column: 30
        },
        end: {
          line: 240,
          column: 45
        }
      },
      "121": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 241,
          column: 56
        }
      },
      "122": {
        start: {
          line: 242,
          column: 33
        },
        end: {
          line: 242,
          column: 67
        }
      },
      "123": {
        start: {
          line: 243,
          column: 22
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "124": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 23
        }
      },
      "125": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 29
        }
      },
      "126": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 272,
          column: 11
        }
      },
      "127": {
        start: {
          line: 276,
          column: 26
        },
        end: {
          line: 281,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 78
          },
          end: {
            line: 7,
            column: 79
          }
        },
        loc: {
          start: {
            line: 7,
            column: 93
          },
          end: {
            line: 274,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 14
          },
          end: {
            line: 16,
            column: 15
          }
        },
        loc: {
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 35,
            column: 17
          }
        },
        loc: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 38,
            column: 13
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 17
          },
          end: {
            line: 49,
            column: 18
          }
        },
        loc: {
          start: {
            line: 49,
            column: 40
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 17
          }
        },
        loc: {
          start: {
            line: 63,
            column: 26
          },
          end: {
            line: 66,
            column: 13
          }
        },
        line: 63
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 43
          },
          end: {
            line: 64,
            column: 44
          }
        },
        loc: {
          start: {
            line: 64,
            column: 62
          },
          end: {
            line: 64,
            column: 93
          }
        },
        line: 64
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 76,
            column: 17
          },
          end: {
            line: 76,
            column: 18
          }
        },
        loc: {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 76
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 17
          }
        },
        loc: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 85,
            column: 13
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 83,
            column: 46
          },
          end: {
            line: 83,
            column: 47
          }
        },
        loc: {
          start: {
            line: 83,
            column: 55
          },
          end: {
            line: 83,
            column: 70
          }
        },
        line: 83
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 95,
            column: 17
          },
          end: {
            line: 95,
            column: 18
          }
        },
        loc: {
          start: {
            line: 95,
            column: 47
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 95
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 128,
            column: 14
          }
        },
        loc: {
          start: {
            line: 128,
            column: 36
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 128
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 155,
            column: 17
          }
        },
        loc: {
          start: {
            line: 155,
            column: 26
          },
          end: {
            line: 159,
            column: 13
          }
        },
        line: 155
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 168,
            column: 17
          }
        },
        loc: {
          start: {
            line: 168,
            column: 39
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 168
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        },
        loc: {
          start: {
            line: 182,
            column: 26
          },
          end: {
            line: 186,
            column: 13
          }
        },
        line: 182
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 183,
            column: 40
          }
        },
        loc: {
          start: {
            line: 183,
            column: 57
          },
          end: {
            line: 183,
            column: 86
          }
        },
        line: 183
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 195,
            column: 15
          },
          end: {
            line: 195,
            column: 16
          }
        },
        loc: {
          start: {
            line: 195,
            column: 27
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 195
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 208,
            column: 43
          },
          end: {
            line: 208,
            column: 44
          }
        },
        loc: {
          start: {
            line: 208,
            column: 51
          },
          end: {
            line: 208,
            column: 64
          }
        },
        line: 208
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 223,
            column: 20
          },
          end: {
            line: 223,
            column: 21
          }
        },
        loc: {
          start: {
            line: 223,
            column: 38
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 223
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 232,
            column: 44
          },
          end: {
            line: 232,
            column: 45
          }
        },
        loc: {
          start: {
            line: 232,
            column: 53
          },
          end: {
            line: 232,
            column: 92
          }
        },
        line: 232
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 233,
            column: 48
          },
          end: {
            line: 233,
            column: 49
          }
        },
        loc: {
          start: {
            line: 233,
            column: 64
          },
          end: {
            line: 233,
            column: 85
          }
        },
        line: 233
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 238,
            column: 43
          },
          end: {
            line: 238,
            column: 44
          }
        },
        loc: {
          start: {
            line: 238,
            column: 52
          },
          end: {
            line: 238,
            column: 90
          }
        },
        line: 238
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 239,
            column: 47
          },
          end: {
            line: 239,
            column: 48
          }
        },
        loc: {
          start: {
            line: 239,
            column: 63
          },
          end: {
            line: 239,
            column: 84
          }
        },
        line: 239
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 261,
            column: 16
          },
          end: {
            line: 261,
            column: 17
          }
        },
        loc: {
          start: {
            line: 261,
            column: 22
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 261
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 264,
            column: 17
          }
        },
        loc: {
          start: {
            line: 264,
            column: 22
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 264
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 276,
            column: 17
          }
        },
        loc: {
          start: {
            line: 276,
            column: 26
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 276
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 21,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 21,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 34,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 34,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 53
          },
          end: {
            line: 44,
            column: 66
          }
        }, {
          start: {
            line: 44,
            column: 69
          },
          end: {
            line: 44,
            column: 93
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 62,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 62,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 62
          },
          end: {
            line: 64,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 80
          },
          end: {
            line: 64,
            column: 85
          }
        }, {
          start: {
            line: 64,
            column: 88
          },
          end: {
            line: 64,
            column: 93
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 53
          },
          end: {
            line: 71,
            column: 66
          }
        }, {
          start: {
            line: 71,
            column: 69
          },
          end: {
            line: 71,
            column: 100
          }
        }],
        line: 71
      },
      "6": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 81,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 81,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "7": {
        loc: {
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 90,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 53
          },
          end: {
            line: 90,
            column: 66
          }
        }, {
          start: {
            line: 90,
            column: 69
          },
          end: {
            line: 90,
            column: 100
          }
        }],
        line: 90
      },
      "8": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 100,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 100,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "9": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "10": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "11": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 114,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 114,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "12": {
        loc: {
          start: {
            line: 116,
            column: 25
          },
          end: {
            line: 116,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 25
          },
          end: {
            line: 116,
            column: 30
          }
        }, {
          start: {
            line: 116,
            column: 34
          },
          end: {
            line: 116,
            column: 36
          }
        }],
        line: 116
      },
      "13": {
        loc: {
          start: {
            line: 122,
            column: 28
          },
          end: {
            line: 122,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 53
          },
          end: {
            line: 122,
            column: 66
          }
        }, {
          start: {
            line: 122,
            column: 69
          },
          end: {
            line: 122,
            column: 96
          }
        }],
        line: 122
      },
      "14": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 133,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 133,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "15": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 154,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 154,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "16": {
        loc: {
          start: {
            line: 163,
            column: 28
          },
          end: {
            line: 163,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 53
          },
          end: {
            line: 163,
            column: 66
          }
        }, {
          start: {
            line: 163,
            column: 69
          },
          end: {
            line: 163,
            column: 113
          }
        }],
        line: 163
      },
      "17": {
        loc: {
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 181,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 181,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "18": {
        loc: {
          start: {
            line: 183,
            column: 57
          },
          end: {
            line: 183,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 74
          },
          end: {
            line: 183,
            column: 79
          }
        }, {
          start: {
            line: 183,
            column: 82
          },
          end: {
            line: 183,
            column: 86
          }
        }],
        line: 183
      },
      "19": {
        loc: {
          start: {
            line: 184,
            column: 29
          },
          end: {
            line: 184,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 46
          },
          end: {
            line: 184,
            column: 51
          }
        }, {
          start: {
            line: 184,
            column: 54
          },
          end: {
            line: 184,
            column: 71
          }
        }],
        line: 184
      },
      "20": {
        loc: {
          start: {
            line: 190,
            column: 28
          },
          end: {
            line: 190,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 53
          },
          end: {
            line: 190,
            column: 66
          }
        }, {
          start: {
            line: 190,
            column: 69
          },
          end: {
            line: 190,
            column: 114
          }
        }],
        line: 190
      },
      "21": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 200,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 200,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "22": {
        loc: {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 207,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 207,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "23": {
        loc: {
          start: {
            line: 208,
            column: 31
          },
          end: {
            line: 208,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 31
          },
          end: {
            line: 208,
            column: 65
          }
        }, {
          start: {
            line: 208,
            column: 69
          },
          end: {
            line: 208,
            column: 78
          }
        }],
        line: 208
      },
      "24": {
        loc: {
          start: {
            line: 210,
            column: 23
          },
          end: {
            line: 210,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 23
          },
          end: {
            line: 210,
            column: 28
          }
        }, {
          start: {
            line: 210,
            column: 32
          },
          end: {
            line: 210,
            column: 34
          }
        }],
        line: 210
      },
      "25": {
        loc: {
          start: {
            line: 217,
            column: 28
          },
          end: {
            line: 217,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 53
          },
          end: {
            line: 217,
            column: 66
          }
        }, {
          start: {
            line: 217,
            column: 69
          },
          end: {
            line: 217,
            column: 110
          }
        }],
        line: 217
      },
      "26": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "27": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 225,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 225,
            column: 27
          }
        }, {
          start: {
            line: 225,
            column: 31
          },
          end: {
            line: 225,
            column: 43
          }
        }],
        line: 225
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/hydration/hooks/useHydrationStore.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/hydration/hooks/useHydrationStore.ts"],
      sourcesContent: ["import { Star, Target } from 'lucide-react';\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { supabase } from '@/lib/supabase';\nimport type { HydrationStore, HydrationEntry, HydrationGoal, HydrationStats } from '@/features/hydration/types';\n\nexport const useHydrationStore = create<HydrationStore>()(\n  persist(\n    (set, get) => ({\n      // \xC9tat initial\n      entries: [],\n      goals: [],\n      currentGoal: null,\n      stats: null,\n      isLoading: false,\n      error: null,\n\n      // Actions - Entries\n      addEntry: async (entryData: Omit<HydrationEntry, 'id' | 'userId' | 'created_at' | 'updated_at'>) => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const {\n            data: { user },\n          } = await supabase.auth.getUser();\n          if (!user) throw new Error('Utilisateur non authentifi\xE9');\n\n          const newEntry: Omit<HydrationEntry, 'id'> = {\n            ...entryData,\n            userId: user.id,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n          };\n\n          const { data: _data, error: _error } = await supabase\n            .from('hydration_entries')\n            .insert([newEntry])\n            .select()\n            .single();\n\n          if (_error) throw _error;\n\n          set(state => ({\n            entries: [...state.entries, _data],\n            isLoading: false,\n          }));\n\n          // Recalculer les stats apr\xE8s ajout\n          get().calculateStats('daily');\n        } catch (error: any) {\n      // Erreur silencieuse\n          const message = error instanceof Error ? error.message : \"Erreur lors de l'ajout\";\n          set({ error: message, isLoading: false });\n          throw error;\n        }\n      },\n\n      updateEntry: async (id: string, updates: Partial<HydrationEntry>) => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const { data: _data, error: _error } = await supabase\n            .from('hydration_entries')\n            .update({\n              ...updates,\n              updated_at: new Date().toISOString(),\n            })\n            .eq('id', id)\n            .select()\n            .single();\n\n          if (_error) throw _error;\n\n          set(state => ({\n            entries: state.entries.map((entry, index) => (entry.id === id ? _data : entry)),\n            isLoading: false,\n          }));\n\n          get().calculateStats('daily');\n        } catch (error: any) {\n      // Erreur silencieuse\n          const message = error instanceof Error ? error.message : 'Erreur lors de la mise \xE0 jour';\n          set({ error: message, isLoading: false });\n          throw error;\n        }\n      },\n\n      deleteEntry: async (id: string) => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const { error: _error } = await supabase.from('hydration_entries').delete().eq('id', id);\n\n          if (_error) throw _error;\n\n          set(state => ({\n            entries: state.entries.filter(entry => entry.id !== id),\n            isLoading: false,\n          }));\n\n          get().calculateStats('daily');\n        } catch (error: any) {\n      // Erreur silencieuse\n          const message = error instanceof Error ? error.message : 'Erreur lors de la suppression';\n          set({ error: message, isLoading: false });\n          throw error;\n        }\n      },\n\n      loadEntries: async (startDate?: string, endDate?: string) => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const {\n            data: { user },\n          } = await supabase.auth.getUser();\n          if (!user) throw new Error('Utilisateur non authentifi\xE9');\n\n          let query = supabase\n            .from('hydration_entries')\n            .select('*')\n            .eq('userId', user.id)\n            .order('timestamp', { ascending: false });\n\n          if (startDate) {\n            query = query.gte('timestamp', startDate);\n          }\n          if (endDate) {\n            query = query.lte('timestamp', endDate);\n          }\n\n          const { data: _data, error: _error } = await query;\n\n          if (_error) throw _error;\n\n          set({\n            entries: _data || [],\n            isLoading: false,\n          });\n        } catch (error: any) {\n      // Erreur silencieuse\n          const message = error instanceof Error ? error.message : 'Erreur lors du chargement';\n          set({ error: message, isLoading: false });\n          throw error;\n        }\n      },\n\n      // Actions - Goals\n      setGoal: async (dailyTarget: number) => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const {\n            data: { user },\n          } = await supabase.auth.getUser();\n          if (!user) throw new Error('Utilisateur non authentifi\xE9');\n\n          // D\xE9sactiver l'ancien objectif\n          await supabase\n            .from('hydration_goals')\n            .update({ isActive: false })\n            .eq('userId', user.id)\n            .eq('isActive', true);\n\n          // Cr\xE9er le nouveau\n          const newGoal: Omit<HydrationGoal, 'id'> = {\n            userId: user.id,\n            dailyTarget,\n            isActive: true,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n          };\n\n          const { data: _data, error: _error } = await supabase\n            .from('hydration_goals')\n            .insert([newGoal])\n            .select()\n            .single();\n\n          if (_error) throw _error;\n\n          set(state => ({\n            goals: [...state.goals, _data],\n            currentGoal: _data,\n            isLoading: false,\n          }));\n        } catch (error: any) {\n      // Erreur silencieuse\n          const message =\n            error instanceof Error ? error.message : \"Erreur lors de la d\xE9finition de l'objectif\";\n          set({ error: message, isLoading: false });\n          throw error;\n        }\n      },\n\n      updateGoal: async (id: string, updates: Partial<HydrationGoal>) => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const { data: _data, error: _error } = await supabase\n            .from('hydration_goals')\n            .update({\n              ...updates,\n              updated_at: new Date().toISOString(),\n            })\n            .eq('id', id)\n            .select()\n            .single();\n\n          if (_error) throw _error;\n\n          set(state => ({\n            goals: state.goals.map((goal, index) => (goal.id === id ? _data : goal)),\n            currentGoal: _data.isActive ? _data : state.currentGoal,\n            isLoading: false,\n          }));\n        } catch (error: any) {\n      // Erreur silencieuse\n          const message =\n            error instanceof Error ? error.message : \"Erreur lors de la mise \xE0 jour de l'objectif\";\n          set({ error: message, isLoading: false });\n          throw error;\n        }\n      },\n\n      loadGoals: async () => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const {\n            data: { user },\n          } = await supabase.auth.getUser();\n          if (!user) throw new Error('Utilisateur non authentifi\xE9');\n\n          const { data: _data, error: _error } = await supabase\n            .from('hydration_goals')\n            .select('*')\n            .eq('userId', user.id)\n            .order('created_at', { ascending: false });\n\n          if (_error) throw _error;\n\n          const activeGoal = _data?.find(goal => goal.isActive) || undefined;\n\n          set({\n            goals: _data || [],\n            currentGoal: activeGoal,\n            isLoading: false,\n          });\n        } catch (error: any) {\n      // Erreur silencieuse\n          const message =\n            error instanceof Error ? error.message : 'Erreur lors du chargement des objectifs';\n          set({ error: message, isLoading: false });\n          throw error;\n        }\n      },\n\n      // Actions - Stats\n      calculateStats: async (period: 'daily' | 'weekly' | 'monthly') => {\n        const { entries, currentGoal } = get();\n\n        if (!entries.length || !currentGoal) {\n          set({ stats: null });\n          return;\n        }\n\n        const now = new Date();\n        const today = now.toISOString().split('T')[0];\n\n        // Stats quotidiennes\n        const todayEntries = entries.filter(entry => entry.timestamp.split('T')[0] === today);\n\n        const dailyAmount = todayEntries.reduce((sum, entry) => sum + entry.amount_ml, 0);\n        const dailyPercentage = (dailyAmount / currentGoal.dailyTarget) * 100;\n\n        // Stats hebdomadaires\n        const weekStart = new Date(now);\n        weekStart.setDate(now.getDate() - 6);\n\n        const weekEntries = entries.filter(entry => new Date(entry.timestamp) >= weekStart);\n\n        const weeklyTotal = weekEntries.reduce((sum, entry) => sum + entry.amount_ml, 0);\n        const weeklyAverage = weeklyTotal / 7;\n        const weeklyTarget = currentGoal.dailyTarget * 7;\n        const weeklyPercentage = (weeklyTotal / weeklyTarget) * 100;\n\n        const stats: HydrationStats = {\n          daily: {\n            current: dailyAmount,\n            target: currentGoal.dailyTarget,\n            percentage: dailyPercentage,\n            entries: todayEntries,\n          },\n          weekly: {\n            total: weeklyTotal,\n            average: weeklyAverage,\n            target: weeklyTarget,\n            percentage: weeklyPercentage,\n            dailyBreakdown: [], // \xC0 impl\xE9menter selon les besoins\n          },\n        };\n\n        set({ stats });\n      },\n\n      // Utility\n      clearError: () => {\n        set({ error: null });\n      },\n\n      resetStore: () => {\n        set({\n          entries: [],\n          goals: [],\n          currentGoal: null,\n          stats: null,\n          isLoading: false,\n          error: null,\n        });\n      },\n    }),\n    {\n      name: 'hydration-storage',\n      partialize: state => ({\n        entries: state.entries,\n        goals: state.goals,\n        currentGoal: state.currentGoal,\n        stats: state.stats,\n      }),\n    }\n  )\n);\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f191a86125927d42488b117df26703fc8023782"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vwpaj5bky = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_vwpaj5bky();
cov_vwpaj5bky().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_vwpaj5bky().s[1]++;
exports.useHydrationStore = void 0;
const zustand_1 =
/* istanbul ignore next */
(cov_vwpaj5bky().s[2]++, require("zustand"));
const middleware_1 =
/* istanbul ignore next */
(cov_vwpaj5bky().s[3]++, require("zustand/middleware"));
const supabase_1 =
/* istanbul ignore next */
(cov_vwpaj5bky().s[4]++, require("@/lib/supabase"));
/* istanbul ignore next */
cov_vwpaj5bky().s[5]++;
exports.useHydrationStore = (0, zustand_1.create)()((0, middleware_1.persist)((set, get) => {
  /* istanbul ignore next */
  cov_vwpaj5bky().f[0]++;
  cov_vwpaj5bky().s[6]++;
  return {
    // État initial
    entries: [],
    goals: [],
    currentGoal: null,
    stats: null,
    isLoading: false,
    error: null,
    // Actions - Entries
    addEntry: async entryData => {
      /* istanbul ignore next */
      cov_vwpaj5bky().f[1]++;
      cov_vwpaj5bky().s[7]++;
      set({
        isLoading: true,
        error: null
      });
      /* istanbul ignore next */
      cov_vwpaj5bky().s[8]++;
      try {
        const {
          data: {
            user
          }
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[9]++, await supabase_1.supabase.auth.getUser());
        /* istanbul ignore next */
        cov_vwpaj5bky().s[10]++;
        if (!user) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[0][0]++;
          cov_vwpaj5bky().s[11]++;
          throw new Error('Utilisateur non authentifié');
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[0][1]++;
        }
        const newEntry =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[12]++, {
          ...entryData,
          userId: user.id,
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        });
        const {
          data: _data,
          error: _error
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[13]++, await supabase_1.supabase.from('hydration_entries').insert([newEntry]).select().single());
        /* istanbul ignore next */
        cov_vwpaj5bky().s[14]++;
        if (_error) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[1][0]++;
          cov_vwpaj5bky().s[15]++;
          throw _error;
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[1][1]++;
        }
        cov_vwpaj5bky().s[16]++;
        set(state => {
          /* istanbul ignore next */
          cov_vwpaj5bky().f[2]++;
          cov_vwpaj5bky().s[17]++;
          return {
            entries: [...state.entries, _data],
            isLoading: false
          };
        });
        // Recalculer les stats après ajout
        /* istanbul ignore next */
        cov_vwpaj5bky().s[18]++;
        get().calculateStats('daily');
      } catch (error) {
        // Erreur silencieuse
        const message =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[19]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[2][0]++, error.message) :
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[2][1]++, "Erreur lors de l'ajout"));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[20]++;
        set({
          error: message,
          isLoading: false
        });
        /* istanbul ignore next */
        cov_vwpaj5bky().s[21]++;
        throw error;
      }
    },
    updateEntry: async (id, updates) => {
      /* istanbul ignore next */
      cov_vwpaj5bky().f[3]++;
      cov_vwpaj5bky().s[22]++;
      set({
        isLoading: true,
        error: null
      });
      /* istanbul ignore next */
      cov_vwpaj5bky().s[23]++;
      try {
        const {
          data: _data,
          error: _error
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[24]++, await supabase_1.supabase.from('hydration_entries').update({
          ...updates,
          updated_at: new Date().toISOString()
        }).eq('id', id).select().single());
        /* istanbul ignore next */
        cov_vwpaj5bky().s[25]++;
        if (_error) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[3][0]++;
          cov_vwpaj5bky().s[26]++;
          throw _error;
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[3][1]++;
        }
        cov_vwpaj5bky().s[27]++;
        set(state => {
          /* istanbul ignore next */
          cov_vwpaj5bky().f[4]++;
          cov_vwpaj5bky().s[28]++;
          return {
            entries: state.entries.map((entry, index) => {
              /* istanbul ignore next */
              cov_vwpaj5bky().f[5]++;
              cov_vwpaj5bky().s[29]++;
              return entry.id === id ?
              /* istanbul ignore next */
              (cov_vwpaj5bky().b[4][0]++, _data) :
              /* istanbul ignore next */
              (cov_vwpaj5bky().b[4][1]++, entry);
            }),
            isLoading: false
          };
        });
        /* istanbul ignore next */
        cov_vwpaj5bky().s[30]++;
        get().calculateStats('daily');
      } catch (error) {
        // Erreur silencieuse
        const message =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[31]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[5][0]++, error.message) :
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[5][1]++, 'Erreur lors de la mise à jour'));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[32]++;
        set({
          error: message,
          isLoading: false
        });
        /* istanbul ignore next */
        cov_vwpaj5bky().s[33]++;
        throw error;
      }
    },
    deleteEntry: async id => {
      /* istanbul ignore next */
      cov_vwpaj5bky().f[6]++;
      cov_vwpaj5bky().s[34]++;
      set({
        isLoading: true,
        error: null
      });
      /* istanbul ignore next */
      cov_vwpaj5bky().s[35]++;
      try {
        const {
          error: _error
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[36]++, await supabase_1.supabase.from('hydration_entries').delete().eq('id', id));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[37]++;
        if (_error) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[6][0]++;
          cov_vwpaj5bky().s[38]++;
          throw _error;
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[6][1]++;
        }
        cov_vwpaj5bky().s[39]++;
        set(state => {
          /* istanbul ignore next */
          cov_vwpaj5bky().f[7]++;
          cov_vwpaj5bky().s[40]++;
          return {
            entries: state.entries.filter(entry => {
              /* istanbul ignore next */
              cov_vwpaj5bky().f[8]++;
              cov_vwpaj5bky().s[41]++;
              return entry.id !== id;
            }),
            isLoading: false
          };
        });
        /* istanbul ignore next */
        cov_vwpaj5bky().s[42]++;
        get().calculateStats('daily');
      } catch (error) {
        // Erreur silencieuse
        const message =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[43]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[7][0]++, error.message) :
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[7][1]++, 'Erreur lors de la suppression'));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[44]++;
        set({
          error: message,
          isLoading: false
        });
        /* istanbul ignore next */
        cov_vwpaj5bky().s[45]++;
        throw error;
      }
    },
    loadEntries: async (startDate, endDate) => {
      /* istanbul ignore next */
      cov_vwpaj5bky().f[9]++;
      cov_vwpaj5bky().s[46]++;
      set({
        isLoading: true,
        error: null
      });
      /* istanbul ignore next */
      cov_vwpaj5bky().s[47]++;
      try {
        const {
          data: {
            user
          }
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[48]++, await supabase_1.supabase.auth.getUser());
        /* istanbul ignore next */
        cov_vwpaj5bky().s[49]++;
        if (!user) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[8][0]++;
          cov_vwpaj5bky().s[50]++;
          throw new Error('Utilisateur non authentifié');
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[8][1]++;
        }
        let query =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[51]++, supabase_1.supabase.from('hydration_entries').select('*').eq('userId', user.id).order('timestamp', {
          ascending: false
        }));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[52]++;
        if (startDate) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[9][0]++;
          cov_vwpaj5bky().s[53]++;
          query = query.gte('timestamp', startDate);
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[9][1]++;
        }
        cov_vwpaj5bky().s[54]++;
        if (endDate) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[10][0]++;
          cov_vwpaj5bky().s[55]++;
          query = query.lte('timestamp', endDate);
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[10][1]++;
        }
        const {
          data: _data,
          error: _error
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[56]++, await query);
        /* istanbul ignore next */
        cov_vwpaj5bky().s[57]++;
        if (_error) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[11][0]++;
          cov_vwpaj5bky().s[58]++;
          throw _error;
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[11][1]++;
        }
        cov_vwpaj5bky().s[59]++;
        set({
          entries:
          /* istanbul ignore next */
          (cov_vwpaj5bky().b[12][0]++, _data) ||
          /* istanbul ignore next */
          (cov_vwpaj5bky().b[12][1]++, []),
          isLoading: false
        });
      } catch (error) {
        // Erreur silencieuse
        const message =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[60]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[13][0]++, error.message) :
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[13][1]++, 'Erreur lors du chargement'));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[61]++;
        set({
          error: message,
          isLoading: false
        });
        /* istanbul ignore next */
        cov_vwpaj5bky().s[62]++;
        throw error;
      }
    },
    // Actions - Goals
    setGoal: async dailyTarget => {
      /* istanbul ignore next */
      cov_vwpaj5bky().f[10]++;
      cov_vwpaj5bky().s[63]++;
      set({
        isLoading: true,
        error: null
      });
      /* istanbul ignore next */
      cov_vwpaj5bky().s[64]++;
      try {
        const {
          data: {
            user
          }
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[65]++, await supabase_1.supabase.auth.getUser());
        /* istanbul ignore next */
        cov_vwpaj5bky().s[66]++;
        if (!user) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[14][0]++;
          cov_vwpaj5bky().s[67]++;
          throw new Error('Utilisateur non authentifié');
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[14][1]++;
        }
        // Désactiver l'ancien objectif
        cov_vwpaj5bky().s[68]++;
        await supabase_1.supabase.from('hydration_goals').update({
          isActive: false
        }).eq('userId', user.id).eq('isActive', true);
        // Créer le nouveau
        const newGoal =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[69]++, {
          userId: user.id,
          dailyTarget,
          isActive: true,
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        });
        const {
          data: _data,
          error: _error
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[70]++, await supabase_1.supabase.from('hydration_goals').insert([newGoal]).select().single());
        /* istanbul ignore next */
        cov_vwpaj5bky().s[71]++;
        if (_error) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[15][0]++;
          cov_vwpaj5bky().s[72]++;
          throw _error;
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[15][1]++;
        }
        cov_vwpaj5bky().s[73]++;
        set(state => {
          /* istanbul ignore next */
          cov_vwpaj5bky().f[11]++;
          cov_vwpaj5bky().s[74]++;
          return {
            goals: [...state.goals, _data],
            currentGoal: _data,
            isLoading: false
          };
        });
      } catch (error) {
        // Erreur silencieuse
        const message =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[75]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[16][0]++, error.message) :
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[16][1]++, "Erreur lors de la définition de l'objectif"));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[76]++;
        set({
          error: message,
          isLoading: false
        });
        /* istanbul ignore next */
        cov_vwpaj5bky().s[77]++;
        throw error;
      }
    },
    updateGoal: async (id, updates) => {
      /* istanbul ignore next */
      cov_vwpaj5bky().f[12]++;
      cov_vwpaj5bky().s[78]++;
      set({
        isLoading: true,
        error: null
      });
      /* istanbul ignore next */
      cov_vwpaj5bky().s[79]++;
      try {
        const {
          data: _data,
          error: _error
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[80]++, await supabase_1.supabase.from('hydration_goals').update({
          ...updates,
          updated_at: new Date().toISOString()
        }).eq('id', id).select().single());
        /* istanbul ignore next */
        cov_vwpaj5bky().s[81]++;
        if (_error) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[17][0]++;
          cov_vwpaj5bky().s[82]++;
          throw _error;
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[17][1]++;
        }
        cov_vwpaj5bky().s[83]++;
        set(state => {
          /* istanbul ignore next */
          cov_vwpaj5bky().f[13]++;
          cov_vwpaj5bky().s[84]++;
          return {
            goals: state.goals.map((goal, index) => {
              /* istanbul ignore next */
              cov_vwpaj5bky().f[14]++;
              cov_vwpaj5bky().s[85]++;
              return goal.id === id ?
              /* istanbul ignore next */
              (cov_vwpaj5bky().b[18][0]++, _data) :
              /* istanbul ignore next */
              (cov_vwpaj5bky().b[18][1]++, goal);
            }),
            currentGoal: _data.isActive ?
            /* istanbul ignore next */
            (cov_vwpaj5bky().b[19][0]++, _data) :
            /* istanbul ignore next */
            (cov_vwpaj5bky().b[19][1]++, state.currentGoal),
            isLoading: false
          };
        });
      } catch (error) {
        // Erreur silencieuse
        const message =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[86]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[20][0]++, error.message) :
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[20][1]++, "Erreur lors de la mise à jour de l'objectif"));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[87]++;
        set({
          error: message,
          isLoading: false
        });
        /* istanbul ignore next */
        cov_vwpaj5bky().s[88]++;
        throw error;
      }
    },
    loadGoals: async () => {
      /* istanbul ignore next */
      cov_vwpaj5bky().f[15]++;
      cov_vwpaj5bky().s[89]++;
      set({
        isLoading: true,
        error: null
      });
      /* istanbul ignore next */
      cov_vwpaj5bky().s[90]++;
      try {
        const {
          data: {
            user
          }
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[91]++, await supabase_1.supabase.auth.getUser());
        /* istanbul ignore next */
        cov_vwpaj5bky().s[92]++;
        if (!user) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[21][0]++;
          cov_vwpaj5bky().s[93]++;
          throw new Error('Utilisateur non authentifié');
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[21][1]++;
        }
        const {
          data: _data,
          error: _error
        } =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[94]++, await supabase_1.supabase.from('hydration_goals').select('*').eq('userId', user.id).order('created_at', {
          ascending: false
        }));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[95]++;
        if (_error) {
          /* istanbul ignore next */
          cov_vwpaj5bky().b[22][0]++;
          cov_vwpaj5bky().s[96]++;
          throw _error;
        } else
        /* istanbul ignore next */
        {
          cov_vwpaj5bky().b[22][1]++;
        }
        const activeGoal =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[97]++,
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[23][0]++, _data?.find(goal => {
          /* istanbul ignore next */
          cov_vwpaj5bky().f[16]++;
          cov_vwpaj5bky().s[98]++;
          return goal.isActive;
        })) ||
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[23][1]++, undefined));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[99]++;
        set({
          goals:
          /* istanbul ignore next */
          (cov_vwpaj5bky().b[24][0]++, _data) ||
          /* istanbul ignore next */
          (cov_vwpaj5bky().b[24][1]++, []),
          currentGoal: activeGoal,
          isLoading: false
        });
      } catch (error) {
        // Erreur silencieuse
        const message =
        /* istanbul ignore next */
        (cov_vwpaj5bky().s[100]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[25][0]++, error.message) :
        /* istanbul ignore next */
        (cov_vwpaj5bky().b[25][1]++, 'Erreur lors du chargement des objectifs'));
        /* istanbul ignore next */
        cov_vwpaj5bky().s[101]++;
        set({
          error: message,
          isLoading: false
        });
        /* istanbul ignore next */
        cov_vwpaj5bky().s[102]++;
        throw error;
      }
    },
    // Actions - Stats
    calculateStats: async period => {
      /* istanbul ignore next */
      cov_vwpaj5bky().f[17]++;
      const {
        entries,
        currentGoal
      } =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[103]++, get());
      /* istanbul ignore next */
      cov_vwpaj5bky().s[104]++;
      if (
      /* istanbul ignore next */
      (cov_vwpaj5bky().b[27][0]++, !entries.length) ||
      /* istanbul ignore next */
      (cov_vwpaj5bky().b[27][1]++, !currentGoal)) {
        /* istanbul ignore next */
        cov_vwpaj5bky().b[26][0]++;
        cov_vwpaj5bky().s[105]++;
        set({
          stats: null
        });
        /* istanbul ignore next */
        cov_vwpaj5bky().s[106]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_vwpaj5bky().b[26][1]++;
      }
      const now =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[107]++, new Date());
      const today =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[108]++, now.toISOString().split('T')[0]);
      // Stats quotidiennes
      const todayEntries =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[109]++, entries.filter(entry => {
        /* istanbul ignore next */
        cov_vwpaj5bky().f[18]++;
        cov_vwpaj5bky().s[110]++;
        return entry.timestamp.split('T')[0] === today;
      }));
      const dailyAmount =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[111]++, todayEntries.reduce((sum, entry) => {
        /* istanbul ignore next */
        cov_vwpaj5bky().f[19]++;
        cov_vwpaj5bky().s[112]++;
        return sum + entry.amount_ml;
      }, 0));
      const dailyPercentage =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[113]++, dailyAmount / currentGoal.dailyTarget * 100);
      // Stats hebdomadaires
      const weekStart =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[114]++, new Date(now));
      /* istanbul ignore next */
      cov_vwpaj5bky().s[115]++;
      weekStart.setDate(now.getDate() - 6);
      const weekEntries =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[116]++, entries.filter(entry => {
        /* istanbul ignore next */
        cov_vwpaj5bky().f[20]++;
        cov_vwpaj5bky().s[117]++;
        return new Date(entry.timestamp) >= weekStart;
      }));
      const weeklyTotal =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[118]++, weekEntries.reduce((sum, entry) => {
        /* istanbul ignore next */
        cov_vwpaj5bky().f[21]++;
        cov_vwpaj5bky().s[119]++;
        return sum + entry.amount_ml;
      }, 0));
      const weeklyAverage =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[120]++, weeklyTotal / 7);
      const weeklyTarget =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[121]++, currentGoal.dailyTarget * 7);
      const weeklyPercentage =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[122]++, weeklyTotal / weeklyTarget * 100);
      const stats =
      /* istanbul ignore next */
      (cov_vwpaj5bky().s[123]++, {
        daily: {
          current: dailyAmount,
          target: currentGoal.dailyTarget,
          percentage: dailyPercentage,
          entries: todayEntries
        },
        weekly: {
          total: weeklyTotal,
          average: weeklyAverage,
          target: weeklyTarget,
          percentage: weeklyPercentage,
          dailyBreakdown: [] // À implémenter selon les besoins
        }
      });
      /* istanbul ignore next */
      cov_vwpaj5bky().s[124]++;
      set({
        stats
      });
    },
    // Utility
    clearError: () => {
      /* istanbul ignore next */
      cov_vwpaj5bky().f[22]++;
      cov_vwpaj5bky().s[125]++;
      set({
        error: null
      });
    },
    resetStore: () => {
      /* istanbul ignore next */
      cov_vwpaj5bky().f[23]++;
      cov_vwpaj5bky().s[126]++;
      set({
        entries: [],
        goals: [],
        currentGoal: null,
        stats: null,
        isLoading: false,
        error: null
      });
    }
  };
}, {
  name: 'hydration-storage',
  partialize: state => {
    /* istanbul ignore next */
    cov_vwpaj5bky().f[24]++;
    cov_vwpaj5bky().s[127]++;
    return {
      entries: state.entries,
      goals: state.goals,
      currentGoal: state.currentGoal,
      stats: state.stats
    };
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,