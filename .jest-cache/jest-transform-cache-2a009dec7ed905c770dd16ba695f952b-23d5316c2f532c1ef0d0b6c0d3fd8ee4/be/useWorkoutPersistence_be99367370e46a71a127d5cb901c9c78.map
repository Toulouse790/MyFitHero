{"version":3,"names":["cov_cen07n6bd","actualCoverage","s","react_1","require","use_supabase_query_1","useWorkoutPersistence","f","supabase","useSupabaseQuery","saveSession","useCallback","session","error","_error","from","upsert","b","saveSet","sessionId","exerciseId","set","insert","session_id","exercise_id","loadSession","data","_data","select","eq","single","deleteSession","delete","syncOfflineData","exports"],"sources":["/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutPersistence.ts"],"sourcesContent":["import React, { useCallback } from 'react';\n// hooks/workout/useWorkoutPersistence.ts\nimport { useSupabaseQuery } from '@/features/workout/use-supabase-query';\nimport { WorkoutSession, Set } from '@/shared/types/workout';\n\nexport interface UseWorkoutPersistenceReturn {\n  saveSession: (session: WorkoutSession) => Promise<void>;\n  saveSet: (sessionId: string, exerciseId: string, set: Set) => Promise<void>;\n  loadSession: (sessionId: string) => Promise<WorkoutSession | null>;\n  deleteSession: (sessionId: string) => Promise<void>;\n  syncOfflineData: () => Promise<void>;\n}\n\nexport const useWorkoutPersistence = (): UseWorkoutPersistenceReturn => {\n  const { supabase } = useSupabaseQuery();\n\n  const saveSession = useCallback(\n    async (session: WorkoutSession) => {\n      const { error: _error } = await supabase.from('workout_sessions').upsert(session);\n\n      if (error) throw error;\n    },\n    [supabase]\n  );\n\n  const saveSet = useCallback(\n    async (sessionId: string, exerciseId: string, set: Set) => {\n      const { error: _error } = await supabase.from('workout_sets').insert({\n        session_id: sessionId,\n        exercise_id: exerciseId,\n        ...set,\n      });\n\n      if (error) throw error;\n    },\n    [supabase]\n  );\n\n  const loadSession = useCallback(\n    async (sessionId: string): Promise<WorkoutSession | null> => {\n      const { data: _data, error: _error } = await supabase\n        .from('workout_sessions')\n        .select('*, workout_sets(*)')\n        .eq('id', sessionId)\n        .single();\n\n      if (error) throw error;\n      return data;\n    },\n    [supabase]\n  );\n\n  const deleteSession = useCallback(\n    async (sessionId: string) => {\n      const { error: _error } = await supabase.from('workout_sessions').delete().eq('id', sessionId);\n\n      if (error) throw error;\n    },\n    [supabase]\n  );\n\n  const syncOfflineData = useCallback(async () => {\n    // Logique de synchronisation des données offline\n    // Récupérer les données du localStorage et les synchroniser\n  }, []);\n\n  return {\n    saveSession,\n    saveSet,\n    loadSession,\n    deleteSession,\n    syncOfflineData,\n  };\n};\n"],"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","ignoreList":[]}