c849acbcea95777be8a284cdbe1c8fa3
"use strict";

/* istanbul ignore next */
function cov_2crzi47iui() {
  var path = "/workspaces/MyFitHero/src/core/api/syncUserData.ts";
  var hash = "eee1291f928c08b53a156a34aebd2e4111611b64";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/core/api/syncUserData.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 6,
          column: 41
        }
      },
      "3": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 41
        }
      },
      "4": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 48
        }
      },
      "5": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 9,
          column: 43
        }
      },
      "6": {
        start: {
          line: 10,
          column: 18
        },
        end: {
          line: 10,
          column: 38
        }
      },
      "7": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "syncUserData",
        decl: {
          start: {
            line: 4,
            column: 15
          },
          end: {
            line: 4,
            column: 27
          }
        },
        loc: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 4
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 6,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 6,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/core/api/syncUserData.ts",
      mappings: ";;AASA,oCAQC;AARM,KAAK,UAAU,YAAY,CAAC,MAAc;IAC/C,IAAI,CAAC,MAAM;QAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;IAC9C,8EAA8E;IAC9E,MAAM,SAAS,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC7C,MAAM,OAAO,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;IACxC,MAAM,KAAK,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;IACnC,sEAAsE;IACtE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;AACvC,CAAC",
      names: [],
      sources: ["/workspaces/MyFitHero/src/core/api/syncUserData.ts"],
      sourcesContent: ["// Synchronisation critique des donn\xE9es utilisateur sur tous les modules (Nutrition, Workout, Sleep)\nimport { supabase } from './supabase.client';\n\nexport interface UserSyncResult {\n  nutrition: any;\n  workout: any;\n  sleep: any;\n}\n\nexport async function syncUserData(userId: string): Promise<UserSyncResult> {\n  if (!userId) throw new Error('userId requis');\n  // Simule la r\xE9cup\xE9ration et synchronisation des donn\xE9es sur plusieurs modules\n  const nutrition = { userId, calories: 2000 };\n  const workout = { userId, sessions: 5 };\n  const sleep = { userId, hours: 7 };\n  // Ici, on pourrait faire des appels r\xE9els \xE0 Supabase ou d\u2019autres APIs\n  return { nutrition, workout, sleep };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eee1291f928c08b53a156a34aebd2e4111611b64"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2crzi47iui = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2crzi47iui();
cov_2crzi47iui().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2crzi47iui().s[1]++;
exports.syncUserData = syncUserData;
async function syncUserData(userId) {
  /* istanbul ignore next */
  cov_2crzi47iui().f[0]++;
  cov_2crzi47iui().s[2]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_2crzi47iui().b[0][0]++;
    cov_2crzi47iui().s[3]++;
    throw new Error('userId requis');
  } else
  /* istanbul ignore next */
  {
    cov_2crzi47iui().b[0][1]++;
  }
  // Simule la récupération et synchronisation des données sur plusieurs modules
  const nutrition =
  /* istanbul ignore next */
  (cov_2crzi47iui().s[4]++, {
    userId,
    calories: 2000
  });
  const workout =
  /* istanbul ignore next */
  (cov_2crzi47iui().s[5]++, {
    userId,
    sessions: 5
  });
  const sleep =
  /* istanbul ignore next */
  (cov_2crzi47iui().s[6]++, {
    userId,
    hours: 7
  });
  // Ici, on pourrait faire des appels réels à Supabase ou d’autres APIs
  /* istanbul ignore next */
  cov_2crzi47iui().s[7]++;
  return {
    nutrition,
    workout,
    sleep
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwic3luY1VzZXJEYXRhIiwidXNlcklkIiwiY292XzJjcnppNDdpdWkiLCJmIiwicyIsImIiLCJFcnJvciIsIm51dHJpdGlvbiIsImNhbG9yaWVzIiwid29ya291dCIsInNlc3Npb25zIiwic2xlZXAiLCJob3VycyJdLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL015Rml0SGVyby9zcmMvY29yZS9hcGkvc3luY1VzZXJEYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFN5bmNocm9uaXNhdGlvbiBjcml0aXF1ZSBkZXMgZG9ubsOpZXMgdXRpbGlzYXRldXIgc3VyIHRvdXMgbGVzIG1vZHVsZXMgKE51dHJpdGlvbiwgV29ya291dCwgU2xlZXApXG5pbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJy4vc3VwYWJhc2UuY2xpZW50JztcblxuZXhwb3J0IGludGVyZmFjZSBVc2VyU3luY1Jlc3VsdCB7XG4gIG51dHJpdGlvbjogYW55O1xuICB3b3Jrb3V0OiBhbnk7XG4gIHNsZWVwOiBhbnk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzeW5jVXNlckRhdGEodXNlcklkOiBzdHJpbmcpOiBQcm9taXNlPFVzZXJTeW5jUmVzdWx0PiB7XG4gIGlmICghdXNlcklkKSB0aHJvdyBuZXcgRXJyb3IoJ3VzZXJJZCByZXF1aXMnKTtcbiAgLy8gU2ltdWxlIGxhIHLDqWN1cMOpcmF0aW9uIGV0IHN5bmNocm9uaXNhdGlvbiBkZXMgZG9ubsOpZXMgc3VyIHBsdXNpZXVycyBtb2R1bGVzXG4gIGNvbnN0IG51dHJpdGlvbiA9IHsgdXNlcklkLCBjYWxvcmllczogMjAwMCB9O1xuICBjb25zdCB3b3Jrb3V0ID0geyB1c2VySWQsIHNlc3Npb25zOiA1IH07XG4gIGNvbnN0IHNsZWVwID0geyB1c2VySWQsIGhvdXJzOiA3IH07XG4gIC8vIEljaSwgb24gcG91cnJhaXQgZmFpcmUgZGVzIGFwcGVscyByw6llbHMgw6AgU3VwYWJhc2Ugb3UgZOKAmWF1dHJlcyBBUElzXG4gIHJldHVybiB7IG51dHJpdGlvbiwgd29ya291dCwgc2xlZXAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTQUEsT0FBQSxDQUFBQyxZQUFBLEdBQUFBLFlBQUE7QUFBTyxlQUFlQSxZQUFZQSxDQUFDQyxNQUFjO0VBQUE7RUFBQUMsY0FBQSxHQUFBQyxDQUFBO0VBQUFELGNBQUEsR0FBQUUsQ0FBQTtFQUMvQyxJQUFJLENBQUNILE1BQU0sRUFBRTtJQUFBO0lBQUFDLGNBQUEsR0FBQUcsQ0FBQTtJQUFBSCxjQUFBLEdBQUFFLENBQUE7SUFBQSxNQUFNLElBQUlFLEtBQUssQ0FBQyxlQUFlLENBQUM7RUFBQSxDQUFDO0VBQUE7RUFBQTtJQUFBSixjQUFBLEdBQUFHLENBQUE7RUFBQTtFQUM5QztFQUNBLE1BQU1FLFNBQVM7RUFBQTtFQUFBLENBQUFMLGNBQUEsR0FBQUUsQ0FBQSxPQUFHO0lBQUVILE1BQU07SUFBRU8sUUFBUSxFQUFFO0VBQUksQ0FBRTtFQUM1QyxNQUFNQyxPQUFPO0VBQUE7RUFBQSxDQUFBUCxjQUFBLEdBQUFFLENBQUEsT0FBRztJQUFFSCxNQUFNO0lBQUVTLFFBQVEsRUFBRTtFQUFDLENBQUU7RUFDdkMsTUFBTUMsS0FBSztFQUFBO0VBQUEsQ0FBQVQsY0FBQSxHQUFBRSxDQUFBLE9BQUc7SUFBRUgsTUFBTTtJQUFFVyxLQUFLLEVBQUU7RUFBQyxDQUFFO0VBQ2xDO0VBQUE7RUFBQVYsY0FBQSxHQUFBRSxDQUFBO0VBQ0EsT0FBTztJQUFFRyxTQUFTO0lBQUVFLE9BQU87SUFBRUU7RUFBSyxDQUFFO0FBQ3RDIiwiaWdub3JlTGlzdCI6W119