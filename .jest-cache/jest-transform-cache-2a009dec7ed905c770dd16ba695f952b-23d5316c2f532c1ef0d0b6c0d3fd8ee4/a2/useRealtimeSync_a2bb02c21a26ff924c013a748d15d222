a34daeee421dc44f266c282597643066
"use strict";

/* istanbul ignore next */
function cov_y5phsm76() {
  var path = "/workspaces/MyFitHero/src/features/workout/hooks/useRealtimeSync.ts";
  var hash = "cf26fe3fbcdfc8958a9f877ab31c687da3d4e582";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/workout/hooks/useRealtimeSync.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "4": {
        start: {
          line: 7,
          column: 19
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "5": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 48
        }
      },
      "7": {
        start: {
          line: 10,
          column: 29
        },
        end: {
          line: 10,
          column: 55
        }
      },
      "8": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 58,
          column: 65
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "10": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "11": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "12": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 38
        }
      },
      "13": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "14": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "15": {
        start: {
          line: 33,
          column: 36
        },
        end: {
          line: 36,
          column: 13
        }
      },
      "16": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "17": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 48
        }
      },
      "18": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 48
        }
      },
      "19": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 26
        }
      },
      "20": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 48
        }
      },
      "21": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 26
        }
      },
      "22": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 48
        }
      },
      "23": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 48
        }
      },
      "24": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 26
        }
      },
      "25": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 57,
          column: 10
        }
      },
      "26": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "27": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 70
        }
      },
      "28": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 6
        }
      },
      "29": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 63,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 25
          }
        },
        loc: {
          start: {
            line: 8,
            column: 70
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 27
          },
          end: {
            line: 11,
            column: 28
          }
        },
        loc: {
          start: {
            line: 11,
            column: 33
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 12
          }
        },
        loc: {
          start: {
            line: 31,
            column: 22
          },
          end: {
            line: 50,
            column: 9
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 16
          }
        },
        loc: {
          start: {
            line: 53,
            column: 21
          },
          end: {
            line: 57,
            column: 9
          }
        },
        line: 53
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 13,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 13,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 44
          }
        }, {
          start: {
            line: 35,
            column: 48
          },
          end: {
            line: 35,
            column: 68
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 41,
            column: 26
          }
        }, {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 26
          }
        }, {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 48,
            column: 26
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/workout/hooks/useRealtimeSync.ts",
      mappings: ";;;AAAA,iCAAiD;AACjD,sCAAsC;AACtC,6CAA0C;AAC1C,+CAA4C;AASrC,MAAM,eAAe,GAAG,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAuB,EAAE,EAAE;IAC/F,MAAM,UAAU,GAAG,IAAA,cAAM,EAAM,IAAI,CAAC,CAAC;IACrC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEpC,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,CAAC,YAAY,EAAE,EAAE;YAAE,OAAO;QAE9B,gCAAgC;QAChC,MAAM,QAAQ,GAAG;YACf,SAAS,EAAE,gBAAgB;YAC3B,SAAS,EAAE,OAAO;YAClB,KAAK,EAAE,gBAAgB;YACvB,OAAO,EAAE,kBAAkB;SAC5B,CAAC;QAEF,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC/B,MAAM,WAAW,GAAG,GAAG,MAAM,IAAI,YAAY,CAAC,EAAE,EAAE,CAAC;QAEnD,iBAAiB;QACjB,UAAU,CAAC,OAAO,GAAG,mBAAQ;aAC1B,OAAO,CAAC,WAAW,CAAC;aACpB,EAAE,CACD,kBAAkB,EAClB;YACE,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,QAAQ;YAChB,KAAK;YACL,MAAM,EAAE,cAAc,YAAY,CAAC,EAAE,EAAE;SACxC,EACD,OAAO,CAAC,EAAE;YAER,2CAA2C;YAC3C,MAAM,eAAe,GAAG;gBACtB,GAAG,OAAO;gBACV,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,IAAI,OAAO,CAAC,GAAG,EAAE,OAAO;aACrD,CAAC;YAEF,QAAQ,OAAO,CAAC,SAAS,EAAE,CAAC;gBAC1B,KAAK,QAAQ;oBACX,QAAQ,EAAE,CAAC,eAAe,CAAC,CAAC;oBAC5B,QAAQ,EAAE,CAAC,eAAe,CAAC,CAAC;oBAC5B,MAAM;gBACR,KAAK,QAAQ;oBACX,QAAQ,EAAE,CAAC,eAAe,CAAC,CAAC;oBAC5B,MAAM;gBACR,KAAK,QAAQ;oBACX,QAAQ,EAAE,CAAC,eAAe,CAAC,CAAC;oBAC5B,QAAQ,EAAE,CAAC,eAAe,CAAC,CAAC;oBAC5B,MAAM;YACV,CAAC;QACH,CAAC,CACF;aACA,SAAS,EAAE,CAAC;QAEf,UAAU;QACV,OAAO,GAAG,EAAE;YACV,IAAI,UAAU,CAAC,OAAO,EAAE,CAAC;gBACvB,mBAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC7C,CAAC;QACH,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAE7D,OAAO;QACL,WAAW,EAAE,CAAC,CAAC,UAAU,CAAC,OAAO;KAClC,CAAC;AACJ,CAAC,CAAC;AAjEW,QAAA,eAAe,mBAiE1B",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/workout/hooks/useRealtimeSync.ts"],
      sourcesContent: ["import React, { useEffect, useRef } from 'react';\n// client/src/hooks/useRealtimeSync.ts\nimport { supabase } from '@/lib/supabase';\nimport { appStore } from '@/store/appStore';\n\ninterface RealtimeSyncOptions {\n  pillar: 'hydration' | 'nutrition' | 'sleep' | 'workout';\n  onUpdate?: (payload: any) => void;\n  onInsert?: (payload: any) => void;\n  onDelete?: (payload: any) => void;\n}\n\nexport const useRealtimeSync = ({ pillar, onUpdate, onInsert, onDelete }: RealtimeSyncOptions) => {\n  const channelRef = useRef<any>(null);\n  const { appStoreUser } = appStore();\n\n  useEffect(() => {\n    if (!appStoreUser?.id) return;\n\n    // Table mapping for each pillar\n    const tableMap = {\n      hydration: 'hydration_logs',\n      nutrition: 'meals',\n      sleep: 'sleep_sessions',\n      workout: 'workout_sessions',\n    };\n\n    const table = tableMap[pillar];\n    const channelName = `${pillar}-${appStoreUser.id}`;\n\n    // Create channel\n    channelRef.current = supabase\n      .channel(channelName)\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table,\n          filter: `user_id=eq.${appStoreUser.id}`,\n        },\n        payload => {\n\n          // Add userId to payload for identification\n          const enrichedPayload = {\n            ...payload,\n            userId: payload.new?.user_id || payload.old?.user_id,\n          };\n\n          switch (payload.eventType) {\n            case 'INSERT':\n              onInsert?.(enrichedPayload);\n              onUpdate?.(enrichedPayload);\n              break;\n            case 'UPDATE':\n              onUpdate?.(enrichedPayload);\n              break;\n            case 'DELETE':\n              onDelete?.(enrichedPayload);\n              onUpdate?.(enrichedPayload);\n              break;\n          }\n        }\n      )\n      .subscribe();\n\n    // Cleanup\n    return () => {\n      if (channelRef.current) {\n        supabase.removeChannel(channelRef.current);\n      }\n    };\n  }, [appStoreUser?.id, pillar, onUpdate, onInsert, onDelete]);\n\n  return {\n    isConnected: !!channelRef.current,\n  };\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cf26fe3fbcdfc8958a9f877ab31c687da3d4e582"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_y5phsm76 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y5phsm76();
cov_y5phsm76().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_y5phsm76().s[1]++;
exports.useRealtimeSync = void 0;
const react_1 =
/* istanbul ignore next */
(cov_y5phsm76().s[2]++, require("react"));
// client/src/hooks/useRealtimeSync.ts
const supabase_1 =
/* istanbul ignore next */
(cov_y5phsm76().s[3]++, require("@/lib/supabase"));
const appStore_1 =
/* istanbul ignore next */
(cov_y5phsm76().s[4]++, require("@/store/appStore"));
/* istanbul ignore next */
cov_y5phsm76().s[5]++;
const useRealtimeSync = ({
  pillar,
  onUpdate,
  onInsert,
  onDelete
}) => {
  /* istanbul ignore next */
  cov_y5phsm76().f[0]++;
  const channelRef =
  /* istanbul ignore next */
  (cov_y5phsm76().s[6]++, (0, react_1.useRef)(null));
  const {
    appStoreUser
  } =
  /* istanbul ignore next */
  (cov_y5phsm76().s[7]++, (0, appStore_1.appStore)());
  /* istanbul ignore next */
  cov_y5phsm76().s[8]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_y5phsm76().f[1]++;
    cov_y5phsm76().s[9]++;
    if (!appStoreUser?.id) {
      /* istanbul ignore next */
      cov_y5phsm76().b[0][0]++;
      cov_y5phsm76().s[10]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_y5phsm76().b[0][1]++;
    }
    // Table mapping for each pillar
    const tableMap =
    /* istanbul ignore next */
    (cov_y5phsm76().s[11]++, {
      hydration: 'hydration_logs',
      nutrition: 'meals',
      sleep: 'sleep_sessions',
      workout: 'workout_sessions'
    });
    const table =
    /* istanbul ignore next */
    (cov_y5phsm76().s[12]++, tableMap[pillar]);
    const channelName =
    /* istanbul ignore next */
    (cov_y5phsm76().s[13]++, `${pillar}-${appStoreUser.id}`);
    // Create channel
    /* istanbul ignore next */
    cov_y5phsm76().s[14]++;
    channelRef.current = supabase_1.supabase.channel(channelName).on('postgres_changes', {
      event: '*',
      schema: 'public',
      table,
      filter: `user_id=eq.${appStoreUser.id}`
    }, payload => {
      /* istanbul ignore next */
      cov_y5phsm76().f[2]++;
      // Add userId to payload for identification
      const enrichedPayload =
      /* istanbul ignore next */
      (cov_y5phsm76().s[15]++, {
        ...payload,
        userId:
        /* istanbul ignore next */
        (cov_y5phsm76().b[1][0]++, payload.new?.user_id) ||
        /* istanbul ignore next */
        (cov_y5phsm76().b[1][1]++, payload.old?.user_id)
      });
      /* istanbul ignore next */
      cov_y5phsm76().s[16]++;
      switch (payload.eventType) {
        case 'INSERT':
          /* istanbul ignore next */
          cov_y5phsm76().b[2][0]++;
          cov_y5phsm76().s[17]++;
          onInsert?.(enrichedPayload);
          /* istanbul ignore next */
          cov_y5phsm76().s[18]++;
          onUpdate?.(enrichedPayload);
          /* istanbul ignore next */
          cov_y5phsm76().s[19]++;
          break;
        case 'UPDATE':
          /* istanbul ignore next */
          cov_y5phsm76().b[2][1]++;
          cov_y5phsm76().s[20]++;
          onUpdate?.(enrichedPayload);
          /* istanbul ignore next */
          cov_y5phsm76().s[21]++;
          break;
        case 'DELETE':
          /* istanbul ignore next */
          cov_y5phsm76().b[2][2]++;
          cov_y5phsm76().s[22]++;
          onDelete?.(enrichedPayload);
          /* istanbul ignore next */
          cov_y5phsm76().s[23]++;
          onUpdate?.(enrichedPayload);
          /* istanbul ignore next */
          cov_y5phsm76().s[24]++;
          break;
      }
    }).subscribe();
    // Cleanup
    /* istanbul ignore next */
    cov_y5phsm76().s[25]++;
    return () => {
      /* istanbul ignore next */
      cov_y5phsm76().f[3]++;
      cov_y5phsm76().s[26]++;
      if (channelRef.current) {
        /* istanbul ignore next */
        cov_y5phsm76().b[3][0]++;
        cov_y5phsm76().s[27]++;
        supabase_1.supabase.removeChannel(channelRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_y5phsm76().b[3][1]++;
      }
    };
  }, [appStoreUser?.id, pillar, onUpdate, onInsert, onDelete]);
  /* istanbul ignore next */
  cov_y5phsm76().s[28]++;
  return {
    isConnected: !!channelRef.current
  };
};
/* istanbul ignore next */
cov_y5phsm76().s[29]++;
exports.useRealtimeSync = useRealtimeSync;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,