956976d583da6abed3e0324fb79b6fe7
"use strict";

/* istanbul ignore next */
function cov_1gi933snl1() {
  var path = "/workspaces/MyFitHero/src/features/profile/components/UnifiedSettingsPage.tsx";
  var hash = "b60341cdb16c9136781d1bcb8a5ff6c02f132d5d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/profile/components/UnifiedSettingsPage.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "25": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 50
        }
      },
      "26": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 46
        }
      },
      "27": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "28": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 50
        }
      },
      "29": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "30": {
        start: {
          line: 33,
          column: 17
        },
        end: {
          line: 33,
          column: 50
        }
      },
      "31": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 50
        }
      },
      "32": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 35,
          column: 50
        }
      },
      "33": {
        start: {
          line: 36,
          column: 15
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "34": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "35": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 50
        }
      },
      "36": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 55
        }
      },
      "37": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 66
        }
      },
      "38": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 167,
          column: 1
        }
      },
      "39": {
        start: {
          line: 168,
          column: 28
        },
        end: {
          line: 309,
          column: 1
        }
      },
      "40": {
        start: {
          line: 169,
          column: 22
        },
        end: {
          line: 169,
          column: 49
        }
      },
      "41": {
        start: {
          line: 170,
          column: 52
        },
        end: {
          line: 170,
          column: 92
        }
      },
      "42": {
        start: {
          line: 171,
          column: 46
        },
        end: {
          line: 171,
          column: 88
        }
      },
      "43": {
        start: {
          line: 172,
          column: 47
        },
        end: {
          line: 172,
          column: 87
        }
      },
      "44": {
        start: {
          line: 174,
          column: 42
        },
        end: {
          line: 174,
          column: 67
        }
      },
      "45": {
        start: {
          line: 175,
          column: 50
        },
        end: {
          line: 175,
          column: 78
        }
      },
      "46": {
        start: {
          line: 177,
          column: 46
        },
        end: {
          line: 182,
          column: 6
        }
      },
      "47": {
        start: {
          line: 183,
          column: 42
        },
        end: {
          line: 183,
          column: 70
        }
      },
      "48": {
        start: {
          line: 185,
          column: 29
        },
        end: {
          line: 193,
          column: 38
        }
      },
      "49": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "50": {
        start: {
          line: 187,
          column: 34
        },
        end: {
          line: 189,
          column: 85
        }
      },
      "51": {
        start: {
          line: 190,
          column: 35
        },
        end: {
          line: 190,
          column: 99
        }
      },
      "52": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 51
        }
      },
      "53": {
        start: {
          line: 195,
          column: 32
        },
        end: {
          line: 228,
          column: 41
        }
      },
      "54": {
        start: {
          line: 196,
          column: 30
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "55": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "56": {
        start: {
          line: 198,
          column: 40
        },
        end: {
          line: 198,
          column: 69
        }
      },
      "57": {
        start: {
          line: 199,
          column: 43
        },
        end: {
          line: 199,
          column: 91
        }
      },
      "58": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 202,
          column: 19
        }
      },
      "59": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 206,
          column: 19
        }
      },
      "60": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 213,
          column: 19
        }
      },
      "61": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "62": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 223,
          column: 15
        }
      },
      "63": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 34
        }
      },
      "64": {
        start: {
          line: 230,
          column: 26
        },
        end: {
          line: 237,
          column: 50
        }
      },
      "65": {
        start: {
          line: 231,
          column: 32
        },
        end: {
          line: 231,
          column: 61
        }
      },
      "66": {
        start: {
          line: 232,
          column: 29
        },
        end: {
          line: 232,
          column: 63
        }
      },
      "67": {
        start: {
          line: 233,
          column: 29
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "68": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 52
        }
      },
      "69": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 2183
        }
      },
      "70": {
        start: {
          line: 236,
          column: 1503
        },
        end: {
          line: 236,
          column: 1609
        }
      },
      "71": {
        start: {
          line: 236,
          column: 1826
        },
        end: {
          line: 236,
          column: 1845
        }
      },
      "72": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 255,
          column: 30
        }
      },
      "73": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "74": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 34
        }
      },
      "75": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 34
        }
      },
      "76": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 246,
          column: 15
        }
      },
      "77": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 253,
          column: 15
        }
      },
      "78": {
        start: {
          line: 256,
          column: 25
        },
        end: {
          line: 271,
          column: 31
        }
      },
      "79": {
        start: {
          line: 257,
          column: 29
        },
        end: {
          line: 257,
          column: 45
        }
      },
      "80": {
        start: {
          line: 258,
          column: 21
        },
        end: {
          line: 260,
          column: 10
        }
      },
      "81": {
        start: {
          line: 261,
          column: 20
        },
        end: {
          line: 261,
          column: 45
        }
      },
      "82": {
        start: {
          line: 262,
          column: 18
        },
        end: {
          line: 262,
          column: 45
        }
      },
      "83": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 21
        }
      },
      "84": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 47
        }
      },
      "85": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 18
        }
      },
      "86": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 33
        }
      },
      "87": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 270,
          column: 11
        }
      },
      "88": {
        start: {
          line: 272,
          column: 25
        },
        end: {
          line: 295,
          column: 31
        }
      },
      "89": {
        start: {
          line: 273,
          column: 21
        },
        end: {
          line: 273,
          column: 44
        }
      },
      "90": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 275,
          column: 19
        }
      },
      "91": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 19
        }
      },
      "92": {
        start: {
          line: 276,
          column: 23
        },
        end: {
          line: 276,
          column: 39
        }
      },
      "93": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 293,
          column: 10
        }
      },
      "94": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 292,
          column: 13
        }
      },
      "95": {
        start: {
          line: 279,
          column: 37
        },
        end: {
          line: 279,
          column: 65
        }
      },
      "96": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 51
        }
      },
      "97": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 284,
          column: 19
        }
      },
      "98": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 291,
          column: 19
        }
      },
      "99": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 32
        }
      },
      "100": {
        start: {
          line: 297,
          column: 21
        },
        end: {
          line: 304,
          column: 5
        }
      },
      "101": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 308,
          column: 887
        }
      },
      "102": {
        start: {
          line: 305,
          column: 1646
        },
        end: {
          line: 305,
          column: 1676
        }
      },
      "103": {
        start: {
          line: 305,
          column: 1798
        },
        end: {
          line: 305,
          column: 1823
        }
      },
      "104": {
        start: {
          line: 305,
          column: 2065
        },
        end: {
          line: 305,
          column: 2170
        }
      },
      "105": {
        start: {
          line: 305,
          column: 3454
        },
        end: {
          line: 305,
          column: 3474
        }
      },
      "106": {
        start: {
          line: 305,
          column: 4146
        },
        end: {
          line: 305,
          column: 4199
        }
      },
      "107": {
        start: {
          line: 305,
          column: 4172
        },
        end: {
          line: 305,
          column: 4197
        }
      },
      "108": {
        start: {
          line: 305,
          column: 4647
        },
        end: {
          line: 305,
          column: 4701
        }
      },
      "109": {
        start: {
          line: 305,
          column: 4673
        },
        end: {
          line: 305,
          column: 4699
        }
      },
      "110": {
        start: {
          line: 306,
          column: 40
        },
        end: {
          line: 306,
          column: 66
        }
      },
      "111": {
        start: {
          line: 307,
          column: 40
        },
        end: {
          line: 307,
          column: 95
        }
      },
      "112": {
        start: {
          line: 307,
          column: 66
        },
        end: {
          line: 307,
          column: 92
        }
      },
      "113": {
        start: {
          line: 308,
          column: 707
        },
        end: {
          line: 308,
          column: 728
        }
      },
      "114": {
        start: {
          line: 310,
          column: 0
        },
        end: {
          line: 310,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 168,
            column: 28
          },
          end: {
            line: 168,
            column: 29
          }
        },
        loc: {
          start: {
            line: 168,
            column: 34
          },
          end: {
            line: 309,
            column: 1
          }
        },
        line: 168
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 181,
            column: 19
          },
          end: {
            line: 181,
            column: 20
          }
        },
        loc: {
          start: {
            line: 181,
            column: 25
          },
          end: {
            line: 181,
            column: 28
          }
        },
        line: 181
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 185,
            column: 50
          },
          end: {
            line: 185,
            column: 51
          }
        },
        loc: {
          start: {
            line: 185,
            column: 56
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 185
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 186,
            column: 38
          },
          end: {
            line: 186,
            column: 39
          }
        },
        loc: {
          start: {
            line: 186,
            column: 49
          },
          end: {
            line: 192,
            column: 9
          }
        },
        line: 186
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 195,
            column: 57
          },
          end: {
            line: 195,
            column: 58
          }
        },
        loc: {
          start: {
            line: 195,
            column: 87
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 195
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 196,
            column: 30
          },
          end: {
            line: 196,
            column: 31
          }
        },
        loc: {
          start: {
            line: 196,
            column: 42
          },
          end: {
            line: 215,
            column: 9
          }
        },
        line: 196
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 230,
            column: 51
          },
          end: {
            line: 230,
            column: 52
          }
        },
        loc: {
          start: {
            line: 230,
            column: 68
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 230
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 233,
            column: 29
          },
          end: {
            line: 233,
            column: 30
          }
        },
        loc: {
          start: {
            line: 233,
            column: 40
          },
          end: {
            line: 235,
            column: 9
          }
        },
        line: 233
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 236,
            column: 1483
          },
          end: {
            line: 236,
            column: 1484
          }
        },
        loc: {
          start: {
            line: 236,
            column: 1503
          },
          end: {
            line: 236,
            column: 1609
          }
        },
        line: 236
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 236,
            column: 1813
          },
          end: {
            line: 236,
            column: 1814
          }
        },
        loc: {
          start: {
            line: 236,
            column: 1826
          },
          end: {
            line: 236,
            column: 1845
          }
        },
        line: 236
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 239,
            column: 49
          },
          end: {
            line: 239,
            column: 50
          }
        },
        loc: {
          start: {
            line: 239,
            column: 61
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 239
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 256,
            column: 50
          },
          end: {
            line: 256,
            column: 51
          }
        },
        loc: {
          start: {
            line: 256,
            column: 56
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 256
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 272,
            column: 50
          },
          end: {
            line: 272,
            column: 51
          }
        },
        loc: {
          start: {
            line: 272,
            column: 61
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 272
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 277,
            column: 24
          },
          end: {
            line: 277,
            column: 25
          }
        },
        loc: {
          start: {
            line: 277,
            column: 37
          },
          end: {
            line: 293,
            column: 9
          }
        },
        line: 277
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 305,
            column: 1639
          },
          end: {
            line: 305,
            column: 1640
          }
        },
        loc: {
          start: {
            line: 305,
            column: 1646
          },
          end: {
            line: 305,
            column: 1676
          }
        },
        line: 305
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 305,
            column: 1787
          },
          end: {
            line: 305,
            column: 1788
          }
        },
        loc: {
          start: {
            line: 305,
            column: 1798
          },
          end: {
            line: 305,
            column: 1823
          }
        },
        line: 305
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 305,
            column: 2044
          },
          end: {
            line: 305,
            column: 2045
          }
        },
        loc: {
          start: {
            line: 305,
            column: 2065
          },
          end: {
            line: 305,
            column: 2170
          }
        },
        line: 305
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 305,
            column: 3448
          },
          end: {
            line: 305,
            column: 3449
          }
        },
        loc: {
          start: {
            line: 305,
            column: 3454
          },
          end: {
            line: 305,
            column: 3474
          }
        },
        line: 305
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 305,
            column: 4136
          },
          end: {
            line: 305,
            column: 4137
          }
        },
        loc: {
          start: {
            line: 305,
            column: 4146
          },
          end: {
            line: 305,
            column: 4199
          }
        },
        line: 305
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 305,
            column: 4163
          },
          end: {
            line: 305,
            column: 4164
          }
        },
        loc: {
          start: {
            line: 305,
            column: 4172
          },
          end: {
            line: 305,
            column: 4197
          }
        },
        line: 305
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 305,
            column: 4641
          },
          end: {
            line: 305,
            column: 4642
          }
        },
        loc: {
          start: {
            line: 305,
            column: 4647
          },
          end: {
            line: 305,
            column: 4701
          }
        },
        line: 305
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 305,
            column: 4664
          },
          end: {
            line: 305,
            column: 4665
          }
        },
        loc: {
          start: {
            line: 305,
            column: 4673
          },
          end: {
            line: 305,
            column: 4699
          }
        },
        line: 305
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 305,
            column: 4777
          },
          end: {
            line: 305,
            column: 4778
          }
        },
        loc: {
          start: {
            line: 305,
            column: 4783
          },
          end: {
            line: 308,
            column: 37
          }
        },
        line: 305
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 307,
            column: 57
          },
          end: {
            line: 307,
            column: 58
          }
        },
        loc: {
          start: {
            line: 307,
            column: 66
          },
          end: {
            line: 307,
            column: 92
          }
        },
        line: 307
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 308,
            column: 701
          },
          end: {
            line: 308,
            column: 702
          }
        },
        loc: {
          start: {
            line: 308,
            column: 707
          },
          end: {
            line: 308,
            column: 728
          }
        },
        line: 308
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 187,
            column: 34
          },
          end: {
            line: 189,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 34
          },
          end: {
            line: 187,
            column: 46
          }
        }, {
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 188,
            column: 79
          }
        }, {
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 189,
            column: 85
          }
        }],
        line: 187
      },
      "17": {
        loc: {
          start: {
            line: 190,
            column: 35
          },
          end: {
            line: 190,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 35
          },
          end: {
            line: 190,
            column: 60
          }
        }, {
          start: {
            line: 190,
            column: 64
          },
          end: {
            line: 190,
            column: 99
          }
        }],
        line: 190
      },
      "18": {
        loc: {
          start: {
            line: 191,
            column: 19
          },
          end: {
            line: 191,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 19
          },
          end: {
            line: 191,
            column: 32
          }
        }, {
          start: {
            line: 191,
            column: 36
          },
          end: {
            line: 191,
            column: 50
          }
        }],
        line: 191
      },
      "19": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: 225,
            column: 13
          },
          end: {
            line: 227,
            column: 9
          }
        }],
        line: 217
      },
      "20": {
        loc: {
          start: {
            line: 236,
            column: 508
          },
          end: {
            line: 236,
            column: 754
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 508
          },
          end: {
            line: 236,
            column: 540
          }
        }, {
          start: {
            line: 236,
            column: 545
          },
          end: {
            line: 236,
            column: 753
          }
        }],
        line: 236
      },
      "21": {
        loc: {
          start: {
            line: 236,
            column: 948
          },
          end: {
            line: 236,
            column: 1102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 948
          },
          end: {
            line: 236,
            column: 978
          }
        }, {
          start: {
            line: 236,
            column: 983
          },
          end: {
            line: 236,
            column: 1101
          }
        }],
        line: 236
      },
      "22": {
        loc: {
          start: {
            line: 236,
            column: 1104
          },
          end: {
            line: 236,
            column: 1619
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 1104
          },
          end: {
            line: 236,
            column: 1133
          }
        }, {
          start: {
            line: 236,
            column: 1138
          },
          end: {
            line: 236,
            column: 1618
          }
        }],
        line: 236
      },
      "23": {
        loc: {
          start: {
            line: 236,
            column: 1621
          },
          end: {
            line: 236,
            column: 2122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 1621
          },
          end: {
            line: 236,
            column: 1650
          }
        }, {
          start: {
            line: 236,
            column: 1655
          },
          end: {
            line: 236,
            column: 2121
          }
        }],
        line: 236
      },
      "24": {
        loc: {
          start: {
            line: 236,
            column: 2056
          },
          end: {
            line: 236,
            column: 2113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 2092
          },
          end: {
            line: 236,
            column: 2101
          }
        }, {
          start: {
            line: 236,
            column: 2104
          },
          end: {
            line: 236,
            column: 2113
          }
        }],
        line: 236
      },
      "25": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 275,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 275,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "26": {
        loc: {
          start: {
            line: 305,
            column: 498
          },
          end: {
            line: 305,
            column: 704
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 498
          },
          end: {
            line: 305,
            column: 505
          }
        }, {
          start: {
            line: 305,
            column: 510
          },
          end: {
            line: 305,
            column: 703
          }
        }],
        line: 305
      },
      "27": {
        loc: {
          start: {
            line: 305,
            column: 706
          },
          end: {
            line: 305,
            column: 898
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 706
          },
          end: {
            line: 305,
            column: 711
          }
        }, {
          start: {
            line: 305,
            column: 716
          },
          end: {
            line: 305,
            column: 897
          }
        }],
        line: 305
      },
      "28": {
        loc: {
          start: {
            line: 305,
            column: 900
          },
          end: {
            line: 305,
            column: 1102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 900
          },
          end: {
            line: 305,
            column: 908
          }
        }, {
          start: {
            line: 305,
            column: 912
          },
          end: {
            line: 305,
            column: 918
          }
        }, {
          start: {
            line: 305,
            column: 923
          },
          end: {
            line: 305,
            column: 1101
          }
        }],
        line: 305
      },
      "29": {
        loc: {
          start: {
            line: 305,
            column: 3704
          },
          end: {
            line: 305,
            column: 4047
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 305,
            column: 3737
          },
          end: {
            line: 305,
            column: 4006
          }
        }, {
          start: {
            line: 305,
            column: 4011
          },
          end: {
            line: 305,
            column: 4046
          }
        }],
        line: 305
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/profile/components/UnifiedSettingsPage.tsx",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/profile/components/UnifiedSettingsPage.tsx"],
      sourcesContent: ["// \uD83C\uDFAF COMPOSANT DE PARAM\xC8TRES UNIFI\xC9 ET OPTIMIS\xC9\n// Interface moderne avec recherche, application instantan\xE9e, et confirmations\n\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { Search, Save, RotateCcw, Download, Upload, AlertTriangle, CheckCircle } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Switch } from '@/components/ui/switch';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Slider } from '@/components/ui/slider';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { useToast } from '@/shared/hooks/use-toast';\nimport { useSettingsStore, useSettingsActions, UserSettings } from '@/core/settings/settings.store';\n\n// \uD83D\uDD0D TYPES POUR LA RECHERCHE\ninterface SettingItem {\n  key: string;\n  section: keyof UserSettings;\n  label: string;\n  description: string;\n  type: 'boolean' | 'select' | 'slider' | 'number';\n  options?: Array<{ value: any; label: string }>;\n  min?: number;\n  max?: number;\n  step?: number;\n  requiresConfirmation?: boolean;\n}\n\n// \uD83D\uDCCB CONFIGURATION DES PARAM\xC8TRES AVEC M\xC9TADONN\xC9ES\nconst SETTINGS_CONFIG: SettingItem[] = [\n  // Interface\n  {\n    key: 'theme',\n    section: 'ui',\n    label: 'Theme',\n    description: 'Choose your preferred color theme',\n    type: 'select',\n    options: [\n      { value: 'light', label: 'Light' },\n      { value: 'dark', label: 'Dark' },\n      { value: 'system', label: 'System' }\n    ]\n  },\n  {\n    key: 'language',\n    section: 'ui',\n    label: 'Language',\n    description: 'Select your preferred language',\n    type: 'select',\n    options: [\n      { value: 'en', label: 'English' },\n      { value: 'fr', label: 'Fran\xE7ais' },\n      { value: 'es', label: 'Espa\xF1ol' }\n    ]\n  },\n  {\n    key: 'units',\n    section: 'ui',\n    label: 'Units',\n    description: 'Choose measurement units',\n    type: 'select',\n    options: [\n      { value: 'metric', label: 'Metric (kg, cm)' },\n      { value: 'imperial', label: 'Imperial (lbs, ft)' }\n    ]\n  },\n  \n  // Notifications\n  {\n    key: 'workoutReminders',\n    section: 'notifications',\n    label: 'Workout Reminders',\n    description: 'Get reminded when it\\'s time to work out',\n    type: 'boolean'\n  },\n  {\n    key: 'pushNotifications',\n    section: 'notifications',\n    label: 'Push Notifications',\n    description: 'Receive push notifications on your device',\n    type: 'boolean'\n  },\n  {\n    key: 'inAppSounds',\n    section: 'notifications',\n    label: 'In-App Sounds',\n    description: 'Play sounds for notifications and actions',\n    type: 'boolean'\n  },\n  \n  // Entra\xEEnement\n  {\n    key: 'defaultRestTime',\n    section: 'workout',\n    label: 'Default Rest Time',\n    description: 'Default rest time between sets (seconds)',\n    type: 'slider',\n    min: 30,\n    max: 300,\n    step: 15\n  },\n  {\n    key: 'autoProgressSets',\n    section: 'workout',\n    label: 'Auto Progress Sets',\n    description: 'Automatically progress to next set after rest time',\n    type: 'boolean'\n  },\n  {\n    key: 'motivationalQuotes',\n    section: 'workout',\n    label: 'Motivational Quotes',\n    description: 'Show motivational quotes during workouts',\n    type: 'boolean'\n  },\n  \n  // Confidentialit\xE9\n  {\n    key: 'shareWorkouts',\n    section: 'privacy',\n    label: 'Share Workouts',\n    description: 'Allow others to see your workout activity',\n    type: 'boolean'\n  },\n  {\n    key: 'dataCollection',\n    section: 'privacy',\n    label: 'Data Collection',\n    description: 'Allow anonymous data collection for app improvement',\n    type: 'boolean'\n  },\n  {\n    key: 'marketingEmails',\n    section: 'privacy',\n    label: 'Marketing Emails',\n    description: 'Receive promotional emails and newsletters',\n    type: 'boolean',\n    requiresConfirmation: true\n  },\n  \n  // Wearables\n  {\n    key: 'autoSync',\n    section: 'wearables',\n    label: 'Auto Sync',\n    description: 'Automatically sync with wearable devices',\n    type: 'boolean'\n  },\n  {\n    key: 'syncInterval',\n    section: 'wearables',\n    label: 'Sync Interval',\n    description: 'How often to sync with wearables (minutes)',\n    type: 'slider',\n    min: 5,\n    max: 60,\n    step: 5\n  }\n];\n\nconst UnifiedSettingsPage: React.FC = () => {\n  const { toast } = useToast();\n  const { settings, isLoading, isDirty, error } = useSettingsStore();\n  const { updateSettings, resetSettings } = useSettingsActions();\n  const { exportSettings, importSettings } = useSettingsStore();\n  \n  // \uD83D\uDD0D \xC9tat de la recherche\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedSection, setSelectedSection] = useState<keyof UserSettings | 'all'>('all');\n  \n  // \uD83D\uDCCB \xC9tats pour les dialogues\n  const [confirmDialog, setConfirmDialog] = useState<{\n    isOpen: boolean;\n    title: string;\n    description: string;\n    onConfirm: () => void;\n  }>({\n    isOpen: false,\n    title: '',\n    description: '',\n    onConfirm: () => {}\n  });\n  \n  const [resetDialog, setResetDialog] = useState(false);\n  \n  // \uD83D\uDD0D FILTRAGE DES PARAM\xC8TRES\n  const filteredSettings = useMemo(() => {\n    return SETTINGS_CONFIG.filter(setting => {\n      const matchesSearch = !searchQuery || \n        setting.label.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        setting.description.toLowerCase().includes(searchQuery.toLowerCase());\n      \n      const matchesSection = selectedSection === 'all' || setting.section === selectedSection;\n      \n      return matchesSearch && matchesSection;\n    });\n  }, [searchQuery, selectedSection]);\n  \n  // \uD83C\uDFAF GESTIONNAIRE DE CHANGEMENT AVEC CONFIRMATION\n  const handleSettingChange = useCallback(async (settingItem: SettingItem, value: any) => {\n    const updateSetting = async () => {\n      try {\n        const sectionSettings = settings[settingItem.section] as any;\n        const newSectionSettings = { ...sectionSettings, [settingItem.key]: value };\n        \n        await updateSettings({\n          [settingItem.section]: newSectionSettings\n        } as Partial<UserSettings>);\n        \n        toast({\n          title: '\u2705 Setting Updated',\n          description: `${settingItem.label} has been updated successfully.`\n        });\n        \n      } catch (error: any) {\n        toast({\n          title: '\u274C Error',\n          description: 'Failed to update setting. Please try again.',\n          variant: 'destructive'\n        });\n      }\n    };\n    \n    // Confirmation pour les param\xE8tres sensibles\n    if (settingItem.requiresConfirmation) {\n      setConfirmDialog({\n        isOpen: true,\n        title: `Confirm ${settingItem.label} Change`,\n        description: `Are you sure you want to change this setting? This may affect your app experience.`,\n        onConfirm: updateSetting\n      });\n    } else {\n      await updateSetting();\n    }\n  }, [settings, updateSettings, toast]);\n  \n  // \uD83C\uDFA8 RENDU D'UN PARAM\xC8TRE INDIVIDUEL\n  const renderSetting = useCallback((settingItem: SettingItem) => {\n    const sectionSettings = settings[settingItem.section] as any;\n    const currentValue = sectionSettings?.[settingItem.key];\n    \n    const handleChange = (value: any) => {\n      handleSettingChange(settingItem, value);\n    };\n    \n    return (\n      <Card key={`${settingItem.section}-${settingItem.key}`} className=\"mb-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-1 flex-1 pr-4\">\n              <div className=\"flex items-center gap-2\">\n                <h4 className=\"text-sm font-medium\">{settingItem.label}</h4>\n                {settingItem.requiresConfirmation && (\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    <AlertTriangle className=\"w-3 h-3 mr-1\" />\n                    Requires Confirmation\n                  </Badge>\n                )}\n              </div>\n              <p className=\"text-sm text-muted-foreground\">{settingItem.description}</p>\n            </div>\n            \n            <div className=\"flex-shrink-0\">\n              {settingItem.type === 'boolean' && (\n                <Switch\n                  checked={currentValue}\n                  onCheckedChange={handleChange}\n                  disabled={isLoading}\n                />\n              )}\n              \n              {settingItem.type === 'select' && (\n                <Select value={currentValue} onValueChange={handleChange} disabled={isLoading}>\n                  <SelectTrigger className=\"w-[180px]\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {settingItem.options?.map((option, index) => (\n                      <SelectItem key={option.value} value={option.value}>\n                        {option.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              )}\n              \n              {settingItem.type === 'slider' && (\n                <div className=\"w-[180px] space-y-2\">\n                  <Slider\n                    value={[currentValue]}\n                    onValueChange={([value]) => handleChange(value)}\n                    min={settingItem.min}\n                    max={settingItem.max}\n                    step={settingItem.step}\n                    disabled={isLoading}\n                  />\n                  <p className=\"text-xs text-center text-muted-foreground\">\n                    {currentValue} {settingItem.section === 'workout' ? 'seconds' : 'minutes'}\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }, [settings, isLoading, handleSettingChange]);\n  \n  // \uD83D\uDD04 GESTIONNAIRES D'ACTIONS\n  const handleReset = useCallback(async () => {\n    try {\n      await resetSettings();\n      setResetDialog(false);\n      toast({\n        title: '\uD83D\uDD04 Settings Reset',\n        description: 'All settings have been reset to default values.'\n      });\n    } catch (error: any) {\n      toast({\n        title: '\u274C Error',\n        description: 'Failed to reset settings.',\n        variant: 'destructive'\n      });\n    }\n  }, [resetSettings, toast]);\n  \n  const handleExport = useCallback(() => {\n    const settingsData = exportSettings();\n    const blob = new Blob([JSON.stringify(settingsData, null, 2)], { \n      type: 'application/json' \n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'myfithero-settings.json';\n    a.click();\n    URL.revokeObjectURL(url);\n    \n    toast({\n      title: '\uD83D\uDCE5 Settings Exported',\n      description: 'Your settings have been downloaded as a JSON file.'\n    });\n  }, [exportSettings, toast]);\n  \n  const handleImport = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const settingsData = JSON.parse(e.target?.result as string);\n        await importSettings(settingsData);\n        toast({\n          title: '\uD83D\uDCE4 Settings Imported',\n          description: 'Your settings have been imported successfully.'\n        });\n      } catch (error: any) {\n        toast({\n          title: '\u274C Import Failed',\n          description: 'Invalid settings file.',\n          variant: 'destructive'\n        });\n      }\n    };\n    reader.readAsText(file);\n  }, [importSettings, toast]);\n  \n  // \uD83D\uDCCA SECTIONS DISPONIBLES\n  const sections = [\n    { key: 'all' as const, label: 'All Settings' },\n    { key: 'ui' as const, label: 'Interface' },\n    { key: 'notifications' as const, label: 'Notifications' },\n    { key: 'workout' as const, label: 'Workout' },\n    { key: 'privacy' as const, label: 'Privacy' },\n    { key: 'wearables' as const, label: 'Wearables' },\n  ];\n  \n  return (\n    <div className=\"container mx-auto p-6 max-w-4xl\">\n      {/* \uD83D\uDD1D EN-T\xCATE */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold mb-2\">Settings</h1>\n        <p className=\"text-muted-foreground\">\n          Customize your MyFitHero experience. Changes are saved automatically.\n        </p>\n        \n        {/* \uD83D\uDCCA INDICATEURS D'\xC9TAT */}\n        <div className=\"flex items-center gap-4 mt-4\">\n          {isDirty && (\n            <Badge variant=\"secondary\" className=\"animate-pulse\">\n              <Save className=\"w-3 h-3 mr-1\" />\n              Saving...\n            </Badge>\n          )}\n          \n          {error && (\n            <Badge variant=\"destructive\">\n              <AlertTriangle className=\"w-3 h-3 mr-1\" />\n              Error: {error}\n            </Badge>\n          )}\n          \n          {!isDirty && !error && (\n            <Badge variant=\"default\">\n              <CheckCircle className=\"w-3 h-3 mr-1\" />\n              All changes saved\n            </Badge>\n          )}\n        </div>\n      </div>\n      \n      {/* \uD83D\uDD0D BARRE DE RECHERCHE ET FILTRES */}\n      <Card className=\"mb-6\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search settings...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n            \n            <Select value={selectedSection} onValueChange={(value) => setSelectedSection(value as keyof UserSettings | 'all')}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                {sections.map((section, index) => (\n                  <SelectItem key={section.key} value={section.key}>\n                    {section.label}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* \u26A1 ACTIONS RAPIDES */}\n      <Card className=\"mb-6\">\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Quick Actions</CardTitle>\n          <CardDescription>\n            Manage your settings data\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-wrap gap-3\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleExport}\n              className=\"flex items-center gap-2\"\n            >\n              <Download className=\"w-4 h-4\" />\n              Export Settings\n            </Button>\n            \n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              asChild\n              className=\"flex items-center gap-2\"\n            >\n              <label htmlFor=\"import-settings\" className=\"cursor-pointer\">\n                <Upload className=\"w-4 h-4\" />\n                Import Settings\n              </label>\n            </Button>\n            <input\n              id=\"import-settings\"\n              type=\"file\"\n              accept=\".json\"\n              onChange={handleImport}\n              className=\"hidden\"\n            />\n            \n            <Button\n              variant=\"destructive\"\n              size=\"sm\"\n              onClick={() => setResetDialog(true)}\n              className=\"flex items-center gap-2\"\n            >\n              <RotateCcw className=\"w-4 h-4\" />\n              Reset All Settings\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* \uD83D\uDCCB LISTE DES PARAM\xC8TRES */}\n      <div className=\"space-y-0\">\n        {filteredSettings.length === 0 ? (\n          <Card>\n            <CardContent className=\"pt-6 text-center\">\n              <p className=\"text-muted-foreground\">\n                No settings found matching your search criteria.\n              </p>\n            </CardContent>\n          </Card>\n        ) : (\n          filteredSettings.map(renderSetting)\n        )}\n      </div>\n      \n      {/* \u26A0\uFE0F DIALOGUE DE CONFIRMATION */}\n      <Dialog open={confirmDialog.isOpen} onOpenChange={(open) => setConfirmDialog(prev => ({ ...prev, isOpen: open }))}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>{confirmDialog.title}</DialogTitle>\n            <DialogDescription>{confirmDialog.description}</DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button \n              variant=\"outline\" \n              onClick={() => setConfirmDialog(prev => ({ ...prev, isOpen: false }))}\n            >\n              Cancel\n            </Button>\n            <Button \n              onClick={() => {\n                confirmDialog.onConfirm();\n                setConfirmDialog(prev => ({ ...prev, isOpen: false }));\n              }}\n            >\n              Confirm\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n      \n      {/* \uD83D\uDD04 DIALOGUE DE RESET */}\n      <Dialog open={resetDialog} onOpenChange={setResetDialog}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Reset All Settings</DialogTitle>\n            <DialogDescription>\n              This will reset all settings to their default values. This action cannot be undone.\n              Are you sure you want to continue?\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setResetDialog(false)}>\n              Cancel\n            </Button>\n            <Button variant=\"destructive\" onClick={handleReset}>\n              Reset Settings\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default UnifiedSettingsPage;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b60341cdb16c9136781d1bcb8a5ff6c02f132d5d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1gi933snl1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1gi933snl1();
var __createBinding =
/* istanbul ignore next */
(cov_1gi933snl1().s[0]++,
/* istanbul ignore next */
(cov_1gi933snl1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1gi933snl1().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1gi933snl1().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1gi933snl1().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1gi933snl1().f[0]++;
  cov_1gi933snl1().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1gi933snl1().b[2][0]++;
    cov_1gi933snl1().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1gi933snl1().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1gi933snl1().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1gi933snl1().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1gi933snl1().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1gi933snl1().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1gi933snl1().b[5][1]++,
  /* istanbul ignore next */
  (cov_1gi933snl1().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1gi933snl1().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1gi933snl1().b[3][0]++;
    cov_1gi933snl1().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1gi933snl1().f[1]++;
        cov_1gi933snl1().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1gi933snl1().b[3][1]++;
  }
  cov_1gi933snl1().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1gi933snl1().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1gi933snl1().f[2]++;
  cov_1gi933snl1().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1gi933snl1().b[7][0]++;
    cov_1gi933snl1().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1gi933snl1().b[7][1]++;
  }
  cov_1gi933snl1().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1gi933snl1().s[11]++,
/* istanbul ignore next */
(cov_1gi933snl1().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1gi933snl1().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1gi933snl1().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1gi933snl1().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1gi933snl1().f[3]++;
  cov_1gi933snl1().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1gi933snl1().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1gi933snl1().f[4]++;
  cov_1gi933snl1().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1gi933snl1().s[14]++,
/* istanbul ignore next */
(cov_1gi933snl1().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1gi933snl1().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1gi933snl1().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1gi933snl1().f[5]++;
  cov_1gi933snl1().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_1gi933snl1().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1gi933snl1().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_1gi933snl1().b[11][0]++;
    cov_1gi933snl1().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_1gi933snl1().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[17]++, {});
  /* istanbul ignore next */
  cov_1gi933snl1().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_1gi933snl1().b[13][0]++;
    cov_1gi933snl1().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_1gi933snl1().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_1gi933snl1().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_1gi933snl1().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_1gi933snl1().b[14][0]++;
        cov_1gi933snl1().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_1gi933snl1().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gi933snl1().b[13][1]++;
  }
  cov_1gi933snl1().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_1gi933snl1().s[23]++;
  return result;
}));
/* istanbul ignore next */
cov_1gi933snl1().s[24]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[25]++, require("react/jsx-runtime"));
// 🎯 COMPOSANT DE PARAMÈTRES UNIFIÉ ET OPTIMISÉ
// Interface moderne avec recherche, application instantanée, et confirmations
const react_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[26]++, __importStar(require("react")));
const lucide_react_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[27]++, require("lucide-react"));
const button_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[28]++, require("@/components/ui/button"));
const input_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[29]++, require("@/components/ui/input"));
const switch_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[30]++, require("@/components/ui/switch"));
const select_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[31]++, require("@/components/ui/select"));
const slider_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[32]++, require("@/components/ui/slider"));
const card_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[33]++, require("@/components/ui/card"));
const badge_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[34]++, require("@/components/ui/badge"));
const dialog_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[35]++, require("@/components/ui/dialog"));
const use_toast_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[36]++, require("@/shared/hooks/use-toast"));
const settings_store_1 =
/* istanbul ignore next */
(cov_1gi933snl1().s[37]++, require("@/core/settings/settings.store"));
// 📋 CONFIGURATION DES PARAMÈTRES AVEC MÉTADONNÉES
const SETTINGS_CONFIG =
/* istanbul ignore next */
(cov_1gi933snl1().s[38]++, [
// Interface
{
  key: 'theme',
  section: 'ui',
  label: 'Theme',
  description: 'Choose your preferred color theme',
  type: 'select',
  options: [{
    value: 'light',
    label: 'Light'
  }, {
    value: 'dark',
    label: 'Dark'
  }, {
    value: 'system',
    label: 'System'
  }]
}, {
  key: 'language',
  section: 'ui',
  label: 'Language',
  description: 'Select your preferred language',
  type: 'select',
  options: [{
    value: 'en',
    label: 'English'
  }, {
    value: 'fr',
    label: 'Français'
  }, {
    value: 'es',
    label: 'Español'
  }]
}, {
  key: 'units',
  section: 'ui',
  label: 'Units',
  description: 'Choose measurement units',
  type: 'select',
  options: [{
    value: 'metric',
    label: 'Metric (kg, cm)'
  }, {
    value: 'imperial',
    label: 'Imperial (lbs, ft)'
  }]
},
// Notifications
{
  key: 'workoutReminders',
  section: 'notifications',
  label: 'Workout Reminders',
  description: 'Get reminded when it\'s time to work out',
  type: 'boolean'
}, {
  key: 'pushNotifications',
  section: 'notifications',
  label: 'Push Notifications',
  description: 'Receive push notifications on your device',
  type: 'boolean'
}, {
  key: 'inAppSounds',
  section: 'notifications',
  label: 'In-App Sounds',
  description: 'Play sounds for notifications and actions',
  type: 'boolean'
},
// Entraînement
{
  key: 'defaultRestTime',
  section: 'workout',
  label: 'Default Rest Time',
  description: 'Default rest time between sets (seconds)',
  type: 'slider',
  min: 30,
  max: 300,
  step: 15
}, {
  key: 'autoProgressSets',
  section: 'workout',
  label: 'Auto Progress Sets',
  description: 'Automatically progress to next set after rest time',
  type: 'boolean'
}, {
  key: 'motivationalQuotes',
  section: 'workout',
  label: 'Motivational Quotes',
  description: 'Show motivational quotes during workouts',
  type: 'boolean'
},
// Confidentialité
{
  key: 'shareWorkouts',
  section: 'privacy',
  label: 'Share Workouts',
  description: 'Allow others to see your workout activity',
  type: 'boolean'
}, {
  key: 'dataCollection',
  section: 'privacy',
  label: 'Data Collection',
  description: 'Allow anonymous data collection for app improvement',
  type: 'boolean'
}, {
  key: 'marketingEmails',
  section: 'privacy',
  label: 'Marketing Emails',
  description: 'Receive promotional emails and newsletters',
  type: 'boolean',
  requiresConfirmation: true
},
// Wearables
{
  key: 'autoSync',
  section: 'wearables',
  label: 'Auto Sync',
  description: 'Automatically sync with wearable devices',
  type: 'boolean'
}, {
  key: 'syncInterval',
  section: 'wearables',
  label: 'Sync Interval',
  description: 'How often to sync with wearables (minutes)',
  type: 'slider',
  min: 5,
  max: 60,
  step: 5
}]);
/* istanbul ignore next */
cov_1gi933snl1().s[39]++;
const UnifiedSettingsPage = () => {
  /* istanbul ignore next */
  cov_1gi933snl1().f[6]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[40]++, (0, use_toast_1.useToast)());
  const {
    settings,
    isLoading,
    isDirty,
    error
  } =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[41]++, (0, settings_store_1.useSettingsStore)());
  const {
    updateSettings,
    resetSettings
  } =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[42]++, (0, settings_store_1.useSettingsActions)());
  const {
    exportSettings,
    importSettings
  } =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[43]++, (0, settings_store_1.useSettingsStore)());
  // 🔍 État de la recherche
  const [searchQuery, setSearchQuery] =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[44]++, (0, react_1.useState)(''));
  const [selectedSection, setSelectedSection] =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[45]++, (0, react_1.useState)('all'));
  // 📋 États pour les dialogues
  const [confirmDialog, setConfirmDialog] =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[46]++, (0, react_1.useState)({
    isOpen: false,
    title: '',
    description: '',
    onConfirm: () => {
      /* istanbul ignore next */
      cov_1gi933snl1().f[7]++;
    }
  }));
  const [resetDialog, setResetDialog] =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[47]++, (0, react_1.useState)(false));
  // 🔍 FILTRAGE DES PARAMÈTRES
  const filteredSettings =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[48]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_1gi933snl1().f[8]++;
    cov_1gi933snl1().s[49]++;
    return SETTINGS_CONFIG.filter(setting => {
      /* istanbul ignore next */
      cov_1gi933snl1().f[9]++;
      const matchesSearch =
      /* istanbul ignore next */
      (cov_1gi933snl1().s[50]++,
      /* istanbul ignore next */
      (cov_1gi933snl1().b[16][0]++, !searchQuery) ||
      /* istanbul ignore next */
      (cov_1gi933snl1().b[16][1]++, setting.label.toLowerCase().includes(searchQuery.toLowerCase())) ||
      /* istanbul ignore next */
      (cov_1gi933snl1().b[16][2]++, setting.description.toLowerCase().includes(searchQuery.toLowerCase())));
      const matchesSection =
      /* istanbul ignore next */
      (cov_1gi933snl1().s[51]++,
      /* istanbul ignore next */
      (cov_1gi933snl1().b[17][0]++, selectedSection === 'all') ||
      /* istanbul ignore next */
      (cov_1gi933snl1().b[17][1]++, setting.section === selectedSection));
      /* istanbul ignore next */
      cov_1gi933snl1().s[52]++;
      return /* istanbul ignore next */(cov_1gi933snl1().b[18][0]++, matchesSearch) &&
      /* istanbul ignore next */
      (cov_1gi933snl1().b[18][1]++, matchesSection);
    });
  }, [searchQuery, selectedSection]));
  // 🎯 GESTIONNAIRE DE CHANGEMENT AVEC CONFIRMATION
  const handleSettingChange =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[53]++, (0, react_1.useCallback)(async (settingItem, value) => {
    /* istanbul ignore next */
    cov_1gi933snl1().f[10]++;
    cov_1gi933snl1().s[54]++;
    const updateSetting = async () => {
      /* istanbul ignore next */
      cov_1gi933snl1().f[11]++;
      cov_1gi933snl1().s[55]++;
      try {
        const sectionSettings =
        /* istanbul ignore next */
        (cov_1gi933snl1().s[56]++, settings[settingItem.section]);
        const newSectionSettings =
        /* istanbul ignore next */
        (cov_1gi933snl1().s[57]++, {
          ...sectionSettings,
          [settingItem.key]: value
        });
        /* istanbul ignore next */
        cov_1gi933snl1().s[58]++;
        await updateSettings({
          [settingItem.section]: newSectionSettings
        });
        /* istanbul ignore next */
        cov_1gi933snl1().s[59]++;
        toast({
          title: '✅ Setting Updated',
          description: `${settingItem.label} has been updated successfully.`
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1gi933snl1().s[60]++;
        toast({
          title: '❌ Error',
          description: 'Failed to update setting. Please try again.',
          variant: 'destructive'
        });
      }
    };
    // Confirmation pour les paramètres sensibles
    /* istanbul ignore next */
    cov_1gi933snl1().s[61]++;
    if (settingItem.requiresConfirmation) {
      /* istanbul ignore next */
      cov_1gi933snl1().b[19][0]++;
      cov_1gi933snl1().s[62]++;
      setConfirmDialog({
        isOpen: true,
        title: `Confirm ${settingItem.label} Change`,
        description: `Are you sure you want to change this setting? This may affect your app experience.`,
        onConfirm: updateSetting
      });
    } else {
      /* istanbul ignore next */
      cov_1gi933snl1().b[19][1]++;
      cov_1gi933snl1().s[63]++;
      await updateSetting();
    }
  }, [settings, updateSettings, toast]));
  // 🎨 RENDU D'UN PARAMÈTRE INDIVIDUEL
  const renderSetting =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[64]++, (0, react_1.useCallback)(settingItem => {
    /* istanbul ignore next */
    cov_1gi933snl1().f[12]++;
    const sectionSettings =
    /* istanbul ignore next */
    (cov_1gi933snl1().s[65]++, settings[settingItem.section]);
    const currentValue =
    /* istanbul ignore next */
    (cov_1gi933snl1().s[66]++, sectionSettings?.[settingItem.key]);
    /* istanbul ignore next */
    cov_1gi933snl1().s[67]++;
    const handleChange = value => {
      /* istanbul ignore next */
      cov_1gi933snl1().f[13]++;
      cov_1gi933snl1().s[68]++;
      handleSettingChange(settingItem, value);
    };
    /* istanbul ignore next */
    cov_1gi933snl1().s[69]++;
    return (0, jsx_runtime_1.jsx)(card_1.Card, {
      className: "mb-4",
      children: (0, jsx_runtime_1.jsx)(card_1.CardContent, {
        className: "pt-6",
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: "flex items-center justify-between",
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: "space-y-1 flex-1 pr-4",
            children: [(0, jsx_runtime_1.jsxs)("div", {
              className: "flex items-center gap-2",
              children: [(0, jsx_runtime_1.jsx)("h4", {
                className: "text-sm font-medium",
                children: settingItem.label
              }),
              /* istanbul ignore next */
              (cov_1gi933snl1().b[20][0]++, settingItem.requiresConfirmation) &&
              /* istanbul ignore next */
              (cov_1gi933snl1().b[20][1]++, (0, jsx_runtime_1.jsxs)(badge_1.Badge, {
                variant: "secondary",
                className: "text-xs",
                children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, {
                  className: "w-3 h-3 mr-1"
                }), "Requires Confirmation"]
              }))]
            }), (0, jsx_runtime_1.jsx)("p", {
              className: "text-sm text-muted-foreground",
              children: settingItem.description
            })]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: "flex-shrink-0",
            children: [
            /* istanbul ignore next */
            (cov_1gi933snl1().b[21][0]++, settingItem.type === 'boolean') &&
            /* istanbul ignore next */
            (cov_1gi933snl1().b[21][1]++, (0, jsx_runtime_1.jsx)(switch_1.Switch, {
              checked: currentValue,
              onCheckedChange: handleChange,
              disabled: isLoading
            })),
            /* istanbul ignore next */
            (cov_1gi933snl1().b[22][0]++, settingItem.type === 'select') &&
            /* istanbul ignore next */
            (cov_1gi933snl1().b[22][1]++, (0, jsx_runtime_1.jsxs)(select_1.Select, {
              value: currentValue,
              onValueChange: handleChange,
              disabled: isLoading,
              children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
                className: "w-[180px]",
                children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {})
              }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, {
                children: settingItem.options?.map((option, index) => {
                  /* istanbul ignore next */
                  cov_1gi933snl1().f[14]++;
                  cov_1gi933snl1().s[70]++;
                  return (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                    value: option.value,
                    children: option.label
                  }, option.value);
                })
              })]
            })),
            /* istanbul ignore next */
            (cov_1gi933snl1().b[23][0]++, settingItem.type === 'slider') &&
            /* istanbul ignore next */
            (cov_1gi933snl1().b[23][1]++, (0, jsx_runtime_1.jsxs)("div", {
              className: "w-[180px] space-y-2",
              children: [(0, jsx_runtime_1.jsx)(slider_1.Slider, {
                value: [currentValue],
                onValueChange: ([value]) => {
                  /* istanbul ignore next */
                  cov_1gi933snl1().f[15]++;
                  cov_1gi933snl1().s[71]++;
                  return handleChange(value);
                },
                min: settingItem.min,
                max: settingItem.max,
                step: settingItem.step,
                disabled: isLoading
              }), (0, jsx_runtime_1.jsxs)("p", {
                className: "text-xs text-center text-muted-foreground",
                children: [currentValue, " ", settingItem.section === 'workout' ?
                /* istanbul ignore next */
                (cov_1gi933snl1().b[24][0]++, 'seconds') :
                /* istanbul ignore next */
                (cov_1gi933snl1().b[24][1]++, 'minutes')]
              })]
            }))]
          })]
        })
      })
    }, `${settingItem.section}-${settingItem.key}`);
  }, [settings, isLoading, handleSettingChange]));
  // 🔄 GESTIONNAIRES D'ACTIONS
  const handleReset =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[72]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1gi933snl1().f[16]++;
    cov_1gi933snl1().s[73]++;
    try {
      /* istanbul ignore next */
      cov_1gi933snl1().s[74]++;
      await resetSettings();
      /* istanbul ignore next */
      cov_1gi933snl1().s[75]++;
      setResetDialog(false);
      /* istanbul ignore next */
      cov_1gi933snl1().s[76]++;
      toast({
        title: '🔄 Settings Reset',
        description: 'All settings have been reset to default values.'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1gi933snl1().s[77]++;
      toast({
        title: '❌ Error',
        description: 'Failed to reset settings.',
        variant: 'destructive'
      });
    }
  }, [resetSettings, toast]));
  const handleExport =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[78]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_1gi933snl1().f[17]++;
    const settingsData =
    /* istanbul ignore next */
    (cov_1gi933snl1().s[79]++, exportSettings());
    const blob =
    /* istanbul ignore next */
    (cov_1gi933snl1().s[80]++, new Blob([JSON.stringify(settingsData, null, 2)], {
      type: 'application/json'
    }));
    const url =
    /* istanbul ignore next */
    (cov_1gi933snl1().s[81]++, URL.createObjectURL(blob));
    const a =
    /* istanbul ignore next */
    (cov_1gi933snl1().s[82]++, document.createElement('a'));
    /* istanbul ignore next */
    cov_1gi933snl1().s[83]++;
    a.href = url;
    /* istanbul ignore next */
    cov_1gi933snl1().s[84]++;
    a.download = 'myfithero-settings.json';
    /* istanbul ignore next */
    cov_1gi933snl1().s[85]++;
    a.click();
    /* istanbul ignore next */
    cov_1gi933snl1().s[86]++;
    URL.revokeObjectURL(url);
    /* istanbul ignore next */
    cov_1gi933snl1().s[87]++;
    toast({
      title: '📥 Settings Exported',
      description: 'Your settings have been downloaded as a JSON file.'
    });
  }, [exportSettings, toast]));
  const handleImport =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[88]++, (0, react_1.useCallback)(event => {
    /* istanbul ignore next */
    cov_1gi933snl1().f[18]++;
    const file =
    /* istanbul ignore next */
    (cov_1gi933snl1().s[89]++, event.target.files?.[0]);
    /* istanbul ignore next */
    cov_1gi933snl1().s[90]++;
    if (!file) {
      /* istanbul ignore next */
      cov_1gi933snl1().b[25][0]++;
      cov_1gi933snl1().s[91]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1gi933snl1().b[25][1]++;
    }
    const reader =
    /* istanbul ignore next */
    (cov_1gi933snl1().s[92]++, new FileReader());
    /* istanbul ignore next */
    cov_1gi933snl1().s[93]++;
    reader.onload = async e => {
      /* istanbul ignore next */
      cov_1gi933snl1().f[19]++;
      cov_1gi933snl1().s[94]++;
      try {
        const settingsData =
        /* istanbul ignore next */
        (cov_1gi933snl1().s[95]++, JSON.parse(e.target?.result));
        /* istanbul ignore next */
        cov_1gi933snl1().s[96]++;
        await importSettings(settingsData);
        /* istanbul ignore next */
        cov_1gi933snl1().s[97]++;
        toast({
          title: '📤 Settings Imported',
          description: 'Your settings have been imported successfully.'
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1gi933snl1().s[98]++;
        toast({
          title: '❌ Import Failed',
          description: 'Invalid settings file.',
          variant: 'destructive'
        });
      }
    };
    /* istanbul ignore next */
    cov_1gi933snl1().s[99]++;
    reader.readAsText(file);
  }, [importSettings, toast]));
  // 📊 SECTIONS DISPONIBLES
  const sections =
  /* istanbul ignore next */
  (cov_1gi933snl1().s[100]++, [{
    key: 'all',
    label: 'All Settings'
  }, {
    key: 'ui',
    label: 'Interface'
  }, {
    key: 'notifications',
    label: 'Notifications'
  }, {
    key: 'workout',
    label: 'Workout'
  }, {
    key: 'privacy',
    label: 'Privacy'
  }, {
    key: 'wearables',
    label: 'Wearables'
  }]);
  /* istanbul ignore next */
  cov_1gi933snl1().s[101]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: "container mx-auto p-6 max-w-4xl",
    children: [(0, jsx_runtime_1.jsxs)("div", {
      className: "mb-8",
      children: [(0, jsx_runtime_1.jsx)("h1", {
        className: "text-3xl font-bold mb-2",
        children: "Settings"
      }), (0, jsx_runtime_1.jsx)("p", {
        className: "text-muted-foreground",
        children: "Customize your MyFitHero experience. Changes are saved automatically."
      }), (0, jsx_runtime_1.jsxs)("div", {
        className: "flex items-center gap-4 mt-4",
        children: [
        /* istanbul ignore next */
        (cov_1gi933snl1().b[26][0]++, isDirty) &&
        /* istanbul ignore next */
        (cov_1gi933snl1().b[26][1]++, (0, jsx_runtime_1.jsxs)(badge_1.Badge, {
          variant: "secondary",
          className: "animate-pulse",
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Save, {
            className: "w-3 h-3 mr-1"
          }), "Saving..."]
        })),
        /* istanbul ignore next */
        (cov_1gi933snl1().b[27][0]++, error) &&
        /* istanbul ignore next */
        (cov_1gi933snl1().b[27][1]++, (0, jsx_runtime_1.jsxs)(badge_1.Badge, {
          variant: "destructive",
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, {
            className: "w-3 h-3 mr-1"
          }), "Error: ", error]
        })),
        /* istanbul ignore next */
        (cov_1gi933snl1().b[28][0]++, !isDirty) &&
        /* istanbul ignore next */
        (cov_1gi933snl1().b[28][1]++, !error) &&
        /* istanbul ignore next */
        (cov_1gi933snl1().b[28][2]++, (0, jsx_runtime_1.jsxs)(badge_1.Badge, {
          variant: "default",
          children: [(0, jsx_runtime_1.jsx)(lucide_react_1.CheckCircle, {
            className: "w-3 h-3 mr-1"
          }), "All changes saved"]
        }))]
      })]
    }), (0, jsx_runtime_1.jsx)(card_1.Card, {
      className: "mb-6",
      children: (0, jsx_runtime_1.jsx)(card_1.CardContent, {
        className: "pt-6",
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: "flex flex-col sm:flex-row gap-4",
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: "relative flex-1",
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Search, {
              className: "absolute left-3 top-3 h-4 w-4 text-muted-foreground"
            }), (0, jsx_runtime_1.jsx)(input_1.Input, {
              placeholder: "Search settings...",
              value: searchQuery,
              onChange: e => {
                /* istanbul ignore next */
                cov_1gi933snl1().f[20]++;
                cov_1gi933snl1().s[102]++;
                return setSearchQuery(e.target.value);
              },
              className: "pl-10"
            })]
          }), (0, jsx_runtime_1.jsxs)(select_1.Select, {
            value: selectedSection,
            onValueChange: value => {
              /* istanbul ignore next */
              cov_1gi933snl1().f[21]++;
              cov_1gi933snl1().s[103]++;
              return setSelectedSection(value);
            },
            children: [(0, jsx_runtime_1.jsx)(select_1.SelectTrigger, {
              className: "w-[180px]",
              children: (0, jsx_runtime_1.jsx)(select_1.SelectValue, {})
            }), (0, jsx_runtime_1.jsx)(select_1.SelectContent, {
              children: sections.map((section, index) => {
                /* istanbul ignore next */
                cov_1gi933snl1().f[22]++;
                cov_1gi933snl1().s[104]++;
                return (0, jsx_runtime_1.jsx)(select_1.SelectItem, {
                  value: section.key,
                  children: section.label
                }, section.key);
              })
            })]
          })]
        })
      })
    }), (0, jsx_runtime_1.jsxs)(card_1.Card, {
      className: "mb-6",
      children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, {
        children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, {
          className: "text-lg",
          children: "Quick Actions"
        }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, {
          children: "Manage your settings data"
        })]
      }), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: "flex flex-wrap gap-3",
          children: [(0, jsx_runtime_1.jsxs)(button_1.Button, {
            variant: "outline",
            size: "sm",
            onClick: handleExport,
            className: "flex items-center gap-2",
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Download, {
              className: "w-4 h-4"
            }), "Export Settings"]
          }), (0, jsx_runtime_1.jsx)(button_1.Button, {
            variant: "outline",
            size: "sm",
            asChild: true,
            className: "flex items-center gap-2",
            children: (0, jsx_runtime_1.jsxs)("label", {
              htmlFor: "import-settings",
              className: "cursor-pointer",
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Upload, {
                className: "w-4 h-4"
              }), "Import Settings"]
            })
          }), (0, jsx_runtime_1.jsx)("input", {
            id: "import-settings",
            type: "file",
            accept: ".json",
            onChange: handleImport,
            className: "hidden"
          }), (0, jsx_runtime_1.jsxs)(button_1.Button, {
            variant: "destructive",
            size: "sm",
            onClick: () => {
              /* istanbul ignore next */
              cov_1gi933snl1().f[23]++;
              cov_1gi933snl1().s[105]++;
              return setResetDialog(true);
            },
            className: "flex items-center gap-2",
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.RotateCcw, {
              className: "w-4 h-4"
            }), "Reset All Settings"]
          })]
        })
      })]
    }), (0, jsx_runtime_1.jsx)("div", {
      className: "space-y-0",
      children: filteredSettings.length === 0 ?
      /* istanbul ignore next */
      (cov_1gi933snl1().b[29][0]++, (0, jsx_runtime_1.jsx)(card_1.Card, {
        children: (0, jsx_runtime_1.jsx)(card_1.CardContent, {
          className: "pt-6 text-center",
          children: (0, jsx_runtime_1.jsx)("p", {
            className: "text-muted-foreground",
            children: "No settings found matching your search criteria."
          })
        })
      })) :
      /* istanbul ignore next */
      (cov_1gi933snl1().b[29][1]++, filteredSettings.map(renderSetting))
    }), (0, jsx_runtime_1.jsx)(dialog_1.Dialog, {
      open: confirmDialog.isOpen,
      onOpenChange: open => {
        /* istanbul ignore next */
        cov_1gi933snl1().f[24]++;
        cov_1gi933snl1().s[106]++;
        return setConfirmDialog(prev => {
          /* istanbul ignore next */
          cov_1gi933snl1().f[25]++;
          cov_1gi933snl1().s[107]++;
          return {
            ...prev,
            isOpen: open
          };
        });
      },
      children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
        children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogHeader, {
          children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
            children: confirmDialog.title
          }), (0, jsx_runtime_1.jsx)(dialog_1.DialogDescription, {
            children: confirmDialog.description
          })]
        }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogFooter, {
          children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
            variant: "outline",
            onClick: () => {
              /* istanbul ignore next */
              cov_1gi933snl1().f[26]++;
              cov_1gi933snl1().s[108]++;
              return setConfirmDialog(prev => {
                /* istanbul ignore next */
                cov_1gi933snl1().f[27]++;
                cov_1gi933snl1().s[109]++;
                return {
                  ...prev,
                  isOpen: false
                };
              });
            },
            children: "Cancel"
          }), (0, jsx_runtime_1.jsx)(button_1.Button, {
            onClick: () => {
              /* istanbul ignore next */
              cov_1gi933snl1().f[28]++;
              cov_1gi933snl1().s[110]++;
              confirmDialog.onConfirm();
              /* istanbul ignore next */
              cov_1gi933snl1().s[111]++;
              setConfirmDialog(prev => {
                /* istanbul ignore next */
                cov_1gi933snl1().f[29]++;
                cov_1gi933snl1().s[112]++;
                return {
                  ...prev,
                  isOpen: false
                };
              });
            },
            children: "Confirm"
          })]
        })]
      })
    }), (0, jsx_runtime_1.jsx)(dialog_1.Dialog, {
      open: resetDialog,
      onOpenChange: setResetDialog,
      children: (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
        children: [(0, jsx_runtime_1.jsxs)(dialog_1.DialogHeader, {
          children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
            children: "Reset All Settings"
          }), (0, jsx_runtime_1.jsx)(dialog_1.DialogDescription, {
            children: "This will reset all settings to their default values. This action cannot be undone. Are you sure you want to continue?"
          })]
        }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogFooter, {
          children: [(0, jsx_runtime_1.jsx)(button_1.Button, {
            variant: "outline",
            onClick: () => {
              /* istanbul ignore next */
              cov_1gi933snl1().f[30]++;
              cov_1gi933snl1().s[113]++;
              return setResetDialog(false);
            },
            children: "Cancel"
          }), (0, jsx_runtime_1.jsx)(button_1.Button, {
            variant: "destructive",
            onClick: handleReset,
            children: "Reset Settings"
          })]
        })]
      })
    })]
  });
};
/* istanbul ignore next */
cov_1gi933snl1().s[114]++;
exports.default = UnifiedSettingsPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,