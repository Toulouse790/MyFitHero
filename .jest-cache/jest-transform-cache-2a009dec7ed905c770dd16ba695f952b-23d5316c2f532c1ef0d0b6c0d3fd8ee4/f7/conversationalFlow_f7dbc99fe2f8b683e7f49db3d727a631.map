{"version":3,"names":["cov_2nhsa8r0tu","actualCoverage","s","exports","getConditionalNextStep","calculateEstimatedTime","getQuestionsForPack","CONVERSATIONAL_ONBOARDING_FLOW","id","title","description","question","inputType","placeholder","validation","type","message","value","nextStep","icon","estimatedTime","response","f","b","currentStepId","data","completedSteps","totalSteps","length","remainingSteps","avgTimePerStep","Math","max","packId","baseFlow"],"sources":["/workspaces/MyFitHero/src/features/auth/data/conversationalFlow.ts"],"sourcesContent":["// Flow conversationnel pour l'onboarding moderne\nimport { ConversationalStep, OnboardingData } from '@/features/auth/types/conversationalOnboarding';\n\nexport const CONVERSATIONAL_ONBOARDING_FLOW: ConversationalStep[] = [\n  {\n    id: 'welcome',\n    title: 'Bienvenue sur MyFitHero !',\n    description: 'Commençons par faire connaissance',\n    question: 'Comment puis-je vous appeler ?',\n    inputType: 'text',\n    placeholder: 'Votre prénom...',\n    validation: [\n      { type: 'required', message: 'Votre prénom est requis' },\n      { type: 'min', value: 2, message: 'Votre prénom doit contenir au moins 2 caractères' }\n    ],\n    nextStep: 'main_objective',\n    icon: 'User',\n    estimatedTime: 1\n  },\n  {\n    id: 'main_objective',\n    title: 'Votre objectif principal',\n    description: 'Définissons ensemble votre priorité',\n    question: 'Quel est votre objectif principal avec MyFitHero ?',\n    inputType: 'single_choice',\n    validation: [{ type: 'required', message: 'Veuillez choisir un objectif' }],\n    nextStep: 'pack_selection',\n    icon: 'Target',\n    estimatedTime: 2\n  },\n  {\n    id: 'pack_selection',\n    title: 'Choisissez votre pack',\n    description: 'Sélectionnez le pack qui vous correspond',\n    question: 'Quel pack correspond le mieux à vos besoins ?',\n    inputType: 'pack_selector',\n    validation: [{ type: 'required', message: 'Veuillez choisir un pack' }],\n    nextStep: (response: string) => response === 'custom' ? 'module_selection' : 'personal_info',\n    icon: 'Package',\n    estimatedTime: 3\n  },\n  {\n    id: 'module_selection',\n    title: 'Modules personnalisés',\n    description: 'Choisissez les modules qui vous intéressent',\n    question: 'Quels aspects souhaitez-vous suivre ?',\n    inputType: 'multi_choice',\n    validation: [\n      { type: 'required', message: 'Veuillez sélectionner au moins un module' },\n      { type: 'min', value: 1, message: 'Sélectionnez au moins un module' }\n    ],\n    nextStep: 'personal_info',\n    icon: 'Settings',\n    estimatedTime: 2\n  },\n  {\n    id: 'personal_info',\n    title: 'Informations personnelles',\n    description: 'Quelques infos pour personnaliser votre expérience',\n    question: 'Parlez-nous un peu de vous',\n    inputType: 'personal_info',\n    validation: [{ type: 'required', message: 'Ces informations sont importantes pour votre suivi' }],\n    nextStep: 'sport_selection',\n    icon: 'User',\n    estimatedTime: 4\n  },\n  {\n    id: 'sport_selection',\n    title: 'Votre sport principal',\n    description: 'Sélectionnez votre discipline principale',\n    question: 'Quel est votre sport de prédilection ?',\n    inputType: 'sport_selector',\n    validation: [{ type: 'required', message: 'Veuillez choisir un sport' }],\n    nextStep: 'completion',\n    icon: 'Zap',\n    estimatedTime: 3\n  },\n  {\n    id: 'completion',\n    title: 'Configuration terminée !',\n    description: 'Votre profil MyFitHero est prêt',\n    question: 'Félicitations ! Vous êtes prêt à commencer votre parcours.',\n    inputType: 'text',\n    nextStep: '',\n    icon: 'Check',\n    estimatedTime: 1\n  }\n];\n\nexport function getConditionalNextStep(\n  currentStepId: string,\n  response: any,\n  data: OnboardingData\n): string | undefined {\n  switch (currentStepId) {\n    case 'pack_selection':\n      return response === 'custom' ? 'module_selection' : 'personal_info';\n    \n    case 'module_selection':\n      return 'personal_info';\n    \n    case 'sport_selection':\n      // Si le sport nécessite une position, aller à position_selector\n      // Sinon, aller à completion\n      return 'completion';\n    \n    default:\n      return null;\n  }\n}\n\nexport function calculateEstimatedTime(currentStepId: string, completedSteps: string[]): number {\n  const totalSteps = CONVERSATIONAL_ONBOARDING_FLOW.length;\n  const remainingSteps = totalSteps - completedSteps.length;\n  const avgTimePerStep = 2; // minutes\n  \n  return Math.max(2, remainingSteps * avgTimePerStep);\n}\n\nexport function getQuestionsForPack(packId: string): string[] {\n  const baseFlow = ['welcome', 'main_objective', 'pack_selection', 'personal_info'];\n  \n  switch (packId) {\n    case 'sport_performance':\n      return [...baseFlow, 'sport_selection', 'completion'];\n    \n    case 'health_wellness':\n      return [...baseFlow, 'sport_selection', 'completion'];\n    \n    case 'body_transformation':\n      return [...baseFlow, 'sport_selection', 'completion'];\n    \n    case 'custom':\n      return [...baseFlow, 'module_selection', 'sport_selection', 'completion'];\n    \n    default:\n      return [...baseFlow, 'sport_selection', 'completion'];\n  }\n}"],"mappingscAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;;;;AA6ENC,OAAA,CAAAC,sBAAA,GAAAA,sBAAA;AAoBC;AAAAJ,cAAA,GAAAE,CAAA;AAEDC,OAAA,CAAAE,sBAAA,GAAAA,sBAAA;AAMC;AAAAL,cAAA,GAAAE,CAAA;AAEDC,OAAA,CAAAG,mBAAA,GAAAA,mBAAA;AAmBC;AAAAN,cAAA,GAAAE,CAAA;AAvIYC,OAAA,CAAAI,8BAA8B,GAAyB,CAClE;EACEC,EAAE,EAAE,SAAS;EACbC,KAAK,EAAE,2BAA2B;EAClCC,WAAW,EAAE,mCAAmC;EAChDC,QAAQ,EAAE,gCAAgC;EAC1CC,SAAS,EAAE,MAAM;EACjBC,WAAW,EAAE,iBAAiB;EAC9BC,UAAU,EAAE,CACV;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE;EAAyB,CAAE,EACxD;IAAED,IAAI,EAAE,KAAK;IAAEE,KAAK,EAAE,CAAC;IAAED,OAAO,EAAE;EAAkD,CAAE,CACvF;EACDE,QAAQ,EAAE,gBAAgB;EAC1BC,IAAI,EAAE,MAAM;EACZC,aAAa,EAAE;CAChB,EACD;EACEZ,EAAE,EAAE,gBAAgB;EACpBC,KAAK,EAAE,0BAA0B;EACjCC,WAAW,EAAE,qCAAqC;EAClDC,QAAQ,EAAE,oDAAoD;EAC9DC,SAAS,EAAE,eAAe;EAC1BE,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE;EAA8B,CAAE,CAAC;EAC3EE,QAAQ,EAAE,gBAAgB;EAC1BC,IAAI,EAAE,QAAQ;EACdC,aAAa,EAAE;CAChB,EACD;EACEZ,EAAE,EAAE,gBAAgB;EACpBC,KAAK,EAAE,uBAAuB;EAC9BC,WAAW,EAAE,0CAA0C;EACvDC,QAAQ,EAAE,+CAA+C;EACzDC,SAAS,EAAE,eAAe;EAC1BE,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE;EAA0B,CAAE,CAAC;EACvEE,QAAQ,EAAGG,QAAgB,IAAK;IAAA;IAAArB,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAE,CAAA;IAAA,OAAAmB,QAAQ,KAAK,QAAQ;IAAA;IAAA,CAAArB,cAAA,GAAAuB,CAAA,UAAG,kBAAkB;IAAA;IAAA,CAAAvB,cAAA,GAAAuB,CAAA,UAAG,eAAe;EAAf,CAAe;EAC5FJ,IAAI,EAAE,SAAS;EACfC,aAAa,EAAE;CAChB,EACD;EACEZ,EAAE,EAAE,kBAAkB;EACtBC,KAAK,EAAE,uBAAuB;EAC9BC,WAAW,EAAE,6CAA6C;EAC1DC,QAAQ,EAAE,uCAAuC;EACjDC,SAAS,EAAE,cAAc;EACzBE,UAAU,EAAE,CACV;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE;EAA0C,CAAE,EACzE;IAAED,IAAI,EAAE,KAAK;IAAEE,KAAK,EAAE,CAAC;IAAED,OAAO,EAAE;EAAiC,CAAE,CACtE;EACDE,QAAQ,EAAE,eAAe;EACzBC,IAAI,EAAE,UAAU;EAChBC,aAAa,EAAE;CAChB,EACD;EACEZ,EAAE,EAAE,eAAe;EACnBC,KAAK,EAAE,2BAA2B;EAClCC,WAAW,EAAE,oDAAoD;EACjEC,QAAQ,EAAE,4BAA4B;EACtCC,SAAS,EAAE,eAAe;EAC1BE,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE;EAAoD,CAAE,CAAC;EACjGE,QAAQ,EAAE,iBAAiB;EAC3BC,IAAI,EAAE,MAAM;EACZC,aAAa,EAAE;CAChB,EACD;EACEZ,EAAE,EAAE,iBAAiB;EACrBC,KAAK,EAAE,uBAAuB;EAC9BC,WAAW,EAAE,0CAA0C;EACvDC,QAAQ,EAAE,wCAAwC;EAClDC,SAAS,EAAE,gBAAgB;EAC3BE,UAAU,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE;EAA2B,CAAE,CAAC;EACxEE,QAAQ,EAAE,YAAY;EACtBC,IAAI,EAAE,KAAK;EACXC,aAAa,EAAE;CAChB,EACD;EACEZ,EAAE,EAAE,YAAY;EAChBC,KAAK,EAAE,0BAA0B;EACjCC,WAAW,EAAE,iCAAiC;EAC9CC,QAAQ,EAAE,4DAA4D;EACtEC,SAAS,EAAE,MAAM;EACjBM,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAE,OAAO;EACbC,aAAa,EAAE;CAChB,CACF;AAED,SAAgBhB,sBAAsBA,CACpCoB,aAAqB,EACrBH,QAAa,EACbI,IAAoB;EAAA;EAAAzB,cAAA,GAAAsB,CAAA;EAAAtB,cAAA,GAAAE,CAAA;EAEpB,QAAQsB,aAAa;IACnB,KAAK,gBAAgB;MAAA;MAAAxB,cAAA,GAAAuB,CAAA;MAAAvB,cAAA,GAAAE,CAAA;MACnB,OAAOmB,QAAQ,KAAK,QAAQ;MAAA;MAAA,CAAArB,cAAA,GAAAuB,CAAA,UAAG,kBAAkB;MAAA;MAAA,CAAAvB,cAAA,GAAAuB,CAAA,UAAG,eAAe;IAErE,KAAK,kBAAkB;MAAA;MAAAvB,cAAA,GAAAuB,CAAA;MAAAvB,cAAA,GAAAE,CAAA;MACrB,OAAO,eAAe;IAExB,KAAK,iBAAiB;MAAA;MAAAF,cAAA,GAAAuB,CAAA;MAAAvB,cAAA,GAAAE,CAAA;MACpB;MACA;MACA,OAAO,YAAY;IAErB;MAAA;MAAAF,cAAA,GAAAuB,CAAA;MAAAvB,cAAA,GAAAE,CAAA;MACE,OAAO,IAAI;EACf;AACF;AAEA,SAAgBG,sBAAsBA,CAACmB,aAAqB,EAAEE,cAAwB;EAAA;EAAA1B,cAAA,GAAAsB,CAAA;EACpF,MAAMK,UAAU;EAAA;EAAA,CAAA3B,cAAA,GAAAE,CAAA,QAAGC,OAAA,CAAAI,8BAA8B,CAACqB,MAAM;EACxD,MAAMC,cAAc;EAAA;EAAA,CAAA7B,cAAA,GAAAE,CAAA,QAAGyB,UAAU,GAAGD,cAAc,CAACE,MAAM;EACzD,MAAME,cAAc;EAAA;EAAA,CAAA9B,cAAA,GAAAE,CAAA,QAAG,CAAC,EAAC,CAAC;EAAA;EAAAF,cAAA,GAAAE,CAAA;EAE1B,OAAO6B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEH,cAAc,GAAGC,cAAc,CAAC;AACrD;AAEA,SAAgBxB,mBAAmBA,CAAC2B,MAAc;EAAA;EAAAjC,cAAA,GAAAsB,CAAA;EAChD,MAAMY,QAAQ;EAAA;EAAA,CAAAlC,cAAA,GAAAE,CAAA,QAAG,CAAC,SAAS,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,eAAe,CAAC;EAAC;EAAAF,cAAA,GAAAE,CAAA;EAElF,QAAQ+B,MAAM;IACZ,KAAK,mBAAmB;MAAA;MAAAjC,cAAA,GAAAuB,CAAA;MAAAvB,cAAA,GAAAE,CAAA;MACtB,OAAO,CAAC,GAAGgC,QAAQ,EAAE,iBAAiB,EAAE,YAAY,CAAC;IAEvD,KAAK,iBAAiB;MAAA;MAAAlC,cAAA,GAAAuB,CAAA;MAAAvB,cAAA,GAAAE,CAAA;MACpB,OAAO,CAAC,GAAGgC,QAAQ,EAAE,iBAAiB,EAAE,YAAY,CAAC;IAEvD,KAAK,qBAAqB;MAAA;MAAAlC,cAAA,GAAAuB,CAAA;MAAAvB,cAAA,GAAAE,CAAA;MACxB,OAAO,CAAC,GAAGgC,QAAQ,EAAE,iBAAiB,EAAE,YAAY,CAAC;IAEvD,KAAK,QAAQ;MAAA;MAAAlC,cAAA,GAAAuB,CAAA;MAAAvB,cAAA,GAAAE,CAAA;MACX,OAAO,CAAC,GAAGgC,QAAQ,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,YAAY,CAAC;IAE3E;MAAA;MAAAlC,cAAA,GAAAuB,CAAA;MAAAvB,cAAA,GAAAE,CAAA;MACE,OAAO,CAAC,GAAGgC,QAAQ,EAAE,iBAAiB,EAAE,YAAY,CAAC;EACzD;AACF","ignoreList":[]}