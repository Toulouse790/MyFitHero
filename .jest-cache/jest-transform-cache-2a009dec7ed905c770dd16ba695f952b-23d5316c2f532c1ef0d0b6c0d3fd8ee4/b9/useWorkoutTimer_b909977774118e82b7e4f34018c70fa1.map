{"version":3,"names":["cov_9sgg6unhw","actualCoverage","s","react_1","require","useWorkoutTimer","isSessionActive","f","totalTime","setTotalTime","useState","exerciseTime","setExerciseTime","restTime","setRestTime","isResting","setIsResting","isPaused","setIsPaused","intervalRef","useRef","restTimeoutRef","useEffect","b","current","setInterval","prev","Math","max","clearInterval","startExerciseTimer","useCallback","clearTimeout","startRestTimer","duration","setTimeout","pauseTimer","resumeTimer","resetTimer","formatTime","seconds","hours","floor","minutes","secs","toString","padStart","exports"],"sources":["/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutTimer.ts"],"sourcesContent":["import { Star } from 'lucide-react';\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\n// hooks/workout/useWorkoutTimer.ts\n\nexport interface UseWorkoutTimerReturn {\n  totalTime: number;\n  exerciseTime: number;\n  restTime: number;\n  isResting: boolean;\n  startExerciseTimer: () => void;\n  startRestTimer: (duration: number) => void;\n  pauseTimer: () => void;\n  resumeTimer: () => void;\n  resetTimer: () => void;\n  formatTime: (seconds: number) => string;\n}\n\nexport const useWorkoutTimer = (isSessionActive: boolean): UseWorkoutTimerReturn => {\n  const [totalTime, setTotalTime] = useState(0);\n  const [exerciseTime, setExerciseTime] = useState(0);\n  const [restTime, setRestTime] = useState(0);\n  const [isResting, setIsResting] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const restTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Timer principal\n  useEffect(() => {\n    if (isSessionActive && !isPaused) {\n      intervalRef.current = setInterval(() => {\n        setTotalTime(prev => prev + 1);\n        if (isResting) {\n          setRestTime(prev => Math.max(0, prev - 1));\n        } else {\n          setExerciseTime(prev => prev + 1);\n        }\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isSessionActive, isPaused, isResting]);\n\n  const startExerciseTimer = useCallback(() => {\n    setIsResting(false);\n    setExerciseTime(0);\n    if (restTimeoutRef.current) {\n      clearTimeout(restTimeoutRef.current);\n      restTimeoutRef.current = null;\n    }\n  }, []);\n\n  const startRestTimer = useCallback((duration: number) => {\n    setIsResting(true);\n    setRestTime(duration);\n\n    restTimeoutRef.current = setTimeout(() => {\n      setIsResting(false);\n      setRestTime(0);\n    }, duration * 1000);\n  }, []);\n\n  const pauseTimer = useCallback(() => {\n    setIsPaused(true);\n  }, []);\n\n  const resumeTimer = useCallback(() => {\n    setIsPaused(false);\n  }, []);\n\n  const resetTimer = useCallback(() => {\n    setTotalTime(0);\n    setExerciseTime(0);\n    setRestTime(0);\n    setIsResting(false);\n    setIsPaused(false);\n\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    if (restTimeoutRef.current) {\n      clearTimeout(restTimeoutRef.current);\n      restTimeoutRef.current = null;\n    }\n  }, []);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n\n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  return {\n    totalTime,\n    exerciseTime,\n    restTime,\n    isResting,\n    startExerciseTimer,\n    startRestTimer,\n    pauseTimer,\n    resumeTimer,\n    resetTimer,\n    formatTime,\n  };\n};\n"],"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","ignoreList":[]}