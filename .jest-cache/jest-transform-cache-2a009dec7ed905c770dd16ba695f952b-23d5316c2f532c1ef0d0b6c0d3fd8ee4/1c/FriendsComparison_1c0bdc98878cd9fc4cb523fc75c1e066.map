{"version":3,"names":["react_1","cov_l5p4sdx3z","s","__importStar","require","lucide_react_1","socialService_1","use_toast_1","FriendsComparison","userId","period","onPeriodChange","f","toast","useToast","comparisonData","setComparisonData","useState","isLoading","setIsLoading","useEffect","loadComparisonData","data","socialService","getFriendsComparison","error","console","title","description","variant","getMetricIcon","metric","b","jsx_runtime_1","jsx","Dumbbell","size","className","Apple","Droplets","Moon","Trophy","BarChart3","getMetricLabel","formatValue","value","toLocaleString","toFixed","toString","getRankIcon","rank","Crown","Award","Star","ComparisonCard","userValue","friends","allUsers","username","isUser","map","friend","index","sort","a","userRank","findIndex","user","isTop","jsxs","children","slice","length","Users","user_stats","friends_stats","user_rank","onClick","Object","keys","Target","TrendingUp","exports","default"],"sources":["/workspaces/MyFitHero/src/features/social/components/FriendsComparison.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Users,\n  Trophy,\n  TrendingUp,\n  Dumbbell,\n  Apple,\n  Droplets,\n  Moon,\n  Award,\n  Star,\n  Crown,\n  BarChart3,\n  Target,\n} from 'lucide-react';\nimport { socialService } from '@/lib/services/socialService';\nimport { useToast } from '@/shared/hooks/use-toast';\n\ninterface FriendsComparisonProps {\n  userId: string;\n  period: 'week' | 'month';\n  onPeriodChange: (period: 'week' | 'month') => void;\n}\n\nconst FriendsComparison: React.FC<FriendsComparisonProps> = ({\n  userId,\n  period,\n  onPeriodChange,\n}) => {\n  const { toast } = useToast();\n  const [comparisonData, setComparisonData] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadComparisonData();\n  }, [userId, period]);\n\n  const loadComparisonData = async () => {\n    try {\n      setIsLoading(true);\n      const data = await socialService.getFriendsComparison(userId, period);\n      setComparisonData(data);\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Error loading friends comparison:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger les comparaisons',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getMetricIcon = (metric: string) => {\n    switch (metric) {\n      case 'workouts_completed':\n        return <Dumbbell size={16} className=\"text-red-500\" />;\n      case 'total_calories_burned':\n        return <Apple size={16} className=\"text-green-500\" />;\n      case 'water_intake_liters':\n        return <Droplets size={16} className=\"text-blue-500\" />;\n      case 'sleep_hours_avg':\n        return <Moon size={16} className=\"text-purple-500\" />;\n      case 'challenges_completed':\n        return <Trophy size={16} className=\"text-yellow-500\" />;\n      default:\n        return <BarChart3 size={16} className=\"text-gray-500\" />;\n    }\n  };\n\n  const getMetricLabel = (metric: string) => {\n    switch (metric) {\n      case 'workouts_completed':\n        return 'Entraînements';\n      case 'total_calories_burned':\n        return 'Calories brûlées';\n      case 'water_intake_liters':\n        return 'Hydratation (L)';\n      case 'sleep_hours_avg':\n        return 'Sommeil (h/jour)';\n      case 'challenges_completed':\n        return 'Défis complétés';\n      default:\n        return metric;\n    }\n  };\n\n  const formatValue = (metric: string, value: number) => {\n    switch (metric) {\n      case 'total_calories_burned':\n        return `${value.toLocaleString()} kcal`;\n      case 'water_intake_liters':\n        return `${value.toFixed(1)}L`;\n      case 'sleep_hours_avg':\n        return `${value.toFixed(1)}h`;\n      default:\n        return value.toString();\n    }\n  };\n\n  const getRankIcon = (rank: number) => {\n    switch (rank) {\n      case 1:\n        return <Crown className=\"text-yellow-500\" size={20} />;\n      case 2:\n        return <Award className=\"text-gray-400\" size={20} />;\n      case 3:\n        return <Trophy className=\"text-orange-500\" size={20} />;\n      default:\n        return <Star className=\"text-blue-500\" size={20} />;\n    }\n  };\n\n  const ComparisonCard = ({\n    metric,\n    userValue,\n    friends,\n  }: {\n    metric: string;\n    userValue: number;\n    friends: unknown[];\n  }) => {\n    const allUsers = [\n      { username: 'Vous', value: userValue, isUser: true },\n      ...friends.map((friend, index) => ({\n        username: friend.username,\n        value: friend[metric],\n        isUser: false,\n      })),\n    ].sort((a, b) => b.value - a.value);\n\n    const userRank = allUsers.findIndex(user => user.isUser) + 1;\n    const isTop = userRank <= 3;\n\n    return (\n      <div className=\"bg-white p-4 rounded-xl shadow-sm border border-gray-100\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            {getMetricIcon(metric)}\n            <h3 className=\"font-medium text-gray-800\">{getMetricLabel(metric)}</h3>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            {getRankIcon(userRank)}\n            <span className={`text-sm font-medium ${isTop ? 'text-green-600' : 'text-gray-600'}`}>\n              #{userRank}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"space-y-2\">\n          {allUsers.slice(0, 4).map((user, index) => (\n            <div\n              key={user.username}\n              className={`flex items-center justify-between p-2 rounded-lg ${\n                user.isUser ? 'bg-blue-50 border border-blue-200' : 'bg-gray-50'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <span\n                  className={`text-xs font-medium w-6 text-center ${\n                    index === 0\n                      ? 'text-yellow-600'\n                      : index === 1\n                        ? 'text-gray-600'\n                        : index === 2\n                          ? 'text-orange-600'\n                          : 'text-blue-600'\n                  }`}\n                >\n                  #{index + 1}\n                </span>\n                <span\n                  className={`text-sm ${user.isUser ? 'font-bold text-blue-700' : 'text-gray-700'}`}\n                >\n                  {user.username}\n                </span>\n              </div>\n              <span\n                className={`text-sm font-medium ${user.isUser ? 'text-blue-700' : 'text-gray-600'}`}\n              >\n                {formatValue(metric, user.value)}\n              </span>\n            </div>\n          ))}\n          {allUsers.length > 4 && (\n            <div className=\"text-center text-xs text-gray-500 pt-1\">\n              et {allUsers.length - 4} autres...\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-white p-6 rounded-2xl shadow-sm border border-gray-100\">\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!comparisonData) {\n    return (\n      <div className=\"bg-white p-6 rounded-2xl shadow-sm border border-gray-100\">\n        <div className=\"text-center py-8 text-gray-500\">\n          <Users size={48} className=\"mx-auto mb-4 text-gray-300\" />\n          <p>Données de comparaison non disponibles</p>\n          <p className=\"text-sm\">Ajoutez des amis pour voir les comparaisons</p>\n        </div>\n      </div>\n    );\n  }\n\n  const { user_stats, friends_stats, user_rank } = comparisonData;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header avec sélecteur de période */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6 rounded-2xl\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Users size={24} />\n            <div>\n              <h2 className=\"text-xl font-bold\">Comparaison avec vos amis</h2>\n              <p className=\"text-blue-200\">\n                Votre position dans le groupe cette {period === 'week' ? 'semaine' : 'mois'}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex bg-white/20 rounded-lg p-1\">\n            <button\n              onClick={() => onPeriodChange('week')}\n              className={`px-3 py-1 rounded text-sm font-medium transition-colors ${\n                period === 'week' ? 'bg-white text-blue-600' : 'text-white hover:bg-white/20'\n              }`}\n            >\n              Semaine\n            </button>\n            <button\n              onClick={() => onPeriodChange('month')}\n              className={`px-3 py-1 rounded text-sm font-medium transition-colors ${\n                period === 'month' ? 'bg-white text-blue-600' : 'text-white hover:bg-white/20'\n              }`}\n            >\n              Mois\n            </button>\n          </div>\n        </div>\n\n        {/* Position globale */}\n        <div className=\"mt-4 flex items-center justify-center\">\n          <div className=\"bg-white/20 rounded-lg p-4 text-center\">\n            <div className=\"flex items-center justify-center space-x-2 mb-2\">\n              {getRankIcon(user_rank)}\n              <span className=\"text-2xl font-bold\">#{user_rank}</span>\n            </div>\n            <div className=\"text-blue-200 text-sm\">\n              Position générale parmi {friends_stats.length + 1} amis\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Grille de comparaisons par métrique */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {Object.keys(user_stats).map((metric, index) => (\n          <ComparisonCard\n            key={metric}\n            metric={metric}\n            userValue={user_stats[metric]}\n            friends={friends_stats}\n          />\n        ))}\n      </div>\n\n      {/* Insights et conseils */}\n      <div className=\"bg-white p-6 rounded-2xl shadow-sm border border-gray-100\">\n        <h3 className=\"text-lg font-bold text-gray-800 mb-4 flex items-center\">\n          <Target className=\"mr-2 text-blue-600\" size={20} />\n          Insights de Performance\n        </h3>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"p-4 bg-green-50 rounded-lg\">\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <TrendingUp className=\"text-green-600\" size={16} />\n              <span className=\"text-sm font-medium text-green-700\">Points forts</span>\n            </div>\n            <p className=\"text-sm text-green-600\">\n              {user_rank <= 2\n                ? 'Excellent ! Vous êtes dans le top du groupe'\n                : 'Votre consistance en hydratation vous place bien'}\n            </p>\n          </div>\n\n          <div className=\"p-4 bg-blue-50 rounded-lg\">\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <Target className=\"text-blue-600\" size={16} />\n              <span className=\"text-sm font-medium text-blue-700\">Améliorations</span>\n            </div>\n            <p className=\"text-sm text-blue-600\">\n              {user_rank > 2\n                ? 'Augmentez vos entraînements pour rattraper le groupe'\n                : 'Maintenez ce rythme pour garder votre avance'}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FriendsComparison;\n"],"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","ignoreList":[]}