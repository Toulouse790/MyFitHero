1f66221f1584004504fd39f12a03825c
"use strict";

/* istanbul ignore next */
function cov_14pyyflt26() {
  var path = "/workspaces/MyFitHero/src/features/analytics/components/ProgressCharts.tsx";
  var hash = "3ddfd63eccb2daf9d584f3db8a9548b47f796b29";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/analytics/components/ProgressCharts.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 50
        }
      },
      "4": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 49
        }
      },
      "5": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 418
        }
      },
      "7": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 24
          }
        },
        loc: {
          start: {
            line: 8,
            column: 29
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 8
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/analytics/components/ProgressCharts.tsx",
      mappings: ";;;;;;AAAA,kDAA0B;AAE1B,MAAM,cAAc,GAAa,GAAG,EAAE;IACpC,OAAO,CACL,iCAAK,SAAS,EAAC,KAAK,aAClB,+BAAI,SAAS,EAAC,yBAAyB,2CAA2B,EAClE,gCAAK,SAAS,EAAC,gCAAgC,YAC7C,8BAAG,SAAS,EAAC,eAAe,gFAA0D,GAClF,IACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,cAAc,CAAC",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/analytics/components/ProgressCharts.tsx"],
      sourcesContent: ["import React from 'react';\n\nconst ProgressCharts: React.FC = () => {\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-2xl font-bold mb-4\">Graphiques de Progr\xE8s</h2>\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <p className=\"text-gray-600\">Les graphiques de progr\xE8s seront bient\xF4t disponibles.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressCharts;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3ddfd63eccb2daf9d584f3db8a9548b47f796b29"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14pyyflt26 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14pyyflt26();
var __importDefault =
/* istanbul ignore next */
(cov_14pyyflt26().s[0]++,
/* istanbul ignore next */
(cov_14pyyflt26().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_14pyyflt26().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_14pyyflt26().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_14pyyflt26().f[0]++;
  cov_14pyyflt26().s[1]++;
  return /* istanbul ignore next */(cov_14pyyflt26().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_14pyyflt26().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_14pyyflt26().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_14pyyflt26().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_14pyyflt26().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_14pyyflt26().s[3]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_14pyyflt26().s[4]++, __importDefault(require("react")));
/* istanbul ignore next */
cov_14pyyflt26().s[5]++;
const ProgressCharts = () => {
  /* istanbul ignore next */
  cov_14pyyflt26().f[1]++;
  cov_14pyyflt26().s[6]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: "p-4",
    children: [(0, jsx_runtime_1.jsx)("h2", {
      className: "text-2xl font-bold mb-4",
      children: "Graphiques de Progr\u00E8s"
    }), (0, jsx_runtime_1.jsx)("div", {
      className: "bg-white rounded-lg shadow p-6",
      children: (0, jsx_runtime_1.jsx)("p", {
        className: "text-gray-600",
        children: "Les graphiques de progr\u00E8s seront bient\u00F4t disponibles."
      })
    })]
  });
};
/* istanbul ignore next */
cov_14pyyflt26().s[7]++;
exports.default = ProgressCharts;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiY292XzE0cHl5Zmx0MjYiLCJzIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsIlByb2dyZXNzQ2hhcnRzIiwiZiIsImpzeF9ydW50aW1lXzEiLCJqc3hzIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJqc3giLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL015Rml0SGVyby9zcmMvZmVhdHVyZXMvYW5hbHl0aWNzL2NvbXBvbmVudHMvUHJvZ3Jlc3NDaGFydHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IFByb2dyZXNzQ2hhcnRzOiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInAtNFwiPlxuICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtYm9sZCBtYi00XCI+R3JhcGhpcXVlcyBkZSBQcm9ncsOoczwvaDI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLXdoaXRlIHJvdW5kZWQtbGcgc2hhZG93IHAtNlwiPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNjAwXCI+TGVzIGdyYXBoaXF1ZXMgZGUgcHJvZ3LDqHMgc2Vyb250IGJpZW50w7R0IGRpc3BvbmlibGVzLjwvcD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUHJvZ3Jlc3NDaGFydHM7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsTUFBQUEsT0FBQTtBQUFBO0FBQUEsQ0FBQUMsY0FBQSxHQUFBQyxDQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQTtBQUEwQjtBQUFBSCxjQUFBLEdBQUFDLENBQUE7QUFFMUIsTUFBTUcsY0FBYyxHQUFhQSxDQUFBLEtBQUs7RUFBQTtFQUFBSixjQUFBLEdBQUFLLENBQUE7RUFBQUwsY0FBQSxHQUFBQyxDQUFBO0VBQ3BDLE9BQ0UsSUFBQUssYUFBQSxDQUFBQyxJQUFBO0lBQUtDLFNBQVMsRUFBQyxLQUFLO0lBQUFDLFFBQUEsR0FDbEIsSUFBQUgsYUFBQSxDQUFBSSxHQUFBO01BQUlGLFNBQVMsRUFBQyx5QkFBeUI7TUFBQUMsUUFBQTtJQUFBLEVBQTJCLEVBQ2xFLElBQUFILGFBQUEsQ0FBQUksR0FBQTtNQUFLRixTQUFTLEVBQUMsZ0NBQWdDO01BQUFDLFFBQUEsRUFDN0MsSUFBQUgsYUFBQSxDQUFBSSxHQUFBO1FBQUdGLFNBQVMsRUFBQyxlQUFlO1FBQUFDLFFBQUE7TUFBQTtJQUEwRCxFQUNsRjtFQUFBLEVBQ0Y7QUFFVixDQUFDO0FBQUM7QUFBQVQsY0FBQSxHQUFBQyxDQUFBO0FBRUZVLE9BQUEsQ0FBQUMsT0FBQSxHQUFlUixjQUFjIiwiaWdub3JlTGlzdCI6W119