{"version":3,"names":["zustand_1","cov_h6ydmlluq","s","require","middleware_1","initialState","appStoreUser","isAuthenticated","isLoading","notifications","unreadCount","connectedScales","weightHistory","theme","sidebarCollapsed","activeFeature","exports","appStore","create","persist","set","get","f","setUser","user","updateUser","updates","state","b","setAuthenticated","isAuth","setLoading","loading","updateUserProfile","addConnectedScale","scale","addWeightEntry","entry","addNotification","notification","newNotification","id","Date","now","toString","created_at","toISOString","markNotificationAsRead","map","notif","index","read","Math","max","markAllNotificationsAsRead","removeNotification","find","n","filter","clearAllNotifications","activateModule","moduleId","currentUser","console","error","supabase","Promise","resolve","then","__importStar","currentModules","active_modules","updatedModules","includes","data","from","update","eq","select","single","setTheme","toggleSidebar","setSidebarCollapsed","collapsed","setActiveFeature","feature","reset","init","name","partialize","useAppStoreUser","useAppStoreAuth","useAppStoreNotifications","useAppStoreUI"],"sources":["/workspaces/MyFitHero/src/store/appStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { UserProfile } from '@/shared/types/user';\n\nexport interface Notification {\n  id: string;\n  title: string;\n  message: string;\n  type: 'info' | 'success' | 'warning' | 'error';\n  read: boolean;\n  created_at: string;\n}\n\ninterface AppStoreState {\n  // User state\n  appStoreUser: UserProfile | undefined;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  \n  // Notifications\n  notifications: Notification[];\n  unreadCount: number;\n  \n  // Profile & Weight Management\n  connectedScales: any[];\n  weightHistory: any[];\n  \n  // App state\n  theme: 'light' | 'dark' | 'system';\n  sidebarCollapsed: boolean;\n  activeFeature: string | undefined;\n  \n  // Actions\n  setUser: (user: UserProfile | null) => void;\n  updateUser: (updates: Partial<UserProfile>) => void;\n  updateUserProfile: (updates: Partial<UserProfile>) => void;\n  setAuthenticated: (isAuth: boolean) => void;\n  setLoading: (loading: boolean) => void;\n  \n  // Profile actions\n  addConnectedScale: (scale: any) => void;\n  addWeightEntry: (entry: any) => void;\n  \n  // Notification actions\n  addNotification: (notification: Omit<Notification, 'id' | 'created_at'>) => void;\n  markNotificationAsRead: (id: string) => void;\n  markAllNotificationsAsRead: () => void;\n  removeNotification: (id: string) => void;\n  clearAllNotifications: () => void;\n  \n  // Module actions\n  activateModule: (moduleId: string) => Promise<boolean>;\n  \n  // App actions\n  setTheme: (theme: 'light' | 'dark' | 'system') => void;\n  toggleSidebar: () => void;\n  setSidebarCollapsed: (collapsed: boolean) => void;\n  setActiveFeature: (feature: string | null) => void;\n  \n  // Utility actions\n  reset: () => void;\n  init: () => void;\n}\n\nconst initialState = {\n  appStoreUser: null,\n  isAuthenticated: false,\n  isLoading: false,\n  notifications: [],\n  unreadCount: 0,\n  connectedScales: [],\n  weightHistory: [],\n  theme: 'system' as const,\n  sidebarCollapsed: false,\n  activeFeature: null,\n};\n\nexport const appStore = create<AppStoreState>()(\n  persist(\n    (set, get) => ({\n      ...initialState,\n      \n      // User actions\n      setUser: (user) => set({ \n        appStoreUser: user,\n        isAuthenticated: !!user \n      }),\n      \n      updateUser: (updates) => set((state) => ({\n        appStoreUser: state.appStoreUser \n          ? { ...state.appStoreUser, ...updates }\n          : null\n      })),\n      \n      setAuthenticated: (isAuth) => set({ isAuthenticated: isAuth }),\n      setLoading: (loading) => set({ isLoading: loading }),\n      \n      // Profile actions\n      updateUserProfile: (updates) => set((state) => ({\n        appStoreUser: state.appStoreUser \n          ? { ...state.appStoreUser, ...updates }\n          : null\n      })),\n      \n      addConnectedScale: (scale) => set((state) => ({\n        connectedScales: [...state.connectedScales, scale]\n      })),\n      \n      addWeightEntry: (entry) => set((state) => ({\n        weightHistory: [...state.weightHistory, entry]\n      })),\n      \n      // Notification actions\n      addNotification: (notification) => set((state) => {\n        const newNotification: Notification = {\n          ...notification,\n          id: Date.now().toString(),\n          created_at: new Date().toISOString(),\n        };\n        \n        return {\n          notifications: [newNotification, ...state.notifications],\n          unreadCount: state.unreadCount + 1,\n        };\n      }),\n      \n      markNotificationAsRead: (id) => set((state) => ({\n        notifications: state.notifications.map((notif, index) =>\n          notif.id === id ? { ...notif, read: true } : notif\n        ),\n        unreadCount: Math.max(0, state.unreadCount - 1),\n      })),\n      \n      markAllNotificationsAsRead: () => set((state) => ({\n        notifications: state.notifications.map((notif, index) => ({ ...notif, read: true })),\n        unreadCount: 0,\n      })),\n      \n      removeNotification: (id) => set((state) => {\n        const notification = state.notifications.find(n => n.id === id);\n        return {\n          notifications: state.notifications.filter(notif => notif.id !== id),\n          unreadCount: notification && !notification.read \n            ? Math.max(0, state.unreadCount - 1) \n            : state.unreadCount,\n        };\n      }),\n      \n      clearAllNotifications: () => set({ \n        notifications: [], \n        unreadCount: 0 \n      }),\n      \n      // Module actions\n      activateModule: async (moduleId: string) => {\n        const state = get();\n        const currentUser = state.appStoreUser;\n        \n        if (!currentUser?.id) {\n          console.error('No user found for module activation');\n          return false;\n        }\n        \n        try {\n          // Import supabase dynamically to avoid circular dependencies\n          const { supabase } = await import('@/lib/supabase');\n          \n          // Get current active modules or empty array\n          const currentModules = currentUser.active_modules || [];\n          \n          // Add the new module if not already present\n          const updatedModules = currentModules.includes(moduleId) \n            ? currentModules \n            : [...currentModules, moduleId];\n          \n          // Update user in database\n          const { data, error }: any = await supabase\n            .from('user_profiles')\n            .update({ active_modules: updatedModules })\n            .eq('id', currentUser.id)\n            .select()\n            .single();\n          \n          if (error) {\n            console.error('Error activating module:', error);\n            return false;\n          }\n          \n          // Update local store\n          set((state) => ({\n            appStoreUser: state.appStoreUser \n              ? { ...state.appStoreUser, active_modules: updatedModules }\n              : null\n          }));\n          \n          return true;\n        } catch (error: any) {\n          console.error('Error activating module:', error);\n          return false;\n        }\n      },\n      \n      // App actions\n      setTheme: (theme) => set({ theme }),\n      \n      toggleSidebar: () => set((state) => ({ \n        sidebarCollapsed: !state.sidebarCollapsed \n      })),\n      \n      setSidebarCollapsed: (collapsed) => set({ sidebarCollapsed: collapsed }),\n      \n      setActiveFeature: (feature) => set({ activeFeature: feature }),\n      \n      // Utility actions\n      reset: () => set(initialState),\n      \n      init: () => {\n        // Initialize app state, check auth, etc.\n        set((state) => ({\n          ...state,\n          isLoading: false,\n        }));\n      },\n    }),\n    {\n      name: 'myfithero-app-store',\n      partialize: (state) => ({\n        appStoreUser: state.appStoreUser,\n        isAuthenticated: state.isAuthenticated,\n        theme: state.theme,\n        sidebarCollapsed: state.sidebarCollapsed,\n        // Don't persist notifications and loading state\n      }),\n    }\n  )\n);\n\n// Selectors for better performance\nexport const useAppStoreUser = () => appStore((state) => state.appStoreUser);\nexport const useAppStoreAuth = () => appStore((state) => ({\n  isAuthenticated: state.isAuthenticated,\n  isLoading: state.isLoading,\n}));\nexport const useAppStoreNotifications = () => appStore((state) => ({\n  notifications: state.notifications,\n  unreadCount: state.unreadCount,\n}));\nexport const useAppStoreUI = () => appStore((state) => ({\n  theme: state.theme,\n  sidebarCollapsed: state.sidebarCollapsed,\n  activeFeature: state.activeFeature,\n}));"],"mappingsaAAA,GAAAC,CAAA,QAAAC,OAAA;AACA,MAAAC,YAAA;AAAA;AAAA,CAAAH,aAAA,GAAAC,CAAA,QAAAC,OAAA;AA+DA,MAAME,YAAY;AAAA;AAAA,CAAAJ,aAAA,GAAAC,CAAA,QAAG;EACnBI,YAAY,EAAE,IAAI;EAClBC,eAAe,EAAE,KAAK;EACtBC,SAAS,EAAE,KAAK;EAChBC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE,CAAC;EACdC,eAAe,EAAE,EAAE;EACnBC,aAAa,EAAE,EAAE;EACjBC,KAAK,EAAE,QAAiB;EACxBC,gBAAgB,EAAE,KAAK;EACvBC,aAAa,EAAE;CAChB;AAAC;AAAAd,aAAA,GAAAC,CAAA;AAEWc,OAAA,CAAAC,QAAQ,GAAG,IAAAjB,SAAA,CAAAkB,MAAM,GAAiB,CAC7C,IAAAd,YAAA,CAAAe,OAAO,EACL,CAACC,GAAG,EAAEC,GAAG,KAAM;EAAA;EAAApB,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAC,CAAA;EAAA;IACb,GAAGG,YAAY;IAEf;IACAkB,OAAO,EAAGC,IAAI,IAAK;MAAA;MAAAvB,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAC;QACrBd,YAAY,EAAEkB,IAAI;QAClBjB,eAAe,EAAE,CAAC,CAACiB;OACpB,CAAC;IAAD,CAAC;IAEFC,UAAU,EAAGC,OAAO,IAAK;MAAA;MAAAzB,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAEO,KAAK,IAAM;QAAA;QAAA1B,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAC,CAAA;QAAA;UACvCI,YAAY,EAAEqB,KAAK,CAACrB,YAAY;UAAA;UAAA,CAAAL,aAAA,GAAA2B,CAAA,WAC5B;YAAE,GAAGD,KAAK,CAACrB,YAAY;YAAE,GAAGoB;UAAO,CAAE;UAAA;UAAA,CAAAzB,aAAA,GAAA2B,CAAA,WACrC,IAAI;SACT;OAAC,CAAC;IAAD,CAAC;IAEHC,gBAAgB,EAAGC,MAAM,IAAK;MAAA;MAAA7B,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAC;QAAEb,eAAe,EAAEuB;MAAM,CAAE,CAAC;IAAD,CAAC;IAC9DC,UAAU,EAAGC,OAAO,IAAK;MAAA;MAAA/B,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAC;QAAEZ,SAAS,EAAEwB;MAAO,CAAE,CAAC;IAAD,CAAC;IAEpD;IACAC,iBAAiB,EAAGP,OAAO,IAAK;MAAA;MAAAzB,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAEO,KAAK,IAAM;QAAA;QAAA1B,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAC,CAAA;QAAA;UAC9CI,YAAY,EAAEqB,KAAK,CAACrB,YAAY;UAAA;UAAA,CAAAL,aAAA,GAAA2B,CAAA,WAC5B;YAAE,GAAGD,KAAK,CAACrB,YAAY;YAAE,GAAGoB;UAAO,CAAE;UAAA;UAAA,CAAAzB,aAAA,GAAA2B,CAAA,WACrC,IAAI;SACT;OAAC,CAAC;IAAD,CAAC;IAEHM,iBAAiB,EAAGC,KAAK,IAAK;MAAA;MAAAlC,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAEO,KAAK,IAAM;QAAA;QAAA1B,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAC,CAAA;QAAA;UAC5CS,eAAe,EAAE,CAAC,GAAGgB,KAAK,CAAChB,eAAe,EAAEwB,KAAK;SAClD;OAAC,CAAC;IAAD,CAAC;IAEHC,cAAc,EAAGC,KAAK,IAAK;MAAA;MAAApC,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAEO,KAAK,IAAM;QAAA;QAAA1B,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAC,CAAA;QAAA;UACzCU,aAAa,EAAE,CAAC,GAAGe,KAAK,CAACf,aAAa,EAAEyB,KAAK;SAC9C;OAAC,CAAC;IAAD,CAAC;IAEH;IACAC,eAAe,EAAGC,YAAY,IAAK;MAAA;MAAAtC,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAEO,KAAK,IAAI;QAAA;QAAA1B,aAAA,GAAAqB,CAAA;QAC/C,MAAMkB,eAAe;QAAA;QAAA,CAAAvC,aAAA,GAAAC,CAAA,QAAiB;UACpC,GAAGqC,YAAY;UACfE,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ,EAAE;UACzBC,UAAU,EAAE,IAAIH,IAAI,EAAE,CAACI,WAAW;SACnC;QAAC;QAAA7C,aAAA,GAAAC,CAAA;QAEF,OAAO;UACLO,aAAa,EAAE,CAAC+B,eAAe,EAAE,GAAGb,KAAK,CAAClB,aAAa,CAAC;UACxDC,WAAW,EAAEiB,KAAK,CAACjB,WAAW,GAAG;SAClC;MACH,CAAC,CAAC;IAAD,CAAC;IAEFqC,sBAAsB,EAAGN,EAAE,IAAK;MAAA;MAAAxC,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAEO,KAAK,IAAM;QAAA;QAAA1B,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAC,CAAA;QAAA;UAC9CO,aAAa,EAAEkB,KAAK,CAAClB,aAAa,CAACuC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAClD;YAAA;YAAAjD,aAAA,GAAAqB,CAAA;YAAArB,aAAA,GAAAC,CAAA;YAAA,OAAA+C,KAAK,CAACR,EAAE,KAAKA,EAAE;YAAA;YAAA,CAAAxC,aAAA,GAAA2B,CAAA,WAAG;cAAE,GAAGqB,KAAK;cAAEE,IAAI,EAAE;YAAI,CAAE;YAAA;YAAA,CAAAlD,aAAA,GAAA2B,CAAA,WAAGqB,KAAK;UAAL,CAAK,CACnD;UACDvC,WAAW,EAAE0C,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE1B,KAAK,CAACjB,WAAW,GAAG,CAAC;SAC/C;OAAC,CAAC;IAAD,CAAC;IAEH4C,0BAA0B,EAAEA,CAAA,KAAM;MAAA;MAAArD,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAEO,KAAK,IAAM;QAAA;QAAA1B,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAC,CAAA;QAAA;UAChDO,aAAa,EAAEkB,KAAK,CAAClB,aAAa,CAACuC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAM;YAAA;YAAAjD,aAAA,GAAAqB,CAAA;YAAArB,aAAA,GAAAC,CAAA;YAAA;cAAE,GAAG+C,KAAK;cAAEE,IAAI,EAAE;YAAI,CAAE;UAAF,CAAG,CAAC;UACpFzC,WAAW,EAAE;SACd;OAAC,CAAC;IAAD,CAAC;IAEH6C,kBAAkB,EAAGd,EAAE,IAAK;MAAA;MAAAxC,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAEO,KAAK,IAAI;QAAA;QAAA1B,aAAA,GAAAqB,CAAA;QACxC,MAAMiB,YAAY;QAAA;QAAA,CAAAtC,aAAA,GAAAC,CAAA,QAAGyB,KAAK,CAAClB,aAAa,CAAC+C,IAAI,CAACC,CAAC,IAAI;UAAA;UAAAxD,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAC,CAAA;UAAA,OAAAuD,CAAC,CAAChB,EAAE,KAAKA,EAAE;QAAF,CAAE,CAAC;QAAC;QAAAxC,aAAA,GAAAC,CAAA;QAChE,OAAO;UACLO,aAAa,EAAEkB,KAAK,CAAClB,aAAa,CAACiD,MAAM,CAACT,KAAK,IAAI;YAAA;YAAAhD,aAAA,GAAAqB,CAAA;YAAArB,aAAA,GAAAC,CAAA;YAAA,OAAA+C,KAAK,CAACR,EAAE,KAAKA,EAAE;UAAF,CAAE,CAAC;UACnE/B,WAAW;UAAE;UAAA,CAAAT,aAAA,GAAA2B,CAAA,WAAAW,YAAY;UAAA;UAAA,CAAAtC,aAAA,GAAA2B,CAAA,WAAI,CAACW,YAAY,CAACY,IAAI;UAAA;UAAA,CAAAlD,aAAA,GAAA2B,CAAA,WAC3CwB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE1B,KAAK,CAACjB,WAAW,GAAG,CAAC,CAAC;UAAA;UAAA,CAAAT,aAAA,GAAA2B,CAAA,WAClCD,KAAK,CAACjB,WAAW;SACtB;MACH,CAAC,CAAC;IAAD,CAAC;IAEFiD,qBAAqB,EAAEA,CAAA,KAAM;MAAA;MAAA1D,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAC;QAC/BX,aAAa,EAAE,EAAE;QACjBC,WAAW,EAAE;OACd,CAAC;IAAD,CAAC;IAEF;IACAkD,cAAc,EAAE,MAAOC,QAAgB,IAAI;MAAA;MAAA5D,aAAA,GAAAqB,CAAA;MACzC,MAAMK,KAAK;MAAA;MAAA,CAAA1B,aAAA,GAAAC,CAAA,QAAGmB,GAAG,EAAE;MACnB,MAAMyC,WAAW;MAAA;MAAA,CAAA7D,aAAA,GAAAC,CAAA,QAAGyB,KAAK,CAACrB,YAAY;MAAC;MAAAL,aAAA,GAAAC,CAAA;MAEvC,IAAI,CAAC4D,WAAW,EAAErB,EAAE,EAAE;QAAA;QAAAxC,aAAA,GAAA2B,CAAA;QAAA3B,aAAA,GAAAC,CAAA;QACpB6D,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;QAAC;QAAA/D,aAAA,GAAAC,CAAA;QACrD,OAAO,KAAK;MACd,CAAC;MAAA;MAAA;QAAAD,aAAA,GAAA2B,CAAA;MAAA;MAAA3B,aAAA,GAAAC,CAAA;MAED,IAAI;QACF;QACA,MAAM;UAAE+D;QAAQ,CAAE;QAAA;QAAA,CAAAhE,aAAA,GAAAC,CAAA,QAAG,MAAAgE,OAAA,CAAAC,OAAA,GAAAC,IAAA;UAAA;UAAAnE,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAC,CAAA;UAAA,OAAAmE,YAAA,CAAAlE,OAAA,CAAa,gBAAgB;QAAA,EAAC;QAEnD;QACA,MAAMmE,cAAc;QAAA;QAAA,CAAArE,aAAA,GAAAC,CAAA;QAAG;QAAA,CAAAD,aAAA,GAAA2B,CAAA,WAAAkC,WAAW,CAACS,cAAc;QAAA;QAAA,CAAAtE,aAAA,GAAA2B,CAAA,WAAI,EAAE;QAEvD;QACA,MAAM4C,cAAc;QAAA;QAAA,CAAAvE,aAAA,GAAAC,CAAA,QAAGoE,cAAc,CAACG,QAAQ,CAACZ,QAAQ,CAAC;QAAA;QAAA,CAAA5D,aAAA,GAAA2B,CAAA,WACpD0C,cAAc;QAAA;QAAA,CAAArE,aAAA,GAAA2B,CAAA,WACd,CAAC,GAAG0C,cAAc,EAAET,QAAQ,CAAC;QAEjC;QACA,MAAM;UAAEa,IAAI;UAAEV;QAAK,CAAE;QAAA;QAAA,CAAA/D,aAAA,GAAAC,CAAA,QAAQ,MAAM+D,QAAQ,CACxCU,IAAI,CAAC,eAAe,CAAC,CACrBC,MAAM,CAAC;UAAEL,cAAc,EAAEC;QAAc,CAAE,CAAC,CAC1CK,EAAE,CAAC,IAAI,EAAEf,WAAW,CAACrB,EAAE,CAAC,CACxBqC,MAAM,EAAE,CACRC,MAAM,EAAE;QAAC;QAAA9E,aAAA,GAAAC,CAAA;QAEZ,IAAI8D,KAAK,EAAE;UAAA;UAAA/D,aAAA,GAAA2B,CAAA;UAAA3B,aAAA,GAAAC,CAAA;UACT6D,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAAC;UAAA/D,aAAA,GAAAC,CAAA;UACjD,OAAO,KAAK;QACd,CAAC;QAAA;QAAA;UAAAD,aAAA,GAAA2B,CAAA;QAAA;QAED;QAAA3B,aAAA,GAAAC,CAAA;QACAkB,GAAG,CAAEO,KAAK,IAAM;UAAA;UAAA1B,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAC,CAAA;UAAA;YACdI,YAAY,EAAEqB,KAAK,CAACrB,YAAY;YAAA;YAAA,CAAAL,aAAA,GAAA2B,CAAA,WAC5B;cAAE,GAAGD,KAAK,CAACrB,YAAY;cAAEiE,cAAc,EAAEC;YAAc,CAAE;YAAA;YAAA,CAAAvE,aAAA,GAAA2B,CAAA,WACzD,IAAI;WACT;SAAC,CAAC;QAAC;QAAA3B,aAAA,GAAAC,CAAA;QAEJ,OAAO,IAAI;MACb,CAAC,CAAC,OAAO8D,KAAU,EAAE;QAAA;QAAA/D,aAAA,GAAAC,CAAA;QACnB6D,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAAC;QAAA/D,aAAA,GAAAC,CAAA;QACjD,OAAO,KAAK;MACd;IACF,CAAC;IAED;IACA8E,QAAQ,EAAGnE,KAAK,IAAK;MAAA;MAAAZ,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAC;QAAEP;MAAK,CAAE,CAAC;IAAD,CAAC;IAEnCoE,aAAa,EAAEA,CAAA,KAAM;MAAA;MAAAhF,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAEO,KAAK,IAAM;QAAA;QAAA1B,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAC,CAAA;QAAA;UACnCY,gBAAgB,EAAE,CAACa,KAAK,CAACb;SAC1B;OAAC,CAAC;IAAD,CAAC;IAEHoE,mBAAmB,EAAGC,SAAS,IAAK;MAAA;MAAAlF,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAC;QAAEN,gBAAgB,EAAEqE;MAAS,CAAE,CAAC;IAAD,CAAC;IAExEC,gBAAgB,EAAGC,OAAO,IAAK;MAAA;MAAApF,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAAC;QAAEL,aAAa,EAAEsE;MAAO,CAAE,CAAC;IAAD,CAAC;IAE9D;IACAC,KAAK,EAAEA,CAAA,KAAM;MAAA;MAAArF,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MAAA,OAAAkB,GAAG,CAACf,YAAY,CAAC;IAAD,CAAC;IAE9BkF,IAAI,EAAEA,CAAA,KAAK;MAAA;MAAAtF,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAC,CAAA;MACT;MACAkB,GAAG,CAAEO,KAAK,IAAM;QAAA;QAAA1B,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAC,CAAA;QAAA;UACd,GAAGyB,KAAK;UACRnB,SAAS,EAAE;SACZ;OAAC,CAAC;IACL;GACD;CAAC,EACF;EACEgF,IAAI,EAAE,qBAAqB;EAC3BC,UAAU,EAAG9D,KAAK,IAAM;IAAA;IAAA1B,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAC,CAAA;IAAA;MACtBI,YAAY,EAAEqB,KAAK,CAACrB,YAAY;MAChCC,eAAe,EAAEoB,KAAK,CAACpB,eAAe;MACtCM,KAAK,EAAEc,KAAK,CAACd,KAAK;MAClBC,gBAAgB,EAAEa,KAAK,CAACb;MACxB;KACD;;CACF,CACF,CACF;AAED;AAAA;AAAAb,aAAA,GAAAC,CAAA;AACO,MAAMwF,eAAe,GAAGA,CAAA,KAAM;EAAA;EAAAzF,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAC,CAAA;EAAA,WAAAc,OAAA,CAAAC,QAAQ,EAAEU,KAAK,IAAK;IAAA;IAAA1B,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAC,CAAA;IAAA,OAAAyB,KAAK,CAACrB,YAAY;EAAZ,CAAY,CAAC;AAAD,CAAC;AAAC;AAAAL,aAAA,GAAAC,CAAA;AAAhEc,OAAA,CAAA0E,eAAe,GAAAA,eAAA;AAAiD;AAAAzF,aAAA,GAAAC,CAAA;AACtE,MAAMyF,eAAe,GAAGA,CAAA,KAAM;EAAA;EAAA1F,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAC,CAAA;EAAA,WAAAc,OAAA,CAAAC,QAAQ,EAAEU,KAAK,IAAM;IAAA;IAAA1B,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAC,CAAA;IAAA;MACxDK,eAAe,EAAEoB,KAAK,CAACpB,eAAe;MACtCC,SAAS,EAAEmB,KAAK,CAACnB;KAClB;GAAC,CAAC;AAAD,CAAC;AAAC;AAAAP,aAAA,GAAAC,CAAA;AAHSc,OAAA,CAAA2E,eAAe,GAAAA,eAAA;AAGxB;AAAA1F,aAAA,GAAAC,CAAA;AACG,MAAM0F,wBAAwB,GAAGA,CAAA,KAAM;EAAA;EAAA3F,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAC,CAAA;EAAA,WAAAc,OAAA,CAAAC,QAAQ,EAAEU,KAAK,IAAM;IAAA;IAAA1B,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAC,CAAA;IAAA;MACjEO,aAAa,EAAEkB,KAAK,CAAClB,aAAa;MAClCC,WAAW,EAAEiB,KAAK,CAACjB;KACpB;GAAC,CAAC;AAAD,CAAC;AAAC;AAAAT,aAAA,GAAAC,CAAA;AAHSc,OAAA,CAAA4E,wBAAwB,GAAAA,wBAAA;AAGjC;AAAA3F,aAAA,GAAAC,CAAA;AACG,MAAM2F,aAAa,GAAGA,CAAA,KAAM;EAAA;EAAA5F,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAC,CAAA;EAAA,WAAAc,OAAA,CAAAC,QAAQ,EAAEU,KAAK,IAAM;IAAA;IAAA1B,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAC,CAAA;IAAA;MACtDW,KAAK,EAAEc,KAAK,CAACd,KAAK;MAClBC,gBAAgB,EAAEa,KAAK,CAACb,gBAAgB;MACxCC,aAAa,EAAEY,KAAK,CAACZ;KACtB;GAAC,CAAC;AAAD,CAAC;AAAC;AAAAd,aAAA,GAAAC,CAAA;AAJSc,OAAA,CAAA6E,aAAa,GAAAA,aAAA","ignoreList":[]}