3e44cbaabd6b09ec1d7c07ded10b6f9d
"use strict";

// Service pour le module landing
/* istanbul ignore next */
function cov_i5c7grpyq() {
  var path = "/workspaces/MyFitHero/src/features/landing/services/landing.service.ts";
  var hash = "5e75ec0a81742230d66f4fae1bf919aad0b18da1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/landing/services/landing.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "3": {
        start: {
          line: 9,
          column: 29
        },
        end: {
          line: 9,
          column: 70
        }
      },
      "4": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 11,
          column: 78
        }
      },
      "5": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 78
        }
      },
      "6": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 41
        }
      },
      "7": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 56
        }
      },
      "8": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 45
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "10": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 26,
          column: 14
        }
      },
      "11": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "12": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "14": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 64
        }
      },
      "15": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 24
        }
      },
      "16": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "17": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "18": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 54,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 40
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 45
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 38
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 11,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 11,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 28,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 28,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/landing/services/landing.service.ts",
      mappings: ";AAAA,iCAAiC;;;AAEjC,MAAa,cAAc;IAGzB,mBAAmB;IACnB,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,MAAc;QACxC,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE,CAAC,CAAC;YAC3D,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;YAChF,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,qBAAqB;YACrB,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;IACH,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAc,EAAE,IAAS;QAClD,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE,EAAE;gBACzD,MAAM,EAAE,KAAK;gBACb,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;gBAC/C,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aAC3B,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAAE,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;YACnE,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,qBAAqB;YACrB,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;YACpD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED,kBAAkB;IACV,MAAM,CAAC,kBAAkB;QAC/B,OAAO;YACL,EAAE,EAAE,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE;YAChC,MAAM,EAAE,UAAU;YAClB,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACpC,CAAC;IACJ,CAAC;;AAzCH,wCA0CC;AAzCyB;;;;WAAW,cAAc;GAAC",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/landing/services/landing.service.ts"],
      sourcesContent: ["// Service pour le module landing\n\nexport class LandingService {\n  private static readonly BASE_URL = '/api/landing';\n\n  // M\xE9thodes de base\n  static async getLandingData(userId: string): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`);\n      if (!response.ok) throw new Error('Erreur lors de la r\xE9cup\xE9ration des donn\xE9es');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur API landing:', error);\n      return this.getMockLandingData();\n    }\n  }\n\n  static async updateLanding(userId: string, data: any): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) throw new Error('Erreur lors de la mise \xE0 jour');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur mise \xE0 jour landing:', error);\n      throw error;\n    }\n  }\n\n  // Donn\xE9es de mock\n  private static getMockLandingData(): any {\n    return {\n      id: 'mock_landing_' + Date.now(),\n      userId: 'user_123',\n      data: {},\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    };\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5e75ec0a81742230d66f4fae1bf919aad0b18da1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_i5c7grpyq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_i5c7grpyq();
cov_i5c7grpyq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_i5c7grpyq().s[1]++;
exports.LandingService = void 0;
class LandingService {
  // Méthodes de base
  static async getLandingData(userId) {
    /* istanbul ignore next */
    cov_i5c7grpyq().f[0]++;
    cov_i5c7grpyq().s[2]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_i5c7grpyq().s[3]++, await fetch(`${this.BASE_URL}/${userId}`));
      /* istanbul ignore next */
      cov_i5c7grpyq().s[4]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_i5c7grpyq().b[0][0]++;
        cov_i5c7grpyq().s[5]++;
        throw new Error('Erreur lors de la récupération des données');
      } else
      /* istanbul ignore next */
      {
        cov_i5c7grpyq().b[0][1]++;
      }
      cov_i5c7grpyq().s[6]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_i5c7grpyq().s[7]++;
      // Erreur silencieuse
      console.error('Erreur API landing:', error);
      /* istanbul ignore next */
      cov_i5c7grpyq().s[8]++;
      return this.getMockLandingData();
    }
  }
  static async updateLanding(userId, data) {
    /* istanbul ignore next */
    cov_i5c7grpyq().f[1]++;
    cov_i5c7grpyq().s[9]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_i5c7grpyq().s[10]++, await fetch(`${this.BASE_URL}/${userId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      }));
      /* istanbul ignore next */
      cov_i5c7grpyq().s[11]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_i5c7grpyq().b[1][0]++;
        cov_i5c7grpyq().s[12]++;
        throw new Error('Erreur lors de la mise à jour');
      } else
      /* istanbul ignore next */
      {
        cov_i5c7grpyq().b[1][1]++;
      }
      cov_i5c7grpyq().s[13]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_i5c7grpyq().s[14]++;
      // Erreur silencieuse
      console.error('Erreur mise à jour landing:', error);
      /* istanbul ignore next */
      cov_i5c7grpyq().s[15]++;
      throw error;
    }
  }
  // Données de mock
  static getMockLandingData() {
    /* istanbul ignore next */
    cov_i5c7grpyq().f[2]++;
    cov_i5c7grpyq().s[16]++;
    return {
      id: 'mock_landing_' + Date.now(),
      userId: 'user_123',
      data: {},
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
  }
}
/* istanbul ignore next */
cov_i5c7grpyq().s[17]++;
exports.LandingService = LandingService;
/* istanbul ignore next */
cov_i5c7grpyq().s[18]++;
Object.defineProperty(LandingService, "BASE_URL", {
  enumerable: true,
  configurable: true,
  writable: true,
  value: '/api/landing'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,