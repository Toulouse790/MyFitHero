{"version":3,"names":["react_1","cov_1jca2h9and","s","__importStar","require","card_1","badge_1","lucide_react_1","marketing_analytics_service_1","MetricCard","title","value","change","changeLabel","icon","trend","format","b","f","formatValue","val","toFixed","Math","round","toLocaleString","getTrendIcon","jsx_runtime_1","jsx","TrendingUp","className","TrendingDown","getTrendColor","jsxs","Card","children","CardHeader","CardTitle","CardContent","undefined","LandingAnalyticsDashboard","metrics","setMetrics","useState","loading","setLoading","error","setError","useEffect","loadMetrics","data","marketingAnalytics","getLandingMetrics","err","Error","message","interval","setInterval","clearInterval","Array","map","_","i","Badge","variant","totalViews","Eye","uniqueVisitors","Users","conversionRate","Target","bounceRate","Zap","averageSessionTime","Timer","ctaClickRate","MousePointer","signupRate","revenuePerVisitor","DollarSign","step","count","percentage","trialStartRate","paidConversionRate","item","index","style","width","exports","default"],"sources":["/workspaces/MyFitHero/src/features/landing/components/LandingAnalyticsDashboard.tsx"],"sourcesContent":["// Landing Page Analytics Dashboard Component\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  TrendingUp, \n  TrendingDown, \n  Users, \n  MousePointer, \n  DollarSign, \n  Eye,\n  Timer,\n  Target,\n  Zap,\n} from 'lucide-react';\nimport { marketingAnalytics, LandingPageMetrics } from '../services/marketing-analytics.service';\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  change?: number;\n  changeLabel?: string;\n  icon: React.ReactNode;\n  trend?: 'up' | 'down' | 'neutral';\n  format?: 'number' | 'percentage' | 'currency' | 'time';\n}\n\nconst MetricCard: React.FC<MetricCardProps> = ({\n  title,\n  value,\n  change,\n  changeLabel,\n  icon,\n  trend,\n  format = 'number'\n}) => {\n  const formatValue = (val: string | number) => {\n    if (typeof val === 'string') return val;\n    \n    switch (format) {\n      case 'percentage':\n        return `${val.toFixed(1)}%`;\n      case 'currency':\n        return `${val.toFixed(2)}€`;\n      case 'time':\n        return `${Math.round(val)}s`;\n      default:\n        return val.toLocaleString();\n    }\n  };\n\n  const getTrendIcon = () => {\n    if (!change) return null;\n    if (trend === 'up') return <TrendingUp className=\"w-4 h-4 text-green-500\" />;\n    if (trend === 'down') return <TrendingDown className=\"w-4 h-4 text-red-500\" />;\n    return null;\n  };\n\n  const getTrendColor = () => {\n    if (trend === 'up') return 'text-green-600';\n    if (trend === 'down') return 'text-red-600';\n    return 'text-gray-600';\n  };\n\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-gray-600\">\n          {title}\n        </CardTitle>\n        <div className=\"text-gray-400\">\n          {icon}\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold text-gray-900\">\n          {formatValue(value)}\n        </div>\n        {change !== undefined && (\n          <div className={`flex items-center text-xs ${getTrendColor()} mt-1`}>\n            {getTrendIcon()}\n            <span className=\"ml-1\">\n              {change > 0 ? '+' : ''}{change.toFixed(1)}% {changeLabel || 'vs mois dernier'}\n            </span>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\ninterface LandingAnalyticsDashboardProps {\n  className?: string;\n}\n\nexport const LandingAnalyticsDashboard: React.FC<LandingAnalyticsDashboardProps> = ({\n  className = ''\n}) => {\n  const [metrics, setMetrics] = useState<LandingPageMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadMetrics = async () => {\n      try {\n        setLoading(true);\n        const data = await marketingAnalytics.getLandingMetrics();\n        setMetrics(data);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load metrics');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadMetrics();\n    \n    // Refresh metrics every 5 minutes\n    const interval = setInterval(loadMetrics, 5 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  if (loading) {\n    return (\n      <div className={`space-y-6 ${className}`}>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {[...Array(8)].map((_, i) => (\n            <Card key={i} className=\"animate-pulse\">\n              <CardHeader>\n                <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-8 bg-gray-200 rounded w-1/2\"></div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !metrics) {\n    return (\n      <div className={`text-center py-12 ${className}`}>\n        <div className=\"text-gray-500\">\n          {error || 'Aucune donnée disponible'}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">\n            Analytics Landing Page\n          </h2>\n          <p className=\"text-gray-600\">\n            Performance en temps réel de votre page d'accueil\n          </p>\n        </div>\n        <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200\">\n          Live\n        </Badge>\n      </div>\n\n      {/* Metrics Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <MetricCard\n          title=\"Visiteurs totaux\"\n          value={metrics.totalViews}\n          change={12.5}\n          icon={<Eye className=\"w-4 h-4\" />}\n          trend=\"up\"\n        />\n        \n        <MetricCard\n          title=\"Visiteurs uniques\"\n          value={metrics.uniqueVisitors}\n          change={8.2}\n          icon={<Users className=\"w-4 h-4\" />}\n          trend=\"up\"\n        />\n        \n        <MetricCard\n          title=\"Taux de conversion\"\n          value={metrics.conversionRate}\n          change={-2.1}\n          icon={<Target className=\"w-4 h-4\" />}\n          trend=\"down\"\n          format=\"percentage\"\n        />\n        \n        <MetricCard\n          title=\"Taux de rebond\"\n          value={metrics.bounceRate}\n          change={-5.8}\n          icon={<Zap className=\"w-4 h-4\" />}\n          trend=\"up\"\n          format=\"percentage\"\n        />\n        \n        <MetricCard\n          title=\"Temps moyen\"\n          value={metrics.averageSessionTime}\n          change={15.3}\n          icon={<Timer className=\"w-4 h-4\" />}\n          trend=\"up\"\n          format=\"time\"\n        />\n        \n        <MetricCard\n          title=\"Clics CTA\"\n          value={metrics.ctaClickRate}\n          change={23.7}\n          icon={<MousePointer className=\"w-4 h-4\" />}\n          trend=\"up\"\n          format=\"percentage\"\n        />\n        \n        <MetricCard\n          title=\"Inscriptions\"\n          value={metrics.signupRate}\n          change={18.9}\n          icon={<Users className=\"w-4 h-4\" />}\n          trend=\"up\"\n          format=\"percentage\"\n        />\n        \n        <MetricCard\n          title=\"Revenus / visiteur\"\n          value={metrics.revenuePerVisitor}\n          change={7.4}\n          icon={<DollarSign className=\"w-4 h-4\" />}\n          trend=\"up\"\n          format=\"currency\"\n        />\n      </div>\n\n      {/* Conversion Funnel */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Tunnel de conversion</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {[\n              { step: 'Visiteurs', count: metrics.totalViews, percentage: 100 },\n              { step: 'Engagés (scroll >50%)', count: Math.round(metrics.totalViews * 0.6), percentage: 60 },\n              { step: 'Clics CTA', count: Math.round(metrics.totalViews * metrics.ctaClickRate / 100), percentage: metrics.ctaClickRate },\n              { step: 'Inscriptions', count: Math.round(metrics.totalViews * metrics.signupRate / 100), percentage: metrics.signupRate },\n              { step: 'Essais démarrés', count: Math.round(metrics.totalViews * metrics.trialStartRate / 100), percentage: metrics.trialStartRate },\n              { step: 'Conversions payantes', count: Math.round(metrics.totalViews * metrics.paidConversionRate / 100), percentage: metrics.paidConversionRate },\n            ].map((item, index) => (\n              <div key={item.step} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-2 h-2 rounded-full bg-blue-500\"></div>\n                  <span className=\"font-medium\">{item.step}</span>\n                </div>\n                <div className=\"flex items-center space-x-4\">\n                  <span className=\"text-gray-600\">{item.count.toLocaleString()}</span>\n                  <div className=\"w-32 bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-blue-500 h-2 rounded-full\" \n                      style={{ width: `${item.percentage}%` }}\n                    ></div>\n                  </div>\n                  <span className=\"w-12 text-right text-sm text-gray-500\">\n                    {item.percentage.toFixed(1)}%\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default LandingAnalyticsDashboard;"],"mappingscAAA,GAAAC,CAAA,QAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,MAAA;AAAA;AAAA,CAAAJ,cAAA,GAAAC,CAAA,QAAAE,OAAA;AACA,MAAAE,OAAA;AAAA;AAAA,CAAAL,cAAA,GAAAC,CAAA,QAAAE,OAAA;AACA,MAAAG,cAAA;AAAA;AAAA,CAAAN,cAAA,GAAAC,CAAA,QAAAE,OAAA;AAWA,MAAAI,6BAAA;AAAA;AAAA,CAAAP,cAAA,GAAAC,CAAA,QAAAE,OAAA;AAAiG;AAAAH,cAAA,GAAAC,CAAA;AAYjG,MAAMO,UAAU,GAA8BA,CAAC;EAC7CC,KAAK;EACLC,KAAK;EACLC,MAAM;EACNC,WAAW;EACXC,IAAI;EACJC,KAAK;EACLC,MAAM;EAAA;EAAA,CAAAf,cAAA,GAAAgB,CAAA,WAAG,QAAQ;AAAA,CAClB,KAAI;EAAA;EAAAhB,cAAA,GAAAiB,CAAA;EAAAjB,cAAA,GAAAC,CAAA;EACH,MAAMiB,WAAW,GAAIC,GAAoB,IAAI;IAAA;IAAAnB,cAAA,GAAAiB,CAAA;IAAAjB,cAAA,GAAAC,CAAA;IAC3C,IAAI,OAAOkB,GAAG,KAAK,QAAQ,EAAE;MAAA;MAAAnB,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAAA,OAAOkB,GAAG;IAAA,CAAC;IAAA;IAAA;MAAAnB,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IAExC,QAAQc,MAAM;MACZ,KAAK,YAAY;QAAA;QAAAf,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACf,OAAO,GAAGkB,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG;MAC7B,KAAK,UAAU;QAAA;QAAApB,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACb,OAAO,GAAGkB,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG;MAC7B,KAAK,MAAM;QAAA;QAAApB,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACT,OAAO,GAAGoB,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC,GAAG;MAC9B;QAAA;QAAAnB,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACE,OAAOkB,GAAG,CAACI,cAAc,EAAE;IAC/B;EACF,CAAC;EAAC;EAAAvB,cAAA,GAAAC,CAAA;EAEF,MAAMuB,YAAY,GAAGA,CAAA,KAAK;IAAA;IAAAxB,cAAA,GAAAiB,CAAA;IAAAjB,cAAA,GAAAC,CAAA;IACxB,IAAI,CAACU,MAAM,EAAE;MAAA;MAAAX,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAAA,OAAO,IAAI;IAAA,CAAC;IAAA;IAAA;MAAAD,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IACzB,IAAIa,KAAK,KAAK,IAAI,EAAE;MAAA;MAAAd,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAAA,OAAO,IAAAwB,aAAA,CAAAC,GAAA,EAACpB,cAAA,CAAAqB,UAAU;QAACC,SAAS,EAAC;MAAwB,EAAG;IAAA,CAAC;IAAA;IAAA;MAAA5B,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IAC7E,IAAIa,KAAK,KAAK,MAAM,EAAE;MAAA;MAAAd,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAAA,OAAO,IAAAwB,aAAA,CAAAC,GAAA,EAACpB,cAAA,CAAAuB,YAAY;QAACD,SAAS,EAAC;MAAsB,EAAG;IAAA,CAAC;IAAA;IAAA;MAAA5B,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IAC/E,OAAO,IAAI;EACb,CAAC;EAAC;EAAAD,cAAA,GAAAC,CAAA;EAEF,MAAM6B,aAAa,GAAGA,CAAA,KAAK;IAAA;IAAA9B,cAAA,GAAAiB,CAAA;IAAAjB,cAAA,GAAAC,CAAA;IACzB,IAAIa,KAAK,KAAK,IAAI,EAAE;MAAA;MAAAd,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAAA,OAAO,gBAAgB;IAAA,CAAC;IAAA;IAAA;MAAAD,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IAC5C,IAAIa,KAAK,KAAK,MAAM,EAAE;MAAA;MAAAd,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAAA,OAAO,cAAc;IAAA,CAAC;IAAA;IAAA;MAAAD,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IAC5C,OAAO,eAAe;EACxB,CAAC;EAAC;EAAAD,cAAA,GAAAC,CAAA;EAEF,OACE,IAAAwB,aAAA,CAAAM,IAAA,EAAC3B,MAAA,CAAA4B,IAAI;IAAAC,QAAA,GACH,IAAAR,aAAA,CAAAM,IAAA,EAAC3B,MAAA,CAAA8B,UAAU;MAACN,SAAS,EAAC,2DAA2D;MAAAK,QAAA,GAC/E,IAAAR,aAAA,CAAAC,GAAA,EAACtB,MAAA,CAAA+B,SAAS;QAACP,SAAS,EAAC,mCAAmC;QAAAK,QAAA,EACrDxB;MAAK,EACI,EACZ,IAAAgB,aAAA,CAAAC,GAAA;QAAKE,SAAS,EAAC,eAAe;QAAAK,QAAA,EAC3BpB;MAAI,EACD;IAAA,EACK,EACb,IAAAY,aAAA,CAAAM,IAAA,EAAC3B,MAAA,CAAAgC,WAAW;MAAAH,QAAA,GACV,IAAAR,aAAA,CAAAC,GAAA;QAAKE,SAAS,EAAC,kCAAkC;QAAAK,QAAA,EAC9Cf,WAAW,CAACR,KAAK;MAAC,EACf;MACL;MAAA,CAAAV,cAAA,GAAAgB,CAAA,WAAAL,MAAM,KAAK0B,SAAS;MAAA;MAAA,CAAArC,cAAA,GAAAgB,CAAA,WACnB,IAAAS,aAAA,CAAAM,IAAA;QAAKH,SAAS,EAAE,6BAA6BE,aAAa,EAAE,OAAO;QAAAG,QAAA,GAChET,YAAY,EAAE,EACf,IAAAC,aAAA,CAAAM,IAAA;UAAMH,SAAS,EAAC,MAAM;UAAAK,QAAA,GACnBtB,MAAM,GAAG,CAAC;UAAA;UAAA,CAAAX,cAAA,GAAAgB,CAAA,WAAG,GAAG;UAAA;UAAA,CAAAhB,cAAA,GAAAgB,CAAA,WAAG,EAAE,GAAEL,MAAM,CAACS,OAAO,CAAC,CAAC,CAAC;UAAI;UAAA,CAAApB,cAAA,GAAAgB,CAAA,WAAAJ,WAAW;UAAA;UAAA,CAAAZ,cAAA,GAAAgB,CAAA,WAAI,iBAAiB;QAAA,EACxE;MAAA,EACH,CACP;IAAA,EACW;EAAA,EACT;AAEX,CAAC;AAAC;AAAAhB,cAAA,GAAAC,CAAA;AAMK,MAAMqC,yBAAyB,GAA6CA,CAAC;EAClFV,SAAS;EAAA;EAAA,CAAA5B,cAAA,GAAAgB,CAAA,WAAG,EAAE;AAAA,CACf,KAAI;EAAA;EAAAhB,cAAA,GAAAiB,CAAA;EACH,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC;EAAA;EAAA,CAAAxC,cAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAA0C,QAAQ,EAA4B,IAAI,CAAC;EACvE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC;EAAA;EAAA,CAAA3C,cAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAA0C,QAAQ,EAAC,IAAI,CAAC;EAC5C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC;EAAA;EAAA,CAAA7C,cAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAA0C,QAAQ,EAAgB,IAAI,CAAC;EAAC;EAAAzC,cAAA,GAAAC,CAAA;EAExD,IAAAF,OAAA,CAAA+C,SAAS,EAAC,MAAK;IAAA;IAAA9C,cAAA,GAAAiB,CAAA;IAAAjB,cAAA,GAAAC,CAAA;IACb,MAAM8C,WAAW,GAAG,MAAAA,CAAA,KAAW;MAAA;MAAA/C,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAC,CAAA;MAC7B,IAAI;QAAA;QAAAD,cAAA,GAAAC,CAAA;QACF0C,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMK,IAAI;QAAA;QAAA,CAAAhD,cAAA,GAAAC,CAAA,QAAG,MAAMM,6BAAA,CAAA0C,kBAAkB,CAACC,iBAAiB,EAAE;QAAC;QAAAlD,cAAA,GAAAC,CAAA;QAC1DuC,UAAU,CAACQ,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOG,GAAG,EAAE;QAAA;QAAAnD,cAAA,GAAAC,CAAA;QACZ4C,QAAQ,CAACM,GAAG,YAAYC,KAAK;QAAA;QAAA,CAAApD,cAAA,GAAAgB,CAAA,WAAGmC,GAAG,CAACE,OAAO;QAAA;QAAA,CAAArD,cAAA,GAAAgB,CAAA,WAAG,wBAAwB,EAAC;MACzE,CAAC,SAAS;QAAA;QAAAhB,cAAA,GAAAC,CAAA;QACR0C,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAAC;IAAA3C,cAAA,GAAAC,CAAA;IAEF8C,WAAW,EAAE;IAEb;IACA,MAAMO,QAAQ;IAAA;IAAA,CAAAtD,cAAA,GAAAC,CAAA,QAAGsD,WAAW,CAACR,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;IAAC;IAAA/C,cAAA,GAAAC,CAAA;IACzD,OAAO,MAAM;MAAA;MAAAD,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAC,CAAA;MAAA,OAAAuD,aAAa,CAACF,QAAQ,CAAC;IAAD,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAAC;EAAAtD,cAAA,GAAAC,CAAA;EAEP,IAAIyC,OAAO,EAAE;IAAA;IAAA1C,cAAA,GAAAgB,CAAA;IAAAhB,cAAA,GAAAC,CAAA;IACX,OACE,IAAAwB,aAAA,CAAAC,GAAA;MAAKE,SAAS,EAAE,aAAaA,SAAS,EAAE;MAAAK,QAAA,EACtC,IAAAR,aAAA,CAAAC,GAAA;QAAKE,SAAS,EAAC,sDAAsD;QAAAK,QAAA,EAClE,CAAC,GAAGwB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KACtB;UAAA;UAAA5D,cAAA,GAAAiB,CAAA;UAAAjB,cAAA,GAAAC,CAAA;UAAA,WAAAwB,aAAA,CAAAM,IAAA,EAAC3B,MAAA,CAAA4B,IAAI;YAASJ,SAAS,EAAC,eAAe;YAAAK,QAAA,GACrC,IAAAR,aAAA,CAAAC,GAAA,EAACtB,MAAA,CAAA8B,UAAU;cAAAD,QAAA,EACT,IAAAR,aAAA,CAAAC,GAAA;gBAAKE,SAAS,EAAC;cAA+B;YAAO,EAC1C,EACb,IAAAH,aAAA,CAAAC,GAAA,EAACtB,MAAA,CAAAgC,WAAW;cAAAH,QAAA,EACV,IAAAR,aAAA,CAAAC,GAAA;gBAAKE,SAAS,EAAC;cAA+B;YAAO,EACzC;UAAA,GANLgC,CAAC,CAOL;QAPK,CAQb;MAAC;IACE,EACF;EAEV,CAAC;EAAA;EAAA;IAAA5D,cAAA,GAAAgB,CAAA;EAAA;EAAAhB,cAAA,GAAAC,CAAA;EAED;EAAI;EAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAA4B,KAAK;EAAA;EAAA,CAAA5C,cAAA,GAAAgB,CAAA,WAAI,CAACuB,OAAO,GAAE;IAAA;IAAAvC,cAAA,GAAAgB,CAAA;IAAAhB,cAAA,GAAAC,CAAA;IACrB,OACE,IAAAwB,aAAA,CAAAC,GAAA;MAAKE,SAAS,EAAE,qBAAqBA,SAAS,EAAE;MAAAK,QAAA,EAC9C,IAAAR,aAAA,CAAAC,GAAA;QAAKE,SAAS,EAAC,eAAe;QAAAK,QAAA;QAC3B;QAAA,CAAAjC,cAAA,GAAAgB,CAAA,WAAA4B,KAAK;QAAA;QAAA,CAAA5C,cAAA,GAAAgB,CAAA,WAAI,0BAA0B;MAAA;IAChC,EACF;EAEV,CAAC;EAAA;EAAA;IAAAhB,cAAA,GAAAgB,CAAA;EAAA;EAAAhB,cAAA,GAAAC,CAAA;EAED,OACE,IAAAwB,aAAA,CAAAM,IAAA;IAAKH,SAAS,EAAE,aAAaA,SAAS,EAAE;IAAAK,QAAA,GAEtC,IAAAR,aAAA,CAAAM,IAAA;MAAKH,SAAS,EAAC,mCAAmC;MAAAK,QAAA,GAChD,IAAAR,aAAA,CAAAM,IAAA;QAAAE,QAAA,GACE,IAAAR,aAAA,CAAAC,GAAA;UAAIE,SAAS,EAAC,kCAAkC;UAAAK,QAAA;QAAA,EAE3C,EACL,IAAAR,aAAA,CAAAC,GAAA;UAAGE,SAAS,EAAC,eAAe;UAAAK,QAAA;QAAA,EAExB;MAAA,EACA,EACN,IAAAR,aAAA,CAAAC,GAAA,EAACrB,OAAA,CAAAwD,KAAK;QAACC,OAAO,EAAC,SAAS;QAAClC,SAAS,EAAC,6CAA6C;QAAAK,QAAA;MAAA,EAExE;IAAA,EACJ,EAGN,IAAAR,aAAA,CAAAM,IAAA;MAAKH,SAAS,EAAC,sDAAsD;MAAAK,QAAA,GACnE,IAAAR,aAAA,CAAAC,GAAA,EAAClB,UAAU;QACTC,KAAK,EAAC,kBAAkB;QACxBC,KAAK,EAAE6B,OAAO,CAACwB,UAAU;QACzBpD,MAAM,EAAE,IAAI;QACZE,IAAI,EAAE,IAAAY,aAAA,CAAAC,GAAA,EAACpB,cAAA,CAAA0D,GAAG;UAACpC,SAAS,EAAC;QAAS,EAAG;QACjCd,KAAK,EAAC;MAAI,EACV,EAEF,IAAAW,aAAA,CAAAC,GAAA,EAAClB,UAAU;QACTC,KAAK,EAAC,mBAAmB;QACzBC,KAAK,EAAE6B,OAAO,CAAC0B,cAAc;QAC7BtD,MAAM,EAAE,GAAG;QACXE,IAAI,EAAE,IAAAY,aAAA,CAAAC,GAAA,EAACpB,cAAA,CAAA4D,KAAK;UAACtC,SAAS,EAAC;QAAS,EAAG;QACnCd,KAAK,EAAC;MAAI,EACV,EAEF,IAAAW,aAAA,CAAAC,GAAA,EAAClB,UAAU;QACTC,KAAK,EAAC,oBAAoB;QAC1BC,KAAK,EAAE6B,OAAO,CAAC4B,cAAc;QAC7BxD,MAAM,EAAE,CAAC,GAAG;QACZE,IAAI,EAAE,IAAAY,aAAA,CAAAC,GAAA,EAACpB,cAAA,CAAA8D,MAAM;UAACxC,SAAS,EAAC;QAAS,EAAG;QACpCd,KAAK,EAAC,MAAM;QACZC,MAAM,EAAC;MAAY,EACnB,EAEF,IAAAU,aAAA,CAAAC,GAAA,EAAClB,UAAU;QACTC,KAAK,EAAC,gBAAgB;QACtBC,KAAK,EAAE6B,OAAO,CAAC8B,UAAU;QACzB1D,MAAM,EAAE,CAAC,GAAG;QACZE,IAAI,EAAE,IAAAY,aAAA,CAAAC,GAAA,EAACpB,cAAA,CAAAgE,GAAG;UAAC1C,SAAS,EAAC;QAAS,EAAG;QACjCd,KAAK,EAAC,IAAI;QACVC,MAAM,EAAC;MAAY,EACnB,EAEF,IAAAU,aAAA,CAAAC,GAAA,EAAClB,UAAU;QACTC,KAAK,EAAC,aAAa;QACnBC,KAAK,EAAE6B,OAAO,CAACgC,kBAAkB;QACjC5D,MAAM,EAAE,IAAI;QACZE,IAAI,EAAE,IAAAY,aAAA,CAAAC,GAAA,EAACpB,cAAA,CAAAkE,KAAK;UAAC5C,SAAS,EAAC;QAAS,EAAG;QACnCd,KAAK,EAAC,IAAI;QACVC,MAAM,EAAC;MAAM,EACb,EAEF,IAAAU,aAAA,CAAAC,GAAA,EAAClB,UAAU;QACTC,KAAK,EAAC,WAAW;QACjBC,KAAK,EAAE6B,OAAO,CAACkC,YAAY;QAC3B9D,MAAM,EAAE,IAAI;QACZE,IAAI,EAAE,IAAAY,aAAA,CAAAC,GAAA,EAACpB,cAAA,CAAAoE,YAAY;UAAC9C,SAAS,EAAC;QAAS,EAAG;QAC1Cd,KAAK,EAAC,IAAI;QACVC,MAAM,EAAC;MAAY,EACnB,EAEF,IAAAU,aAAA,CAAAC,GAAA,EAAClB,UAAU;QACTC,KAAK,EAAC,cAAc;QACpBC,KAAK,EAAE6B,OAAO,CAACoC,UAAU;QACzBhE,MAAM,EAAE,IAAI;QACZE,IAAI,EAAE,IAAAY,aAAA,CAAAC,GAAA,EAACpB,cAAA,CAAA4D,KAAK;UAACtC,SAAS,EAAC;QAAS,EAAG;QACnCd,KAAK,EAAC,IAAI;QACVC,MAAM,EAAC;MAAY,EACnB,EAEF,IAAAU,aAAA,CAAAC,GAAA,EAAClB,UAAU;QACTC,KAAK,EAAC,oBAAoB;QAC1BC,KAAK,EAAE6B,OAAO,CAACqC,iBAAiB;QAChCjE,MAAM,EAAE,GAAG;QACXE,IAAI,EAAE,IAAAY,aAAA,CAAAC,GAAA,EAACpB,cAAA,CAAAuE,UAAU;UAACjD,SAAS,EAAC;QAAS,EAAG;QACxCd,KAAK,EAAC,IAAI;QACVC,MAAM,EAAC;MAAU,EACjB;IAAA,EACE,EAGN,IAAAU,aAAA,CAAAM,IAAA,EAAC3B,MAAA,CAAA4B,IAAI;MAAAC,QAAA,GACH,IAAAR,aAAA,CAAAC,GAAA,EAACtB,MAAA,CAAA8B,UAAU;QAAAD,QAAA,EACT,IAAAR,aAAA,CAAAC,GAAA,EAACtB,MAAA,CAAA+B,SAAS;UAAAF,QAAA;QAAA;MAAiC,EAChC,EACb,IAAAR,aAAA,CAAAC,GAAA,EAACtB,MAAA,CAAAgC,WAAW;QAAAH,QAAA,EACV,IAAAR,aAAA,CAAAC,GAAA;UAAKE,SAAS,EAAC,WAAW;UAAAK,QAAA,EACvB,CACC;YAAE6C,IAAI,EAAE,WAAW;YAAEC,KAAK,EAAExC,OAAO,CAACwB,UAAU;YAAEiB,UAAU,EAAE;UAAG,CAAE,EACjE;YAAEF,IAAI,EAAE,uBAAuB;YAAEC,KAAK,EAAE1D,IAAI,CAACC,KAAK,CAACiB,OAAO,CAACwB,UAAU,GAAG,GAAG,CAAC;YAAEiB,UAAU,EAAE;UAAE,CAAE,EAC9F;YAAEF,IAAI,EAAE,WAAW;YAAEC,KAAK,EAAE1D,IAAI,CAACC,KAAK,CAACiB,OAAO,CAACwB,UAAU,GAAGxB,OAAO,CAACkC,YAAY,GAAG,GAAG,CAAC;YAAEO,UAAU,EAAEzC,OAAO,CAACkC;UAAY,CAAE,EAC3H;YAAEK,IAAI,EAAE,cAAc;YAAEC,KAAK,EAAE1D,IAAI,CAACC,KAAK,CAACiB,OAAO,CAACwB,UAAU,GAAGxB,OAAO,CAACoC,UAAU,GAAG,GAAG,CAAC;YAAEK,UAAU,EAAEzC,OAAO,CAACoC;UAAU,CAAE,EAC1H;YAAEG,IAAI,EAAE,iBAAiB;YAAEC,KAAK,EAAE1D,IAAI,CAACC,KAAK,CAACiB,OAAO,CAACwB,UAAU,GAAGxB,OAAO,CAAC0C,cAAc,GAAG,GAAG,CAAC;YAAED,UAAU,EAAEzC,OAAO,CAAC0C;UAAc,CAAE,EACrI;YAAEH,IAAI,EAAE,sBAAsB;YAAEC,KAAK,EAAE1D,IAAI,CAACC,KAAK,CAACiB,OAAO,CAACwB,UAAU,GAAGxB,OAAO,CAAC2C,kBAAkB,GAAG,GAAG,CAAC;YAAEF,UAAU,EAAEzC,OAAO,CAAC2C;UAAkB,CAAE,CACnJ,CAACxB,GAAG,CAAC,CAACyB,IAAI,EAAEC,KAAK,KAChB;YAAA;YAAApF,cAAA,GAAAiB,CAAA;YAAAjB,cAAA,GAAAC,CAAA;YAAA,WAAAwB,aAAA,CAAAM,IAAA;cAAqBH,SAAS,EAAC,mCAAmC;cAAAK,QAAA,GAChE,IAAAR,aAAA,CAAAM,IAAA;gBAAKH,SAAS,EAAC,6BAA6B;gBAAAK,QAAA,GAC1C,IAAAR,aAAA,CAAAC,GAAA;kBAAKE,SAAS,EAAC;gBAAkC,EAAO,EACxD,IAAAH,aAAA,CAAAC,GAAA;kBAAME,SAAS,EAAC,aAAa;kBAAAK,QAAA,EAAEkD,IAAI,CAACL;gBAAI,EAAQ;cAAA,EAC5C,EACN,IAAArD,aAAA,CAAAM,IAAA;gBAAKH,SAAS,EAAC,6BAA6B;gBAAAK,QAAA,GAC1C,IAAAR,aAAA,CAAAC,GAAA;kBAAME,SAAS,EAAC,eAAe;kBAAAK,QAAA,EAAEkD,IAAI,CAACJ,KAAK,CAACxD,cAAc;gBAAE,EAAQ,EACpE,IAAAE,aAAA,CAAAC,GAAA;kBAAKE,SAAS,EAAC,mCAAmC;kBAAAK,QAAA,EAChD,IAAAR,aAAA,CAAAC,GAAA;oBACEE,SAAS,EAAC,8BAA8B;oBACxCyD,KAAK,EAAE;sBAAEC,KAAK,EAAE,GAAGH,IAAI,CAACH,UAAU;oBAAG;kBAAE;gBAClC,EACH,EACN,IAAAvD,aAAA,CAAAM,IAAA;kBAAMH,SAAS,EAAC,uCAAuC;kBAAAK,QAAA,GACpDkD,IAAI,CAACH,UAAU,CAAC5D,OAAO,CAAC,CAAC,CAAC;gBAAA,EACtB;cAAA,EACH;YAAA,GAhBE+D,IAAI,CAACL,IAAI,CAiBb;UAjBa,CAkBpB;QAAC;MACE,EACM;IAAA,EACT;EAAA,EACH;AAEV,CAAC;AAAC;AAAA9E,cAAA,GAAAC,CAAA;AAzLWsF,OAAA,CAAAjD,yBAAyB,GAAAA,yBAAA;AAyLpC;AAAAtC,cAAA,GAAAC,CAAA;AAEFsF,OAAA,CAAAC,OAAA,GAAeD,OAAA,CAAAjD,yBAAyB","ignoreList":[]}