{"version":3,"names":["cov_1std2ge8lt","actualCoverage","react_1","s","__importDefault","require","lucide_react_1","card_1","NutritionMeals","meals","onAddMeal","onDeleteMeal","sportEmoji","f","mealTypes","key","name","icon","time","getMealsByType","type","filter","meal","getTotalCaloriesForType","reduce","total","calories","jsx_runtime_1","jsx","Card","className","children","jsxs","CardContent","Clock","map","mealType","typeMeals","totalCalories","onClick","Plus","length","b","id","Trash2","exports","default"],"sources":["/workspaces/MyFitHero/src/features/nutrition/components/NutritionMeals.tsx"],"sourcesContent":["// src/features/nutrition/components/NutritionMeals.tsx\nimport React from 'react';\nimport { Clock, Plus, Trash2 } from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\n\ninterface Meal {\n  id: string;\n  name: string;\n  time: string;\n  calories: number;\n  type: 'breakfast' | 'lunch' | 'dinner' | 'snack';\n}\n\ninterface NutritionMealsProps {\n  meals: Meal[];\n  onAddMeal: (type: string) => void;\n  onDeleteMeal: (mealId: string) => void;\n  sportEmoji: string;\n}\n\nexport const NutritionMeals: React.FC<NutritionMealsProps> = ({\n  meals,\n  onAddMeal,\n  onDeleteMeal,\n  sportEmoji,\n}) => {\n  const mealTypes = [\n    { key: 'breakfast', name: 'Petit-d√©jeuner', icon: 'üåÖ', time: '7h-9h' },\n    { key: 'lunch', name: 'D√©jeuner', icon: '‚òÄÔ∏è', time: '12h-14h' },\n    { key: 'dinner', name: 'D√Æner', icon: 'üåô', time: '19h-21h' },\n    { key: 'snack', name: 'Collation', icon: 'üçé', time: 'Variable' },\n  ];\n\n  const getMealsByType = (type: string) => {\n    return meals.filter(meal => meal.type === type);\n  };\n\n  const getTotalCaloriesForType = (type: string) => {\n    return getMealsByType(type).reduce((total, meal) => total + meal.calories, 0);\n  };\n\n  return (\n    <Card className=\"mb-6\">\n      <CardContent className=\"p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 flex items-center space-x-2\">\n            <Clock className=\"h-5 w-5\" />\n            <span>Repas du Jour</span>\n          </h3>\n          <span className=\"text-2xl\">{sportEmoji}</span>\n        </div>\n\n        <div className=\"space-y-4\">\n          {mealTypes.map((mealType) => {\n            const typeMeals = getMealsByType(mealType.key);\n            const totalCalories = getTotalCaloriesForType(mealType.key);\n\n            return (\n              <div key={mealType.key} className=\"border border-gray-200 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center space-x-3\">\n                    <span className=\"text-xl\">{mealType.icon}</span>\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">{mealType.name}</h4>\n                      <p className=\"text-sm text-gray-500\">{mealType.time}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className=\"text-sm font-medium text-gray-900\">\n                      {totalCalories} kcal\n                    </div>\n                    <button\n                      onClick={() => onAddMeal(mealType.key)}\n                      className=\"text-blue-600 hover:text-blue-700 text-sm font-medium flex items-center space-x-1 mt-1\"\n                    >\n                      <Plus className=\"h-3 w-3\" />\n                      <span>Ajouter</span>\n                    </button>\n                  </div>\n                </div>\n\n                {typeMeals.length > 0 ? (\n                  <div className=\"space-y-2\">\n                    {typeMeals.map((meal) => (\n                      <div key={meal.id} className=\"flex items-center justify-between bg-gray-50 rounded-lg p-3\">\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-gray-900\">{meal.name}</div>\n                          <div className=\"text-sm text-gray-500\">{meal.time}</div>\n                        </div>\n                        <div className=\"flex items-center space-x-3\">\n                          <span className=\"text-sm font-medium text-gray-700\">\n                            {meal.calories} kcal\n                          </span>\n                          <button\n                            onClick={() => onDeleteMeal(meal.id)}\n                            className=\"text-red-600 hover:text-red-700 p-1\"\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"text-center py-6 text-gray-500\">\n                    <div className=\"text-4xl mb-2\">üçΩÔ∏è</div>\n                    <p className=\"text-sm\">Aucun repas ajout√©</p>\n                    <button\n                      onClick={() => onAddMeal(mealType.key)}\n                      className=\"mt-2 text-blue-600 hover:text-blue-700 text-sm font-medium\"\n                    >\n                      Ajouter votre premier repas\n                    </button>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"mt-6 p-4 bg-yellow-50 rounded-lg\">\n          <div className=\"text-sm text-yellow-800\">\n            <div className=\"font-medium mb-1\">‚è∞ Timing optimal</div>\n            <div className=\"text-yellow-700\">\n              Mangez 2-3h avant l'entra√Ænement et dans les 30min apr√®s pour maximiser la r√©cup√©ration.\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default NutritionMeals;"],"mappingscAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7BN;AACA,MAAAE,OAAA;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,OAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,cAAA;AAAA;AAAA,CAAAN,cAAA,GAAAG,CAAA,OAAAE,OAAA;AACA,MAAAE,MAAA;AAAA;AAAA,CAAAP,cAAA,GAAAG,CAAA,OAAAE,OAAA;AAAyD;AAAAL,cAAA,GAAAG,CAAA;AAiBlD,MAAMK,cAAc,GAAkCA,CAAC;EAC5DC,KAAK;EACLC,SAAS;EACTC,YAAY;EACZC;AAAU,CACX,KAAI;EAAA;EAAAZ,cAAA,GAAAa,CAAA;EACH,MAAMC,SAAS;EAAA;EAAA,CAAAd,cAAA,GAAAG,CAAA,OAAG,CAChB;IAAEY,GAAG,EAAE,WAAW;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAO,CAAE,EACvE;IAAEH,GAAG,EAAE,OAAO;IAAEC,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAE,EAC/D;IAAEH,GAAG,EAAE,QAAQ;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAE,EAC7D;IAAEH,GAAG,EAAE,OAAO;IAAEC,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAE,CAClE;EAAC;EAAAlB,cAAA,GAAAG,CAAA;EAEF,MAAMgB,cAAc,GAAIC,IAAY,IAAI;IAAA;IAAApB,cAAA,GAAAa,CAAA;IAAAb,cAAA,GAAAG,CAAA;IACtC,OAAOM,KAAK,CAACY,MAAM,CAACC,IAAI,IAAI;MAAA;MAAAtB,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAG,CAAA;MAAA,OAAAmB,IAAI,CAACF,IAAI,KAAKA,IAAI;IAAJ,CAAI,CAAC;EACjD,CAAC;EAAC;EAAApB,cAAA,GAAAG,CAAA;EAEF,MAAMoB,uBAAuB,GAAIH,IAAY,IAAI;IAAA;IAAApB,cAAA,GAAAa,CAAA;IAAAb,cAAA,GAAAG,CAAA;IAC/C,OAAOgB,cAAc,CAACC,IAAI,CAAC,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEH,IAAI,KAAK;MAAA;MAAAtB,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAG,CAAA;MAAA,OAAAsB,KAAK,GAAGH,IAAI,CAACI,QAAQ;IAAR,CAAQ,EAAE,CAAC,CAAC;EAC/E,CAAC;EAAC;EAAA1B,cAAA,GAAAG,CAAA;EAEF,OACE,IAAAwB,aAAA,CAAAC,GAAA,EAACrB,MAAA,CAAAsB,IAAI;IAACC,SAAS,EAAC,MAAM;IAAAC,QAAA,EACpB,IAAAJ,aAAA,CAAAK,IAAA,EAACzB,MAAA,CAAA0B,WAAW;MAACH,SAAS,EAAC,KAAK;MAAAC,QAAA,GAC1B,IAAAJ,aAAA,CAAAK,IAAA;QAAKF,SAAS,EAAC,wCAAwC;QAAAC,QAAA,GACrD,IAAAJ,aAAA,CAAAK,IAAA;UAAIF,SAAS,EAAC,iEAAiE;UAAAC,QAAA,GAC7E,IAAAJ,aAAA,CAAAC,GAAA,EAACtB,cAAA,CAAA4B,KAAK;YAACJ,SAAS,EAAC;UAAS,EAAG,EAC7B,IAAAH,aAAA,CAAAC,GAAA;YAAAG,QAAA;UAAA,EAA0B;QAAA,EACvB,EACL,IAAAJ,aAAA,CAAAC,GAAA;UAAME,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEnB;QAAU,EAAQ;MAAA,EAC1C,EAEN,IAAAe,aAAA,CAAAC,GAAA;QAAKE,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBjB,SAAS,CAACqB,GAAG,CAAEC,QAAQ,IAAI;UAAA;UAAApC,cAAA,GAAAa,CAAA;UAC1B,MAAMwB,SAAS;UAAA;UAAA,CAAArC,cAAA,GAAAG,CAAA,QAAGgB,cAAc,CAACiB,QAAQ,CAACrB,GAAG,CAAC;UAC9C,MAAMuB,aAAa;UAAA;UAAA,CAAAtC,cAAA,GAAAG,CAAA,QAAGoB,uBAAuB,CAACa,QAAQ,CAACrB,GAAG,CAAC;UAAC;UAAAf,cAAA,GAAAG,CAAA;UAE5D,OACE,IAAAwB,aAAA,CAAAK,IAAA;YAAwBF,SAAS,EAAC,uCAAuC;YAAAC,QAAA,GACvE,IAAAJ,aAAA,CAAAK,IAAA;cAAKF,SAAS,EAAC,wCAAwC;cAAAC,QAAA,GACrD,IAAAJ,aAAA,CAAAK,IAAA;gBAAKF,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,GAC1C,IAAAJ,aAAA,CAAAC,GAAA;kBAAME,SAAS,EAAC,SAAS;kBAAAC,QAAA,EAAEK,QAAQ,CAACnB;gBAAI,EAAQ,EAChD,IAAAU,aAAA,CAAAK,IAAA;kBAAAD,QAAA,GACE,IAAAJ,aAAA,CAAAC,GAAA;oBAAIE,SAAS,EAAC,2BAA2B;oBAAAC,QAAA,EAAEK,QAAQ,CAACpB;kBAAI,EAAM,EAC9D,IAAAW,aAAA,CAAAC,GAAA;oBAAGE,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,EAAEK,QAAQ,CAAClB;kBAAI,EAAK;gBAAA,EACpD;cAAA,EACF,EACN,IAAAS,aAAA,CAAAK,IAAA;gBAAKF,SAAS,EAAC,YAAY;gBAAAC,QAAA,GACzB,IAAAJ,aAAA,CAAAK,IAAA;kBAAKF,SAAS,EAAC,mCAAmC;kBAAAC,QAAA,GAC/CO,aAAa;gBAAA,EACV,EACN,IAAAX,aAAA,CAAAK,IAAA;kBACEO,OAAO,EAAEA,CAAA,KAAM;oBAAA;oBAAAvC,cAAA,GAAAa,CAAA;oBAAAb,cAAA,GAAAG,CAAA;oBAAA,OAAAO,SAAS,CAAC0B,QAAQ,CAACrB,GAAG,CAAC;kBAAD,CAAC;kBACtCe,SAAS,EAAC,wFAAwF;kBAAAC,QAAA,GAElG,IAAAJ,aAAA,CAAAC,GAAA,EAACtB,cAAA,CAAAkC,IAAI;oBAACV,SAAS,EAAC;kBAAS,EAAG,EAC5B,IAAAH,aAAA,CAAAC,GAAA;oBAAAG,QAAA;kBAAA,EAAoB;gBAAA,EACb;cAAA,EACL;YAAA,EACF,EAELM,SAAS,CAACI,MAAM,GAAG,CAAC;YAAA;YAAA,CAAAzC,cAAA,GAAA0C,CAAA,UACnB,IAAAf,aAAA,CAAAC,GAAA;cAAKE,SAAS,EAAC,WAAW;cAAAC,QAAA,EACvBM,SAAS,CAACF,GAAG,CAAEb,IAAI,IAClB;gBAAA;gBAAAtB,cAAA,GAAAa,CAAA;gBAAAb,cAAA,GAAAG,CAAA;gBAAA,WAAAwB,aAAA,CAAAK,IAAA;kBAAmBF,SAAS,EAAC,6DAA6D;kBAAAC,QAAA,GACxF,IAAAJ,aAAA,CAAAK,IAAA;oBAAKF,SAAS,EAAC,QAAQ;oBAAAC,QAAA,GACrB,IAAAJ,aAAA,CAAAC,GAAA;sBAAKE,SAAS,EAAC,2BAA2B;sBAAAC,QAAA,EAAET,IAAI,CAACN;oBAAI,EAAO,EAC5D,IAAAW,aAAA,CAAAC,GAAA;sBAAKE,SAAS,EAAC,uBAAuB;sBAAAC,QAAA,EAAET,IAAI,CAACJ;oBAAI,EAAO;kBAAA,EACpD,EACN,IAAAS,aAAA,CAAAK,IAAA;oBAAKF,SAAS,EAAC,6BAA6B;oBAAAC,QAAA,GAC1C,IAAAJ,aAAA,CAAAK,IAAA;sBAAMF,SAAS,EAAC,mCAAmC;sBAAAC,QAAA,GAChDT,IAAI,CAACI,QAAQ;oBAAA,EACT,EACP,IAAAC,aAAA,CAAAC,GAAA;sBACEW,OAAO,EAAEA,CAAA,KAAM;wBAAA;wBAAAvC,cAAA,GAAAa,CAAA;wBAAAb,cAAA,GAAAG,CAAA;wBAAA,OAAAQ,YAAY,CAACW,IAAI,CAACqB,EAAE,CAAC;sBAAD,CAAC;sBACpCb,SAAS,EAAC,qCAAqC;sBAAAC,QAAA,EAE/C,IAAAJ,aAAA,CAAAC,GAAA,EAACtB,cAAA,CAAAsC,MAAM;wBAACd,SAAS,EAAC;sBAAS;oBAAG,EACvB;kBAAA,EACL;gBAAA,GAfER,IAAI,CAACqB,EAAE,CAgBX;cAhBW,CAiBlB;YAAC,EACE;YAAA;YAAA,CAAA3C,cAAA,GAAA0C,CAAA,UAEN,IAAAf,aAAA,CAAAK,IAAA;cAAKF,SAAS,EAAC,gCAAgC;cAAAC,QAAA,GAC7C,IAAAJ,aAAA,CAAAC,GAAA;gBAAKE,SAAS,EAAC,eAAe;gBAAAC,QAAA;cAAA,EAAU,EACxC,IAAAJ,aAAA,CAAAC,GAAA;gBAAGE,SAAS,EAAC,SAAS;gBAAAC,QAAA;cAAA,EAAuB,EAC7C,IAAAJ,aAAA,CAAAC,GAAA;gBACEW,OAAO,EAAEA,CAAA,KAAM;kBAAA;kBAAAvC,cAAA,GAAAa,CAAA;kBAAAb,cAAA,GAAAG,CAAA;kBAAA,OAAAO,SAAS,CAAC0B,QAAQ,CAACrB,GAAG,CAAC;gBAAD,CAAC;gBACtCe,SAAS,EAAC,4DAA4D;gBAAAC,QAAA;cAAA,EAG/D;YAAA,EACL,CACP;UAAA,GAxDOK,QAAQ,CAACrB,GAAG,CAyDhB;QAEV,CAAC;MAAC,EACE,EAEN,IAAAY,aAAA,CAAAC,GAAA;QAAKE,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAC/C,IAAAJ,aAAA,CAAAK,IAAA;UAAKF,SAAS,EAAC,yBAAyB;UAAAC,QAAA,GACtC,IAAAJ,aAAA,CAAAC,GAAA;YAAKE,SAAS,EAAC,kBAAkB;YAAAC,QAAA;UAAA,EAAuB,EACxD,IAAAJ,aAAA,CAAAC,GAAA;YAAKE,SAAS,EAAC,iBAAiB;YAAAC,QAAA;UAAA,EAE1B;QAAA;MACF,EACF;IAAA;EACM,EACT;AAEX,CAAC;AAAC;AAAA/B,cAAA,GAAAG,CAAA;AA/GW0C,OAAA,CAAArC,cAAc,GAAAA,cAAA;AA+GzB;AAAAR,cAAA,GAAAG,CAAA;AAEF0C,OAAA,CAAAC,OAAA,GAAeD,OAAA,CAAArC,cAAc","ignoreList":[]}