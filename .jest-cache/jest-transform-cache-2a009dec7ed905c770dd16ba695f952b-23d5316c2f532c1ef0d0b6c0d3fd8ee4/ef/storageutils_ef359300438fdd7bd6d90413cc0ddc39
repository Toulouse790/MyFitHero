398a92669254488128bb39d7d7d75f84
"use strict";

/* istanbul ignore next */
function cov_uh9b41ud3() {
  var path = "/workspaces/MyFitHero/src/core/utils/storage.utils.ts";
  var hash = "765d4c98948dd09446360ea050544890a2362857";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/core/utils/storage.utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 25
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "3": {
        start: {
          line: 9,
          column: 25
        },
        end: {
          line: 13,
          column: 13
        }
      },
      "4": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 79
        }
      },
      "5": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 76
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "7": {
        start: {
          line: 23,
          column: 31
        },
        end: {
          line: 23,
          column: 75
        }
      },
      "8": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 25,
          column: 28
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 28
        }
      },
      "10": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "11": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 31,
          column: 13
        }
      },
      "12": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "13": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 28
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "15": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 78
        }
      },
      "16": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 24
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 60
        }
      },
      "19": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 77
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "21": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 51,
          column: 93
        }
      },
      "22": {
        start: {
          line: 51,
          column: 65
        },
        end: {
          line: 51,
          column: 92
        }
      },
      "23": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 62
        }
      },
      "24": {
        start: {
          line: 52,
          column: 32
        },
        end: {
          line: 52,
          column: 60
        }
      },
      "25": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 70
        }
      },
      "26": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 69
        }
      },
      "27": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 63,
          column: 26
        }
      },
      "28": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 69,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 44
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 51,
            column: 58
          },
          end: {
            line: 51,
            column: 59
          }
        },
        loc: {
          start: {
            line: 51,
            column: 65
          },
          end: {
            line: 51,
            column: 92
          }
        },
        line: 51
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 26
          }
        },
        loc: {
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 52,
            column: 60
          }
        },
        line: 52
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 12,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 42
          },
          end: {
            line: 12,
            column: 69
          }
        }, {
          start: {
            line: 12,
            column: 72
          },
          end: {
            line: 12,
            column: 81
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 25,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 25,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 31,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 31,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 27
          }
        }, {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 72
          }
        }],
        line: 28
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/core/utils/storage.utils.ts",
      mappings: ";;;AAOA,8DAA8D;AAC9D,MAAa,OAAO;IAGlB,yBAAyB;IACzB,MAAM,CAAC,GAAG,CAAI,GAAW,EAAE,KAAQ,EAAE,eAAwB;QAC3D,IAAI,CAAC;YACH,MAAM,IAAI,GAAmB;gBAC3B,KAAK;gBACL,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;gBACrB,MAAM,EAAE,eAAe,CAAC,CAAC,CAAC,eAAe,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS;aAClE,CAAC;YAEF,YAAY,CAAC,OAAO,CAClB,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,EACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CACrB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,mCAAmC,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;QAClE,CAAC;IACH,CAAC;IAED,uBAAuB;IACvB,MAAM,CAAC,GAAG,CAAI,GAAW;QACvB,IAAI,CAAC;YACH,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,UAAU;gBAAE,OAAO,IAAI,CAAC;YAE7B,MAAM,IAAI,GAAmB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAEpD,wBAAwB;YACxB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;gBAC7D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO,IAAI,CAAC;YACd,CAAC;YAED,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,qCAAqC,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;YAClE,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,uBAAuB;IACvB,MAAM,CAAC,MAAM,CAAC,GAAW;QACvB,IAAI,CAAC;YACH,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;QAClD,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,oCAAoC,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;IAED,iCAAiC;IACjC,MAAM,CAAC,KAAK;QACV,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAClD,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAC5B,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;QACpD,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;IAED,6BAA6B;IAC7B,MAAM,CAAC,GAAG,CAAC,GAAW;QACpB,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC;IAC/D,CAAC;;AAlEH,0BAmEC;AAlEgB;;;;WAAS,YAAY;GAAC",
      names: [],
      sources: ["/workspaces/MyFitHero/src/core/utils/storage.utils.ts"],
      sourcesContent: ["// Types pour le localStorage\nexport interface StorageItem<T> {\n  value: T;\n  timestamp: number;\n  expiry: number | undefined; // En millisecondes, peut \xEAtre undefined\n}\n\n// Classe pour g\xE9rer le localStorage avec expiration et typage\nexport class Storage {\n  private static prefix = 'myfithero_';\n\n  // Sauvegarder une donn\xE9e\n  static set<T>(key: string, value: T, expiryInMinutes?: number): void {\n    try {\n      const item: StorageItem<T> = {\n        value,\n        timestamp: Date.now(),\n        expiry: expiryInMinutes ? expiryInMinutes * 60 * 1000 : undefined,\n      };\n      \n      localStorage.setItem(\n        `${this.prefix}${key}`,\n        JSON.stringify(item)\n      );\n    } catch (error: any) {\n      console.error(`Erreur lors de la sauvegarde de ${key}:`, error);\n    }\n  }\n\n  // R\xE9cup\xE9rer une donn\xE9e\n  static get<T>(key: string): T | undefined {\n    try {\n      const storedData = localStorage.getItem(`${this.prefix}${key}`);\n      if (!storedData) return null;\n\n      const item: StorageItem<T> = JSON.parse(storedData);\n      \n      // V\xE9rifier l'expiration\n      if (item.expiry && Date.now() - item.timestamp > item.expiry) {\n        this.remove(key);\n        return null;\n      }\n\n      return item.value;\n    } catch (error: any) {\n      console.error(`Erreur lors de la r\xE9cup\xE9ration de ${key}:`, error);\n      return null;\n    }\n  }\n\n  // Supprimer une donn\xE9e\n  static remove(key: string): void {\n    try {\n      localStorage.removeItem(`${this.prefix}${key}`);\n    } catch (error: any) {\n      console.error(`Erreur lors de la suppression de ${key}:`, error);\n    }\n  }\n\n  // Vider tout le storage de l'app\n  static clear(): void {\n    try {\n      const keys = Object.keys(localStorage).filter(key => \n        key.startsWith(this.prefix)\n      );\n      keys.forEach(key => localStorage.removeItem(key));\n    } catch (error: any) {\n      console.error('Erreur lors du vidage du storage:', error);\n    }\n  }\n\n  // V\xE9rifier si une cl\xE9 existe\n  static has(key: string): boolean {\n    return localStorage.getItem(`${this.prefix}${key}`) !== null;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "765d4c98948dd09446360ea050544890a2362857"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uh9b41ud3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uh9b41ud3();
cov_uh9b41ud3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_uh9b41ud3().s[1]++;
exports.Storage = void 0;
// Classe pour gérer le localStorage avec expiration et typage
class Storage {
  // Sauvegarder une donnée
  static set(key, value, expiryInMinutes) {
    /* istanbul ignore next */
    cov_uh9b41ud3().f[0]++;
    cov_uh9b41ud3().s[2]++;
    try {
      const item =
      /* istanbul ignore next */
      (cov_uh9b41ud3().s[3]++, {
        value,
        timestamp: Date.now(),
        expiry: expiryInMinutes ?
        /* istanbul ignore next */
        (cov_uh9b41ud3().b[0][0]++, expiryInMinutes * 60 * 1000) :
        /* istanbul ignore next */
        (cov_uh9b41ud3().b[0][1]++, undefined)
      });
      /* istanbul ignore next */
      cov_uh9b41ud3().s[4]++;
      localStorage.setItem(`${this.prefix}${key}`, JSON.stringify(item));
    } catch (error) {
      /* istanbul ignore next */
      cov_uh9b41ud3().s[5]++;
      console.error(`Erreur lors de la sauvegarde de ${key}:`, error);
    }
  }
  // Récupérer une donnée
  static get(key) {
    /* istanbul ignore next */
    cov_uh9b41ud3().f[1]++;
    cov_uh9b41ud3().s[6]++;
    try {
      const storedData =
      /* istanbul ignore next */
      (cov_uh9b41ud3().s[7]++, localStorage.getItem(`${this.prefix}${key}`));
      /* istanbul ignore next */
      cov_uh9b41ud3().s[8]++;
      if (!storedData) {
        /* istanbul ignore next */
        cov_uh9b41ud3().b[1][0]++;
        cov_uh9b41ud3().s[9]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_uh9b41ud3().b[1][1]++;
      }
      const item =
      /* istanbul ignore next */
      (cov_uh9b41ud3().s[10]++, JSON.parse(storedData));
      // Vérifier l'expiration
      /* istanbul ignore next */
      cov_uh9b41ud3().s[11]++;
      if (
      /* istanbul ignore next */
      (cov_uh9b41ud3().b[3][0]++, item.expiry) &&
      /* istanbul ignore next */
      (cov_uh9b41ud3().b[3][1]++, Date.now() - item.timestamp > item.expiry)) {
        /* istanbul ignore next */
        cov_uh9b41ud3().b[2][0]++;
        cov_uh9b41ud3().s[12]++;
        this.remove(key);
        /* istanbul ignore next */
        cov_uh9b41ud3().s[13]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_uh9b41ud3().b[2][1]++;
      }
      cov_uh9b41ud3().s[14]++;
      return item.value;
    } catch (error) {
      /* istanbul ignore next */
      cov_uh9b41ud3().s[15]++;
      console.error(`Erreur lors de la récupération de ${key}:`, error);
      /* istanbul ignore next */
      cov_uh9b41ud3().s[16]++;
      return null;
    }
  }
  // Supprimer une donnée
  static remove(key) {
    /* istanbul ignore next */
    cov_uh9b41ud3().f[2]++;
    cov_uh9b41ud3().s[17]++;
    try {
      /* istanbul ignore next */
      cov_uh9b41ud3().s[18]++;
      localStorage.removeItem(`${this.prefix}${key}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_uh9b41ud3().s[19]++;
      console.error(`Erreur lors de la suppression de ${key}:`, error);
    }
  }
  // Vider tout le storage de l'app
  static clear() {
    /* istanbul ignore next */
    cov_uh9b41ud3().f[3]++;
    cov_uh9b41ud3().s[20]++;
    try {
      const keys =
      /* istanbul ignore next */
      (cov_uh9b41ud3().s[21]++, Object.keys(localStorage).filter(key => {
        /* istanbul ignore next */
        cov_uh9b41ud3().f[4]++;
        cov_uh9b41ud3().s[22]++;
        return key.startsWith(this.prefix);
      }));
      /* istanbul ignore next */
      cov_uh9b41ud3().s[23]++;
      keys.forEach(key => {
        /* istanbul ignore next */
        cov_uh9b41ud3().f[5]++;
        cov_uh9b41ud3().s[24]++;
        return localStorage.removeItem(key);
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_uh9b41ud3().s[25]++;
      console.error('Erreur lors du vidage du storage:', error);
    }
  }
  // Vérifier si une clé existe
  static has(key) {
    /* istanbul ignore next */
    cov_uh9b41ud3().f[6]++;
    cov_uh9b41ud3().s[26]++;
    return localStorage.getItem(`${this.prefix}${key}`) !== null;
  }
}
/* istanbul ignore next */
cov_uh9b41ud3().s[27]++;
exports.Storage = Storage;
/* istanbul ignore next */
cov_uh9b41ud3().s[28]++;
Object.defineProperty(Storage, "prefix", {
  enumerable: true,
  configurable: true,
  writable: true,
  value: 'myfithero_'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,