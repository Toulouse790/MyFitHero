{"version":3,"names":["react_1","cov_zalie9dn6","s","__importStar","require","OptimizedImage_1","calculateWorkoutStats","workout","f","duration","exercises","length","calories","reduce","total","exercise","exerciseCalories","b","setsMultiplier","sets","difficulty","exports","WorkoutCard","memo","onSelect","onFavorite","isFavorite","className","stats","useMemo","id","handleClick","useCallback","handleFavoriteClick","e","stopPropagation","difficultyStyles","baseClasses","favoriteButtonClass","jsx_runtime_1","jsxs","onClick","role","tabIndex","onKeyDown","key","title","children","jsx","OptimizedImage","src","imageUrl","alt","priority","sizes","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","description","tags","slice","map","tag","index","displayName","default"],"sources":["/workspaces/MyFitHero/src/shared/components/WorkoutCard.tsx"],"sourcesContent":["import React, { memo, useMemo, useCallback } from 'react';\nimport { OptimizedImage } from './OptimizedImage';\n\ninterface WorkoutStats {\n  duration: number;\n  exercises: number;\n  calories: number;\n  difficulty: 'facile' | 'moyen' | 'difficile';\n}\n\ninterface Workout {\n  id: string;\n  title: string;\n  description: string;\n  imageUrl?: string;\n  duration: number;\n  exercises: Array<{\n    name: string;\n    sets: number;\n    reps: number;\n    calories?: number;\n  }>;\n  difficulty: string;\n  category: string;\n  tags: string[];\n  createdAt: string;\n}\n\ninterface WorkoutCardProps {\n  workout: Workout;\n  onSelect?: (workoutId: string) => void;\n  onFavorite?: (workoutId: string) => void;\n  isFavorite?: boolean;\n  className?: string;\n}\n\n// Fonction coûteuse mémorisée\nconst calculateWorkoutStats = (workout: Workout): WorkoutStats => {\n  const duration = workout.duration;\n  const exercises = workout.exercises.length;\n  \n  // Calcul des calories basé sur les exercices\n  const calories = workout.exercises.reduce((total, exercise) => {\n    const exerciseCalories = exercise.calories || 0;\n    const setsMultiplier = exercise.sets || 1;\n    return total + (exerciseCalories * setsMultiplier);\n  }, 0);\n\n  // Déterminer la difficulté basée sur la durée et le nombre d'exercices\n  let difficulty: 'facile' | 'moyen' | 'difficile' = 'facile';\n  if (duration > 45 || exercises > 8) {\n    difficulty = 'difficile';\n  } else if (duration > 30 || exercises > 5) {\n    difficulty = 'moyen';\n  }\n\n  return {\n    duration,\n    exercises,\n    calories,\n    difficulty\n  };\n};\n\n// Composant mémorisé pour éviter les re-renders inutiles\nexport const WorkoutCard = memo<WorkoutCardProps>(({ \n  workout, \n  onSelect, \n  onFavorite, \n  isFavorite = false,\n  className = '' \n}) => {\n  // Utiliser useMemo pour les calculs coûteux\n  const stats = useMemo(() => \n    calculateWorkoutStats(workout), \n    [workout.id, workout.duration, workout.exercises.length]\n  );\n\n  // Utiliser useCallback pour les handlers\n  const handleClick = useCallback(() => {\n    onSelect?.(workout.id);\n  }, [workout.id, onSelect]);\n\n  const handleFavoriteClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation(); // Éviter de déclencher le clic du card\n    onFavorite?.(workout.id);\n  }, [workout.id, onFavorite]);\n\n  // Mémoriser les styles basés sur la difficulté\n  const difficultyStyles = useMemo(() => {\n    const baseClasses = 'px-2 py-1 text-xs font-medium rounded-full';\n    \n    switch (stats.difficulty) {\n      case 'facile':\n        return `${baseClasses} bg-green-100 text-green-800`;\n      case 'moyen':\n        return `${baseClasses} bg-yellow-100 text-yellow-800`;\n      case 'difficile':\n        return `${baseClasses} bg-red-100 text-red-800`;\n      default:\n        return `${baseClasses} bg-gray-100 text-gray-800`;\n    }\n  }, [stats.difficulty]);\n\n  // Mémoriser la couleur du bouton favori\n  const favoriteButtonClass = useMemo(() => \n    isFavorite \n      ? 'text-red-500 hover:text-red-600' \n      : 'text-gray-400 hover:text-red-500',\n    [isFavorite]\n  );\n\n  return (\n    <div \n      className={`bg-white rounded-lg shadow-md hover:shadow-lg transition-all duration-200 cursor-pointer transform hover:scale-105 ${className}`}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          handleClick();\n        }\n      }}\n      aria-label={`Sélectionner l'entraînement ${workout.title}`}\n    >\n      {/* Image d'en-tête */}\n      <div className=\"relative h-48 w-full\">\n        <OptimizedImage\n          src={workout.imageUrl || '/images/workout-placeholder.jpg'}\n          alt={workout.title}\n          className=\"rounded-t-lg\"\n          priority={false}\n          sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n        />\n        \n        {/* Badge de difficulté */}\n        <div className=\"absolute top-3 left-3\">\n          <span className={difficultyStyles}>\n            {stats.difficulty}\n          </span>\n        </div>\n\n        {/* Bouton favori */}\n        <button\n          className={`absolute top-3 right-3 p-2 bg-white/80 backdrop-blur-sm rounded-full transition-colors ${favoriteButtonClass}`}\n          onClick={handleFavoriteClick}\n          aria-label={isFavorite ? 'Retirer des favoris' : 'Ajouter aux favoris'}\n        >\n          <svg \n            className=\"w-5 h-5\" \n            fill={isFavorite ? 'currentColor' : 'none'} \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" \n            />\n          </svg>\n        </button>\n      </div>\n\n      {/* Contenu du card */}\n      <div className=\"p-4\">\n        {/* Titre et description */}\n        <div className=\"mb-3\">\n          <h3 className=\"font-semibold text-lg text-gray-900 mb-1 line-clamp-1\">\n            {workout.title}\n          </h3>\n          <p className=\"text-gray-600 text-sm line-clamp-2\">\n            {workout.description}\n          </p>\n        </div>\n\n        {/* Statistiques */}\n        <div className=\"flex items-center justify-between text-sm text-gray-500 mb-3\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{stats.duration} min</span>\n            </div>\n            \n            <div className=\"flex items-center\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\" />\n              </svg>\n              <span>{stats.exercises} exercices</span>\n            </div>\n            \n            <div className=\"flex items-center\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z\" />\n              </svg>\n              <span>{stats.calories} cal</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Tags */}\n        {workout.tags && workout.tags.length > 0 && (\n          <div className=\"flex flex-wrap gap-1 mb-3\">\n            {workout.tags.slice(0, 3).map((tag, index) => (\n              <span \n                key={index}\n                className=\"px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-md\"\n              >\n                {tag}\n              </span>\n            ))}\n            {workout.tags.length > 3 && (\n              <span className=\"px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-md\">\n                +{workout.tags.length - 3}\n              </span>\n            )}\n          </div>\n        )}\n\n        {/* Bouton d'action */}\n        <button \n          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors duration-200\"\n          onClick={handleClick}\n        >\n          Commencer l'entraînement\n        </button>\n      </div>\n    </div>\n  );\n});\n\nWorkoutCard.displayName = 'WorkoutCard';\n\nexport default WorkoutCard;"],"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","ignoreList":[]}