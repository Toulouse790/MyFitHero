b9d2685ddf204902d5ed482619159b11
"use strict";

/* istanbul ignore next */
function cov_y4wmiizgq() {
  var path = "/workspaces/MyFitHero/src/features/ai-coach/hooks/useLoadingState.ts";
  var hash = "5164397eecada6c1af41ba16c779ffc3472567fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/ai-coach/hooks/useLoadingState.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "25": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 42
        }
      },
      "26": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "27": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 38
        }
      },
      "28": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 54
        }
      },
      "29": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "30": {
        start: {
          line: 36,
          column: 80
        },
        end: {
          line: 36,
          column: 87
        }
      },
      "31": {
        start: {
          line: 37,
          column: 38
        },
        end: {
          line: 37,
          column: 75
        }
      },
      "32": {
        start: {
          line: 38,
          column: 30
        },
        end: {
          line: 38,
          column: 65
        }
      },
      "33": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 62
        }
      },
      "34": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "35": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "36": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "37": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 24
        }
      },
      "38": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 28
        }
      },
      "39": {
        start: {
          line: 47,
          column: 25
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "40": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 22
        }
      },
      "41": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 23
        }
      },
      "42": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "43": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 23
        }
      },
      "44": {
        start: {
          line: 54,
          column: 18
        },
        end: {
          line: 58,
          column: 51
        }
      },
      "45": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 37
        }
      },
      "46": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 31
        }
      },
      "47": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 29
        }
      },
      "48": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 74,
          column: 10
        }
      },
      "49": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 27
        }
      },
      "50": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 23
        }
      },
      "51": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "52": {
        start: {
          line: 64,
          column: 27
        },
        end: {
          line: 64,
          column: 42
        }
      },
      "53": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 32
        }
      },
      "54": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 26
        }
      },
      "55": {
        start: {
          line: 69,
          column: 33
        },
        end: {
          line: 69,
          column: 95
        }
      },
      "56": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 35
        }
      },
      "57": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 32
        }
      },
      "58": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 24
        }
      },
      "59": {
        start: {
          line: 76,
          column: 28
        },
        end: {
          line: 91,
          column: 10
        }
      },
      "60": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 27
        }
      },
      "61": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 23
        }
      },
      "62": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "63": {
        start: {
          line: 80,
          column: 27
        },
        end: {
          line: 80,
          column: 42
        }
      },
      "64": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 28
        }
      },
      "65": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 32
        }
      },
      "66": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 26
        }
      },
      "67": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 86,
          column: 95
        }
      },
      "68": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 35
        }
      },
      "69": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 32
        }
      },
      "70": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "71": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "72": {
        start: {
          line: 106,
          column: 54
        },
        end: {
          line: 106,
          column: 71
        }
      },
      "73": {
        start: {
          line: 107,
          column: 23
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "74": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 39
        }
      },
      "75": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 115,
          column: 6
        }
      },
      "76": {
        start: {
          line: 118,
          column: 77
        },
        end: {
          line: 118,
          column: 94
        }
      },
      "77": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 121,
          column: 32
        }
      },
      "78": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 44
        }
      },
      "79": {
        start: {
          line: 122,
          column: 19
        },
        end: {
          line: 124,
          column: 17
        }
      },
      "80": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 25
        }
      },
      "81": {
        start: {
          line: 126,
          column: 40
        },
        end: {
          line: 126,
          column: 68
        }
      },
      "82": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "83": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "84": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 22
        }
      },
      "85": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 32
        }
      },
      "86": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 140,
          column: 6
        }
      },
      "87": {
        start: {
          line: 144,
          column: 25
        },
        end: {
          line: 144,
          column: 42
        }
      },
      "88": {
        start: {
          line: 145,
          column: 38
        },
        end: {
          line: 145,
          column: 66
        }
      },
      "89": {
        start: {
          line: 146,
          column: 31
        },
        end: {
          line: 169,
          column: 33
        }
      },
      "90": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 28
        }
      },
      "91": {
        start: {
          line: 148,
          column: 31
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "92": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 152,
          column: 26
        }
      },
      "93": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 35
        }
      },
      "94": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 61
        }
      },
      "95": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "96": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 67
        }
      },
      "97": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "98": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 65
        }
      },
      "99": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 94
        }
      },
      "100": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 24
        }
      },
      "101": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 43
        }
      },
      "102": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 174,
          column: 6
        }
      },
      "103": {
        start: {
          line: 176,
          column: 0
        },
        end: {
          line: 176,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "useLoadingState",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 24
          }
        },
        loc: {
          start: {
            line: 35,
            column: 39
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 35
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 49
          }
        },
        loc: {
          start: {
            line: 40,
            column: 61
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 43,
            column: 51
          },
          end: {
            line: 43,
            column: 52
          }
        },
        loc: {
          start: {
            line: 43,
            column: 62
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 43
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 47,
            column: 50
          },
          end: {
            line: 47,
            column: 51
          }
        },
        loc: {
          start: {
            line: 47,
            column: 60
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 47
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 51,
            column: 48
          },
          end: {
            line: 51,
            column: 49
          }
        },
        loc: {
          start: {
            line: 51,
            column: 54
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 54,
            column: 43
          },
          end: {
            line: 54,
            column: 44
          }
        },
        loc: {
          start: {
            line: 54,
            column: 49
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 54
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 60,
            column: 45
          },
          end: {
            line: 60,
            column: 46
          }
        },
        loc: {
          start: {
            line: 60,
            column: 64
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 60
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 76,
            column: 53
          },
          end: {
            line: 76,
            column: 54
          }
        },
        loc: {
          start: {
            line: 76,
            column: 72
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 76
      },
      "14": {
        name: "useFormLoading",
        decl: {
          start: {
            line: 105,
            column: 9
          },
          end: {
            line: 105,
            column: 23
          }
        },
        loc: {
          start: {
            line: 105,
            column: 26
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 105
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 107,
            column: 48
          },
          end: {
            line: 107,
            column: 49
          }
        },
        loc: {
          start: {
            line: 107,
            column: 68
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 107
      },
      "16": {
        name: "useApiLoading",
        decl: {
          start: {
            line: 117,
            column: 9
          },
          end: {
            line: 117,
            column: 22
          }
        },
        loc: {
          start: {
            line: 117,
            column: 41
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 117
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 119,
            column: 45
          },
          end: {
            line: 119,
            column: 46
          }
        },
        loc: {
          start: {
            line: 119,
            column: 57
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 119
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 122,
            column: 44
          },
          end: {
            line: 122,
            column: 45
          }
        },
        loc: {
          start: {
            line: 122,
            column: 57
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 122
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 127,
            column: 30
          },
          end: {
            line: 127,
            column: 31
          }
        },
        loc: {
          start: {
            line: 127,
            column: 36
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 127
      },
      "20": {
        name: "useLoadingWithTimeout",
        decl: {
          start: {
            line: 143,
            column: 9
          },
          end: {
            line: 143,
            column: 30
          }
        },
        loc: {
          start: {
            line: 143,
            column: 50
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 143
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 146,
            column: 56
          },
          end: {
            line: 146,
            column: 57
          }
        },
        loc: {
          start: {
            line: 146,
            column: 75
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 146
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 148,
            column: 43
          },
          end: {
            line: 148,
            column: 44
          }
        },
        loc: {
          start: {
            line: 148,
            column: 58
          },
          end: {
            line: 153,
            column: 9
          }
        },
        line: 148
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 149,
            column: 23
          },
          end: {
            line: 149,
            column: 24
          }
        },
        loc: {
          start: {
            line: 149,
            column: 29
          },
          end: {
            line: 152,
            column: 13
          }
        },
        line: 149
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 35
          },
          end: {
            line: 35,
            column: 37
          }
        }],
        line: 35
      },
      "17": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 36,
            column: 34
          }
        }],
        line: 36
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 36
          },
          end: {
            line: 36,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 55
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 57
          },
          end: {
            line: 36,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 71
          },
          end: {
            line: 36,
            column: 75
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 69,
            column: 33
          },
          end: {
            line: 69,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 56
          },
          end: {
            line: 69,
            column: 67
          }
        }, {
          start: {
            line: 69,
            column: 70
          },
          end: {
            line: 69,
            column: 95
          }
        }],
        line: 69
      },
      "21": {
        loc: {
          start: {
            line: 86,
            column: 33
          },
          end: {
            line: 86,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 56
          },
          end: {
            line: 86,
            column: 67
          }
        }, {
          start: {
            line: 86,
            column: 70
          },
          end: {
            line: 86,
            column: 95
          }
        }],
        line: 86
      },
      "22": {
        loc: {
          start: {
            line: 117,
            column: 30
          },
          end: {
            line: 117,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 117,
            column: 37
          },
          end: {
            line: 117,
            column: 39
          }
        }],
        line: 117
      },
      "23": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "24": {
        loc: {
          start: {
            line: 143,
            column: 31
          },
          end: {
            line: 143,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 143,
            column: 43
          },
          end: {
            line: 143,
            column: 48
          }
        }],
        line: 143
      },
      "25": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: 161,
            column: 17
          },
          end: {
            line: 163,
            column: 13
          }
        }],
        line: 158
      },
      "26": {
        loc: {
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 158,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 158,
            column: 36
          }
        }, {
          start: {
            line: 158,
            column: 40
          },
          end: {
            line: 158,
            column: 81
          }
        }],
        line: 158
      },
      "27": {
        loc: {
          start: {
            line: 162,
            column: 38
          },
          end: {
            line: 162,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 61
          },
          end: {
            line: 162,
            column: 72
          }
        }, {
          start: {
            line: 162,
            column: 75
          },
          end: {
            line: 162,
            column: 92
          }
        }],
        line: 162
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/ai-coach/hooks/useLoadingState.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/ai-coach/hooks/useLoadingState.ts"],
      sourcesContent: ["import React, { useState, useEffect, useCallback } from 'react';\n\n// Types pour l'\xE9tat de chargement\nexport interface LoadingState {\n  isLoading: boolean;\n  error: string | undefined;\n  data: any;\n}\n\nexport interface UseLoadingStateOptions {\n  initialLoading?: boolean;\n  initialError?: string | undefined;\n  initialData?: any;\n}\n\nexport interface UseLoadingStateReturn<T = any> {\n  isLoading: boolean;\n  error: string | undefined;\n  data: T | undefined;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  setData: (data: T | null) => void;\n  clearError: () => void;\n  reset: () => void;\n  execute: <R = T>(asyncFn: () => Promise<R>) => Promise<R | null>;\n  executeWithData: <R = T>(asyncFn: () => Promise<R>) => Promise<R | null>;\n}\n\n/**\n * Hook personnalis\xE9 pour g\xE9rer l'\xE9tat de chargement\n * \xC9limine la duplication des patterns useState pour loading/error\n */\nexport function useLoadingState<T = any>(\n  options: UseLoadingStateOptions = {}\n): UseLoadingStateReturn<T> {\n  const { initialLoading = false, initialError = null, initialData = null } = options;\n\n  const [isLoading, setIsLoading] = useState(initialLoading);\n  const [error, setError] = useState<string | null>(initialError);\n  const [data, setData] = useState<T | null>(initialData);\n\n  const setLoading = useCallback((loading: boolean) => {\n    setIsLoading(loading);\n  }, []);\n\n  const setErrorState = useCallback((error: string | null) => {\n    setError(error);\n    setIsLoading(false);\n  }, []);\n\n  const setDataState = useCallback((data: T | null) => {\n    setData(data);\n    setError(null);\n  }, []);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  const reset = useCallback(() => {\n    setIsLoading(initialLoading);\n    setError(initialError);\n    setData(initialData);\n  }, [initialLoading, initialError, initialData]);\n\n  // Ex\xE9cute une fonction async avec gestion automatique du loading/error\n  const execute = useCallback(async <R = T>(asyncFn: () => Promise<R>): Promise<R | null> => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await asyncFn();\n      setIsLoading(false);\n      return result;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Une erreur est survenue';\n      setError(errorMessage);\n      setIsLoading(false);\n      return null;\n    }\n  }, []);\n\n  // Ex\xE9cute une fonction async et stocke le r\xE9sultat dans data\n  const executeWithData = useCallback(\n    async <R = T>(asyncFn: () => Promise<R>): Promise<R | null> => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const result = await asyncFn();\n        setData(result as T);\n        setIsLoading(false);\n        return result;\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Une erreur est survenue';\n        setError(errorMessage);\n        setIsLoading(false);\n        return null;\n      }\n    },\n    []\n  );\n\n  return {\n    isLoading,\n    error,\n    data,\n    setLoading,\n    setError: setErrorState,\n    setData: setDataState,\n    clearError,\n    reset,\n    execute,\n    executeWithData,\n  };\n}\n\n// Hook sp\xE9cialis\xE9 pour les formulaires\nexport interface UseFormLoadingReturn {\n  isSubmitting: boolean;\n  error: string | undefined;\n  submitForm: <T>(submitFn: () => Promise<T>) => Promise<T | null>;\n  clearError: () => void;\n}\n\nexport function useFormLoading(): UseFormLoadingReturn {\n  const { isLoading, error, clearError, execute } = useLoadingState();\n\n  const submitForm = useCallback(\n    async <T>(submitFn: () => Promise<T>): Promise<T | null> => {\n      return await execute(submitFn);\n    },\n    [execute]\n  );\n\n  return {\n    isSubmitting: isLoading,\n    error,\n    submitForm,\n    clearError,\n  };\n}\n\n// Hook sp\xE9cialis\xE9 pour les appels API\nexport interface UseApiLoadingReturn<T> {\n  isLoading: boolean;\n  error: string | undefined;\n  data: T | undefined;\n  refetch: () => Promise<T | null>;\n  mutate: (newData: T | null) => void;\n  clearError: () => void;\n}\n\nexport function useApiLoading<T = any>(\n  apiFn: () => Promise<T>,\n  deps: unknown[] = []\n): UseApiLoadingReturn<T> {\n  const { isLoading, error, data, clearError, executeWithData, setData } = useLoadingState<T>();\n\n  const refetch = useCallback(async () => {\n    return await executeWithData(apiFn);\n  }, [executeWithData, apiFn]);\n\n  const mutate = useCallback(\n    (newData: T | null) => {\n      setData(newData);\n    },\n    [setData]\n  );\n\n  // Auto-fetch au montage du composant\n  const [hasFetched, setHasFetched] = useState(false);\n\n  React.useEffect(() => {\n    if (!hasFetched) {\n      refetch();\n      setHasFetched(true);\n    }\n  }, deps);\n\n  return {\n    isLoading,\n    error,\n    data,\n    refetch,\n    mutate,\n    clearError,\n  };\n}\n\n// Types d'export pour r\xE9utilisation\nexport type LoadingHook<T = any> = UseLoadingStateReturn<T>;\nexport type FormLoadingHook = UseFormLoadingReturn;\nexport type ApiLoadingHook<T = any> = UseApiLoadingReturn<T>;\n\n// Pattern commun: loading avec timeout\nexport function useLoadingWithTimeout<T = any>(\n  timeoutMs: number = 10000\n): UseLoadingStateReturn<T> & { isTimeout: boolean } {\n  const loadingState = useLoadingState<T>();\n  const [isTimeout, setIsTimeout] = useState(false);\n\n  const executeWithTimeout = useCallback(\n    async <R = T>(asyncFn: () => Promise<R>): Promise<R | null> => {\n      setIsTimeout(false);\n\n      const timeoutPromise = new Promise<never>((_, reject) => {\n        setTimeout(() => {\n          setIsTimeout(true);\n          reject(new Error(\"D\xE9lai d'attente d\xE9pass\xE9\"));\n        }, timeoutMs);\n      });\n\n      try {\n        return await Promise.race([asyncFn(), timeoutPromise]);\n      } catch (err) {\n        if (err instanceof Error && err.message === \"D\xE9lai d'attente d\xE9pass\xE9\") {\n          loadingState.setError(\"D\xE9lai d'attente d\xE9pass\xE9\");\n        } else {\n          loadingState.setError(err instanceof Error ? err.message : 'Erreur inconnue');\n        }\n        return null;\n      } finally {\n        loadingState.setLoading(false);\n      }\n    },\n    [loadingState, timeoutMs]\n  );\n\n  return {\n    ...loadingState,\n    isTimeout,\n    execute: executeWithTimeout,\n  };\n}\n\nexport default useLoadingState;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5164397eecada6c1af41ba16c779ffc3472567fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_y4wmiizgq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y4wmiizgq();
var __createBinding =
/* istanbul ignore next */
(cov_y4wmiizgq().s[0]++,
/* istanbul ignore next */
(cov_y4wmiizgq().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_y4wmiizgq().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_y4wmiizgq().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_y4wmiizgq().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_y4wmiizgq().f[0]++;
  cov_y4wmiizgq().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_y4wmiizgq().b[2][0]++;
    cov_y4wmiizgq().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_y4wmiizgq().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_y4wmiizgq().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_y4wmiizgq().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_y4wmiizgq().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_y4wmiizgq().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_y4wmiizgq().b[5][1]++,
  /* istanbul ignore next */
  (cov_y4wmiizgq().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_y4wmiizgq().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_y4wmiizgq().b[3][0]++;
    cov_y4wmiizgq().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_y4wmiizgq().f[1]++;
        cov_y4wmiizgq().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_y4wmiizgq().b[3][1]++;
  }
  cov_y4wmiizgq().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_y4wmiizgq().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_y4wmiizgq().f[2]++;
  cov_y4wmiizgq().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_y4wmiizgq().b[7][0]++;
    cov_y4wmiizgq().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_y4wmiizgq().b[7][1]++;
  }
  cov_y4wmiizgq().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_y4wmiizgq().s[11]++,
/* istanbul ignore next */
(cov_y4wmiizgq().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_y4wmiizgq().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_y4wmiizgq().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_y4wmiizgq().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_y4wmiizgq().f[3]++;
  cov_y4wmiizgq().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_y4wmiizgq().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_y4wmiizgq().f[4]++;
  cov_y4wmiizgq().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_y4wmiizgq().s[14]++,
/* istanbul ignore next */
(cov_y4wmiizgq().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_y4wmiizgq().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_y4wmiizgq().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_y4wmiizgq().f[5]++;
  cov_y4wmiizgq().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_y4wmiizgq().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_y4wmiizgq().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_y4wmiizgq().b[11][0]++;
    cov_y4wmiizgq().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_y4wmiizgq().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[17]++, {});
  /* istanbul ignore next */
  cov_y4wmiizgq().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_y4wmiizgq().b[13][0]++;
    cov_y4wmiizgq().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_y4wmiizgq().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_y4wmiizgq().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_y4wmiizgq().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_y4wmiizgq().b[14][0]++;
        cov_y4wmiizgq().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_y4wmiizgq().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_y4wmiizgq().b[13][1]++;
  }
  cov_y4wmiizgq().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_y4wmiizgq().s[23]++;
  return result;
}));
/* istanbul ignore next */
cov_y4wmiizgq().s[24]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_y4wmiizgq().s[25]++;
exports.useLoadingState = useLoadingState;
/* istanbul ignore next */
cov_y4wmiizgq().s[26]++;
exports.useFormLoading = useFormLoading;
/* istanbul ignore next */
cov_y4wmiizgq().s[27]++;
exports.useApiLoading = useApiLoading;
/* istanbul ignore next */
cov_y4wmiizgq().s[28]++;
exports.useLoadingWithTimeout = useLoadingWithTimeout;
const react_1 =
/* istanbul ignore next */
(cov_y4wmiizgq().s[29]++, __importStar(require("react")));
/**
 * Hook personnalisé pour gérer l'état de chargement
 * Élimine la duplication des patterns useState pour loading/error
 */
function useLoadingState(options =
/* istanbul ignore next */
(cov_y4wmiizgq().b[16][0]++, {})) {
  /* istanbul ignore next */
  cov_y4wmiizgq().f[6]++;
  const {
    initialLoading =
    /* istanbul ignore next */
    (cov_y4wmiizgq().b[17][0]++, false),
    initialError =
    /* istanbul ignore next */
    (cov_y4wmiizgq().b[18][0]++, null),
    initialData =
    /* istanbul ignore next */
    (cov_y4wmiizgq().b[19][0]++, null)
  } =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[30]++, options);
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[31]++, (0, react_1.useState)(initialLoading));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[32]++, (0, react_1.useState)(initialError));
  const [data, setData] =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[33]++, (0, react_1.useState)(initialData));
  const setLoading =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[34]++, (0, react_1.useCallback)(loading => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[7]++;
    cov_y4wmiizgq().s[35]++;
    setIsLoading(loading);
  }, []));
  const setErrorState =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[36]++, (0, react_1.useCallback)(error => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[8]++;
    cov_y4wmiizgq().s[37]++;
    setError(error);
    /* istanbul ignore next */
    cov_y4wmiizgq().s[38]++;
    setIsLoading(false);
  }, []));
  const setDataState =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[39]++, (0, react_1.useCallback)(data => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[9]++;
    cov_y4wmiizgq().s[40]++;
    setData(data);
    /* istanbul ignore next */
    cov_y4wmiizgq().s[41]++;
    setError(null);
  }, []));
  const clearError =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[42]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[10]++;
    cov_y4wmiizgq().s[43]++;
    setError(null);
  }, []));
  const reset =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[44]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[11]++;
    cov_y4wmiizgq().s[45]++;
    setIsLoading(initialLoading);
    /* istanbul ignore next */
    cov_y4wmiizgq().s[46]++;
    setError(initialError);
    /* istanbul ignore next */
    cov_y4wmiizgq().s[47]++;
    setData(initialData);
  }, [initialLoading, initialError, initialData]));
  // Exécute une fonction async avec gestion automatique du loading/error
  const execute =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[48]++, (0, react_1.useCallback)(async asyncFn => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[12]++;
    cov_y4wmiizgq().s[49]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_y4wmiizgq().s[50]++;
    setError(null);
    /* istanbul ignore next */
    cov_y4wmiizgq().s[51]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_y4wmiizgq().s[52]++, await asyncFn());
      /* istanbul ignore next */
      cov_y4wmiizgq().s[53]++;
      setIsLoading(false);
      /* istanbul ignore next */
      cov_y4wmiizgq().s[54]++;
      return result;
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_y4wmiizgq().s[55]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_y4wmiizgq().b[20][0]++, err.message) :
      /* istanbul ignore next */
      (cov_y4wmiizgq().b[20][1]++, 'Une erreur est survenue'));
      /* istanbul ignore next */
      cov_y4wmiizgq().s[56]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_y4wmiizgq().s[57]++;
      setIsLoading(false);
      /* istanbul ignore next */
      cov_y4wmiizgq().s[58]++;
      return null;
    }
  }, []));
  // Exécute une fonction async et stocke le résultat dans data
  const executeWithData =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[59]++, (0, react_1.useCallback)(async asyncFn => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[13]++;
    cov_y4wmiizgq().s[60]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_y4wmiizgq().s[61]++;
    setError(null);
    /* istanbul ignore next */
    cov_y4wmiizgq().s[62]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_y4wmiizgq().s[63]++, await asyncFn());
      /* istanbul ignore next */
      cov_y4wmiizgq().s[64]++;
      setData(result);
      /* istanbul ignore next */
      cov_y4wmiizgq().s[65]++;
      setIsLoading(false);
      /* istanbul ignore next */
      cov_y4wmiizgq().s[66]++;
      return result;
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_y4wmiizgq().s[67]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_y4wmiizgq().b[21][0]++, err.message) :
      /* istanbul ignore next */
      (cov_y4wmiizgq().b[21][1]++, 'Une erreur est survenue'));
      /* istanbul ignore next */
      cov_y4wmiizgq().s[68]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_y4wmiizgq().s[69]++;
      setIsLoading(false);
      /* istanbul ignore next */
      cov_y4wmiizgq().s[70]++;
      return null;
    }
  }, []));
  /* istanbul ignore next */
  cov_y4wmiizgq().s[71]++;
  return {
    isLoading,
    error,
    data,
    setLoading,
    setError: setErrorState,
    setData: setDataState,
    clearError,
    reset,
    execute,
    executeWithData
  };
}
function useFormLoading() {
  /* istanbul ignore next */
  cov_y4wmiizgq().f[14]++;
  const {
    isLoading,
    error,
    clearError,
    execute
  } =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[72]++, useLoadingState());
  const submitForm =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[73]++, (0, react_1.useCallback)(async submitFn => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[15]++;
    cov_y4wmiizgq().s[74]++;
    return await execute(submitFn);
  }, [execute]));
  /* istanbul ignore next */
  cov_y4wmiizgq().s[75]++;
  return {
    isSubmitting: isLoading,
    error,
    submitForm,
    clearError
  };
}
function useApiLoading(apiFn, deps =
/* istanbul ignore next */
(cov_y4wmiizgq().b[22][0]++, [])) {
  /* istanbul ignore next */
  cov_y4wmiizgq().f[16]++;
  const {
    isLoading,
    error,
    data,
    clearError,
    executeWithData,
    setData
  } =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[76]++, useLoadingState());
  const refetch =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[77]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[17]++;
    cov_y4wmiizgq().s[78]++;
    return await executeWithData(apiFn);
  }, [executeWithData, apiFn]));
  const mutate =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[79]++, (0, react_1.useCallback)(newData => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[18]++;
    cov_y4wmiizgq().s[80]++;
    setData(newData);
  }, [setData]));
  // Auto-fetch au montage du composant
  const [hasFetched, setHasFetched] =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[81]++, (0, react_1.useState)(false));
  /* istanbul ignore next */
  cov_y4wmiizgq().s[82]++;
  react_1.default.useEffect(() => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[19]++;
    cov_y4wmiizgq().s[83]++;
    if (!hasFetched) {
      /* istanbul ignore next */
      cov_y4wmiizgq().b[23][0]++;
      cov_y4wmiizgq().s[84]++;
      refetch();
      /* istanbul ignore next */
      cov_y4wmiizgq().s[85]++;
      setHasFetched(true);
    } else
    /* istanbul ignore next */
    {
      cov_y4wmiizgq().b[23][1]++;
    }
  }, deps);
  /* istanbul ignore next */
  cov_y4wmiizgq().s[86]++;
  return {
    isLoading,
    error,
    data,
    refetch,
    mutate,
    clearError
  };
}
// Pattern commun: loading avec timeout
function useLoadingWithTimeout(timeoutMs =
/* istanbul ignore next */
(cov_y4wmiizgq().b[24][0]++, 10000)) {
  /* istanbul ignore next */
  cov_y4wmiizgq().f[20]++;
  const loadingState =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[87]++, useLoadingState());
  const [isTimeout, setIsTimeout] =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[88]++, (0, react_1.useState)(false));
  const executeWithTimeout =
  /* istanbul ignore next */
  (cov_y4wmiizgq().s[89]++, (0, react_1.useCallback)(async asyncFn => {
    /* istanbul ignore next */
    cov_y4wmiizgq().f[21]++;
    cov_y4wmiizgq().s[90]++;
    setIsTimeout(false);
    const timeoutPromise =
    /* istanbul ignore next */
    (cov_y4wmiizgq().s[91]++, new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_y4wmiizgq().f[22]++;
      cov_y4wmiizgq().s[92]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_y4wmiizgq().f[23]++;
        cov_y4wmiizgq().s[93]++;
        setIsTimeout(true);
        /* istanbul ignore next */
        cov_y4wmiizgq().s[94]++;
        reject(new Error("Délai d'attente dépassé"));
      }, timeoutMs);
    }));
    /* istanbul ignore next */
    cov_y4wmiizgq().s[95]++;
    try {
      /* istanbul ignore next */
      cov_y4wmiizgq().s[96]++;
      return await Promise.race([asyncFn(), timeoutPromise]);
    } catch (err) {
      /* istanbul ignore next */
      cov_y4wmiizgq().s[97]++;
      if (
      /* istanbul ignore next */
      (cov_y4wmiizgq().b[26][0]++, err instanceof Error) &&
      /* istanbul ignore next */
      (cov_y4wmiizgq().b[26][1]++, err.message === "Délai d'attente dépassé")) {
        /* istanbul ignore next */
        cov_y4wmiizgq().b[25][0]++;
        cov_y4wmiizgq().s[98]++;
        loadingState.setError("Délai d'attente dépassé");
      } else {
        /* istanbul ignore next */
        cov_y4wmiizgq().b[25][1]++;
        cov_y4wmiizgq().s[99]++;
        loadingState.setError(err instanceof Error ?
        /* istanbul ignore next */
        (cov_y4wmiizgq().b[27][0]++, err.message) :
        /* istanbul ignore next */
        (cov_y4wmiizgq().b[27][1]++, 'Erreur inconnue'));
      }
      /* istanbul ignore next */
      cov_y4wmiizgq().s[100]++;
      return null;
    } finally {
      /* istanbul ignore next */
      cov_y4wmiizgq().s[101]++;
      loadingState.setLoading(false);
    }
  }, [loadingState, timeoutMs]));
  /* istanbul ignore next */
  cov_y4wmiizgq().s[102]++;
  return {
    ...loadingState,
    isTimeout,
    execute: executeWithTimeout
  };
}
/* istanbul ignore next */
cov_y4wmiizgq().s[103]++;
exports.default = useLoadingState;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,