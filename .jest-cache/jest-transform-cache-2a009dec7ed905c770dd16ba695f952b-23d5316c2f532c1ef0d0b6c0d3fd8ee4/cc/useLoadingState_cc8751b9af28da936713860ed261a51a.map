{"version":3,"names":["exports","useLoadingState","cov_y4wmiizgq","s","useFormLoading","useApiLoading","useLoadingWithTimeout","react_1","__importStar","require","options","b","f","initialLoading","initialError","initialData","isLoading","setIsLoading","useState","error","setError","data","setData","setLoading","useCallback","loading","setErrorState","setDataState","clearError","reset","execute","asyncFn","result","err","errorMessage","Error","message","executeWithData","submitForm","submitFn","isSubmitting","apiFn","deps","refetch","mutate","newData","hasFetched","setHasFetched","default","useEffect","timeoutMs","loadingState","isTimeout","setIsTimeout","executeWithTimeout","timeoutPromise","Promise","_","reject","setTimeout","race"],"sources":["/workspaces/MyFitHero/src/features/ai-coach/hooks/useLoadingState.ts"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\n// Types pour l'état de chargement\nexport interface LoadingState {\n  isLoading: boolean;\n  error: string | undefined;\n  data: any;\n}\n\nexport interface UseLoadingStateOptions {\n  initialLoading?: boolean;\n  initialError?: string | undefined;\n  initialData?: any;\n}\n\nexport interface UseLoadingStateReturn<T = any> {\n  isLoading: boolean;\n  error: string | undefined;\n  data: T | undefined;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  setData: (data: T | null) => void;\n  clearError: () => void;\n  reset: () => void;\n  execute: <R = T>(asyncFn: () => Promise<R>) => Promise<R | null>;\n  executeWithData: <R = T>(asyncFn: () => Promise<R>) => Promise<R | null>;\n}\n\n/**\n * Hook personnalisé pour gérer l'état de chargement\n * Élimine la duplication des patterns useState pour loading/error\n */\nexport function useLoadingState<T = any>(\n  options: UseLoadingStateOptions = {}\n): UseLoadingStateReturn<T> {\n  const { initialLoading = false, initialError = null, initialData = null } = options;\n\n  const [isLoading, setIsLoading] = useState(initialLoading);\n  const [error, setError] = useState<string | null>(initialError);\n  const [data, setData] = useState<T | null>(initialData);\n\n  const setLoading = useCallback((loading: boolean) => {\n    setIsLoading(loading);\n  }, []);\n\n  const setErrorState = useCallback((error: string | null) => {\n    setError(error);\n    setIsLoading(false);\n  }, []);\n\n  const setDataState = useCallback((data: T | null) => {\n    setData(data);\n    setError(null);\n  }, []);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  const reset = useCallback(() => {\n    setIsLoading(initialLoading);\n    setError(initialError);\n    setData(initialData);\n  }, [initialLoading, initialError, initialData]);\n\n  // Exécute une fonction async avec gestion automatique du loading/error\n  const execute = useCallback(async <R = T>(asyncFn: () => Promise<R>): Promise<R | null> => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await asyncFn();\n      setIsLoading(false);\n      return result;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Une erreur est survenue';\n      setError(errorMessage);\n      setIsLoading(false);\n      return null;\n    }\n  }, []);\n\n  // Exécute une fonction async et stocke le résultat dans data\n  const executeWithData = useCallback(\n    async <R = T>(asyncFn: () => Promise<R>): Promise<R | null> => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const result = await asyncFn();\n        setData(result as T);\n        setIsLoading(false);\n        return result;\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Une erreur est survenue';\n        setError(errorMessage);\n        setIsLoading(false);\n        return null;\n      }\n    },\n    []\n  );\n\n  return {\n    isLoading,\n    error,\n    data,\n    setLoading,\n    setError: setErrorState,\n    setData: setDataState,\n    clearError,\n    reset,\n    execute,\n    executeWithData,\n  };\n}\n\n// Hook spécialisé pour les formulaires\nexport interface UseFormLoadingReturn {\n  isSubmitting: boolean;\n  error: string | undefined;\n  submitForm: <T>(submitFn: () => Promise<T>) => Promise<T | null>;\n  clearError: () => void;\n}\n\nexport function useFormLoading(): UseFormLoadingReturn {\n  const { isLoading, error, clearError, execute } = useLoadingState();\n\n  const submitForm = useCallback(\n    async <T>(submitFn: () => Promise<T>): Promise<T | null> => {\n      return await execute(submitFn);\n    },\n    [execute]\n  );\n\n  return {\n    isSubmitting: isLoading,\n    error,\n    submitForm,\n    clearError,\n  };\n}\n\n// Hook spécialisé pour les appels API\nexport interface UseApiLoadingReturn<T> {\n  isLoading: boolean;\n  error: string | undefined;\n  data: T | undefined;\n  refetch: () => Promise<T | null>;\n  mutate: (newData: T | null) => void;\n  clearError: () => void;\n}\n\nexport function useApiLoading<T = any>(\n  apiFn: () => Promise<T>,\n  deps: unknown[] = []\n): UseApiLoadingReturn<T> {\n  const { isLoading, error, data, clearError, executeWithData, setData } = useLoadingState<T>();\n\n  const refetch = useCallback(async () => {\n    return await executeWithData(apiFn);\n  }, [executeWithData, apiFn]);\n\n  const mutate = useCallback(\n    (newData: T | null) => {\n      setData(newData);\n    },\n    [setData]\n  );\n\n  // Auto-fetch au montage du composant\n  const [hasFetched, setHasFetched] = useState(false);\n\n  React.useEffect(() => {\n    if (!hasFetched) {\n      refetch();\n      setHasFetched(true);\n    }\n  }, deps);\n\n  return {\n    isLoading,\n    error,\n    data,\n    refetch,\n    mutate,\n    clearError,\n  };\n}\n\n// Types d'export pour réutilisation\nexport type LoadingHook<T = any> = UseLoadingStateReturn<T>;\nexport type FormLoadingHook = UseFormLoadingReturn;\nexport type ApiLoadingHook<T = any> = UseApiLoadingReturn<T>;\n\n// Pattern commun: loading avec timeout\nexport function useLoadingWithTimeout<T = any>(\n  timeoutMs: number = 10000\n): UseLoadingStateReturn<T> & { isTimeout: boolean } {\n  const loadingState = useLoadingState<T>();\n  const [isTimeout, setIsTimeout] = useState(false);\n\n  const executeWithTimeout = useCallback(\n    async <R = T>(asyncFn: () => Promise<R>): Promise<R | null> => {\n      setIsTimeout(false);\n\n      const timeoutPromise = new Promise<never>((_, reject) => {\n        setTimeout(() => {\n          setIsTimeout(true);\n          reject(new Error(\"Délai d'attente dépassé\"));\n        }, timeoutMs);\n      });\n\n      try {\n        return await Promise.race([asyncFn(), timeoutPromise]);\n      } catch (err) {\n        if (err instanceof Error && err.message === \"Délai d'attente dépassé\") {\n          loadingState.setError(\"Délai d'attente dépassé\");\n        } else {\n          loadingState.setError(err instanceof Error ? err.message : 'Erreur inconnue');\n        }\n        return null;\n      } finally {\n        loadingState.setLoading(false);\n      }\n    },\n    [loadingState, timeoutMs]\n  );\n\n  return {\n    ...loadingState,\n    isTimeout,\n    execute: executeWithTimeout,\n  };\n}\n\nexport default useLoadingState;\n"],"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","ignoreList":[]}