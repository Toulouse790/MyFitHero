{"version":3,"names":["cov_120wzdr84r","actualCoverage","s","react_1","require","useSignupValidation","f","errors","setErrors","useState","validateField","useCallback","name","value","confirmValue","b","length","undefined","emailRegex","test","validateSingleField","formData","error","password","prev","confirmPassword","confirmError","validateForm","newErrors","Object","keys","forEach","key","fieldName","getPasswordStrength","strength","label","color","isFormValid","firstName","trim","lastName","email","some","clearErrors","setGeneralError","message","general","exports"],"sources":["/workspaces/MyFitHero/src/features/auth/hooks/useSignupValidation.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nexport interface SignupFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidationErrors {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n  general?: string;\n}\n\nexport const useSignupValidation = () => {\n  const [errors, setErrors] = useState<ValidationErrors>({});\n\n  const validateField = useCallback((name: keyof SignupFormData, value: string, confirmValue?: string): string | undefined => {\n    switch (name) {\n      case 'firstName':\n        return value.length < 2 ? 'Le prénom doit contenir au moins 2 caractères' : undefined;\n      \n      case 'lastName':\n        return value.length < 2 ? 'Le nom doit contenir au moins 2 caractères' : undefined;\n      \n      case 'email':\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return !emailRegex.test(value) ? 'Email invalide' : undefined;\n      \n      case 'password':\n        if (value.length < 8) return 'Le mot de passe doit contenir au moins 8 caractères';\n        if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(value)) {\n          return 'Le mot de passe doit contenir au moins une minuscule, une majuscule et un chiffre';\n        }\n        return undefined;\n      \n      case 'confirmPassword':\n        return confirmValue && value !== confirmValue ? 'Les mots de passe ne correspondent pas' : undefined;\n      \n      default:\n        return undefined;\n    }\n  }, []);\n\n  const validateSingleField = useCallback((name: keyof SignupFormData, value: string, formData: SignupFormData) => {\n    const error = validateField(name, value, name === 'confirmPassword' ? formData.password : undefined);\n    setErrors(prev => ({ ...prev, [name]: error }));\n    \n    // Validation spéciale pour confirmPassword si password change\n    if (name === 'password' && formData.confirmPassword) {\n      const confirmError = validateField('confirmPassword', formData.confirmPassword, value);\n      setErrors(prev => ({ ...prev, confirmPassword: confirmError }));\n    }\n    \n    return !error;\n  }, [validateField]);\n\n  const validateForm = useCallback((formData: SignupFormData): boolean => {\n    const newErrors: ValidationErrors = {};\n    \n    Object.keys(formData).forEach(key => {\n      const fieldName = key as keyof SignupFormData;\n      const error = validateField(\n        fieldName, \n        formData[fieldName], \n        fieldName === 'confirmPassword' ? formData.password : undefined\n      );\n      if (error) newErrors[fieldName] = error;\n    });\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }, [validateField]);\n\n  const getPasswordStrength = useCallback((password: string): { strength: number; label: string; color: string } => {\n    let strength = 0;\n    if (password.length >= 8) strength += 25;\n    if (/[a-z]/.test(password)) strength += 25;\n    if (/[A-Z]/.test(password)) strength += 25;\n    if (/\\d/.test(password)) strength += 25;\n    \n    if (strength <= 25) return { strength, label: 'Faible', color: 'bg-red-500' };\n    if (strength <= 50) return { strength, label: 'Moyen', color: 'bg-orange-500' };\n    if (strength <= 75) return { strength, label: 'Bon', color: 'bg-yellow-500' };\n    return { strength, label: 'Excellent', color: 'bg-green-500' };\n  }, []);\n\n  const isFormValid = useCallback((formData: SignupFormData): boolean => {\n    return (\n      formData.firstName.trim() !== '' &&\n      formData.lastName.trim() !== '' &&\n      formData.email.trim() !== '' &&\n      formData.password.trim() !== '' &&\n      formData.confirmPassword.trim() !== '' &&\n      !Object.keys(errors).some(key => key !== 'general' && errors[key as keyof ValidationErrors])\n    );\n  }, [errors]);\n\n  const clearErrors = useCallback(() => {\n    setErrors({});\n  }, []);\n\n  const setGeneralError = useCallback((message: string) => {\n    setErrors(prev => ({ ...prev, general: message }));\n  }, []);\n\n  return {\n    errors,\n    validateSingleField,\n    validateForm,\n    getPasswordStrength,\n    isFormValid,\n    clearErrors,\n    setGeneralError\n  };\n};"],"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","ignoreList":[]}