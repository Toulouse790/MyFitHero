b45eb0d0b6942148e828de52f2916c31
"use strict";

/* istanbul ignore next */
function cov_120wzdr84r() {
  var path = "/workspaces/MyFitHero/src/features/auth/hooks/useSignupValidation.ts";
  var hash = "316c347066da96bba2f26ee21a2449b8a99ed80b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/auth/hooks/useSignupValidation.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 37
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 28
        },
        end: {
          line: 91,
          column: 1
        }
      },
      "4": {
        start: {
          line: 6,
          column: 32
        },
        end: {
          line: 6,
          column: 57
        }
      },
      "5": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "6": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "7": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 102
        }
      },
      "8": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 99
        }
      },
      "9": {
        start: {
          line: 14,
          column: 35
        },
        end: {
          line: 14,
          column: 63
        }
      },
      "10": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 78
        }
      },
      "11": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 18,
          column: 81
        }
      },
      "12": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 18,
          column: 81
        }
      },
      "13": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 21,
          column: 17
        }
      },
      "14": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 111
        }
      },
      "15": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "16": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 117
        }
      },
      "17": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "18": {
        start: {
          line: 29,
          column: 32
        },
        end: {
          line: 38,
          column: 23
        }
      },
      "19": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 30,
          column: 108
        }
      },
      "20": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 56
        }
      },
      "21": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "22": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "23": {
        start: {
          line: 34,
          column: 33
        },
        end: {
          line: 34,
          column: 98
        }
      },
      "24": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 76
        }
      },
      "25": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 35,
          column: 73
        }
      },
      "26": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 22
        }
      },
      "27": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 49,
          column: 23
        }
      },
      "28": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 28
        }
      },
      "29": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "30": {
        start: {
          line: 42,
          column: 30
        },
        end: {
          line: 42,
          column: 33
        }
      },
      "31": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 43,
          column: 136
        }
      },
      "32": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 45,
          column: 45
        }
      },
      "33": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 45
        }
      },
      "34": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 29
        }
      },
      "35": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 51
        }
      },
      "36": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "37": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 24
        }
      },
      "38": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 53,
          column: 27
        }
      },
      "39": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 27
        }
      },
      "40": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 55,
          column: 27
        }
      },
      "41": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 27
        }
      },
      "42": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 57,
          column: 27
        }
      },
      "43": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 27
        }
      },
      "44": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 59,
          column: 27
        }
      },
      "45": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 27
        }
      },
      "46": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 61,
          column: 70
        }
      },
      "47": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 70
        }
      },
      "48": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 63,
          column: 72
        }
      },
      "49": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 72
        }
      },
      "50": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "51": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "52": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 71
        }
      },
      "53": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 75,
          column: 16
        }
      },
      "54": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 74,
          column: 80
        }
      },
      "55": {
        start: {
          line: 74,
          column: 45
        },
        end: {
          line: 74,
          column: 77
        }
      },
      "56": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "57": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 22
        }
      },
      "58": {
        start: {
          line: 79,
          column: 28
        },
        end: {
          line: 81,
          column: 10
        }
      },
      "59": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 59
        }
      },
      "60": {
        start: {
          line: 80,
          column: 27
        },
        end: {
          line: 80,
          column: 56
        }
      },
      "61": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 90,
          column: 6
        }
      },
      "62": {
        start: {
          line: 92,
          column: 0
        },
        end: {
          line: 92,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 28
          },
          end: {
            line: 5,
            column: 29
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 51
          },
          end: {
            line: 7,
            column: 52
          }
        },
        loc: {
          start: {
            line: 7,
            column: 82
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 57
          },
          end: {
            line: 29,
            column: 58
          }
        },
        loc: {
          start: {
            line: 29,
            column: 84
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 18
          },
          end: {
            line: 31,
            column: 19
          }
        },
        loc: {
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 31,
            column: 53
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 23
          }
        },
        loc: {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 73
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 39,
            column: 50
          },
          end: {
            line: 39,
            column: 51
          }
        },
        loc: {
          start: {
            line: 39,
            column: 64
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 39
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 41,
            column: 38
          },
          end: {
            line: 41,
            column: 39
          }
        },
        loc: {
          start: {
            line: 41,
            column: 45
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 41
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 58
          }
        },
        loc: {
          start: {
            line: 50,
            column: 71
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 50
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 49
          },
          end: {
            line: 68,
            column: 50
          }
        },
        loc: {
          start: {
            line: 68,
            column: 63
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 74,
            column: 38
          },
          end: {
            line: 74,
            column: 39
          }
        },
        loc: {
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 74,
            column: 77
          }
        },
        line: 74
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 76,
            column: 49
          },
          end: {
            line: 76,
            column: 50
          }
        },
        loc: {
          start: {
            line: 76,
            column: 55
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 76
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 79,
            column: 53
          },
          end: {
            line: 79,
            column: 54
          }
        },
        loc: {
          start: {
            line: 79,
            column: 66
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 79
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 80,
            column: 18
          },
          end: {
            line: 80,
            column: 19
          }
        },
        loc: {
          start: {
            line: 80,
            column: 27
          },
          end: {
            line: 80,
            column: 56
          }
        },
        line: 80
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 10,
            column: 102
          }
        }, {
          start: {
            line: 11,
            column: 12
          },
          end: {
            line: 12,
            column: 99
          }
        }, {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 15,
            column: 78
          }
        }, {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 22,
            column: 33
          }
        }, {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 24,
            column: 117
          }
        }, {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 26,
            column: 33
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 10,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 42
          },
          end: {
            line: 10,
            column: 89
          }
        }, {
          start: {
            line: 10,
            column: 92
          },
          end: {
            line: 10,
            column: 101
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 42
          },
          end: {
            line: 12,
            column: 86
          }
        }, {
          start: {
            line: 12,
            column: 89
          },
          end: {
            line: 12,
            column: 98
          }
        }],
        line: 12
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 49
          },
          end: {
            line: 15,
            column: 65
          }
        }, {
          start: {
            line: 15,
            column: 68
          },
          end: {
            line: 15,
            column: 77
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 18,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 18,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 64
          },
          end: {
            line: 24,
            column: 104
          }
        }, {
          start: {
            line: 24,
            column: 107
          },
          end: {
            line: 24,
            column: 116
          }
        }],
        line: 24
      },
      "7": {
        loc: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 35
          }
        }, {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 24,
            column: 61
          }
        }],
        line: 24
      },
      "8": {
        loc: {
          start: {
            line: 30,
            column: 49
          },
          end: {
            line: 30,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 95
          }
        }, {
          start: {
            line: 30,
            column: 98
          },
          end: {
            line: 30,
            column: 107
          }
        }],
        line: 30
      },
      "9": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "10": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 31
          }
        }, {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 59
          }
        }],
        line: 33
      },
      "11": {
        loc: {
          start: {
            line: 43,
            column: 72
          },
          end: {
            line: 43,
            column: 135
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 106
          },
          end: {
            line: 43,
            column: 123
          }
        }, {
          start: {
            line: 43,
            column: 126
          },
          end: {
            line: 43,
            column: 135
          }
        }],
        line: 43
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 45,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 45,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "15": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "16": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 59,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 59,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "17": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "18": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 63,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 63,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "19": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 65,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 65,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "20": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 74,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 48
          }
        }, {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 43
          }
        }, {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 40
          }
        }, {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 72,
            column: 43
          }
        }, {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 73,
            column: 50
          }
        }, {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 78
          }
        }],
        line: 69
      },
      "21": {
        loc: {
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 74,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 74,
            column: 62
          }
        }, {
          start: {
            line: 74,
            column: 66
          },
          end: {
            line: 74,
            column: 77
          }
        }],
        line: 74
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0, 0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/auth/hooks/useSignupValidation.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/auth/hooks/useSignupValidation.ts"],
      sourcesContent: ["import { useState, useCallback } from 'react';\n\nexport interface SignupFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface ValidationErrors {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n  general?: string;\n}\n\nexport const useSignupValidation = () => {\n  const [errors, setErrors] = useState<ValidationErrors>({});\n\n  const validateField = useCallback((name: keyof SignupFormData, value: string, confirmValue?: string): string | undefined => {\n    switch (name) {\n      case 'firstName':\n        return value.length < 2 ? 'Le pr\xE9nom doit contenir au moins 2 caract\xE8res' : undefined;\n      \n      case 'lastName':\n        return value.length < 2 ? 'Le nom doit contenir au moins 2 caract\xE8res' : undefined;\n      \n      case 'email':\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return !emailRegex.test(value) ? 'Email invalide' : undefined;\n      \n      case 'password':\n        if (value.length < 8) return 'Le mot de passe doit contenir au moins 8 caract\xE8res';\n        if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(value)) {\n          return 'Le mot de passe doit contenir au moins une minuscule, une majuscule et un chiffre';\n        }\n        return undefined;\n      \n      case 'confirmPassword':\n        return confirmValue && value !== confirmValue ? 'Les mots de passe ne correspondent pas' : undefined;\n      \n      default:\n        return undefined;\n    }\n  }, []);\n\n  const validateSingleField = useCallback((name: keyof SignupFormData, value: string, formData: SignupFormData) => {\n    const error = validateField(name, value, name === 'confirmPassword' ? formData.password : undefined);\n    setErrors(prev => ({ ...prev, [name]: error }));\n    \n    // Validation sp\xE9ciale pour confirmPassword si password change\n    if (name === 'password' && formData.confirmPassword) {\n      const confirmError = validateField('confirmPassword', formData.confirmPassword, value);\n      setErrors(prev => ({ ...prev, confirmPassword: confirmError }));\n    }\n    \n    return !error;\n  }, [validateField]);\n\n  const validateForm = useCallback((formData: SignupFormData): boolean => {\n    const newErrors: ValidationErrors = {};\n    \n    Object.keys(formData).forEach(key => {\n      const fieldName = key as keyof SignupFormData;\n      const error = validateField(\n        fieldName, \n        formData[fieldName], \n        fieldName === 'confirmPassword' ? formData.password : undefined\n      );\n      if (error) newErrors[fieldName] = error;\n    });\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }, [validateField]);\n\n  const getPasswordStrength = useCallback((password: string): { strength: number; label: string; color: string } => {\n    let strength = 0;\n    if (password.length >= 8) strength += 25;\n    if (/[a-z]/.test(password)) strength += 25;\n    if (/[A-Z]/.test(password)) strength += 25;\n    if (/\\d/.test(password)) strength += 25;\n    \n    if (strength <= 25) return { strength, label: 'Faible', color: 'bg-red-500' };\n    if (strength <= 50) return { strength, label: 'Moyen', color: 'bg-orange-500' };\n    if (strength <= 75) return { strength, label: 'Bon', color: 'bg-yellow-500' };\n    return { strength, label: 'Excellent', color: 'bg-green-500' };\n  }, []);\n\n  const isFormValid = useCallback((formData: SignupFormData): boolean => {\n    return (\n      formData.firstName.trim() !== '' &&\n      formData.lastName.trim() !== '' &&\n      formData.email.trim() !== '' &&\n      formData.password.trim() !== '' &&\n      formData.confirmPassword.trim() !== '' &&\n      !Object.keys(errors).some(key => key !== 'general' && errors[key as keyof ValidationErrors])\n    );\n  }, [errors]);\n\n  const clearErrors = useCallback(() => {\n    setErrors({});\n  }, []);\n\n  const setGeneralError = useCallback((message: string) => {\n    setErrors(prev => ({ ...prev, general: message }));\n  }, []);\n\n  return {\n    errors,\n    validateSingleField,\n    validateForm,\n    getPasswordStrength,\n    isFormValid,\n    clearErrors,\n    setGeneralError\n  };\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "316c347066da96bba2f26ee21a2449b8a99ed80b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_120wzdr84r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_120wzdr84r();
cov_120wzdr84r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_120wzdr84r().s[1]++;
exports.useSignupValidation = void 0;
const react_1 =
/* istanbul ignore next */
(cov_120wzdr84r().s[2]++, require("react"));
/* istanbul ignore next */
cov_120wzdr84r().s[3]++;
const useSignupValidation = () => {
  /* istanbul ignore next */
  cov_120wzdr84r().f[0]++;
  const [errors, setErrors] =
  /* istanbul ignore next */
  (cov_120wzdr84r().s[4]++, (0, react_1.useState)({}));
  const validateField =
  /* istanbul ignore next */
  (cov_120wzdr84r().s[5]++, (0, react_1.useCallback)((name, value, confirmValue) => {
    /* istanbul ignore next */
    cov_120wzdr84r().f[1]++;
    cov_120wzdr84r().s[6]++;
    switch (name) {
      case 'firstName':
        /* istanbul ignore next */
        cov_120wzdr84r().b[0][0]++;
        cov_120wzdr84r().s[7]++;
        return value.length < 2 ?
        /* istanbul ignore next */
        (cov_120wzdr84r().b[1][0]++, 'Le prénom doit contenir au moins 2 caractères') :
        /* istanbul ignore next */
        (cov_120wzdr84r().b[1][1]++, undefined);
      case 'lastName':
        /* istanbul ignore next */
        cov_120wzdr84r().b[0][1]++;
        cov_120wzdr84r().s[8]++;
        return value.length < 2 ?
        /* istanbul ignore next */
        (cov_120wzdr84r().b[2][0]++, 'Le nom doit contenir au moins 2 caractères') :
        /* istanbul ignore next */
        (cov_120wzdr84r().b[2][1]++, undefined);
      case 'email':
        /* istanbul ignore next */
        cov_120wzdr84r().b[0][2]++;
        const emailRegex =
        /* istanbul ignore next */
        (cov_120wzdr84r().s[9]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
        /* istanbul ignore next */
        cov_120wzdr84r().s[10]++;
        return !emailRegex.test(value) ?
        /* istanbul ignore next */
        (cov_120wzdr84r().b[3][0]++, 'Email invalide') :
        /* istanbul ignore next */
        (cov_120wzdr84r().b[3][1]++, undefined);
      case 'password':
        /* istanbul ignore next */
        cov_120wzdr84r().b[0][3]++;
        cov_120wzdr84r().s[11]++;
        if (value.length < 8) {
          /* istanbul ignore next */
          cov_120wzdr84r().b[4][0]++;
          cov_120wzdr84r().s[12]++;
          return 'Le mot de passe doit contenir au moins 8 caractères';
        } else
        /* istanbul ignore next */
        {
          cov_120wzdr84r().b[4][1]++;
        }
        cov_120wzdr84r().s[13]++;
        if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/.test(value)) {
          /* istanbul ignore next */
          cov_120wzdr84r().b[5][0]++;
          cov_120wzdr84r().s[14]++;
          return 'Le mot de passe doit contenir au moins une minuscule, une majuscule et un chiffre';
        } else
        /* istanbul ignore next */
        {
          cov_120wzdr84r().b[5][1]++;
        }
        cov_120wzdr84r().s[15]++;
        return undefined;
      case 'confirmPassword':
        /* istanbul ignore next */
        cov_120wzdr84r().b[0][4]++;
        cov_120wzdr84r().s[16]++;
        return /* istanbul ignore next */(cov_120wzdr84r().b[7][0]++, confirmValue) &&
        /* istanbul ignore next */
        (cov_120wzdr84r().b[7][1]++, value !== confirmValue) ?
        /* istanbul ignore next */
        (cov_120wzdr84r().b[6][0]++, 'Les mots de passe ne correspondent pas') :
        /* istanbul ignore next */
        (cov_120wzdr84r().b[6][1]++, undefined);
      default:
        /* istanbul ignore next */
        cov_120wzdr84r().b[0][5]++;
        cov_120wzdr84r().s[17]++;
        return undefined;
    }
  }, []));
  const validateSingleField =
  /* istanbul ignore next */
  (cov_120wzdr84r().s[18]++, (0, react_1.useCallback)((name, value, formData) => {
    /* istanbul ignore next */
    cov_120wzdr84r().f[2]++;
    const error =
    /* istanbul ignore next */
    (cov_120wzdr84r().s[19]++, validateField(name, value, name === 'confirmPassword' ?
    /* istanbul ignore next */
    (cov_120wzdr84r().b[8][0]++, formData.password) :
    /* istanbul ignore next */
    (cov_120wzdr84r().b[8][1]++, undefined)));
    /* istanbul ignore next */
    cov_120wzdr84r().s[20]++;
    setErrors(prev => {
      /* istanbul ignore next */
      cov_120wzdr84r().f[3]++;
      cov_120wzdr84r().s[21]++;
      return {
        ...prev,
        [name]: error
      };
    });
    // Validation spéciale pour confirmPassword si password change
    /* istanbul ignore next */
    cov_120wzdr84r().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_120wzdr84r().b[10][0]++, name === 'password') &&
    /* istanbul ignore next */
    (cov_120wzdr84r().b[10][1]++, formData.confirmPassword)) {
      /* istanbul ignore next */
      cov_120wzdr84r().b[9][0]++;
      const confirmError =
      /* istanbul ignore next */
      (cov_120wzdr84r().s[23]++, validateField('confirmPassword', formData.confirmPassword, value));
      /* istanbul ignore next */
      cov_120wzdr84r().s[24]++;
      setErrors(prev => {
        /* istanbul ignore next */
        cov_120wzdr84r().f[4]++;
        cov_120wzdr84r().s[25]++;
        return {
          ...prev,
          confirmPassword: confirmError
        };
      });
    } else
    /* istanbul ignore next */
    {
      cov_120wzdr84r().b[9][1]++;
    }
    cov_120wzdr84r().s[26]++;
    return !error;
  }, [validateField]));
  const validateForm =
  /* istanbul ignore next */
  (cov_120wzdr84r().s[27]++, (0, react_1.useCallback)(formData => {
    /* istanbul ignore next */
    cov_120wzdr84r().f[5]++;
    const newErrors =
    /* istanbul ignore next */
    (cov_120wzdr84r().s[28]++, {});
    /* istanbul ignore next */
    cov_120wzdr84r().s[29]++;
    Object.keys(formData).forEach(key => {
      /* istanbul ignore next */
      cov_120wzdr84r().f[6]++;
      const fieldName =
      /* istanbul ignore next */
      (cov_120wzdr84r().s[30]++, key);
      const error =
      /* istanbul ignore next */
      (cov_120wzdr84r().s[31]++, validateField(fieldName, formData[fieldName], fieldName === 'confirmPassword' ?
      /* istanbul ignore next */
      (cov_120wzdr84r().b[11][0]++, formData.password) :
      /* istanbul ignore next */
      (cov_120wzdr84r().b[11][1]++, undefined)));
      /* istanbul ignore next */
      cov_120wzdr84r().s[32]++;
      if (error) {
        /* istanbul ignore next */
        cov_120wzdr84r().b[12][0]++;
        cov_120wzdr84r().s[33]++;
        newErrors[fieldName] = error;
      } else
      /* istanbul ignore next */
      {
        cov_120wzdr84r().b[12][1]++;
      }
    });
    /* istanbul ignore next */
    cov_120wzdr84r().s[34]++;
    setErrors(newErrors);
    /* istanbul ignore next */
    cov_120wzdr84r().s[35]++;
    return Object.keys(newErrors).length === 0;
  }, [validateField]));
  const getPasswordStrength =
  /* istanbul ignore next */
  (cov_120wzdr84r().s[36]++, (0, react_1.useCallback)(password => {
    /* istanbul ignore next */
    cov_120wzdr84r().f[7]++;
    let strength =
    /* istanbul ignore next */
    (cov_120wzdr84r().s[37]++, 0);
    /* istanbul ignore next */
    cov_120wzdr84r().s[38]++;
    if (password.length >= 8) {
      /* istanbul ignore next */
      cov_120wzdr84r().b[13][0]++;
      cov_120wzdr84r().s[39]++;
      strength += 25;
    } else
    /* istanbul ignore next */
    {
      cov_120wzdr84r().b[13][1]++;
    }
    cov_120wzdr84r().s[40]++;
    if (/[a-z]/.test(password)) {
      /* istanbul ignore next */
      cov_120wzdr84r().b[14][0]++;
      cov_120wzdr84r().s[41]++;
      strength += 25;
    } else
    /* istanbul ignore next */
    {
      cov_120wzdr84r().b[14][1]++;
    }
    cov_120wzdr84r().s[42]++;
    if (/[A-Z]/.test(password)) {
      /* istanbul ignore next */
      cov_120wzdr84r().b[15][0]++;
      cov_120wzdr84r().s[43]++;
      strength += 25;
    } else
    /* istanbul ignore next */
    {
      cov_120wzdr84r().b[15][1]++;
    }
    cov_120wzdr84r().s[44]++;
    if (/\d/.test(password)) {
      /* istanbul ignore next */
      cov_120wzdr84r().b[16][0]++;
      cov_120wzdr84r().s[45]++;
      strength += 25;
    } else
    /* istanbul ignore next */
    {
      cov_120wzdr84r().b[16][1]++;
    }
    cov_120wzdr84r().s[46]++;
    if (strength <= 25) {
      /* istanbul ignore next */
      cov_120wzdr84r().b[17][0]++;
      cov_120wzdr84r().s[47]++;
      return {
        strength,
        label: 'Faible',
        color: 'bg-red-500'
      };
    } else
    /* istanbul ignore next */
    {
      cov_120wzdr84r().b[17][1]++;
    }
    cov_120wzdr84r().s[48]++;
    if (strength <= 50) {
      /* istanbul ignore next */
      cov_120wzdr84r().b[18][0]++;
      cov_120wzdr84r().s[49]++;
      return {
        strength,
        label: 'Moyen',
        color: 'bg-orange-500'
      };
    } else
    /* istanbul ignore next */
    {
      cov_120wzdr84r().b[18][1]++;
    }
    cov_120wzdr84r().s[50]++;
    if (strength <= 75) {
      /* istanbul ignore next */
      cov_120wzdr84r().b[19][0]++;
      cov_120wzdr84r().s[51]++;
      return {
        strength,
        label: 'Bon',
        color: 'bg-yellow-500'
      };
    } else
    /* istanbul ignore next */
    {
      cov_120wzdr84r().b[19][1]++;
    }
    cov_120wzdr84r().s[52]++;
    return {
      strength,
      label: 'Excellent',
      color: 'bg-green-500'
    };
  }, []));
  const isFormValid =
  /* istanbul ignore next */
  (cov_120wzdr84r().s[53]++, (0, react_1.useCallback)(formData => {
    /* istanbul ignore next */
    cov_120wzdr84r().f[8]++;
    cov_120wzdr84r().s[54]++;
    return /* istanbul ignore next */(cov_120wzdr84r().b[20][0]++, formData.firstName.trim() !== '') &&
    /* istanbul ignore next */
    (cov_120wzdr84r().b[20][1]++, formData.lastName.trim() !== '') &&
    /* istanbul ignore next */
    (cov_120wzdr84r().b[20][2]++, formData.email.trim() !== '') &&
    /* istanbul ignore next */
    (cov_120wzdr84r().b[20][3]++, formData.password.trim() !== '') &&
    /* istanbul ignore next */
    (cov_120wzdr84r().b[20][4]++, formData.confirmPassword.trim() !== '') &&
    /* istanbul ignore next */
    (cov_120wzdr84r().b[20][5]++, !Object.keys(errors).some(key => {
      /* istanbul ignore next */
      cov_120wzdr84r().f[9]++;
      cov_120wzdr84r().s[55]++;
      return /* istanbul ignore next */(cov_120wzdr84r().b[21][0]++, key !== 'general') &&
      /* istanbul ignore next */
      (cov_120wzdr84r().b[21][1]++, errors[key]);
    }));
  }, [errors]));
  const clearErrors =
  /* istanbul ignore next */
  (cov_120wzdr84r().s[56]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_120wzdr84r().f[10]++;
    cov_120wzdr84r().s[57]++;
    setErrors({});
  }, []));
  const setGeneralError =
  /* istanbul ignore next */
  (cov_120wzdr84r().s[58]++, (0, react_1.useCallback)(message => {
    /* istanbul ignore next */
    cov_120wzdr84r().f[11]++;
    cov_120wzdr84r().s[59]++;
    setErrors(prev => {
      /* istanbul ignore next */
      cov_120wzdr84r().f[12]++;
      cov_120wzdr84r().s[60]++;
      return {
        ...prev,
        general: message
      };
    });
  }, []));
  /* istanbul ignore next */
  cov_120wzdr84r().s[61]++;
  return {
    errors,
    validateSingleField,
    validateForm,
    getPasswordStrength,
    isFormValid,
    clearErrors,
    setGeneralError
  };
};
/* istanbul ignore next */
cov_120wzdr84r().s[62]++;
exports.useSignupValidation = useSignupValidation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,