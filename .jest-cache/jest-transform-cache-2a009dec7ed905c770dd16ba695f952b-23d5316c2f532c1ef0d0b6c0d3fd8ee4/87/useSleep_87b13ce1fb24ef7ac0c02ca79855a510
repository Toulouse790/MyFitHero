77db043d61628c27df9cfab7a58d1068
"use strict";

/* istanbul ignore next */
function cov_1een45lrmx() {
  var path = "/workspaces/MyFitHero/src/features/sleep/hooks/useSleep.ts";
  var hash = "19ac09897275a4721890ca56b20eaa1120551c2a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/sleep/hooks/useSleep.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 24
        },
        end: {
          line: 5,
          column: 74
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 55
        }
      },
      "5": {
        start: {
          line: 8,
          column: 38
        },
        end: {
          line: 8,
          column: 66
        }
      },
      "6": {
        start: {
          line: 9,
          column: 30
        },
        end: {
          line: 9,
          column: 57
        }
      },
      "7": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "8": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 27,
          column: 23
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "10": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 23
        }
      },
      "13": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "14": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 17,
          column: 89
        }
      },
      "15": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 28
        }
      },
      "16": {
        start: {
          line: 21,
          column: 33
        },
        end: {
          line: 21,
          column: 97
        }
      },
      "17": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 35
        }
      },
      "18": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 32
        }
      },
      "19": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 44,
          column: 23
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "21": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "22": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "23": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 23
        }
      },
      "24": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "25": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 97
        }
      },
      "26": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 28
        }
      },
      "27": {
        start: {
          line: 38,
          column: 33
        },
        end: {
          line: 38,
          column: 101
        }
      },
      "28": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 35
        }
      },
      "29": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 32
        }
      },
      "30": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 47,
          column: 18
        }
      },
      "31": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 25
        }
      },
      "32": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 19
        }
      },
      "33": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "34": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 57,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "useSleep",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 17
          }
        },
        loc: {
          start: {
            line: 6,
            column: 26
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 46
          },
          end: {
            line: 11,
            column: 47
          }
        },
        loc: {
          start: {
            line: 11,
            column: 58
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 44
          },
          end: {
            line: 28,
            column: 45
          }
        },
        loc: {
          start: {
            line: 28,
            column: 63
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 45
          },
          end: {
            line: 45,
            column: 46
          }
        },
        loc: {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 48,
            column: 27
          },
          end: {
            line: 48,
            column: 28
          }
        },
        loc: {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 26
          },
          end: {
            line: 10,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 26
          },
          end: {
            line: 10,
            column: 32
          }
        }, {
          start: {
            line: 10,
            column: 36
          },
          end: {
            line: 10,
            column: 50
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 13,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 13,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 21,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 21,
            column: 67
          }
        }, {
          start: {
            line: 21,
            column: 70
          },
          end: {
            line: 21,
            column: 97
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 30,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 30,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 38,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 56
          },
          end: {
            line: 38,
            column: 67
          }
        }, {
          start: {
            line: 38,
            column: 70
          },
          end: {
            line: 38,
            column: 101
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/sleep/hooks/useSleep.ts",
      mappings: ";;AAYA,4BA2DC;AAvED,iCAAgE;AAChE,2EAAuE;AAWvE,SAAgB,QAAQ,CAAC,MAAe;IACtC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,IAAA,gBAAQ,EAAoB,IAAI,CAAC,CAAC;IAC1D,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAClD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAgB,IAAI,CAAC,CAAC;IAExD,MAAM,aAAa,GAAG,MAAM,IAAI,cAAc,CAAC;IAE/C,MAAM,QAAQ,GAAG,IAAA,mBAAW,EAAC,KAAK,IAAI,EAAE;QACtC,IAAI,CAAC,aAAa;YAAE,OAAO;QAE3B,YAAY,CAAC,IAAI,CAAC,CAAC;QACnB,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEf,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,MAAM,4BAAY,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC9D,OAAO,CAAC,MAAM,CAAC,CAAC;QAClB,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,MAAM,YAAY,GAAG,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B,CAAC;YACtF,QAAQ,CAAC,YAAY,CAAC,CAAC;QACzB,CAAC;gBAAS,CAAC;YACT,YAAY,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;IACH,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAEpB,MAAM,MAAM,GAAG,IAAA,mBAAW,EACxB,KAAK,EAAE,OAAmB,EAAE,EAAE;QAC5B,IAAI,CAAC,aAAa;YAAE,OAAO;QAE3B,YAAY,CAAC,IAAI,CAAC,CAAC;QACnB,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEf,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,MAAM,4BAAY,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;YACtE,OAAO,CAAC,MAAM,CAAC,CAAC;QAClB,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,MAAM,YAAY,GAAG,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,+BAA+B,CAAC;YAC1F,QAAQ,CAAC,YAAY,CAAC,CAAC;QACzB,CAAC;gBAAS,CAAC;YACT,YAAY,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;IACH,CAAC,EACD,CAAC,aAAa,CAAC,CAChB,CAAC;IAEF,MAAM,OAAO,GAAG,IAAA,mBAAW,EAAC,KAAK,IAAI,EAAE;QACrC,MAAM,QAAQ,EAAE,CAAC;IACnB,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,QAAQ,EAAE,CAAC;IACb,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,OAAO;QACL,IAAI;QACJ,SAAS;QACT,KAAK;QACL,OAAO;QACP,MAAM;KACP,CAAC;AACJ,CAAC",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/sleep/hooks/useSleep.ts"],
      sourcesContent: ["import React, { useState, useEffect, useCallback } from 'react';\nimport { SleepService } from '@/features/sleep/services/sleep.service';\nimport { SleepEntry } from '@/shared/types/sleep.types';\n\nexport interface UseSleepReturn {\n  data: SleepEntry | undefined;\n  isLoading: boolean;\n  error: string | undefined;\n  refresh: () => Promise<void>;\n  update: (data: SleepEntry) => Promise<void>;\n}\n\nexport function useSleep(userId?: string): UseSleepReturn {\n  const [data, setData] = useState<SleepEntry | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const currentUserId = userId || 'current-user';\n\n  const loadData = useCallback(async () => {\n    if (!currentUserId) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await SleepService.getSleepData(currentUserId);\n      setData(result);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Erreur lors du chargement';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [currentUserId]);\n\n  const update = useCallback(\n    async (newData: SleepEntry) => {\n      if (!currentUserId) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const result = await SleepService.updateSleep(currentUserId, newData);\n        setData(result);\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Erreur lors de la mise \xE0 jour';\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [currentUserId]\n  );\n\n  const refresh = useCallback(async () => {\n    await loadData();\n  }, [loadData]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return {\n    data,\n    isLoading,\n    error,\n    refresh,\n    update,\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "19ac09897275a4721890ca56b20eaa1120551c2a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1een45lrmx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1een45lrmx();
cov_1een45lrmx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1een45lrmx().s[1]++;
exports.useSleep = useSleep;
const react_1 =
/* istanbul ignore next */
(cov_1een45lrmx().s[2]++, require("react"));
const sleep_service_1 =
/* istanbul ignore next */
(cov_1een45lrmx().s[3]++, require("@/features/sleep/services/sleep.service"));
function useSleep(userId) {
  /* istanbul ignore next */
  cov_1een45lrmx().f[0]++;
  const [data, setData] =
  /* istanbul ignore next */
  (cov_1een45lrmx().s[4]++, (0, react_1.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1een45lrmx().s[5]++, (0, react_1.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1een45lrmx().s[6]++, (0, react_1.useState)(null));
  const currentUserId =
  /* istanbul ignore next */
  (cov_1een45lrmx().s[7]++,
  /* istanbul ignore next */
  (cov_1een45lrmx().b[0][0]++, userId) ||
  /* istanbul ignore next */
  (cov_1een45lrmx().b[0][1]++, 'current-user'));
  const loadData =
  /* istanbul ignore next */
  (cov_1een45lrmx().s[8]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1een45lrmx().f[1]++;
    cov_1een45lrmx().s[9]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1een45lrmx().b[1][0]++;
      cov_1een45lrmx().s[10]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1een45lrmx().b[1][1]++;
    }
    cov_1een45lrmx().s[11]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1een45lrmx().s[12]++;
    setError(null);
    /* istanbul ignore next */
    cov_1een45lrmx().s[13]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1een45lrmx().s[14]++, await sleep_service_1.SleepService.getSleepData(currentUserId));
      /* istanbul ignore next */
      cov_1een45lrmx().s[15]++;
      setData(result);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1een45lrmx().s[16]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1een45lrmx().b[2][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1een45lrmx().b[2][1]++, 'Erreur lors du chargement'));
      /* istanbul ignore next */
      cov_1een45lrmx().s[17]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1een45lrmx().s[18]++;
      setIsLoading(false);
    }
  }, [currentUserId]));
  const update =
  /* istanbul ignore next */
  (cov_1een45lrmx().s[19]++, (0, react_1.useCallback)(async newData => {
    /* istanbul ignore next */
    cov_1een45lrmx().f[2]++;
    cov_1een45lrmx().s[20]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1een45lrmx().b[3][0]++;
      cov_1een45lrmx().s[21]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1een45lrmx().b[3][1]++;
    }
    cov_1een45lrmx().s[22]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1een45lrmx().s[23]++;
    setError(null);
    /* istanbul ignore next */
    cov_1een45lrmx().s[24]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1een45lrmx().s[25]++, await sleep_service_1.SleepService.updateSleep(currentUserId, newData));
      /* istanbul ignore next */
      cov_1een45lrmx().s[26]++;
      setData(result);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1een45lrmx().s[27]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1een45lrmx().b[4][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1een45lrmx().b[4][1]++, 'Erreur lors de la mise à jour'));
      /* istanbul ignore next */
      cov_1een45lrmx().s[28]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1een45lrmx().s[29]++;
      setIsLoading(false);
    }
  }, [currentUserId]));
  const refresh =
  /* istanbul ignore next */
  (cov_1een45lrmx().s[30]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1een45lrmx().f[3]++;
    cov_1een45lrmx().s[31]++;
    await loadData();
  }, [loadData]));
  /* istanbul ignore next */
  cov_1een45lrmx().s[32]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_1een45lrmx().f[4]++;
    cov_1een45lrmx().s[33]++;
    loadData();
  }, [loadData]);
  /* istanbul ignore next */
  cov_1een45lrmx().s[34]++;
  return {
    data,
    isLoading,
    error,
    refresh,
    update
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,