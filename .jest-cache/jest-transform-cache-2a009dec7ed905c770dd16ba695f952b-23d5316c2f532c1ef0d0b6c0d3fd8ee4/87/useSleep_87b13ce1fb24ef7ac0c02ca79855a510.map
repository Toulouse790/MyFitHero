{"version":3,"names":["cov_1een45lrmx","actualCoverage","s","exports","useSleep","react_1","require","sleep_service_1","userId","f","data","setData","useState","isLoading","setIsLoading","error","setError","currentUserId","b","loadData","useCallback","result","SleepService","getSleepData","err","errorMessage","Error","message","update","newData","updateSleep","refresh","useEffect"],"sources":["/workspaces/MyFitHero/src/features/sleep/hooks/useSleep.ts"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { SleepService } from '@/features/sleep/services/sleep.service';\nimport { SleepEntry } from '@/shared/types/sleep.types';\n\nexport interface UseSleepReturn {\n  data: SleepEntry | undefined;\n  isLoading: boolean;\n  error: string | undefined;\n  refresh: () => Promise<void>;\n  update: (data: SleepEntry) => Promise<void>;\n}\n\nexport function useSleep(userId?: string): UseSleepReturn {\n  const [data, setData] = useState<SleepEntry | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const currentUserId = userId || 'current-user';\n\n  const loadData = useCallback(async () => {\n    if (!currentUserId) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await SleepService.getSleepData(currentUserId);\n      setData(result);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Erreur lors du chargement';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [currentUserId]);\n\n  const update = useCallback(\n    async (newData: SleepEntry) => {\n      if (!currentUserId) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const result = await SleepService.updateSleep(currentUserId, newData);\n        setData(result);\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Erreur lors de la mise Ã  jour';\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [currentUserId]\n  );\n\n  const refresh = useCallback(async () => {\n    await loadData();\n  }, [loadData]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return {\n    data,\n    isLoading,\n    error,\n    refresh,\n    update,\n  };\n}\n"],"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","ignoreList":[]}