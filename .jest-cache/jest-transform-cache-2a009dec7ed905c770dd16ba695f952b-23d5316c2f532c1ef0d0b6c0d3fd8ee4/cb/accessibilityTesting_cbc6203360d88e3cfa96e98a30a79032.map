{"version":3,"names":["react_1","cov_19bhoi0irb","s","__importDefault","require","react_2","jest_axe_1","user_event_1","expect","extend","toHaveNoViolations","testAccessibility","component","f","container","render","results","axe","exports","testKeyboardNavigation","focusableElements","b","user","default","setup","focusableElementsInComponent","querySelectorAll","join","length","toBeGreaterThan","i","tab","toHaveFocus","shift","testAriaAttributes","element","expectedAttributes","Object","entries","forEach","attribute","expectedValue","actualValue","getAttribute","not","toBeNull","toBe","testColorContrast","rules","enabled","testSemanticHTML","testFormAccessibility","formComponent","inputs","input","id","label","querySelector","toBeInTheDocument","errorElements","errorElement","toHaveAttribute","testImageAccessibility","images","img","alt","ariaLabel","ariaLabelledby","role","hasAttribute","testLinkAccessibility","links","link","href","textContent","trim","toBeTruthy","testButtonAccessibility","buttons","button","runFullAccessibilityTestSuite","general","keyboard","colorContrast","semantic","setupAccessibilityTests","beforeEach","globalThis","configure","tags","afterEach","document","body","innerHTML","developmentAccessibilityHelpers","logAccessibilityReport","violations","console","group","violation","error","description","groupEnd","enableLiveAccessibilityChecking","process","env","NODE_ENV","Promise","resolve","then","__importStar"],"sources":["/workspaces/MyFitHero/src/shared/utils/accessibilityTesting.ts"],"sourcesContent":["import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport { axe, toHaveNoViolations } from 'jest-axe';\nimport userEvent from '@testing-library/user-event';\n\n// Étendre les matchers Jest\nexpect.extend(toHaveNoViolations);\n\n// Types pour TypeScript\ndeclare global {\n  namespace jest {\n    interface Matchers<R> {\n      toHaveNoViolations(): R;\n    }\n  }\n}\n\n/**\n * Utilitaire pour tester l'accessibilité d'un composant\n */\nexport const testAccessibility = async (component: React.ReactElement) => {\n  const { container } = render(component);\n  const results = await axe(container);\n  expect(results).toHaveNoViolations();\n  return { container, results };\n};\n\n/**\n * Teste la navigation au clavier d'un composant\n */\nexport const testKeyboardNavigation = async (\n  component: React.ReactElement,\n  focusableElements: string[] = [\n    'button',\n    'input',\n    'select',\n    'textarea',\n    'a[href]',\n    '[tabindex]:not([tabindex=\"-1\"])'\n  ]\n) => {\n  const user = userEvent.setup();\n  const { container } = render(component);\n  \n  // Trouver tous les éléments focusables\n  const focusableElementsInComponent = container.querySelectorAll(\n    focusableElements.join(', ')\n  ) as NodeListOf<HTMLElement>;\n  \n  expect(focusableElementsInComponent.length).toBeGreaterThan(0);\n  \n  // Tester la navigation Tab\n  for (let i = 0; i < focusableElementsInComponent.length; i++) {\n    await user.tab();\n    expect(focusableElementsInComponent[i]).toHaveFocus();\n  }\n  \n  // Tester la navigation Shift+Tab (retour)\n  for (let i = focusableElementsInComponent.length - 2; i >= 0; i--) {\n    await user.tab({ shift: true });\n    expect(focusableElementsInComponent[i]).toHaveFocus();\n  }\n  \n  return { container, focusableElementsInComponent };\n};\n\n/**\n * Teste les attributs ARIA d'un élément\n */\nexport const testAriaAttributes = (\n  element: HTMLElement,\n  expectedAttributes: Record<string, string | boolean | null>\n) => {\n  Object.entries(expectedAttributes).forEach(([attribute, expectedValue]) => {\n    const actualValue = element.getAttribute(attribute);\n    \n    if (typeof expectedValue === 'boolean') {\n      if (expectedValue) {\n        expect(actualValue).not.toBeNull();\n      } else {\n        expect(actualValue).toBeNull();\n      }\n    } else {\n      expect(actualValue).toBe(expectedValue);\n    }\n  });\n};\n\n/**\n * Teste les contrastes de couleur\n */\nexport const testColorContrast = async (component: React.ReactElement) => {\n  const { container } = render(component);\n  \n  // Utiliser axe avec les règles de contraste spécifiques\n  const results = await axe(container, {\n    rules: {\n      'color-contrast': { enabled: true },\n      'color-contrast-enhanced': { enabled: true }\n    }\n  });\n  \n  expect(results).toHaveNoViolations();\n  return results;\n};\n\n/**\n * Teste la sémantique HTML\n */\nexport const testSemanticHTML = async (component: React.ReactElement) => {\n  const { container } = render(component);\n  \n  const results = await axe(container, {\n    rules: {\n      'landmark-one-main': { enabled: true },\n      'page-has-heading-one': { enabled: true },\n      'region': { enabled: true },\n      'bypass': { enabled: true }\n    }\n  });\n  \n  expect(results).toHaveNoViolations();\n  return results;\n};\n\n/**\n * Teste les formulaires accessibles\n */\nexport const testFormAccessibility = async (formComponent: React.ReactElement) => {\n  const { container } = render(formComponent);\n  \n  // Tester les labels\n  const inputs = container.querySelectorAll('input, select, textarea');\n  inputs.forEach(input => {\n    const id = input.getAttribute('id');\n    if (id) {\n      const label = container.querySelector(`label[for=\"${id}\"]`);\n      expect(label).toBeInTheDocument();\n    }\n  });\n  \n  // Tester les messages d'erreur\n  const errorElements = container.querySelectorAll('[role=\"alert\"]');\n  errorElements.forEach(errorElement => {\n    expect(errorElement).toHaveAttribute('aria-live', 'assertive');\n  });\n  \n  // Tester avec axe\n  const results = await axe(container, {\n    rules: {\n      'label': { enabled: true },\n      'label-title-only': { enabled: true },\n      'form-field-multiple-labels': { enabled: true }\n    }\n  });\n  \n  expect(results).toHaveNoViolations();\n  return results;\n};\n\n/**\n * Teste les images accessibles\n */\nexport const testImageAccessibility = async (component: React.ReactElement) => {\n  const { container } = render(component);\n  \n  const images = container.querySelectorAll('img');\n  images.forEach(img => {\n    const alt = img.getAttribute('alt');\n    const ariaLabel = img.getAttribute('aria-label');\n    const ariaLabelledby = img.getAttribute('aria-labelledby');\n    const role = img.getAttribute('role');\n    \n    // Une image doit avoir un texte alternatif, sauf si elle est décorative\n    if (role !== 'presentation' && !img.hasAttribute('aria-hidden')) {\n      expect(alt !== null || ariaLabel !== null || ariaLabelledby !== null).toBe(true);\n    }\n  });\n  \n  const results = await axe(container, {\n    rules: {\n      'image-alt': { enabled: true },\n      'image-redundant-alt': { enabled: true }\n    }\n  });\n  \n  expect(results).toHaveNoViolations();\n  return results;\n};\n\n/**\n * Teste les liens accessibles\n */\nexport const testLinkAccessibility = async (component: React.ReactElement) => {\n  const { container } = render(component);\n  \n  const links = container.querySelectorAll('a');\n  links.forEach(link => {\n    const href = link.getAttribute('href');\n    const ariaLabel = link.getAttribute('aria-label');\n    const textContent = link.textContent?.trim();\n    \n    // Un lien doit avoir un href et un texte descriptif\n    expect(href).not.toBeNull();\n    expect(textContent || ariaLabel).toBeTruthy();\n  });\n  \n  const results = await axe(container, {\n    rules: {\n      'link-name': { enabled: true },\n      'link-in-text-block': { enabled: true }\n    }\n  });\n  \n  expect(results).toHaveNoViolations();\n  return results;\n};\n\n/**\n * Teste les boutons accessibles\n */\nexport const testButtonAccessibility = async (component: React.ReactElement) => {\n  const { container } = render(component);\n  \n  const buttons = container.querySelectorAll('button, [role=\"button\"]');\n  buttons.forEach(button => {\n    const ariaLabel = button.getAttribute('aria-label');\n    const textContent = button.textContent?.trim();\n    const ariaLabelledby = button.getAttribute('aria-labelledby');\n    \n    // Un bouton doit avoir un nom accessible\n    expect(textContent || ariaLabel || ariaLabelledby).toBeTruthy();\n  });\n  \n  const results = await axe(container, {\n    rules: {\n      'button-name': { enabled: true },\n      'nested-interactive': { enabled: true }\n    }\n  });\n  \n  expect(results).toHaveNoViolations();\n  return results;\n};\n\n/**\n * Suite de tests complète pour l'accessibilité\n */\nexport const runFullAccessibilityTestSuite = async (component: React.ReactElement) => {\n  const results = {\n    general: await testAccessibility(component),\n    keyboard: await testKeyboardNavigation(component),\n    colorContrast: await testColorContrast(component),\n    semantic: await testSemanticHTML(component),\n    images: await testImageAccessibility(component),\n    links: await testLinkAccessibility(component),\n    buttons: await testButtonAccessibility(component)\n  };\n  \n  return results;\n};\n\n/**\n * Configuration Jest pour les tests d'accessibilité\n */\nexport const setupAccessibilityTests = () => {\n  // Configuration globale d'axe\n  beforeEach(() => {\n    // Configurer axe avec les règles WCAG 2.1 AA\n    (globalThis as any).axe = require('jest-axe').axe;\n    (globalThis as any).axe.configure({\n      rules: [\n        { id: 'color-contrast', enabled: true },\n        { id: 'keyboard-navigation', enabled: true },\n        { id: 'focus-order-semantics', enabled: true },\n        { id: 'aria-valid-attr', enabled: true },\n        { id: 'aria-valid-attr-value', enabled: true },\n        { id: 'aria-required-children', enabled: true },\n        { id: 'aria-required-parent', enabled: true }\n      ],\n      tags: ['wcag2a', 'wcag2aa']\n    });\n  });\n  \n  // Nettoyer après chaque test\n  afterEach(() => {\n    // Nettoyer le DOM\n    document.body.innerHTML = '';\n  });\n};\n\n/**\n * Utilitaires pour les tests en mode développement\n */\nexport const developmentAccessibilityHelpers = {\n  /**\n   * Affiche un rapport d'accessibilité dans la console\n   */\n  logAccessibilityReport: async (component: React.ReactElement) => {\n    const { container } = render(component);\n    const results = await axe(container);\n    \n    if (results.violations.length > 0) {\n      console.group('🚨 Violations d\\'accessibilité détectées:');\n      results.violations.forEach(violation => {\n        console.error(`${violation.id}: ${violation.description}`);\n      });\n      console.groupEnd();\n    } else {\n    }\n    \n    return results;\n  },\n  \n  /**\n   * Vérifie l'accessibilité en temps réel (pour le développement)\n   */\n  enableLiveAccessibilityChecking: () => {\n    if (process.env.NODE_ENV === 'development') {\n      import('@axe-core/react').then(axe => {\n        axe.default(React, require('react-dom'), 1000);\n      });\n    }\n  }\n};"],"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","ignoreList":[]}