{"version":3,"names":["exports","default","SportSelector","react_1","cov_21nsgntdkk","s","__importStar","require","input_1","button_1","card_1","badge_1","skeleton_1","lucide_react_1","utils_1","sportsService_1","use_toast_1","use_debounce_1","onSelect","selectedSport","b","placeholder","allowCustom","showPopular","showCategories","maxResults","disabled","className","variant","locale","f","toast","useToast","inputRef","useRef","isOpen","setIsOpen","useState","searchState","setSearchState","query","results","loading","error","hasSearched","showSuggestion","customSportName","sports","allSports","popularSports","searchSports","suggestSport","sportsLoading","sportsError","refresh","refreshSports","useSports","debouncedSearchQuery","useDebounce","displaySports","useMemo","length","slice","map","sport","isRecommended","popularity","Math","random","sportCategories","reduce","acc","category","push","useEffect","prev","performSearch","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","useCallback","enrichedResults","index","searchScore","isTrending","errorMessage","Error","message","title","description","handleSelectSport","window","gtag","sport_id","id","sport_name","name","search_query","is_popular","handleSuggestCustomSport","trim","success","userContext","searchQuery","timestamp","Date","customSport","now","emoji","positions","handleInputChange","value","handleClearSelection","setTimeout","focus","renderSportItem","jsx_runtime_1","jsxs","onClick","cn","children","jsx","Badge","Sparkles","TrendingUp","userCount","Globe","toLocaleString","Star","Check","renderSelectedSport","Card","CardContent","Button","size","renderSearchInterface","ref","Search","Input","type","onChange","e","onFocus","autoComplete","AlertCircle","renderSearchResults","Skeleton","Array","from","_","i","Fragment","renderResultsHeader","renderCategorizedSports","renderSportsList","renderEmptyState","renderCustomSportSuggestion","renderActions","count","Filter","Object","entries","Plus","X","CompactSportSelector","props","CategorizedSportSelector"],"sources":["/workspaces/MyFitHero/src/features/analytics/components/SportSelector.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\n// client/src/components/SportSelector.tsx\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport {\n  Search,\n  Plus,\n  Check,\n  X,\n  Star,\n  TrendingUp,\n  Globe,\n  AlertCircle,\n  Sparkles,\n  Filter,\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { useSports } from '@/lib/services/sportsService';\nimport { SportOption } from '@/core/config/sports.config';\nimport { useToast } from '@/shared/hooks/use-toast';\nimport { useDebounce } from '@/features/ai-coach/hooks/use-debounce';\n\n/* ================================================================== */\n/*                           INTERFACES                               */\n/* ================================================================== */\n\ninterface SportSelectorProps {\n  onSelect: (sport: SportOption) => void;\n  selectedSport?: SportOption | null;\n  placeholder?: string;\n  allowCustom?: boolean;\n  showPopular?: boolean;\n  showCategories?: boolean;\n  maxResults?: number;\n  disabled?: boolean;\n  className?: string;\n  variant?: 'default' | 'compact' | 'card';\n  locale?: 'fr' | 'en';\n}\n\n// Interface simplifiée pour éviter les conflits de types\ninterface SportWithMetadata {\n  id: string;\n  name: string;\n  category: string;\n  emoji: string;\n  description: string;\n  positions?: string[];\n  isRecommended: boolean;\n  popularity: number;\n}\n\ninterface SearchState {\n  query: string;\n  results: SportWithMetadata[];\n  loading: boolean;\n  error: string | null;\n  hasSearched: boolean;\n  showSuggestion: boolean;\n  customSportName: string;\n}\n\n/* ================================================================== */\n/*                        COMPOSANT PRINCIPAL                         */\n/* ================================================================== */\n\nexport default function SportSelector({\n  onSelect,\n  selectedSport = null,\n  placeholder = 'Recherchez votre sport...',\n  allowCustom = true,\n  showPopular = true,\n  showCategories = false,\n  maxResults = 20,\n  disabled = false,\n  className = '',\n  variant = 'default',\n  locale = 'fr',\n}: SportSelectorProps) {\n  /* ========================== HOOKS ET STATE ========================= */\n\n  const { toast } = useToast();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [searchState, setSearchState] = useState<SearchState>({\n    query: '',\n    results: [],\n    loading: false,\n    error: null,\n    hasSearched: false,\n    showSuggestion: false,\n    customSportName: '',\n  });\n\n  // Hook personnalisé pour récupérer les sports depuis Supabase\n  const {\n    sports: allSports,\n    popularSports,\n    searchSports,\n    suggestSport,\n    loading: sportsLoading,\n    error: sportsError,\n    refresh: refreshSports,\n  } = useSports();\n\n  // Debounce de la recherche pour optimiser les performances\n  const debouncedSearchQuery = useDebounce(searchState.query, 300);\n\n  /* ========================= COMPUTED VALUES ========================== */\n\n  // Sports à afficher selon le contexte\n  const displaySports = useMemo(() => {\n    if (searchState.query.length >= 2) {\n      return searchState.results.slice(0, maxResults);\n    }\n\n    if (showPopular && popularSports.length > 0) {\n      return popularSports.slice(0, 8).map(sport => ({\n        ...sport,\n        isRecommended: true,\n      }));\n    }\n\n    return allSports.slice(0, 12).map(sport => ({\n      ...sport,\n      popularity: Math.random() * 100, // Simulation pour la démo\n    }));\n  }, [searchState.query, searchState.results, popularSports, allSports, showPopular, maxResults]);\n\n  // Catégories de sports si activées\n  const sportCategories = useMemo(() => {\n    if (!showCategories) return {};\n\n    return displaySports.reduce(\n      (acc, sport) => {\n        const category = sport.category || 'Autres';\n        if (!acc[category]) acc[category] = [];\n        acc[category].push(sport);\n        return acc;\n      },\n      {} as Record<string, SportWithMetadata[]>\n    );\n  }, [displaySports, showCategories]);\n\n  /* ========================== EFFECTS ========================== */\n\n  // Recherche automatique avec debounce\n  useEffect(() => {\n    if (debouncedSearchQuery.length < 2) {\n      setSearchState(prev => ({\n        ...prev,\n        results: [],\n        loading: false,\n        hasSearched: false,\n        showSuggestion: false,\n      }));\n      return;\n    }\n\n    performSearch(debouncedSearchQuery);\n  }, [debouncedSearchQuery]);\n\n  // Fermer le sélecteur au clic extérieur\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (inputRef.current && !inputRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  /* ========================= FONCTIONS ========================= */\n\n  const performSearch = useCallback(\n    async (query: string) => {\n      setSearchState(prev => ({ ...prev, loading: true, error: null }));\n\n      try {\n        const results = await searchSports(query);\n\n        // Enrichir les résultats avec des métadonnées\n        const enrichedResults: SportWithMetadata[] = results.map((sport, index) => ({\n          ...sport,\n          searchScore: ((results.length - index) / results.length) * 100,\n          isRecommended: index < 3, // Top 3 recommandés\n          isTrending: Math.random() > 0.7, // Simulation trending\n        }));\n\n        setSearchState(prev => ({\n          ...prev,\n          results: enrichedResults,\n          loading: false,\n          hasSearched: true,\n          showSuggestion: enrichedResults.length === 0 && allowCustom,\n          customSportName: enrichedResults.length === 0 ? query : '',\n        }));\n      } catch (error) {\n      // Erreur silencieuse\n        const errorMessage = error instanceof Error ? error.message : 'Erreur lors de la recherche';\n\n        setSearchState(prev => ({\n          ...prev,\n          loading: false,\n          error: errorMessage,\n          results: [],\n        }));\n\n        toast({\n          title: 'Erreur de recherche',\n          description: errorMessage,\n          variant: 'destructive',\n        });\n      }\n    },\n    [searchSports, allowCustom, toast]\n  );\n\n  const handleSelectSport = useCallback(\n    (sport: SportWithMetadata) => {\n      onSelect(sport);\n      setIsOpen(false);\n      setSearchState(prev => ({ ...prev, query: '' }));\n\n      // Analytics - track sport selection\n      if (typeof window !== 'undefined' && window.gtag) {\n        window.gtag('event', 'sport_selected', {\n          sport_id: sport.id,\n          sport_name: sport.name,\n          search_query: searchState.query,\n          is_popular: sport.isRecommended,\n        });\n      }\n    },\n    [onSelect, searchState.query]\n  );\n\n  const handleSuggestCustomSport = useCallback(async () => {\n    if (!searchState.customSportName.trim()) return;\n\n    try {\n      const success = await suggestSport(searchState.customSportName, {\n        userContext: {\n          searchQuery: searchState.query,\n          timestamp: new Date(),\n          locale,\n        },\n      });\n\n      if (success) {\n        // Créer un sport temporaire pour l'utilisateur\n        const customSport: SportWithMetadata = {\n          id: `custom_${Date.now()}`,\n          name: searchState.customSportName,\n          emoji: '🎯',\n          category: 'custom',\n          positions: [],\n          isRecommended: false,\n          popularity: 0,\n        };\n\n        handleSelectSport(customSport);\n\n        toast({\n          title: 'Sport suggéré !',\n          description: 'Votre suggestion a été envoyée à notre équipe. Merci !',\n        });\n\n        setSearchState(prev => ({\n          ...prev,\n          showSuggestion: false,\n          customSportName: '',\n        }));\n      }\n    } catch (error) {\n      // Erreur silencieuse\n      toast({\n        title: 'Erreur',\n        description: \"Impossible d'envoyer votre suggestion. Réessayez plus tard.\",\n        variant: 'destructive',\n      });\n    }\n  }, [\n    searchState.customSportName,\n    searchState.query,\n    suggestSport,\n    handleSelectSport,\n    toast,\n    locale,\n  ]);\n\n  const handleInputChange = useCallback(\n    (value: string) => {\n      setSearchState(prev => ({ ...prev, query: value }));\n      if (!isOpen) setIsOpen(true);\n    },\n    [isOpen]\n  );\n\n  const handleClearSelection = useCallback(() => {\n    setIsOpen(true);\n    setTimeout(() => inputRef.current?.focus(), 100);\n  }, []);\n\n  /* ========================= RENDER HELPERS ========================= */\n\n  const renderSportItem = useCallback(\n    (sport: SportWithMetadata, index: number) => (\n      <button\n        key={sport.id}\n        onClick={() => handleSelectSport(sport)}\n        disabled={disabled}\n        className={cn(\n          'group flex items-center space-x-3 p-3 rounded-xl border-2 text-left transition-all duration-200 hover:shadow-lg hover:scale-[1.02] focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\n          selectedSport?.id === sport.id\n            ? 'border-blue-500 bg-gradient-to-r from-blue-50 to-indigo-50 shadow-md'\n            : 'border-gray-200 hover:border-gray-300 bg-white hover:bg-gray-50',\n          disabled && 'opacity-50 cursor-not-allowed hover:scale-100',\n          variant === 'compact' && 'p-2 space-x-2'\n        )}\n        aria-label={`Sélectionner ${sport.name}`}\n      >\n        <div className=\"relative\">\n          <span className=\"text-2xl group-hover:scale-110 transition-transform\">{sport.emoji}</span>\n          {sport.isRecommended && (\n            <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-blue-500 rounded-full animate-pulse\" />\n          )}\n        </div>\n\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"font-semibold text-gray-900 truncate\">{sport.name}</span>\n            {sport.isRecommended && (\n              <Badge variant=\"secondary\" className=\"text-xs bg-blue-100 text-blue-700\">\n                <Sparkles className=\"w-3 h-3 mr-1\" />\n                Recommandé\n              </Badge>\n            )}\n            {sport.isTrending && (\n              <Badge variant=\"outline\" className=\"text-xs border-orange-200 text-orange-700\">\n                <TrendingUp className=\"w-3 h-3 mr-1\" />\n                Tendance\n              </Badge>\n            )}\n          </div>\n\n          {variant !== 'compact' && (\n            <div className=\"flex items-center space-x-4 mt-1\">\n              {sport.positions && sport.positions.length > 0 && (\n                <span className=\"text-sm text-gray-500\">\n                  {sport.positions.length} position{sport.positions.length !== 1 ? 's' : ''}\n                </span>\n              )}\n              {sport.userCount && (\n                <span className=\"text-sm text-gray-500 flex items-center\">\n                  <Globe className=\"w-3 h-3 mr-1\" />\n                  {sport.userCount.toLocaleString()} utilisateurs\n                </span>\n              )}\n              {sport.popularity && sport.popularity > 80 && (\n                <span className=\"text-sm text-amber-600 flex items-center\">\n                  <Star className=\"w-3 h-3 mr-1\" />\n                  Populaire\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex-shrink-0\">\n          {selectedSport?.id === sport.id && (\n            <Check className=\"h-5 w-5 text-blue-600 animate-in zoom-in-50\" />\n          )}\n        </div>\n      </button>\n    ),\n    [handleSelectSport, selectedSport, disabled, variant]\n  );\n\n  const renderSelectedSport = () => {\n    if (!selectedSport || isOpen) return null;\n\n    return (\n      <Card className=\"border-blue-200 bg-gradient-to-r from-blue-50 to-indigo-50 shadow-sm\">\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <span className=\"text-3xl\">{selectedSport.emoji}</span>\n              <div>\n                <h3 className=\"font-bold text-blue-900 text-lg\">{selectedSport.name}</h3>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-700 border-blue-200\">\n                    <Check className=\"w-3 h-3 mr-1\" />\n                    Sélectionné\n                  </Badge>\n                  {selectedSport.category && (\n                    <span className=\"text-sm text-blue-600 capitalize\">\n                      {selectedSport.category}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleClearSelection}\n              disabled={disabled}\n              className=\"text-blue-600 hover:text-blue-800 hover:bg-blue-100\"\n            >\n              Modifier\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  const renderSearchInterface = () => {\n    if (selectedSport && !isOpen) return null;\n\n    return (\n      <div className=\"space-y-4\" ref={inputRef}>\n        {/* Barre de recherche */}\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n          <Input\n            ref={inputRef}\n            type=\"text\"\n            placeholder={placeholder}\n            value={searchState.query}\n            onChange={e => handleInputChange(e.target.value)}\n            disabled={disabled || sportsLoading}\n            className={cn(\n              'pl-10 pr-12 py-3 text-lg border-2 focus:border-blue-500 transition-colors',\n              searchState.error && 'border-red-300 focus:border-red-500'\n            )}\n            onFocus={() => setIsOpen(true)}\n            aria-label=\"Rechercher un sport\"\n            autoComplete=\"off\"\n          />\n\n          {/* Indicateurs de chargement/erreur */}\n          <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n            {searchState.loading && (\n              <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-blue-500 border-t-transparent\" />\n            )}\n            {searchState.error && <AlertCircle className=\"h-4 w-4 text-red-500\" />}\n          </div>\n        </div>\n\n        {/* Interface de sélection ouverte */}\n        {isOpen && (\n          <div className=\"space-y-4 animate-in slide-in-from-top-2 duration-200\">\n            {renderSearchResults()}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderSearchResults = () => {\n    // État de chargement initial\n    if (sportsLoading && allSports.length === 0) {\n      return (\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <Skeleton className=\"h-6 w-32\" />\n            <Skeleton className=\"h-5 w-16\" />\n          </div>\n          {Array.from({ length: 6 }).map((_, i) => (\n            <Skeleton key={i} className=\"h-16 w-full rounded-lg\" />\n          ))}\n        </div>\n      );\n    }\n\n    // Erreur de chargement des sports\n    if (sportsError) {\n      return (\n        <Card className=\"border-red-200 bg-red-50\">\n          <CardContent className=\"p-4 text-center\">\n            <AlertCircle className=\"h-8 w-8 text-red-500 mx-auto mb-2\" />\n            <p className=\"text-red-700 font-medium\">Erreur de chargement</p>\n            <p className=\"text-red-600 text-sm mb-3\">{sportsError}</p>\n            <Button\n              onClick={refreshSports}\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"border-red-300 text-red-700 hover:bg-red-100\"\n            >\n              Réessayer\n            </Button>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    return (\n      <>\n        {/* En-tête des résultats */}\n        {renderResultsHeader()}\n\n        {/* Liste des sports */}\n        {displaySports.length > 0 ? (\n          <div className=\"space-y-2 max-h-80 overflow-y-auto pr-2 scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100\">\n            {showCategories ? renderCategorizedSports() : renderSportsList()}\n          </div>\n        ) : (\n          renderEmptyState()\n        )}\n\n        {/* Suggestion de sport personnalisé */}\n        {renderCustomSportSuggestion()}\n\n        {/* Actions */}\n        {renderActions()}\n      </>\n    );\n  };\n\n  const renderResultsHeader = () => {\n    const title = searchState.hasSearched\n      ? `Résultats pour \"${searchState.query}\"`\n      : showPopular && popularSports.length > 0\n        ? 'Sports populaires'\n        : 'Tous les sports';\n\n    const count = displaySports.length;\n\n    return (\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"font-semibold text-gray-900 flex items-center\">\n          {searchState.hasSearched && <Search className=\"w-4 h-4 mr-2\" />}\n          {title}\n        </h3>\n        <div className=\"flex items-center space-x-2\">\n          <Badge variant=\"outline\" className=\"text-xs\">\n            {count} résultat{count !== 1 ? 's' : ''}\n          </Badge>\n          {showCategories && (\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 px-2\">\n              <Filter className=\"w-3 h-3\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderSportsList = () => (\n    <div className=\"grid gap-2\">\n      {displaySports.map((sport, index) => renderSportItem(sport, index))}\n    </div>\n  );\n\n  const renderCategorizedSports = () => (\n    <div className=\"space-y-4\">\n      {Object.entries(sportCategories).map(([category, sports]) => (\n        <div key={category}>\n          <h4 className=\"font-medium text-gray-700 mb-2 text-sm uppercase tracking-wide\">\n            {category}\n          </h4>\n          <div className=\"grid gap-2 ml-2\">\n            {sports.map((sport, index) => renderSportItem(sport, index))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderEmptyState = () => {\n    if (!searchState.hasSearched) return null;\n\n    return (\n      <div className=\"text-center py-12 px-4\">\n        <Search className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n        <h3 className=\"font-medium text-gray-900 mb-2\">Aucun sport trouvé</h3>\n        <p className=\"text-gray-500 mb-4\">Aucun résultat pour \"{searchState.query}\"</p>\n        {allowCustom && (\n          <Button\n            onClick={() =>\n              setSearchState(prev => ({\n                ...prev,\n                showSuggestion: true,\n                customSportName: prev.query,\n              }))\n            }\n            variant=\"outline\"\n            size=\"sm\"\n          >\n            <Plus className=\"w-4 h-4 mr-2\" />\n            Suggérer ce sport\n          </Button>\n        )}\n      </div>\n    );\n  };\n\n  const renderCustomSportSuggestion = () => {\n    if (!searchState.showSuggestion || !allowCustom) return null;\n\n    return (\n      <Card className=\"border-amber-200 bg-gradient-to-r from-amber-50 to-yellow-50\">\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-start space-x-3\">\n            <div className=\"p-2 bg-amber-100 rounded-lg\">\n              <Plus className=\"h-4 w-4 text-amber-600\" />\n            </div>\n            <div className=\"flex-1\">\n              <h4 className=\"font-semibold text-amber-900 mb-1\">\n                Sport non trouvé ? Aidez-nous à l'ajouter !\n              </h4>\n              <p className=\"text-sm text-amber-700 mb-3\">\n                Votre suggestion sera examinée par notre équipe et pourra être ajoutée pour tous les\n                utilisateurs.\n              </p>\n              <div className=\"flex space-x-2\">\n                <Input\n                  value={searchState.customSportName}\n                  onChange={e =>\n                    setSearchState(prev => ({\n                      ...prev,\n                      customSportName: e.target.value,\n                    }))\n                  }\n                  placeholder=\"Nom du sport\"\n                  className=\"flex-1 border-amber-200 focus:border-amber-400\"\n                  disabled={disabled}\n                />\n                <Button\n                  onClick={handleSuggestCustomSport}\n                  size=\"sm\"\n                  disabled={!searchState.customSportName.trim() || disabled}\n                  className=\"bg-amber-600 hover:bg-amber-700 text-white\"\n                >\n                  <Plus className=\"h-4 w-4 mr-1\" />\n                  Suggérer\n                </Button>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  const renderActions = () => {\n    if (!isOpen || !selectedSport) return null;\n\n    return (\n      <div className=\"flex justify-center pt-4 border-t\">\n        <Button\n          variant=\"outline\"\n          onClick={() => setIsOpen(false)}\n          className=\"flex items-center\"\n          disabled={disabled}\n        >\n          <X className=\"h-4 w-4 mr-2\" />\n          Annuler\n        </Button>\n      </div>\n    );\n  };\n\n  /* ========================== RENDER PRINCIPAL ======================= */\n\n  return (\n    <div className={cn('relative', className)}>\n      {renderSelectedSport()}\n      {renderSearchInterface()}\n    </div>\n  );\n}\n\n/* ================================================================== */\n/*                        VARIANTS ET EXPORTS                          */\n/* ================================================================== */\n\n// Variant compact pour utilisation dans des formulaires\nexport const CompactSportSelector: React.FC<Omit<SportSelectorProps, 'variant'>> = props => (\n  <SportSelector {...props} variant=\"compact\" showPopular={false} />\n);\n\n// Variant avec catégories pour une interface plus riche\nexport const CategorizedSportSelector: React.FC<\n  Omit<SportSelectorProps, 'variant' | 'showCategories'>\n> = props => <SportSelector {...props} variant=\"default\" showCategories={true} />;\n"],"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","ignoreList":[]}