c7fd3f558de740a2541f0bf4d4093eb9
"use strict";

/* istanbul ignore next */
function cov_1s7kzgaomf() {
  var path = "/workspaces/MyFitHero/src/features/profile/hooks/useProfile.ts";
  var hash = "e37cc4931b1994417dd3316ecc1f4119a02045b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/profile/hooks/useProfile.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 26
        },
        end: {
          line: 5,
          column: 80
        }
      },
      "4": {
        start: {
          line: 7,
          column: 34
        },
        end: {
          line: 7,
          column: 61
        }
      },
      "5": {
        start: {
          line: 8,
          column: 30
        },
        end: {
          line: 8,
          column: 57
        }
      },
      "6": {
        start: {
          line: 9,
          column: 44
        },
        end: {
          line: 9,
          column: 69
        }
      },
      "7": {
        start: {
          line: 10,
          column: 30
        },
        end: {
          line: 10,
          column: 55
        }
      },
      "8": {
        start: {
          line: 11,
          column: 38
        },
        end: {
          line: 11,
          column: 66
        }
      },
      "9": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "10": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "11": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 31,
          column: 23
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "13": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "14": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 27
        }
      },
      "15": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 23
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "17": {
        start: {
          line: 21,
          column: 32
        },
        end: {
          line: 21,
          column: 96
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "19": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 107
        }
      },
      "20": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 35
        }
      },
      "21": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "22": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 43,
          column: 23
        }
      },
      "23": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "24": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "25": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "26": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 37,
          column: 99
        }
      },
      "27": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 32
        }
      },
      "28": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 78
        }
      },
      "29": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 55,
          column: 23
        }
      },
      "30": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "31": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "32": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "33": {
        start: {
          line: 49,
          column: 37
        },
        end: {
          line: 49,
          column: 106
        }
      },
      "34": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 46
        }
      },
      "35": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 78
        }
      },
      "36": {
        start: {
          line: 57,
          column: 22
        },
        end: {
          line: 67,
          column: 23
        }
      },
      "37": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "38": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "39": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "40": {
        start: {
          line: 61,
          column: 30
        },
        end: {
          line: 61,
          column: 92
        }
      },
      "41": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 32
        }
      },
      "42": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 75
        }
      },
      "43": {
        start: {
          line: 69,
          column: 26
        },
        end: {
          line: 85,
          column: 23
        }
      },
      "44": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "45": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "46": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 27
        }
      },
      "47": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 23
        }
      },
      "48": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "49": {
        start: {
          line: 75,
          column: 35
        },
        end: {
          line: 75,
          column: 108
        }
      },
      "50": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "51": {
        start: {
          line: 79,
          column: 33
        },
        end: {
          line: 79,
          column: 111
        }
      },
      "52": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 35
        }
      },
      "53": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 32
        }
      },
      "54": {
        start: {
          line: 87,
          column: 25
        },
        end: {
          line: 105,
          column: 32
        }
      },
      "55": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 89,
          column: 19
        }
      },
      "56": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 19
        }
      },
      "57": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 27
        }
      },
      "58": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 23
        }
      },
      "59": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "60": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 93,
          column: 102
        }
      },
      "61": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "62": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 62
        }
      },
      "63": {
        start: {
          line: 99,
          column: 33
        },
        end: {
          line: 99,
          column: 107
        }
      },
      "64": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 35
        }
      },
      "65": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 32
        }
      },
      "66": {
        start: {
          line: 107,
          column: 23
        },
        end: {
          line: 123,
          column: 23
        }
      },
      "67": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 109,
          column: 19
        }
      },
      "68": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 19
        }
      },
      "69": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 27
        }
      },
      "70": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 23
        }
      },
      "71": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "72": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 98
        }
      },
      "73": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 49
        }
      },
      "74": {
        start: {
          line: 114,
          column: 29
        },
        end: {
          line: 114,
          column: 47
        }
      },
      "75": {
        start: {
          line: 117,
          column: 33
        },
        end: {
          line: 117,
          column: 112
        }
      },
      "76": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 35
        }
      },
      "77": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 32
        }
      },
      "78": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 139,
          column: 10
        }
      },
      "79": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 27
        }
      },
      "80": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 23
        }
      },
      "81": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "82": {
        start: {
          line: 129,
          column: 32
        },
        end: {
          line: 129,
          column: 95
        }
      },
      "83": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 99
        }
      },
      "84": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 130,
          column: 97
        }
      },
      "85": {
        start: {
          line: 130,
          column: 56
        },
        end: {
          line: 130,
          column: 95
        }
      },
      "86": {
        start: {
          line: 133,
          column: 33
        },
        end: {
          line: 133,
          column: 115
        }
      },
      "87": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 35
        }
      },
      "88": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 32
        }
      },
      "89": {
        start: {
          line: 141,
          column: 23
        },
        end: {
          line: 155,
          column: 10
        }
      },
      "90": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 27
        }
      },
      "91": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 23
        }
      },
      "92": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "93": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 70
        }
      },
      "94": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 70
        }
      },
      "95": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 146,
          column: 68
        }
      },
      "96": {
        start: {
          line: 146,
          column: 49
        },
        end: {
          line: 146,
          column: 67
        }
      },
      "97": {
        start: {
          line: 149,
          column: 33
        },
        end: {
          line: 149,
          column: 115
        }
      },
      "98": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 35
        }
      },
      "99": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 32
        }
      },
      "100": {
        start: {
          line: 157,
          column: 27
        },
        end: {
          line: 159,
          column: 61
        }
      },
      "101": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 89
        }
      },
      "102": {
        start: {
          line: 161,
          column: 30
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "103": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 163,
          column: 21
        }
      },
      "104": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 21
        }
      },
      "105": {
        start: {
          line: 164,
          column: 31
        },
        end: {
          line: 164,
          column: 73
        }
      },
      "106": {
        start: {
          line: 164,
          column: 52
        },
        end: {
          line: 164,
          column: 72
        }
      },
      "107": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 72
        }
      },
      "108": {
        start: {
          line: 167,
          column: 32
        },
        end: {
          line: 169,
          column: 15
        }
      },
      "109": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 81
        }
      },
      "110": {
        start: {
          line: 168,
          column: 36
        },
        end: {
          line: 168,
          column: 72
        }
      },
      "111": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 173,
          column: 25
        }
      },
      "112": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 25
        }
      },
      "113": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 189,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "useProfile",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 19
          }
        },
        loc: {
          start: {
            line: 6,
            column: 28
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 49
          },
          end: {
            line: 15,
            column: 50
          }
        },
        loc: {
          start: {
            line: 15,
            column: 61
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 47
          },
          end: {
            line: 33,
            column: 48
          }
        },
        loc: {
          start: {
            line: 33,
            column: 59
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 54
          },
          end: {
            line: 45,
            column: 55
          }
        },
        loc: {
          start: {
            line: 45,
            column: 66
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 47
          },
          end: {
            line: 57,
            column: 48
          }
        },
        loc: {
          start: {
            line: 57,
            column: 59
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 69,
            column: 51
          },
          end: {
            line: 69,
            column: 52
          }
        },
        loc: {
          start: {
            line: 69,
            column: 67
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 69
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 87,
            column: 50
          },
          end: {
            line: 87,
            column: 51
          }
        },
        loc: {
          start: {
            line: 87,
            column: 66
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 87
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 107,
            column: 48
          },
          end: {
            line: 107,
            column: 49
          }
        },
        loc: {
          start: {
            line: 107,
            column: 64
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 107
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 114,
            column: 21
          },
          end: {
            line: 114,
            column: 22
          }
        },
        loc: {
          start: {
            line: 114,
            column: 29
          },
          end: {
            line: 114,
            column: 47
          }
        },
        line: 114
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 125,
            column: 48
          },
          end: {
            line: 125,
            column: 49
          }
        },
        loc: {
          start: {
            line: 125,
            column: 72
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 125
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 130,
            column: 21
          },
          end: {
            line: 130,
            column: 22
          }
        },
        loc: {
          start: {
            line: 130,
            column: 29
          },
          end: {
            line: 130,
            column: 97
          }
        },
        line: 130
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 130,
            column: 38
          },
          end: {
            line: 130,
            column: 39
          }
        },
        loc: {
          start: {
            line: 130,
            column: 56
          },
          end: {
            line: 130,
            column: 95
          }
        },
        line: 130
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 141,
            column: 48
          },
          end: {
            line: 141,
            column: 49
          }
        },
        loc: {
          start: {
            line: 141,
            column: 66
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 141
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 146,
            column: 21
          },
          end: {
            line: 146,
            column: 22
          }
        },
        loc: {
          start: {
            line: 146,
            column: 29
          },
          end: {
            line: 146,
            column: 68
          }
        },
        line: 146
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 146,
            column: 41
          },
          end: {
            line: 146,
            column: 42
          }
        },
        loc: {
          start: {
            line: 146,
            column: 49
          },
          end: {
            line: 146,
            column: 67
          }
        },
        line: 146
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 157,
            column: 52
          },
          end: {
            line: 157,
            column: 53
          }
        },
        loc: {
          start: {
            line: 157,
            column: 64
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 157
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 161,
            column: 55
          },
          end: {
            line: 161,
            column: 56
          }
        },
        loc: {
          start: {
            line: 161,
            column: 61
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 161
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 164,
            column: 44
          },
          end: {
            line: 164,
            column: 45
          }
        },
        loc: {
          start: {
            line: 164,
            column: 52
          },
          end: {
            line: 164,
            column: 72
          }
        },
        line: 164
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 167,
            column: 57
          },
          end: {
            line: 167,
            column: 58
          }
        },
        loc: {
          start: {
            line: 167,
            column: 63
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 167
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 168,
            column: 28
          },
          end: {
            line: 168,
            column: 29
          }
        },
        loc: {
          start: {
            line: 168,
            column: 36
          },
          end: {
            line: 168,
            column: 72
          }
        },
        line: 168
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 171,
            column: 27
          },
          end: {
            line: 171,
            column: 28
          }
        },
        loc: {
          start: {
            line: 171,
            column: 33
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 171
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 32
          }
        }, {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 13,
            column: 50
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 17,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 17,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 25,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 56
          },
          end: {
            line: 25,
            column: 67
          }
        }, {
          start: {
            line: 25,
            column: 70
          },
          end: {
            line: 25,
            column: 107
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 59,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 59,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 71,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 71,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 33
          },
          end: {
            line: 79,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 56
          },
          end: {
            line: 79,
            column: 67
          }
        }, {
          start: {
            line: 79,
            column: 70
          },
          end: {
            line: 79,
            column: 111
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 89,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 89,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "9": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "10": {
        loc: {
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 99,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 56
          },
          end: {
            line: 99,
            column: 67
          }
        }, {
          start: {
            line: 99,
            column: 70
          },
          end: {
            line: 99,
            column: 107
          }
        }],
        line: 99
      },
      "11": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 109,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 109,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "12": {
        loc: {
          start: {
            line: 117,
            column: 33
          },
          end: {
            line: 117,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 56
          },
          end: {
            line: 117,
            column: 67
          }
        }, {
          start: {
            line: 117,
            column: 70
          },
          end: {
            line: 117,
            column: 112
          }
        }],
        line: 117
      },
      "13": {
        loc: {
          start: {
            line: 130,
            column: 56
          },
          end: {
            line: 130,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 77
          },
          end: {
            line: 130,
            column: 88
          }
        }, {
          start: {
            line: 130,
            column: 91
          },
          end: {
            line: 130,
            column: 95
          }
        }],
        line: 130
      },
      "14": {
        loc: {
          start: {
            line: 133,
            column: 33
          },
          end: {
            line: 133,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 56
          },
          end: {
            line: 133,
            column: 67
          }
        }, {
          start: {
            line: 133,
            column: 70
          },
          end: {
            line: 133,
            column: 115
          }
        }],
        line: 133
      },
      "15": {
        loc: {
          start: {
            line: 149,
            column: 33
          },
          end: {
            line: 149,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 56
          },
          end: {
            line: 149,
            column: 67
          }
        }, {
          start: {
            line: 149,
            column: 70
          },
          end: {
            line: 149,
            column: 115
          }
        }],
        line: 149
      },
      "16": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 163,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 163,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "17": {
        loc: {
          start: {
            line: 168,
            column: 36
          },
          end: {
            line: 168,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 36
          },
          end: {
            line: 168,
            column: 49
          }
        }, {
          start: {
            line: 168,
            column: 53
          },
          end: {
            line: 168,
            column: 72
          }
        }],
        line: 168
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/profile/hooks/useProfile.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/profile/hooks/useProfile.ts"],
      sourcesContent: ["import React, { useState, useEffect, useCallback } from 'react';\nimport { ProfileService } from '@/features/profile/services/profile.service';\nimport type {\n  UserProfile,\n  UpdateProfileData,\n  ProfileStats,\n  AchievementData,\n  GoalData,\n  CreateGoalData,\n  UpdateGoalData,\n} from '@/features/profile/types/index';\n\nexport interface UseProfileReturn {\n  // \xC9tat\n  profile: UserProfile | undefined;\n  stats: ProfileStats | undefined;\n  achievements: AchievementData[];\n  goals: GoalData[];\n  isLoading: boolean;\n  error: string | undefined;\n\n  // Actions\n  updateProfile: (data: UpdateProfileData) => Promise<void>;\n  uploadAvatar: (file: File) => Promise<void>;\n  createGoal: (goal: CreateGoalData) => Promise<void>;\n  updateGoal: (goalId: string, data: UpdateGoalData) => Promise<void>;\n  deleteGoal: (goalId: string) => Promise<void>;\n  refreshProfile: () => Promise<void>;\n\n  // Calculateurs\n  getCompletionRate: () => number;\n  getActiveGoalsCount: () => number;\n}\n\nexport function useProfile(userId?: string): UseProfileReturn {\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [stats, setStats] = useState<ProfileStats | null>(null);\n  const [achievements, setAchievements] = useState<AchievementData[]>([]);\n  const [goals, setGoals] = useState<GoalData[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const currentUserId = userId || 'current-user';\n\n  // Chargement des donn\xE9es du profil\n  const loadProfile = useCallback(async () => {\n    if (!currentUserId) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const profileData = await ProfileService.getProfile(currentUserId);\n      setProfile(profileData);\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : 'Erreur lors du chargement du profil';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [currentUserId]);\n\n  // Chargement des statistiques\n  const loadStats = useCallback(async () => {\n    if (!currentUserId) return;\n\n    try {\n      const statsData = await ProfileService.getProfileStats(currentUserId);\n      setStats(statsData);\n    } catch (err) {\n      console.error('Erreur lors du chargement des statistiques:', err);\n    }\n  }, [currentUserId]);\n\n  // Chargement des achievements\n  const loadAchievements = useCallback(async () => {\n    if (!currentUserId) return;\n\n    try {\n      const achievementsData = await ProfileService.getAchievements(currentUserId);\n      setAchievements(achievementsData);\n    } catch (err) {\n      console.error('Erreur lors du chargement des achievements:', err);\n    }\n  }, [currentUserId]);\n\n  // Chargement des objectifs\n  const loadGoals = useCallback(async () => {\n    if (!currentUserId) return;\n\n    try {\n      const goalsData = await ProfileService.getGoals(currentUserId);\n      setGoals(goalsData);\n    } catch (err) {\n      console.error('Erreur lors du chargement des objectifs:', err);\n    }\n  }, [currentUserId]);\n\n  // Mise \xE0 jour du profil\n  const updateProfile = useCallback(\n    async (data: UpdateProfileData) => {\n      if (!currentUserId) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const updatedProfile = await ProfileService.updateProfile(currentUserId, data);\n        setProfile(updatedProfile);\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error ? err.message : 'Erreur lors de la mise \xE0 jour du profil';\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [currentUserId]\n  );\n\n  // Upload d'avatar\n  const uploadAvatar = useCallback(\n    async (file: File) => {\n      if (!currentUserId) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const avatarUrl = await ProfileService.uploadAvatar(currentUserId, file);\n        if (profile) {\n          setProfile({ ...profile, avatar: avatarUrl });\n        }\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error ? err.message : \"Erreur lors de l'upload de l'avatar\";\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [currentUserId, profile]\n  );\n\n  // Cr\xE9ation d'objectif\n  const createGoal = useCallback(\n    async (goal: CreateGoalData) => {\n      if (!currentUserId) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const newGoal = await ProfileService.createGoal(currentUserId, goal);\n        setGoals(prev => [...prev, newGoal]);\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error ? err.message : \"Erreur lors de la cr\xE9ation de l'objectif\";\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [currentUserId]\n  );\n\n  // Mise \xE0 jour d'objectif\n  const updateGoal = useCallback(async (goalId: string, data: UpdateGoalData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const updatedGoal = await ProfileService.updateGoal(goalId, data);\n      setGoals(prev => prev.map((goal, index) => (goal.id === goalId ? updatedGoal : goal)));\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : \"Erreur lors de la mise \xE0 jour de l'objectif\";\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Suppression d'objectif\n  const deleteGoal = useCallback(async (goalId: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      await ProfileService.deleteGoal(goalId);\n      setGoals(prev => prev.filter(goal => goal.id !== goalId));\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : \"Erreur lors de la suppression de l'objectif\";\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Rafra\xEEchissement complet\n  const refreshProfile = useCallback(async () => {\n    await Promise.all([loadProfile(), loadStats(), loadAchievements(), loadGoals()]);\n  }, [loadProfile, loadStats, loadAchievements, loadGoals]);\n\n  // Calculateurs\n  const getCompletionRate = useCallback((): number => {\n    if (!goals.length) return 0;\n    const completedGoals = goals.filter(goal => goal.progress >= 100);\n    return Math.round((completedGoals.length / goals.length) * 100);\n  }, [goals]);\n\n  const getActiveGoalsCount = useCallback((): number => {\n    return goals.filter(goal => goal.isActive && goal.progress < 100).length;\n  }, [goals]);\n\n  // Chargement initial\n  useEffect(() => {\n    refreshProfile();\n  }, [refreshProfile]);\n\n  return {\n    profile,\n    stats,\n    achievements,\n    goals,\n    isLoading,\n    error,\n    updateProfile,\n    uploadAvatar,\n    createGoal,\n    updateGoal,\n    deleteGoal,\n    refreshProfile,\n    getCompletionRate,\n    getActiveGoalsCount,\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e37cc4931b1994417dd3316ecc1f4119a02045b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1s7kzgaomf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1s7kzgaomf();
cov_1s7kzgaomf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1s7kzgaomf().s[1]++;
exports.useProfile = useProfile;
const react_1 =
/* istanbul ignore next */
(cov_1s7kzgaomf().s[2]++, require("react"));
const profile_service_1 =
/* istanbul ignore next */
(cov_1s7kzgaomf().s[3]++, require("@/features/profile/services/profile.service"));
function useProfile(userId) {
  /* istanbul ignore next */
  cov_1s7kzgaomf().f[0]++;
  const [profile, setProfile] =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[4]++, (0, react_1.useState)(null));
  const [stats, setStats] =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[5]++, (0, react_1.useState)(null));
  const [achievements, setAchievements] =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[6]++, (0, react_1.useState)([]));
  const [goals, setGoals] =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[7]++, (0, react_1.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[8]++, (0, react_1.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[9]++, (0, react_1.useState)(null));
  const currentUserId =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[10]++,
  /* istanbul ignore next */
  (cov_1s7kzgaomf().b[0][0]++, userId) ||
  /* istanbul ignore next */
  (cov_1s7kzgaomf().b[0][1]++, 'current-user'));
  // Chargement des données du profil
  const loadProfile =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[11]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[1]++;
    cov_1s7kzgaomf().s[12]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().b[1][0]++;
      cov_1s7kzgaomf().s[13]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1s7kzgaomf().b[1][1]++;
    }
    cov_1s7kzgaomf().s[14]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[15]++;
    setError(null);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[16]++;
    try {
      const profileData =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[17]++, await profile_service_1.ProfileService.getProfile(currentUserId));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[18]++;
      setProfile(profileData);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[19]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[2][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[2][1]++, 'Erreur lors du chargement du profil'));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[20]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[21]++;
      setIsLoading(false);
    }
  }, [currentUserId]));
  // Chargement des statistiques
  const loadStats =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[22]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[2]++;
    cov_1s7kzgaomf().s[23]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().b[3][0]++;
      cov_1s7kzgaomf().s[24]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1s7kzgaomf().b[3][1]++;
    }
    cov_1s7kzgaomf().s[25]++;
    try {
      const statsData =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[26]++, await profile_service_1.ProfileService.getProfileStats(currentUserId));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[27]++;
      setStats(statsData);
    } catch (err) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[28]++;
      console.error('Erreur lors du chargement des statistiques:', err);
    }
  }, [currentUserId]));
  // Chargement des achievements
  const loadAchievements =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[29]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[3]++;
    cov_1s7kzgaomf().s[30]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().b[4][0]++;
      cov_1s7kzgaomf().s[31]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1s7kzgaomf().b[4][1]++;
    }
    cov_1s7kzgaomf().s[32]++;
    try {
      const achievementsData =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[33]++, await profile_service_1.ProfileService.getAchievements(currentUserId));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[34]++;
      setAchievements(achievementsData);
    } catch (err) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[35]++;
      console.error('Erreur lors du chargement des achievements:', err);
    }
  }, [currentUserId]));
  // Chargement des objectifs
  const loadGoals =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[36]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[4]++;
    cov_1s7kzgaomf().s[37]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().b[5][0]++;
      cov_1s7kzgaomf().s[38]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1s7kzgaomf().b[5][1]++;
    }
    cov_1s7kzgaomf().s[39]++;
    try {
      const goalsData =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[40]++, await profile_service_1.ProfileService.getGoals(currentUserId));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[41]++;
      setGoals(goalsData);
    } catch (err) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[42]++;
      console.error('Erreur lors du chargement des objectifs:', err);
    }
  }, [currentUserId]));
  // Mise à jour du profil
  const updateProfile =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[43]++, (0, react_1.useCallback)(async data => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[5]++;
    cov_1s7kzgaomf().s[44]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().b[6][0]++;
      cov_1s7kzgaomf().s[45]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1s7kzgaomf().b[6][1]++;
    }
    cov_1s7kzgaomf().s[46]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[47]++;
    setError(null);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[48]++;
    try {
      const updatedProfile =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[49]++, await profile_service_1.ProfileService.updateProfile(currentUserId, data));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[50]++;
      setProfile(updatedProfile);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[51]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[7][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[7][1]++, 'Erreur lors de la mise à jour du profil'));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[52]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[53]++;
      setIsLoading(false);
    }
  }, [currentUserId]));
  // Upload d'avatar
  const uploadAvatar =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[54]++, (0, react_1.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[6]++;
    cov_1s7kzgaomf().s[55]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().b[8][0]++;
      cov_1s7kzgaomf().s[56]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1s7kzgaomf().b[8][1]++;
    }
    cov_1s7kzgaomf().s[57]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[58]++;
    setError(null);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[59]++;
    try {
      const avatarUrl =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[60]++, await profile_service_1.ProfileService.uploadAvatar(currentUserId, file));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[61]++;
      if (profile) {
        /* istanbul ignore next */
        cov_1s7kzgaomf().b[9][0]++;
        cov_1s7kzgaomf().s[62]++;
        setProfile({
          ...profile,
          avatar: avatarUrl
        });
      } else
      /* istanbul ignore next */
      {
        cov_1s7kzgaomf().b[9][1]++;
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[63]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[10][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[10][1]++, "Erreur lors de l'upload de l'avatar"));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[64]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[65]++;
      setIsLoading(false);
    }
  }, [currentUserId, profile]));
  // Création d'objectif
  const createGoal =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[66]++, (0, react_1.useCallback)(async goal => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[7]++;
    cov_1s7kzgaomf().s[67]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().b[11][0]++;
      cov_1s7kzgaomf().s[68]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1s7kzgaomf().b[11][1]++;
    }
    cov_1s7kzgaomf().s[69]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[70]++;
    setError(null);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[71]++;
    try {
      const newGoal =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[72]++, await profile_service_1.ProfileService.createGoal(currentUserId, goal));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[73]++;
      setGoals(prev => {
        /* istanbul ignore next */
        cov_1s7kzgaomf().f[8]++;
        cov_1s7kzgaomf().s[74]++;
        return [...prev, newGoal];
      });
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[75]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[12][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[12][1]++, "Erreur lors de la création de l'objectif"));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[76]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[77]++;
      setIsLoading(false);
    }
  }, [currentUserId]));
  // Mise à jour d'objectif
  const updateGoal =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[78]++, (0, react_1.useCallback)(async (goalId, data) => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[9]++;
    cov_1s7kzgaomf().s[79]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[80]++;
    setError(null);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[81]++;
    try {
      const updatedGoal =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[82]++, await profile_service_1.ProfileService.updateGoal(goalId, data));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[83]++;
      setGoals(prev => {
        /* istanbul ignore next */
        cov_1s7kzgaomf().f[10]++;
        cov_1s7kzgaomf().s[84]++;
        return prev.map((goal, index) => {
          /* istanbul ignore next */
          cov_1s7kzgaomf().f[11]++;
          cov_1s7kzgaomf().s[85]++;
          return goal.id === goalId ?
          /* istanbul ignore next */
          (cov_1s7kzgaomf().b[13][0]++, updatedGoal) :
          /* istanbul ignore next */
          (cov_1s7kzgaomf().b[13][1]++, goal);
        });
      });
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[86]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[14][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[14][1]++, "Erreur lors de la mise à jour de l'objectif"));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[87]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[88]++;
      setIsLoading(false);
    }
  }, []));
  // Suppression d'objectif
  const deleteGoal =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[89]++, (0, react_1.useCallback)(async goalId => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[12]++;
    cov_1s7kzgaomf().s[90]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[91]++;
    setError(null);
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[92]++;
    try {
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[93]++;
      await profile_service_1.ProfileService.deleteGoal(goalId);
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[94]++;
      setGoals(prev => {
        /* istanbul ignore next */
        cov_1s7kzgaomf().f[13]++;
        cov_1s7kzgaomf().s[95]++;
        return prev.filter(goal => {
          /* istanbul ignore next */
          cov_1s7kzgaomf().f[14]++;
          cov_1s7kzgaomf().s[96]++;
          return goal.id !== goalId;
        });
      });
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1s7kzgaomf().s[97]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[15][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[15][1]++, "Erreur lors de la suppression de l'objectif"));
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[98]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1s7kzgaomf().s[99]++;
      setIsLoading(false);
    }
  }, []));
  // Rafraîchissement complet
  const refreshProfile =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[100]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[15]++;
    cov_1s7kzgaomf().s[101]++;
    await Promise.all([loadProfile(), loadStats(), loadAchievements(), loadGoals()]);
  }, [loadProfile, loadStats, loadAchievements, loadGoals]));
  // Calculateurs
  const getCompletionRate =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[102]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[16]++;
    cov_1s7kzgaomf().s[103]++;
    if (!goals.length) {
      /* istanbul ignore next */
      cov_1s7kzgaomf().b[16][0]++;
      cov_1s7kzgaomf().s[104]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1s7kzgaomf().b[16][1]++;
    }
    const completedGoals =
    /* istanbul ignore next */
    (cov_1s7kzgaomf().s[105]++, goals.filter(goal => {
      /* istanbul ignore next */
      cov_1s7kzgaomf().f[17]++;
      cov_1s7kzgaomf().s[106]++;
      return goal.progress >= 100;
    }));
    /* istanbul ignore next */
    cov_1s7kzgaomf().s[107]++;
    return Math.round(completedGoals.length / goals.length * 100);
  }, [goals]));
  const getActiveGoalsCount =
  /* istanbul ignore next */
  (cov_1s7kzgaomf().s[108]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[18]++;
    cov_1s7kzgaomf().s[109]++;
    return goals.filter(goal => {
      /* istanbul ignore next */
      cov_1s7kzgaomf().f[19]++;
      cov_1s7kzgaomf().s[110]++;
      return /* istanbul ignore next */(cov_1s7kzgaomf().b[17][0]++, goal.isActive) &&
      /* istanbul ignore next */
      (cov_1s7kzgaomf().b[17][1]++, goal.progress < 100);
    }).length;
  }, [goals]));
  // Chargement initial
  /* istanbul ignore next */
  cov_1s7kzgaomf().s[111]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_1s7kzgaomf().f[20]++;
    cov_1s7kzgaomf().s[112]++;
    refreshProfile();
  }, [refreshProfile]);
  /* istanbul ignore next */
  cov_1s7kzgaomf().s[113]++;
  return {
    profile,
    stats,
    achievements,
    goals,
    isLoading,
    error,
    updateProfile,
    uploadAvatar,
    createGoal,
    updateGoal,
    deleteGoal,
    refreshProfile,
    getCompletionRate,
    getActiveGoalsCount
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,