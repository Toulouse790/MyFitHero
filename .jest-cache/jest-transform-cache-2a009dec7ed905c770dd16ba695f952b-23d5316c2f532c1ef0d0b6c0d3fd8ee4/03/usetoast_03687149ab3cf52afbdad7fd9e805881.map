{"version":3,"names":["cov_15oeedzuyj","actualCoverage","s","zustand_1","require","uuid_1","TOAST_REMOVE_DELAY","useToastStore","create","set","get","f","toasts","addToast","toastOptions","id","v4","toast","title","b","description","variant","duration","action","createdAt","Date","now","dismissed","state","setTimeout","dismissToast","map","filter","clearAllToasts","useToast","options","success","error","warning","info","dismiss","dismissAll","exports","useToasts"],"sources":["/workspaces/MyFitHero/src/shared/hooks/use-toast.ts"],"sourcesContent":["import { toast } from 'sonner';\nimport { create } from 'zustand';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport interface ToastOptions {\n  title?: string;\n  description?: string;\n  variant?: 'default' | 'destructive' | 'success' | 'warning';\n  duration?: number;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n}\n\nexport interface Toast extends Required<Omit<ToastOptions, 'action'>> {\n  id: string;\n  action?: ToastOptions['action'];\n  createdAt: number;\n  dismissed: boolean;\n}\n\ninterface ToastState {\n  toasts: Toast[];\n  addToast: (toast: ToastOptions) => string;\n  dismissToast: (id: string) => void;\n  clearAllToasts: () => void;\n}\n\nconst TOAST_REMOVE_DELAY = 1000000; // 1000 seconds - high value for persistence\n\nconst useToastStore = create<ToastState>((set, get) => ({\n  toasts: [],\n  \n  addToast: (toastOptions) => {\n    const id = uuidv4();\n    const toast: Toast = {\n      id,\n      title: toastOptions.title || '',\n      description: toastOptions.description || '',\n      variant: toastOptions.variant || 'default',\n      duration: toastOptions.duration || 5000,\n      action: toastOptions.action,\n      createdAt: Date.now(),\n      dismissed: false,\n    };\n\n    set((state) => ({\n      toasts: [...state.toasts, toast],\n    }));\n\n    // Auto dismiss after duration\n    if (toast.duration > 0) {\n      setTimeout(() => {\n        get().dismissToast(id);\n      }, toast.duration);\n    }\n\n    return id;\n  },\n  \n  dismissToast: (id) => {\n    set((state) => ({\n      toasts: state.toasts.map((toast) =>\n        toast.id === id ? { ...toast, dismissed: true } : toast\n      ),\n    }));\n\n    // Remove from store after animation delay\n    setTimeout(() => {\n      set((state) => ({\n        toasts: state.toasts.filter((toast) => toast.id !== id),\n      }));\n    }, TOAST_REMOVE_DELAY);\n  },\n  \n  clearAllToasts: () => {\n    set({ toasts: [] });\n  },\n}));\n\nexport const useToast = () => {\n  const { addToast, dismissToast, clearAllToasts, toasts } = useToastStore();\n\n  const toast = (options: ToastOptions) => {\n    return addToast(options);\n  };\n\n  // Convenience methods\n  const success = (title: string, description?: string) => {\n    return toast({\n      title,\n      description,\n      variant: 'success',\n    });\n  };\n\n  const error = (title: string, description?: string) => {\n    return toast({\n      title,\n      description,\n      variant: 'destructive',\n    });\n  };\n\n  const warning = (title: string, description?: string) => {\n    return toast({\n      title,\n      description,\n      variant: 'warning',\n    });\n  };\n\n  const info = (title: string, description?: string) => {\n    return toast({\n      title,\n      description,\n      variant: 'default',\n    });\n  };\n\n  const dismiss = (id: string) => {\n    dismissToast(id);\n  };\n\n  const dismissAll = () => {\n    clearAllToasts();\n  };\n\n  return {\n    toast,\n    success,\n    error,\n    warning,\n    info,\n    dismiss,\n    dismissAll,\n    toasts,\n  };\n};\n\n// Hook to consume toasts in components\nexport const useToasts = () => {\n  const toasts = useToastStore((state) => state.toasts);\n  return toasts.filter((toast) => !toast.dismissed);\n};"],"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","ignoreList":[]}