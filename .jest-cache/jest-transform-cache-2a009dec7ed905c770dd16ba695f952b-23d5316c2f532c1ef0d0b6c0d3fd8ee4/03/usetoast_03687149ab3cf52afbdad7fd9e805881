2e930a828d31fa718ab9af89f4ae4388
"use strict";

/* istanbul ignore next */
function cov_15oeedzuyj() {
  var path = "/workspaces/MyFitHero/src/shared/hooks/use-toast.ts";
  var hash = "ac82eaaccbc1f940d27638c6ba9be3579f444e6a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/shared/hooks/use-toast.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 46
        }
      },
      "2": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 30
        }
      },
      "4": {
        start: {
          line: 6,
          column: 27
        },
        end: {
          line: 6,
          column: 34
        }
      },
      "5": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "6": {
        start: {
          line: 7,
          column: 59
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 35
        }
      },
      "8": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 12
        }
      },
      "10": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "12": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 28,
          column: 31
        }
      },
      "13": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 39
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 18
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 12
        }
      },
      "16": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "17": {
        start: {
          line: 34,
          column: 48
        },
        end: {
          line: 34,
          column: 103
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 41,
          column: 31
        }
      },
      "19": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 40,
          column: 16
        }
      },
      "20": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "21": {
        start: {
          line: 39,
          column: 55
        },
        end: {
          line: 39,
          column: 70
        }
      },
      "22": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 28
        }
      },
      "23": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "24": {
        start: {
          line: 48,
          column: 63
        },
        end: {
          line: 48,
          column: 78
        }
      },
      "25": {
        start: {
          line: 49,
          column: 18
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "26": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "27": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "28": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "29": {
        start: {
          line: 60,
          column: 18
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "30": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "31": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "32": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 72,
          column: 11
        }
      },
      "33": {
        start: {
          line: 74,
          column: 17
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "34": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "35": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "36": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 25
        }
      },
      "37": {
        start: {
          line: 84,
          column: 23
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "38": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 25
        }
      },
      "39": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 96,
          column: 6
        }
      },
      "40": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 98,
          column: 28
        }
      },
      "41": {
        start: {
          line: 100,
          column: 18
        },
        end: {
          line: 103,
          column: 1
        }
      },
      "42": {
        start: {
          line: 101,
          column: 19
        },
        end: {
          line: 101,
          column: 57
        }
      },
      "43": {
        start: {
          line: 101,
          column: 44
        },
        end: {
          line: 101,
          column: 56
        }
      },
      "44": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 54
        }
      },
      "45": {
        start: {
          line: 102,
          column: 36
        },
        end: {
          line: 102,
          column: 52
        }
      },
      "46": {
        start: {
          line: 104,
          column: 0
        },
        end: {
          line: 104,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 44
          },
          end: {
            line: 7,
            column: 45
          }
        },
        loc: {
          start: {
            line: 7,
            column: 59
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 14
          },
          end: {
            line: 9,
            column: 15
          }
        },
        loc: {
          start: {
            line: 9,
            column: 32
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 13
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 9
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 26,
            column: 24
          }
        },
        loc: {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 28,
            column: 13
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 32,
            column: 19
          }
        },
        loc: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        },
        loc: {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 35,
            column: 9
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 34,
            column: 38
          }
        },
        loc: {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 34,
            column: 103
          }
        },
        line: 34
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 37,
            column: 20
          }
        },
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 41,
            column: 9
          }
        },
        line: 37
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        },
        loc: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 40,
            column: 13
          }
        },
        line: 38
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 44
          },
          end: {
            line: 39,
            column: 45
          }
        },
        loc: {
          start: {
            line: 39,
            column: 55
          },
          end: {
            line: 39,
            column: 70
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 43,
            column: 21
          }
        },
        loc: {
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 18
          }
        },
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 47
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 49,
            column: 18
          },
          end: {
            line: 49,
            column: 19
          }
        },
        loc: {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 53,
            column: 21
          }
        },
        loc: {
          start: {
            line: 53,
            column: 44
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 53
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 60,
            column: 18
          },
          end: {
            line: 60,
            column: 19
          }
        },
        loc: {
          start: {
            line: 60,
            column: 42
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 60
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 67,
            column: 21
          }
        },
        loc: {
          start: {
            line: 67,
            column: 44
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 67
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 74,
            column: 17
          },
          end: {
            line: 74,
            column: 18
          }
        },
        loc: {
          start: {
            line: 74,
            column: 41
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 74
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 81,
            column: 20
          },
          end: {
            line: 81,
            column: 21
          }
        },
        loc: {
          start: {
            line: 81,
            column: 28
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 81
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 84,
            column: 24
          }
        },
        loc: {
          start: {
            line: 84,
            column: 29
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 84
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 100,
            column: 18
          },
          end: {
            line: 100,
            column: 19
          }
        },
        loc: {
          start: {
            line: 100,
            column: 24
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 100
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 101,
            column: 33
          },
          end: {
            line: 101,
            column: 34
          }
        },
        loc: {
          start: {
            line: 101,
            column: 44
          },
          end: {
            line: 101,
            column: 56
          }
        },
        line: 101
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 102,
            column: 25
          },
          end: {
            line: 102,
            column: 26
          }
        },
        loc: {
          start: {
            line: 102,
            column: 36
          },
          end: {
            line: 102,
            column: 52
          }
        },
        line: 102
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 37
          }
        }, {
          start: {
            line: 13,
            column: 41
          },
          end: {
            line: 13,
            column: 43
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 14,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 14,
            column: 49
          }
        }, {
          start: {
            line: 14,
            column: 53
          },
          end: {
            line: 14,
            column: 55
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 15,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 15,
            column: 41
          }
        }, {
          start: {
            line: 15,
            column: 45
          },
          end: {
            line: 15,
            column: 54
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 16,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 16,
            column: 43
          }
        }, {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 16,
            column: 51
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 34,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 66
          },
          end: {
            line: 34,
            column: 95
          }
        }, {
          start: {
            line: 34,
            column: 98
          },
          end: {
            line: 34,
            column: 103
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/shared/hooks/use-toast.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/shared/hooks/use-toast.ts"],
      sourcesContent: ["import { toast } from 'sonner';\nimport { create } from 'zustand';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport interface ToastOptions {\n  title?: string;\n  description?: string;\n  variant?: 'default' | 'destructive' | 'success' | 'warning';\n  duration?: number;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n}\n\nexport interface Toast extends Required<Omit<ToastOptions, 'action'>> {\n  id: string;\n  action?: ToastOptions['action'];\n  createdAt: number;\n  dismissed: boolean;\n}\n\ninterface ToastState {\n  toasts: Toast[];\n  addToast: (toast: ToastOptions) => string;\n  dismissToast: (id: string) => void;\n  clearAllToasts: () => void;\n}\n\nconst TOAST_REMOVE_DELAY = 1000000; // 1000 seconds - high value for persistence\n\nconst useToastStore = create<ToastState>((set, get) => ({\n  toasts: [],\n  \n  addToast: (toastOptions) => {\n    const id = uuidv4();\n    const toast: Toast = {\n      id,\n      title: toastOptions.title || '',\n      description: toastOptions.description || '',\n      variant: toastOptions.variant || 'default',\n      duration: toastOptions.duration || 5000,\n      action: toastOptions.action,\n      createdAt: Date.now(),\n      dismissed: false,\n    };\n\n    set((state) => ({\n      toasts: [...state.toasts, toast],\n    }));\n\n    // Auto dismiss after duration\n    if (toast.duration > 0) {\n      setTimeout(() => {\n        get().dismissToast(id);\n      }, toast.duration);\n    }\n\n    return id;\n  },\n  \n  dismissToast: (id) => {\n    set((state) => ({\n      toasts: state.toasts.map((toast) =>\n        toast.id === id ? { ...toast, dismissed: true } : toast\n      ),\n    }));\n\n    // Remove from store after animation delay\n    setTimeout(() => {\n      set((state) => ({\n        toasts: state.toasts.filter((toast) => toast.id !== id),\n      }));\n    }, TOAST_REMOVE_DELAY);\n  },\n  \n  clearAllToasts: () => {\n    set({ toasts: [] });\n  },\n}));\n\nexport const useToast = () => {\n  const { addToast, dismissToast, clearAllToasts, toasts } = useToastStore();\n\n  const toast = (options: ToastOptions) => {\n    return addToast(options);\n  };\n\n  // Convenience methods\n  const success = (title: string, description?: string) => {\n    return toast({\n      title,\n      description,\n      variant: 'success',\n    });\n  };\n\n  const error = (title: string, description?: string) => {\n    return toast({\n      title,\n      description,\n      variant: 'destructive',\n    });\n  };\n\n  const warning = (title: string, description?: string) => {\n    return toast({\n      title,\n      description,\n      variant: 'warning',\n    });\n  };\n\n  const info = (title: string, description?: string) => {\n    return toast({\n      title,\n      description,\n      variant: 'default',\n    });\n  };\n\n  const dismiss = (id: string) => {\n    dismissToast(id);\n  };\n\n  const dismissAll = () => {\n    clearAllToasts();\n  };\n\n  return {\n    toast,\n    success,\n    error,\n    warning,\n    info,\n    dismiss,\n    dismissAll,\n    toasts,\n  };\n};\n\n// Hook to consume toasts in components\nexport const useToasts = () => {\n  const toasts = useToastStore((state) => state.toasts);\n  return toasts.filter((toast) => !toast.dismissed);\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ac82eaaccbc1f940d27638c6ba9be3579f444e6a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15oeedzuyj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15oeedzuyj();
cov_15oeedzuyj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_15oeedzuyj().s[1]++;
exports.useToasts = exports.useToast = void 0;
const zustand_1 =
/* istanbul ignore next */
(cov_15oeedzuyj().s[2]++, require("zustand"));
const uuid_1 =
/* istanbul ignore next */
(cov_15oeedzuyj().s[3]++, require("uuid"));
const TOAST_REMOVE_DELAY =
/* istanbul ignore next */
(cov_15oeedzuyj().s[4]++, 1000000); // 1000 seconds - high value for persistence
const useToastStore =
/* istanbul ignore next */
(cov_15oeedzuyj().s[5]++, (0, zustand_1.create)((set, get) => {
  /* istanbul ignore next */
  cov_15oeedzuyj().f[0]++;
  cov_15oeedzuyj().s[6]++;
  return {
    toasts: [],
    addToast: toastOptions => {
      /* istanbul ignore next */
      cov_15oeedzuyj().f[1]++;
      const id =
      /* istanbul ignore next */
      (cov_15oeedzuyj().s[7]++, (0, uuid_1.v4)());
      const toast =
      /* istanbul ignore next */
      (cov_15oeedzuyj().s[8]++, {
        id,
        title:
        /* istanbul ignore next */
        (cov_15oeedzuyj().b[0][0]++, toastOptions.title) ||
        /* istanbul ignore next */
        (cov_15oeedzuyj().b[0][1]++, ''),
        description:
        /* istanbul ignore next */
        (cov_15oeedzuyj().b[1][0]++, toastOptions.description) ||
        /* istanbul ignore next */
        (cov_15oeedzuyj().b[1][1]++, ''),
        variant:
        /* istanbul ignore next */
        (cov_15oeedzuyj().b[2][0]++, toastOptions.variant) ||
        /* istanbul ignore next */
        (cov_15oeedzuyj().b[2][1]++, 'default'),
        duration:
        /* istanbul ignore next */
        (cov_15oeedzuyj().b[3][0]++, toastOptions.duration) ||
        /* istanbul ignore next */
        (cov_15oeedzuyj().b[3][1]++, 5000),
        action: toastOptions.action,
        createdAt: Date.now(),
        dismissed: false
      });
      /* istanbul ignore next */
      cov_15oeedzuyj().s[9]++;
      set(state => {
        /* istanbul ignore next */
        cov_15oeedzuyj().f[2]++;
        cov_15oeedzuyj().s[10]++;
        return {
          toasts: [...state.toasts, toast]
        };
      });
      // Auto dismiss after duration
      /* istanbul ignore next */
      cov_15oeedzuyj().s[11]++;
      if (toast.duration > 0) {
        /* istanbul ignore next */
        cov_15oeedzuyj().b[4][0]++;
        cov_15oeedzuyj().s[12]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_15oeedzuyj().f[3]++;
          cov_15oeedzuyj().s[13]++;
          get().dismissToast(id);
        }, toast.duration);
      } else
      /* istanbul ignore next */
      {
        cov_15oeedzuyj().b[4][1]++;
      }
      cov_15oeedzuyj().s[14]++;
      return id;
    },
    dismissToast: id => {
      /* istanbul ignore next */
      cov_15oeedzuyj().f[4]++;
      cov_15oeedzuyj().s[15]++;
      set(state => {
        /* istanbul ignore next */
        cov_15oeedzuyj().f[5]++;
        cov_15oeedzuyj().s[16]++;
        return {
          toasts: state.toasts.map(toast => {
            /* istanbul ignore next */
            cov_15oeedzuyj().f[6]++;
            cov_15oeedzuyj().s[17]++;
            return toast.id === id ?
            /* istanbul ignore next */
            (cov_15oeedzuyj().b[5][0]++, {
              ...toast,
              dismissed: true
            }) :
            /* istanbul ignore next */
            (cov_15oeedzuyj().b[5][1]++, toast);
          })
        };
      });
      // Remove from store after animation delay
      /* istanbul ignore next */
      cov_15oeedzuyj().s[18]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_15oeedzuyj().f[7]++;
        cov_15oeedzuyj().s[19]++;
        set(state => {
          /* istanbul ignore next */
          cov_15oeedzuyj().f[8]++;
          cov_15oeedzuyj().s[20]++;
          return {
            toasts: state.toasts.filter(toast => {
              /* istanbul ignore next */
              cov_15oeedzuyj().f[9]++;
              cov_15oeedzuyj().s[21]++;
              return toast.id !== id;
            })
          };
        });
      }, TOAST_REMOVE_DELAY);
    },
    clearAllToasts: () => {
      /* istanbul ignore next */
      cov_15oeedzuyj().f[10]++;
      cov_15oeedzuyj().s[22]++;
      set({
        toasts: []
      });
    }
  };
}));
/* istanbul ignore next */
cov_15oeedzuyj().s[23]++;
const useToast = () => {
  /* istanbul ignore next */
  cov_15oeedzuyj().f[11]++;
  const {
    addToast,
    dismissToast,
    clearAllToasts,
    toasts
  } =
  /* istanbul ignore next */
  (cov_15oeedzuyj().s[24]++, useToastStore());
  /* istanbul ignore next */
  cov_15oeedzuyj().s[25]++;
  const toast = options => {
    /* istanbul ignore next */
    cov_15oeedzuyj().f[12]++;
    cov_15oeedzuyj().s[26]++;
    return addToast(options);
  };
  // Convenience methods
  /* istanbul ignore next */
  cov_15oeedzuyj().s[27]++;
  const success = (title, description) => {
    /* istanbul ignore next */
    cov_15oeedzuyj().f[13]++;
    cov_15oeedzuyj().s[28]++;
    return toast({
      title,
      description,
      variant: 'success'
    });
  };
  /* istanbul ignore next */
  cov_15oeedzuyj().s[29]++;
  const error = (title, description) => {
    /* istanbul ignore next */
    cov_15oeedzuyj().f[14]++;
    cov_15oeedzuyj().s[30]++;
    return toast({
      title,
      description,
      variant: 'destructive'
    });
  };
  /* istanbul ignore next */
  cov_15oeedzuyj().s[31]++;
  const warning = (title, description) => {
    /* istanbul ignore next */
    cov_15oeedzuyj().f[15]++;
    cov_15oeedzuyj().s[32]++;
    return toast({
      title,
      description,
      variant: 'warning'
    });
  };
  /* istanbul ignore next */
  cov_15oeedzuyj().s[33]++;
  const info = (title, description) => {
    /* istanbul ignore next */
    cov_15oeedzuyj().f[16]++;
    cov_15oeedzuyj().s[34]++;
    return toast({
      title,
      description,
      variant: 'default'
    });
  };
  /* istanbul ignore next */
  cov_15oeedzuyj().s[35]++;
  const dismiss = id => {
    /* istanbul ignore next */
    cov_15oeedzuyj().f[17]++;
    cov_15oeedzuyj().s[36]++;
    dismissToast(id);
  };
  /* istanbul ignore next */
  cov_15oeedzuyj().s[37]++;
  const dismissAll = () => {
    /* istanbul ignore next */
    cov_15oeedzuyj().f[18]++;
    cov_15oeedzuyj().s[38]++;
    clearAllToasts();
  };
  /* istanbul ignore next */
  cov_15oeedzuyj().s[39]++;
  return {
    toast,
    success,
    error,
    warning,
    info,
    dismiss,
    dismissAll,
    toasts
  };
};
/* istanbul ignore next */
cov_15oeedzuyj().s[40]++;
exports.useToast = useToast;
// Hook to consume toasts in components
/* istanbul ignore next */
cov_15oeedzuyj().s[41]++;
const useToasts = () => {
  /* istanbul ignore next */
  cov_15oeedzuyj().f[19]++;
  const toasts =
  /* istanbul ignore next */
  (cov_15oeedzuyj().s[42]++, useToastStore(state => {
    /* istanbul ignore next */
    cov_15oeedzuyj().f[20]++;
    cov_15oeedzuyj().s[43]++;
    return state.toasts;
  }));
  /* istanbul ignore next */
  cov_15oeedzuyj().s[44]++;
  return toasts.filter(toast => {
    /* istanbul ignore next */
    cov_15oeedzuyj().f[21]++;
    cov_15oeedzuyj().s[45]++;
    return !toast.dismissed;
  });
};
/* istanbul ignore next */
cov_15oeedzuyj().s[46]++;
exports.useToasts = useToasts;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,