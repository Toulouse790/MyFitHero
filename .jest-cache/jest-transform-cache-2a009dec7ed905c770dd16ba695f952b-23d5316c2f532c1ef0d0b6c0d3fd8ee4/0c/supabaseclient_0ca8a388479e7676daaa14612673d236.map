{"version":3,"names":["cov_1p02mfvlmw","actualCoverage","s","supabase_js_1","require","env_config_1","exports","supabase","createClient","env","SUPABASE_URL","SUPABASE_ANON_KEY","auth","autoRefreshToken","persistSession","detectSessionInUrl","supabaseAuth","signUp","email","password","metadata","f","options","data","signIn","signInWithPassword","signOut","getSession","getUser","resetPassword","resetPasswordForEmail","redirectTo","window","location","origin","updateUser","attributes","default"],"sources":["/workspaces/MyFitHero/src/core/api/supabase.client.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\nimport { env } from '@/core/config/env.config';\n\n// Types pour Supabase (à adapter selon ton schéma)\nexport interface Database {\n  public: {\n    Tables: {\n      users: {\n        Row: {\n          id: string;\n          email: string;\n          username?: string;\n          first_name?: string;\n          last_name?: string;\n          sport?: string;\n          weight?: number;\n          height?: number;\n          age?: number;\n          gender?: 'male' | 'female';\n          lifestyle?: 'student' | 'office_worker' | 'physical_job' | 'retired';\n          primary_goals?: string[];\n          created_at: string;\n          updated_at: string;\n        };\n        Insert: Omit<Database['public']['Tables']['users']['Row'], 'id' | 'created_at' | 'updated_at'>;\n        Update: Partial<Database['public']['Tables']['users']['Insert']>;\n      };\n      daily_stats: {\n        Row: {\n          id: string;\n          user_id: string;\n          stat_date: string;\n          total_calories: number;\n          total_protein: number;\n          total_carbs: number;\n          total_fat: number;\n          water_intake_ml: number;\n          sleep_hours?: number;\n          workout_minutes?: number;\n          created_at: string;\n        };\n      };\n      workouts: {\n        Row: {\n          id: string;\n          user_id: string;\n          name: string;\n          type: string;\n          duration_minutes: number;\n          calories_burned: number;\n          exercises: any[];\n          completed_at: string;\n          created_at: string;\n        };\n      };\n      nutrition_entries: {\n        Row: {\n          id: string;\n          user_id: string;\n          food_name: string;\n          quantity: number;\n          unit: string;\n          calories: number;\n          protein: number;\n          carbs: number;\n          fat: number;\n          meal_type: 'breakfast' | 'lunch' | 'dinner' | 'snack';\n          consumed_at: string;\n        };\n      };\n    };\n  };\n}\n\n// Client Supabase singleton\nexport const supabase = createClient<Database>(\n  env.SUPABASE_URL,\n  env.SUPABASE_ANON_KEY,\n  {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true,\n    },\n  }\n);\n\n// Helper functions\nexport const supabaseAuth = {\n  // Inscription\n  async signUp(email: string, password: string, metadata?: any) {\n    return await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: metadata,\n      },\n    });\n  },\n\n  // Connexion\n  async signIn(email: string, password: string) {\n    return await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n  },\n\n  // Déconnexion\n  async signOut() {\n    return await supabase.auth.signOut();\n  },\n\n  // Récupération session\n  async getSession() {\n    return await supabase.auth.getSession();\n  },\n\n  // Récupération utilisateur\n  async getUser() {\n    return await supabase.auth.getUser();\n  },\n\n  // Réinitialisation mot de passe\n  async resetPassword(email: string) {\n    return await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`,\n    });\n  },\n\n  // Mise à jour utilisateur\n  async updateUser(attributes: any) {\n    return await supabase.auth.updateUser(attributes);\n  },\n};\n\nexport default supabase;\n"],"mappings":"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","ignoreList":[]}