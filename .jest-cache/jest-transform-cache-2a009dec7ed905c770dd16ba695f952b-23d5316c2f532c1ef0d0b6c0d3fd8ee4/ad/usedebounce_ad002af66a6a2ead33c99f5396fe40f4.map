{"version":3,"names":["cov_7e34093m0","actualCoverage","s","exports","useDebounce","useSimpleDebounce","react_1","require","value","delay","options","b","f","leading","trailing","maxWait","debouncedValue","setDebouncedValue","useState","isPending","setIsPending","timeoutRef","useRef","maxTimeoutRef","lastCallTimeRef","lastInvokeTimeRef","leadingRef","cancel","useCallback","current","clearTimeout","undefined","flush","Date","now","useEffect","timeSinceLastInvoke","remainingWait","timeSinceLastCall","maxDelayExpired","setTimeout","default"],"sources":["/workspaces/MyFitHero/src/features/ai-coach/hooks/use-debounce.ts"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\n\n/**\n * Hook de debouncing avancé pour optimiser les appels d'API ou d'autres traitements coûteux.\n * @param value - La valeur à debouncer\n * @param delay - Le délai en millisecondes\n * @param options - Options avancées (leading, trailing, maxWait)\n * @returns Objet avec la valeur debouncée et des utilitaires\n */\ninterface UseDebounceOptions {\n  leading?: boolean; // Exécuter immédiatement au premier appel\n  trailing?: boolean; // Exécuter à la fin du délai (défaut: true)\n  maxWait?: number; // Délai maximum avant exécution forcée\n}\n\ninterface UseDebounceReturn<T> {\n  debouncedValue: T;\n  isPending: boolean;\n  cancel: () => void;\n  flush: () => void;\n}\n\nexport function useDebounce<T>(\n  value: T,\n  delay: number,\n  options: UseDebounceOptions = {}\n): UseDebounceReturn<T> {\n  const { leading = false, trailing = true, maxWait } = options;\n\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n  const [isPending, setIsPending] = useState(false);\n\n  const timeoutRef = useRef<NodeJS.Timeout>();\n  const maxTimeoutRef = useRef<NodeJS.Timeout>();\n  const lastCallTimeRef = useRef<number>();\n  const lastInvokeTimeRef = useRef<number>(0);\n  const leadingRef = useRef<boolean>(true);\n\n  const cancel = useCallback(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n    if (maxTimeoutRef.current) {\n      clearTimeout(maxTimeoutRef.current);\n      maxTimeoutRef.current = undefined;\n    }\n    setIsPending(false);\n    leadingRef.current = true;\n  }, []);\n\n  const flush = useCallback(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      setDebouncedValue(value);\n      setIsPending(false);\n      lastInvokeTimeRef.current = Date.now();\n      leadingRef.current = true;\n    }\n  }, [value]);\n\n  useEffect(() => {\n    const now = Date.now();\n    lastCallTimeRef.current = now;\n\n    // Exécution immédiate (leading edge)\n    if (leading && leadingRef.current) {\n      setDebouncedValue(value);\n      lastInvokeTimeRef.current = now;\n      leadingRef.current = false;\n\n      if (!trailing) {\n        return;\n      }\n    }\n\n    // Calculer les délais\n    const timeSinceLastInvoke = now - lastInvokeTimeRef.current;\n    const remainingWait = delay - timeSinceLastInvoke;\n\n    // Gestion du maxWait\n    if (maxWait !== undefined) {\n      const timeSinceLastCall = now - (lastCallTimeRef.current || 0);\n      const maxDelayExpired = timeSinceLastCall >= maxWait;\n\n      if (maxDelayExpired) {\n        setDebouncedValue(value);\n        lastInvokeTimeRef.current = now;\n        leadingRef.current = true;\n        setIsPending(false);\n        return;\n      }\n\n      if (!maxTimeoutRef.current) {\n        maxTimeoutRef.current = setTimeout(() => {\n          setDebouncedValue(value);\n          lastInvokeTimeRef.current = Date.now();\n          leadingRef.current = true;\n          setIsPending(false);\n          maxTimeoutRef.current = undefined;\n        }, maxWait - timeSinceLastCall);\n      }\n    }\n\n    // Nettoyer le timeout précédent\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    setIsPending(true);\n\n    // Créer le nouveau timeout\n    timeoutRef.current = setTimeout(\n      () => {\n        if (trailing) {\n          setDebouncedValue(value);\n          lastInvokeTimeRef.current = Date.now();\n        }\n        setIsPending(false);\n        leadingRef.current = true;\n        timeoutRef.current = undefined;\n      },\n      remainingWait > 0 ? remainingWait : delay\n    );\n\n    // Cleanup\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      if (maxTimeoutRef.current) {\n        clearTimeout(maxTimeoutRef.current);\n      }\n    };\n  }, [value, delay, leading, trailing, maxWait]);\n\n  // Cleanup final\n  useEffect(() => {\n    return () => {\n      cancel();\n    };\n  }, [cancel]);\n\n  return {\n    debouncedValue,\n    isPending,\n    cancel,\n    flush,\n  };\n}\n\n// Version simple pour compatibilité\nexport function useSimpleDebounce<T>(value: T, delay: number): T {\n  const { debouncedValue } = useDebounce(value, delay);\n  return debouncedValue;\n}\n\nexport default useDebounce;\n"],"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","ignoreList":[]}