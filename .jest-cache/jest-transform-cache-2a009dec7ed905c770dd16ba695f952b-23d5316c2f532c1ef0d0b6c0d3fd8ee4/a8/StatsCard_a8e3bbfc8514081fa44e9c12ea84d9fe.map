{"version":3,"names":["cov_1eqtdsibow","actualCoverage","react_1","s","__importDefault","require","card_1","badge_1","button_1","StatsCard","title","stats","actionLabel","onActionClick","f","jsx_runtime_1","jsxs","Card","className","children","jsx","map","stat","index","label","Badge","variant","b","value","Button","size","onClick","exports"],"sources":["/workspaces/MyFitHero/src/features/admin/components/StatsCard.tsx"],"sourcesContent":["// client/src/features/admin/components/StatsCard.tsx\nimport React from 'react';\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\n\ninterface StatItem {\n  label: string;\n  value: string;\n  variant?: 'outline' | 'default';\n  className?: string;\n}\n\ninterface StatsCardProps {\n  title: string;\n  stats: StatItem[];\n  actionLabel: string;\n  onActionClick?: () => void;\n}\n\nexport const StatsCard: React.FC<StatsCardProps> = ({ \n  title, \n  stats, \n  actionLabel, \n  onActionClick \n}) => {\n  return (\n    <Card className=\"p-6\">\n      <h3 className=\"text-lg font-semibold mb-4\">{title}</h3>\n      <div className=\"space-y-3\">\n        {stats.map((stat, index) => (\n          <div key={index} className=\"flex justify-between\">\n            <span>{stat.label}</span>\n            <Badge \n              variant={stat.variant || 'outline'} \n              className={stat.className}\n            >\n              {stat.value}\n            </Badge>\n          </div>\n        ))}\n        <Button \n          variant=\"outline\" \n          size=\"sm\" \n          className=\"w-full\"\n          onClick={onActionClick}\n        >\n          {actionLabel}\n        </Button>\n      </div>\n    </Card>\n  );\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBa;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AApBb;AACA,MAAAE,OAAA;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,OAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,MAAA;AAAA;AAAA,CAAAN,cAAA,GAAAG,CAAA,OAAAE,OAAA;AACA,MAAAE,OAAA;AAAA;AAAA,CAAAP,cAAA,GAAAG,CAAA,OAAAE,OAAA;AACA,MAAAG,QAAA;AAAA;AAAA,CAAAR,cAAA,GAAAG,CAAA,OAAAE,OAAA;AAAgD;AAAAL,cAAA,GAAAG,CAAA;AAgBzC,MAAMM,SAAS,GAA6BA,CAAC;EAClDC,KAAK;EACLC,KAAK;EACLC,WAAW;EACXC;AAAa,CACd,KAAI;EAAA;EAAAb,cAAA,GAAAc,CAAA;EAAAd,cAAA,GAAAG,CAAA;EACH,OACE,IAAAY,aAAA,CAAAC,IAAA,EAACV,MAAA,CAAAW,IAAI;IAACC,SAAS,EAAC,KAAK;IAAAC,QAAA,GACnB,IAAAJ,aAAA,CAAAK,GAAA;MAAIF,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAET;IAAK,EAAM,EACvD,IAAAK,aAAA,CAAAC,IAAA;MAAKE,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvBR,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KACrB;QAAA;QAAAvB,cAAA,GAAAc,CAAA;QAAAd,cAAA,GAAAG,CAAA;QAAA,WAAAY,aAAA,CAAAC,IAAA;UAAiBE,SAAS,EAAC,sBAAsB;UAAAC,QAAA,GAC/C,IAAAJ,aAAA,CAAAK,GAAA;YAAAD,QAAA,EAAOG,IAAI,CAACE;UAAK,EAAQ,EACzB,IAAAT,aAAA,CAAAK,GAAA,EAACb,OAAA,CAAAkB,KAAK;YACJC,OAAO;YAAE;YAAA,CAAA1B,cAAA,GAAA2B,CAAA,UAAAL,IAAI,CAACI,OAAO;YAAA;YAAA,CAAA1B,cAAA,GAAA2B,CAAA,UAAI,SAAS;YAClCT,SAAS,EAAEI,IAAI,CAACJ,SAAS;YAAAC,QAAA,EAExBG,IAAI,CAACM;UAAK,EACL;QAAA,GAPAL,KAAK,CAQT;MARS,CAShB,CAAC,EACF,IAAAR,aAAA,CAAAK,GAAA,EAACZ,QAAA,CAAAqB,MAAM;QACLH,OAAO,EAAC,SAAS;QACjBI,IAAI,EAAC,IAAI;QACTZ,SAAS,EAAC,QAAQ;QAClBa,OAAO,EAAElB,aAAa;QAAAM,QAAA,EAErBP;MAAW,EACL;IAAA,EACL;EAAA,EACD;AAEX,CAAC;AAAC;AAAAZ,cAAA,GAAAG,CAAA;AAhCW6B,OAAA,CAAAvB,SAAS,GAAAA,SAAA","ignoreList":[]}