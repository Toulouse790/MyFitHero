262e5b810c859bc1ebbc9cd688ad4da5
"use strict";

/* istanbul ignore next */
function cov_1t7myr4zbx() {
  var path = "/workspaces/MyFitHero/src/features/profile/components/profile/ProfileStats.tsx";
  var hash = "5a84e8ab4036666e776ee05b36e761d7ddfa2f4b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/profile/components/profile/ProfileStats.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 87,
          column: 1
        }
      },
      "3": {
        start: {
          line: 6,
          column: 25
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "4": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 48
        }
      },
      "5": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 46
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 11,
          column: 9
        }
      },
      "7": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 61
        }
      },
      "8": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 20
        }
      },
      "9": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "10": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "11": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "12": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "13": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 56
        }
      },
      "14": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 23,
          column: 10
        }
      },
      "15": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "16": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 96
        }
      },
      "17": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 30
        }
      },
      "18": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "19": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 42
        }
      },
      "20": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "21": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "22": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "23": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "24": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 65
        }
      },
      "25": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 38,
          column: 49
        }
      },
      "26": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "27": {
        start: {
          line: 45,
          column: 27
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "28": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 47,
          column: 24
        }
      },
      "29": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 24
        }
      },
      "30": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 73
        }
      },
      "31": {
        start: {
          line: 48,
          column: 60
        },
        end: {
          line: 48,
          column: 72
        }
      },
      "32": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 40
        }
      },
      "33": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 40
        }
      },
      "34": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 59
        }
      },
      "35": {
        start: {
          line: 53,
          column: 29
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "36": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 55,
          column: 24
        }
      },
      "37": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 24
        }
      },
      "38": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 56,
          column: 87
        }
      },
      "39": {
        start: {
          line: 56,
          column: 65
        },
        end: {
          line: 56,
          column: 83
        }
      },
      "40": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 63
        }
      },
      "41": {
        start: {
          line: 59,
          column: 27
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "42": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 61,
          column: 24
        }
      },
      "43": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 24
        }
      },
      "44": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 43
        }
      },
      "45": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 64,
          column: 82
        }
      },
      "46": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 82
        }
      },
      "47": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 66,
          column: 73
        }
      },
      "48": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 73
        }
      },
      "49": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 68,
          column: 70
        }
      },
      "50": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 70
        }
      },
      "51": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 62
        }
      },
      "52": {
        start: {
          line: 71,
          column: 27
        },
        end: {
          line: 71,
          column: 46
        }
      },
      "53": {
        start: {
          line: 72,
          column: 24
        },
        end: {
          line: 72,
          column: 40
        }
      },
      "54": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 73,
          column: 44
        }
      },
      "55": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 43
        }
      },
      "56": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 86,
          column: 6
        }
      },
      "57": {
        start: {
          line: 88,
          column: 0
        },
        end: {
          line: 88,
          column: 42
        }
      },
      "58": {
        start: {
          line: 89,
          column: 0
        },
        end: {
          line: 89,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 24
          },
          end: {
            line: 4,
            column: 25
          }
        },
        loc: {
          start: {
            line: 4,
            column: 66
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 6,
            column: 26
          }
        },
        loc: {
          start: {
            line: 6,
            column: 31
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 15,
            column: 28
          }
        },
        loc: {
          start: {
            line: 15,
            column: 33
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 29
          }
        },
        loc: {
          start: {
            line: 26,
            column: 34
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 31
          }
        },
        loc: {
          start: {
            line: 33,
            column: 36
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 27
          },
          end: {
            line: 45,
            column: 28
          }
        },
        loc: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 42
          },
          end: {
            line: 48,
            column: 43
          }
        },
        loc: {
          start: {
            line: 48,
            column: 60
          },
          end: {
            line: 48,
            column: 72
          }
        },
        line: 48
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 53,
            column: 29
          },
          end: {
            line: 53,
            column: 30
          }
        },
        loc: {
          start: {
            line: 53,
            column: 35
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 53
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 56,
            column: 49
          },
          end: {
            line: 56,
            column: 50
          }
        },
        loc: {
          start: {
            line: 56,
            column: 65
          },
          end: {
            line: 56,
            column: 83
          }
        },
        line: 56
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 59,
            column: 27
          },
          end: {
            line: 59,
            column: 28
          }
        },
        loc: {
          start: {
            line: 59,
            column: 41
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 59
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 18
          }
        }, {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 9,
            column: 29
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 17,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 17,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 35
          }
        }, {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 21,
            column: 69
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 21,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 52
          },
          end: {
            line: 21,
            column: 58
          }
        }, {
          start: {
            line: 21,
            column: 61
          },
          end: {
            line: 21,
            column: 69
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 42
          },
          end: {
            line: 27,
            column: 88
          }
        }, {
          start: {
            line: 27,
            column: 91
          },
          end: {
            line: 27,
            column: 95
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "7": {
        loc: {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 36
          }
        }, {
          start: {
            line: 37,
            column: 40
          },
          end: {
            line: 37,
            column: 65
          }
        }],
        line: 37
      },
      "8": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 64,
            column: 82
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 64,
            column: 82
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "12": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 66,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 66,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "13": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 68,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 68,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/profile/components/profile/ProfileStats.tsx",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/profile/components/profile/ProfileStats.tsx"],
      sourcesContent: ["// src/features/profile/components/profile/ProfileStats.tsx\nimport React from 'react';\n\ninterface ProfileStatsProps {\n  currentWeight: string;\n  height: string;\n  weightHistory: any[];\n}\n\nexport const useProfileStats = (\n  currentWeight: string,\n  height: string,\n  weightHistory: any[]\n) => {\n  // Calculs BMI\n  const calculateBMI = () => {\n    const weight = parseFloat(currentWeight);\n    const heightM = parseInt(height) / 100;\n    if (weight && heightM) {\n      return (weight / (heightM * heightM)).toFixed(1);\n    }\n    return null;\n  };\n\n  // Tendance de poids\n  const getWeightTrend = () => {\n    if (weightHistory.length < 2) return null;\n    const recent = weightHistory.slice(-2);\n    const diff = recent[1].weight - recent[0].weight;\n    return {\n      type: diff > 0.5 ? 'up' : diff < -0.5 ? 'down' : 'stable',\n      diff: Math.abs(diff),\n    };\n  };\n\n  // Dernier poids\n  const getLatestWeight = () => {\n    return weightHistory.length > 0 ? weightHistory[weightHistory.length - 1].weight : null;\n  };\n\n  const bmi = calculateBMI();\n  const weightTrend = getWeightTrend();\n  const latestWeight = getLatestWeight();\n\n  // Calculer d'autres m\xE9triques utiles\n  const getWeightProgress = () => {\n    if (weightHistory.length < 2) return null;\n    \n    const firstWeight = weightHistory[0].weight;\n    const current = latestWeight || parseFloat(currentWeight);\n    const totalChange = current - firstWeight;\n    \n    return {\n      totalChange: totalChange.toFixed(1),\n      isPositive: totalChange > 0,\n      percentage: ((totalChange / firstWeight) * 100).toFixed(1)\n    };\n  };\n\n  const getWeightRange = () => {\n    if (weightHistory.length === 0) return null;\n    \n    const weights = weightHistory.map((entry, index) => entry.weight);\n    const min = Math.min(...weights);\n    const max = Math.max(...weights);\n    \n    return { min, max, range: (max - min).toFixed(1) };\n  };\n\n  const getAverageWeight = () => {\n    if (weightHistory.length === 0) return null;\n    \n    const totalWeight = weightHistory.reduce((sum, entry) => sum + entry.weight, 0);\n    return (totalWeight / weightHistory.length).toFixed(1);\n  };\n\n  const getBMICategory = (bmiValue: string | null) => {\n    if (!bmiValue) return null;\n    \n    const bmiNum = parseFloat(bmiValue);\n    if (bmiNum < 18.5) return { category: 'Insuffisance pond\xE9rale', color: 'text-blue-600' };\n    if (bmiNum < 25) return { category: 'Poids normal', color: 'text-green-600' };\n    if (bmiNum < 30) return { category: 'Surpoids', color: 'text-yellow-600' };\n    return { category: 'Ob\xE9sit\xE9', color: 'text-red-600' };\n  };\n\n  const weightProgress = getWeightProgress();\n  const weightRange = getWeightRange();\n  const averageWeight = getAverageWeight();\n  const bmiCategory = getBMICategory(bmi);\n\n  return {\n    bmi,\n    weightTrend,\n    latestWeight,\n    weightProgress,\n    weightRange,\n    averageWeight,\n    bmiCategory,\n    calculateBMI,\n    getWeightTrend,\n    getLatestWeight,\n  };\n};\n\nexport default useProfileStats;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5a84e8ab4036666e776ee05b36e761d7ddfa2f4b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1t7myr4zbx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1t7myr4zbx();
cov_1t7myr4zbx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1t7myr4zbx().s[1]++;
exports.useProfileStats = void 0;
/* istanbul ignore next */
cov_1t7myr4zbx().s[2]++;
const useProfileStats = (currentWeight, height, weightHistory) => {
  /* istanbul ignore next */
  cov_1t7myr4zbx().f[0]++;
  cov_1t7myr4zbx().s[3]++;
  // Calculs BMI
  const calculateBMI = () => {
    /* istanbul ignore next */
    cov_1t7myr4zbx().f[1]++;
    const weight =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[4]++, parseFloat(currentWeight));
    const heightM =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[5]++, parseInt(height) / 100);
    /* istanbul ignore next */
    cov_1t7myr4zbx().s[6]++;
    if (
    /* istanbul ignore next */
    (cov_1t7myr4zbx().b[1][0]++, weight) &&
    /* istanbul ignore next */
    (cov_1t7myr4zbx().b[1][1]++, heightM)) {
      /* istanbul ignore next */
      cov_1t7myr4zbx().b[0][0]++;
      cov_1t7myr4zbx().s[7]++;
      return (weight / (heightM * heightM)).toFixed(1);
    } else
    /* istanbul ignore next */
    {
      cov_1t7myr4zbx().b[0][1]++;
    }
    cov_1t7myr4zbx().s[8]++;
    return null;
  };
  // Tendance de poids
  /* istanbul ignore next */
  cov_1t7myr4zbx().s[9]++;
  const getWeightTrend = () => {
    /* istanbul ignore next */
    cov_1t7myr4zbx().f[2]++;
    cov_1t7myr4zbx().s[10]++;
    if (weightHistory.length < 2) {
      /* istanbul ignore next */
      cov_1t7myr4zbx().b[2][0]++;
      cov_1t7myr4zbx().s[11]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1t7myr4zbx().b[2][1]++;
    }
    const recent =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[12]++, weightHistory.slice(-2));
    const diff =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[13]++, recent[1].weight - recent[0].weight);
    /* istanbul ignore next */
    cov_1t7myr4zbx().s[14]++;
    return {
      type: diff > 0.5 ?
      /* istanbul ignore next */
      (cov_1t7myr4zbx().b[3][0]++, 'up') :
      /* istanbul ignore next */
      (cov_1t7myr4zbx().b[3][1]++, diff < -0.5 ?
      /* istanbul ignore next */
      (cov_1t7myr4zbx().b[4][0]++, 'down') :
      /* istanbul ignore next */
      (cov_1t7myr4zbx().b[4][1]++, 'stable')),
      diff: Math.abs(diff)
    };
  };
  // Dernier poids
  /* istanbul ignore next */
  cov_1t7myr4zbx().s[15]++;
  const getLatestWeight = () => {
    /* istanbul ignore next */
    cov_1t7myr4zbx().f[3]++;
    cov_1t7myr4zbx().s[16]++;
    return weightHistory.length > 0 ?
    /* istanbul ignore next */
    (cov_1t7myr4zbx().b[5][0]++, weightHistory[weightHistory.length - 1].weight) :
    /* istanbul ignore next */
    (cov_1t7myr4zbx().b[5][1]++, null);
  };
  const bmi =
  /* istanbul ignore next */
  (cov_1t7myr4zbx().s[17]++, calculateBMI());
  const weightTrend =
  /* istanbul ignore next */
  (cov_1t7myr4zbx().s[18]++, getWeightTrend());
  const latestWeight =
  /* istanbul ignore next */
  (cov_1t7myr4zbx().s[19]++, getLatestWeight());
  // Calculer d'autres métriques utiles
  /* istanbul ignore next */
  cov_1t7myr4zbx().s[20]++;
  const getWeightProgress = () => {
    /* istanbul ignore next */
    cov_1t7myr4zbx().f[4]++;
    cov_1t7myr4zbx().s[21]++;
    if (weightHistory.length < 2) {
      /* istanbul ignore next */
      cov_1t7myr4zbx().b[6][0]++;
      cov_1t7myr4zbx().s[22]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1t7myr4zbx().b[6][1]++;
    }
    const firstWeight =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[23]++, weightHistory[0].weight);
    const current =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[24]++,
    /* istanbul ignore next */
    (cov_1t7myr4zbx().b[7][0]++, latestWeight) ||
    /* istanbul ignore next */
    (cov_1t7myr4zbx().b[7][1]++, parseFloat(currentWeight)));
    const totalChange =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[25]++, current - firstWeight);
    /* istanbul ignore next */
    cov_1t7myr4zbx().s[26]++;
    return {
      totalChange: totalChange.toFixed(1),
      isPositive: totalChange > 0,
      percentage: (totalChange / firstWeight * 100).toFixed(1)
    };
  };
  /* istanbul ignore next */
  cov_1t7myr4zbx().s[27]++;
  const getWeightRange = () => {
    /* istanbul ignore next */
    cov_1t7myr4zbx().f[5]++;
    cov_1t7myr4zbx().s[28]++;
    if (weightHistory.length === 0) {
      /* istanbul ignore next */
      cov_1t7myr4zbx().b[8][0]++;
      cov_1t7myr4zbx().s[29]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1t7myr4zbx().b[8][1]++;
    }
    const weights =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[30]++, weightHistory.map((entry, index) => {
      /* istanbul ignore next */
      cov_1t7myr4zbx().f[6]++;
      cov_1t7myr4zbx().s[31]++;
      return entry.weight;
    }));
    const min =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[32]++, Math.min(...weights));
    const max =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[33]++, Math.max(...weights));
    /* istanbul ignore next */
    cov_1t7myr4zbx().s[34]++;
    return {
      min,
      max,
      range: (max - min).toFixed(1)
    };
  };
  /* istanbul ignore next */
  cov_1t7myr4zbx().s[35]++;
  const getAverageWeight = () => {
    /* istanbul ignore next */
    cov_1t7myr4zbx().f[7]++;
    cov_1t7myr4zbx().s[36]++;
    if (weightHistory.length === 0) {
      /* istanbul ignore next */
      cov_1t7myr4zbx().b[9][0]++;
      cov_1t7myr4zbx().s[37]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1t7myr4zbx().b[9][1]++;
    }
    const totalWeight =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[38]++, weightHistory.reduce((sum, entry) => {
      /* istanbul ignore next */
      cov_1t7myr4zbx().f[8]++;
      cov_1t7myr4zbx().s[39]++;
      return sum + entry.weight;
    }, 0));
    /* istanbul ignore next */
    cov_1t7myr4zbx().s[40]++;
    return (totalWeight / weightHistory.length).toFixed(1);
  };
  /* istanbul ignore next */
  cov_1t7myr4zbx().s[41]++;
  const getBMICategory = bmiValue => {
    /* istanbul ignore next */
    cov_1t7myr4zbx().f[9]++;
    cov_1t7myr4zbx().s[42]++;
    if (!bmiValue) {
      /* istanbul ignore next */
      cov_1t7myr4zbx().b[10][0]++;
      cov_1t7myr4zbx().s[43]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1t7myr4zbx().b[10][1]++;
    }
    const bmiNum =
    /* istanbul ignore next */
    (cov_1t7myr4zbx().s[44]++, parseFloat(bmiValue));
    /* istanbul ignore next */
    cov_1t7myr4zbx().s[45]++;
    if (bmiNum < 18.5) {
      /* istanbul ignore next */
      cov_1t7myr4zbx().b[11][0]++;
      cov_1t7myr4zbx().s[46]++;
      return {
        category: 'Insuffisance pondérale',
        color: 'text-blue-600'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1t7myr4zbx().b[11][1]++;
    }
    cov_1t7myr4zbx().s[47]++;
    if (bmiNum < 25) {
      /* istanbul ignore next */
      cov_1t7myr4zbx().b[12][0]++;
      cov_1t7myr4zbx().s[48]++;
      return {
        category: 'Poids normal',
        color: 'text-green-600'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1t7myr4zbx().b[12][1]++;
    }
    cov_1t7myr4zbx().s[49]++;
    if (bmiNum < 30) {
      /* istanbul ignore next */
      cov_1t7myr4zbx().b[13][0]++;
      cov_1t7myr4zbx().s[50]++;
      return {
        category: 'Surpoids',
        color: 'text-yellow-600'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1t7myr4zbx().b[13][1]++;
    }
    cov_1t7myr4zbx().s[51]++;
    return {
      category: 'Obésité',
      color: 'text-red-600'
    };
  };
  const weightProgress =
  /* istanbul ignore next */
  (cov_1t7myr4zbx().s[52]++, getWeightProgress());
  const weightRange =
  /* istanbul ignore next */
  (cov_1t7myr4zbx().s[53]++, getWeightRange());
  const averageWeight =
  /* istanbul ignore next */
  (cov_1t7myr4zbx().s[54]++, getAverageWeight());
  const bmiCategory =
  /* istanbul ignore next */
  (cov_1t7myr4zbx().s[55]++, getBMICategory(bmi));
  /* istanbul ignore next */
  cov_1t7myr4zbx().s[56]++;
  return {
    bmi,
    weightTrend,
    latestWeight,
    weightProgress,
    weightRange,
    averageWeight,
    bmiCategory,
    calculateBMI,
    getWeightTrend,
    getLatestWeight
  };
};
/* istanbul ignore next */
cov_1t7myr4zbx().s[57]++;
exports.useProfileStats = useProfileStats;
/* istanbul ignore next */
cov_1t7myr4zbx().s[58]++;
exports.default = exports.useProfileStats;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,