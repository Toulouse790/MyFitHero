{"version":3,"names":["cov_1t7myr4zbx","actualCoverage","s","useProfileStats","currentWeight","height","weightHistory","f","calculateBMI","weight","parseFloat","heightM","parseInt","b","toFixed","getWeightTrend","length","recent","slice","diff","type","Math","abs","getLatestWeight","bmi","weightTrend","latestWeight","getWeightProgress","firstWeight","current","totalChange","isPositive","percentage","getWeightRange","weights","map","entry","index","min","max","range","getAverageWeight","totalWeight","reduce","sum","getBMICategory","bmiValue","bmiNum","category","color","weightProgress","weightRange","averageWeight","bmiCategory","exports","default"],"sources":["/workspaces/MyFitHero/src/features/profile/components/profile/ProfileStats.tsx"],"sourcesContent":["// src/features/profile/components/profile/ProfileStats.tsx\nimport React from 'react';\n\ninterface ProfileStatsProps {\n  currentWeight: string;\n  height: string;\n  weightHistory: any[];\n}\n\nexport const useProfileStats = (\n  currentWeight: string,\n  height: string,\n  weightHistory: any[]\n) => {\n  // Calculs BMI\n  const calculateBMI = () => {\n    const weight = parseFloat(currentWeight);\n    const heightM = parseInt(height) / 100;\n    if (weight && heightM) {\n      return (weight / (heightM * heightM)).toFixed(1);\n    }\n    return null;\n  };\n\n  // Tendance de poids\n  const getWeightTrend = () => {\n    if (weightHistory.length < 2) return null;\n    const recent = weightHistory.slice(-2);\n    const diff = recent[1].weight - recent[0].weight;\n    return {\n      type: diff > 0.5 ? 'up' : diff < -0.5 ? 'down' : 'stable',\n      diff: Math.abs(diff),\n    };\n  };\n\n  // Dernier poids\n  const getLatestWeight = () => {\n    return weightHistory.length > 0 ? weightHistory[weightHistory.length - 1].weight : null;\n  };\n\n  const bmi = calculateBMI();\n  const weightTrend = getWeightTrend();\n  const latestWeight = getLatestWeight();\n\n  // Calculer d'autres métriques utiles\n  const getWeightProgress = () => {\n    if (weightHistory.length < 2) return null;\n    \n    const firstWeight = weightHistory[0].weight;\n    const current = latestWeight || parseFloat(currentWeight);\n    const totalChange = current - firstWeight;\n    \n    return {\n      totalChange: totalChange.toFixed(1),\n      isPositive: totalChange > 0,\n      percentage: ((totalChange / firstWeight) * 100).toFixed(1)\n    };\n  };\n\n  const getWeightRange = () => {\n    if (weightHistory.length === 0) return null;\n    \n    const weights = weightHistory.map((entry, index) => entry.weight);\n    const min = Math.min(...weights);\n    const max = Math.max(...weights);\n    \n    return { min, max, range: (max - min).toFixed(1) };\n  };\n\n  const getAverageWeight = () => {\n    if (weightHistory.length === 0) return null;\n    \n    const totalWeight = weightHistory.reduce((sum, entry) => sum + entry.weight, 0);\n    return (totalWeight / weightHistory.length).toFixed(1);\n  };\n\n  const getBMICategory = (bmiValue: string | null) => {\n    if (!bmiValue) return null;\n    \n    const bmiNum = parseFloat(bmiValue);\n    if (bmiNum < 18.5) return { category: 'Insuffisance pondérale', color: 'text-blue-600' };\n    if (bmiNum < 25) return { category: 'Poids normal', color: 'text-green-600' };\n    if (bmiNum < 30) return { category: 'Surpoids', color: 'text-yellow-600' };\n    return { category: 'Obésité', color: 'text-red-600' };\n  };\n\n  const weightProgress = getWeightProgress();\n  const weightRange = getWeightRange();\n  const averageWeight = getAverageWeight();\n  const bmiCategory = getBMICategory(bmi);\n\n  return {\n    bmi,\n    weightTrend,\n    latestWeight,\n    weightProgress,\n    weightRange,\n    averageWeight,\n    bmiCategory,\n    calculateBMI,\n    getWeightTrend,\n    getLatestWeight,\n  };\n};\n\nexport default useProfileStats;"],"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","ignoreList":[]}