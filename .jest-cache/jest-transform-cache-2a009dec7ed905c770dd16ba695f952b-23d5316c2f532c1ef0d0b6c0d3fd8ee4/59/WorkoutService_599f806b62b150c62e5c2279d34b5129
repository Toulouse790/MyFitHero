03a58c65207ad0256ce3fa5aa5df3d97
"use strict";

/* istanbul ignore next */
function cov_1b3o7zlbqq() {
  var path = "/workspaces/MyFitHero/src/features/workout/services/WorkoutService.ts";
  var hash = "d720f72fe694b8a82097868d2bdac134b1aff153";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/workout/services/WorkoutService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "3": {
        start: {
          line: 9,
          column: 27
        },
        end: {
          line: 9,
          column: 48
        }
      },
      "4": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 24,
          column: 13
        }
      },
      "5": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "6": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 22,
          column: 21
        }
      },
      "7": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "8": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 64
        }
      },
      "9": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "10": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 70
        }
      },
      "11": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 65
        }
      },
      "12": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 25,
          column: 85
        }
      },
      "13": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 27,
          column: 79
        }
      },
      "14": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 79
        }
      },
      "15": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "16": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 71
        }
      },
      "17": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 42
        }
      },
      "18": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "19": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 43,
          column: 14
        }
      },
      "20": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 45,
          column: 73
        }
      },
      "21": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 73
        }
      },
      "22": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 41
        }
      },
      "23": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 73
        }
      },
      "24": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 24
        }
      },
      "25": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "26": {
        start: {
          line: 57,
          column: 29
        },
        end: {
          line: 61,
          column: 14
        }
      },
      "27": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 63,
          column: 76
        }
      },
      "28": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 76
        }
      },
      "29": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 41
        }
      },
      "30": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 73
        }
      },
      "31": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 24
        }
      },
      "32": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "33": {
        start: {
          line: 75,
          column: 29
        },
        end: {
          line: 77,
          column: 14
        }
      },
      "34": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 79,
          column: 76
        }
      },
      "35": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 76
        }
      },
      "36": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 73
        }
      },
      "37": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 24
        }
      },
      "38": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "39": {
        start: {
          line: 91,
          column: 29
        },
        end: {
          line: 95,
          column: 14
        }
      },
      "40": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 97,
          column: 74
        }
      },
      "41": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 74
        }
      },
      "42": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 41
        }
      },
      "43": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 79
        }
      },
      "44": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 65
        }
      },
      "45": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "46": {
        start: {
          line: 109,
          column: 29
        },
        end: {
          line: 111,
          column: 14
        }
      },
      "47": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 113,
          column: 73
        }
      },
      "48": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 73
        }
      },
      "49": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 41
        }
      },
      "50": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 79
        }
      },
      "51": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 24
        }
      },
      "52": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "53": {
        start: {
          line: 125,
          column: 29
        },
        end: {
          line: 127,
          column: 14
        }
      },
      "54": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 129,
          column: 75
        }
      },
      "55": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 75
        }
      },
      "56": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 41
        }
      },
      "57": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 80
        }
      },
      "58": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 24
        }
      },
      "59": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "60": {
        start: {
          line: 141,
          column: 29
        },
        end: {
          line: 143,
          column: 14
        }
      },
      "61": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 145,
          column: 80
        }
      },
      "62": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 80
        }
      },
      "63": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 41
        }
      },
      "64": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 82
        }
      },
      "65": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 24
        }
      },
      "66": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "67": {
        start: {
          line: 157,
          column: 29
        },
        end: {
          line: 159,
          column: 14
        }
      },
      "68": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 161,
          column: 77
        }
      },
      "69": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 77
        }
      },
      "70": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 80
        }
      },
      "71": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 24
        }
      },
      "72": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "73": {
        start: {
          line: 172,
          column: 29
        },
        end: {
          line: 176,
          column: 14
        }
      },
      "74": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 178,
          column: 81
        }
      },
      "75": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 81
        }
      },
      "76": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 71
        }
      },
      "77": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 24
        }
      },
      "78": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "79": {
        start: {
          line: 190,
          column: 29
        },
        end: {
          line: 190,
          column: 76
        }
      },
      "80": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 192,
          column: 83
        }
      },
      "81": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 83
        }
      },
      "82": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 41
        }
      },
      "83": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 75
        }
      },
      "84": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 46
        }
      },
      "85": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "86": {
        start: {
          line: 204,
          column: 29
        },
        end: {
          line: 204,
          column: 102
        }
      },
      "87": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 206,
          column: 84
        }
      },
      "88": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 84
        }
      },
      "89": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 41
        }
      },
      "90": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 79
        }
      },
      "91": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 50
        }
      },
      "92": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "93": {
        start: {
          line: 219,
          column: 29
        },
        end: {
          line: 223,
          column: 14
        }
      },
      "94": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 225,
          column: 63
        }
      },
      "95": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 225,
          column: 63
        }
      },
      "96": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 41
        }
      },
      "97": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 74
        }
      },
      "98": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 42
        }
      },
      "99": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "100": {
        start: {
          line: 237,
          column: 29
        },
        end: {
          line: 237,
          column: 78
        }
      },
      "101": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 239,
          column: 80
        }
      },
      "102": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 80
        }
      },
      "103": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 41
        }
      },
      "104": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 79
        }
      },
      "105": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 50
        }
      },
      "106": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 289,
          column: 10
        }
      },
      "107": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 299,
          column: 10
        }
      },
      "108": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 329,
          column: 10
        }
      },
      "109": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 357,
          column: 10
        }
      },
      "110": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 374,
          column: 10
        }
      },
      "111": {
        start: {
          line: 377,
          column: 0
        },
        end: {
          line: 377,
          column: 40
        }
      },
      "112": {
        start: {
          line: 378,
          column: 0
        },
        end: {
          line: 383,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 48
          },
          end: {
            line: 11,
            column: 49
          }
        },
        loc: {
          start: {
            line: 11,
            column: 66
          },
          end: {
            line: 23,
            column: 17
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 45
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 48
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 55
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 73
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 56
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 89
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 48
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 107
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 49
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 123
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 51
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 139
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 49
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 155
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 58
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 170
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 41
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 188
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        loc: {
          start: {
            line: 202,
            column: 57
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 202
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        },
        loc: {
          start: {
            line: 217,
            column: 39
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 217
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 39
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 235
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        loc: {
          start: {
            line: 249,
            column: 29
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 249
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        loc: {
          start: {
            line: 291,
            column: 52
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 291
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 301,
            column: 5
          }
        },
        loc: {
          start: {
            line: 301,
            column: 33
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 301
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 37
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 331
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 37
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 359
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 24,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 12
          },
          end: {
            line: 24,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 22,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 22,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 21,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 21,
            column: 25
          }
        }, {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 21,
            column: 25
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 21,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 21,
            column: 25
          }
        }, {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 21,
            column: 25
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 27,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 27,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 45,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 45,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 63,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 63,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 79,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 79,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "8": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 97,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 97,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "9": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 113,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 113,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "10": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 129,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 129,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "11": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 145,
            column: 80
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 145,
            column: 80
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "12": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 161,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 161,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "13": {
        loc: {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 178,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 178,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "14": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 192,
            column: 83
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 192,
            column: 83
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "15": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 206,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 206,
            column: 84
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "16": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 225,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 225,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "17": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 239,
            column: 80
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 239,
            column: 80
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/workout/services/WorkoutService.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/workout/services/WorkoutService.ts"],
      sourcesContent: ["import { Search } from 'lucide-react';\nimport type {\n  Workout,\n  WorkoutSession,\n  \n  CreateWorkoutData,\n  UpdateWorkoutData,\n  WorkoutStats,\n  WorkoutTemplate,\n  \n  WorkoutProgress,\n  WorkoutFilters,\n  WorkoutSearchQuery,\n} from '@/features/workout/types/WorkoutTypes';\n\nexport class WorkoutService {\n  private static readonly BASE_URL = '/api/workouts';\n\n  // === GESTION DES WORKOUTS ===\n\n  // R\xE9cup\xE9ration des workouts d'un utilisateur\n  static async getWorkouts(userId: string, filters?: WorkoutFilters): Promise<Workout[]> {\n    try {\n      const params = new URLSearchParams();\n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value !== undefined) {\n            if (Array.isArray(value)) {\n              params.append(key, value.join(','));\n            } else if (typeof value === 'object') {\n              params.append(key, JSON.stringify(value));\n            } else {\n              params.append(key, value.toString());\n            }\n          }\n        });\n      }\n\n      const response = await fetch(`${this.BASE_URL}/user/${userId}?${params}`);\n      if (!response.ok) throw new Error('Erreur lors de la r\xE9cup\xE9ration des workouts');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.getWorkouts:', error);\n      return this.getMockWorkouts();\n    }\n  }\n\n  // Cr\xE9ation d'un nouveau workout\n  static async createWorkout(userId: string, data: CreateWorkoutData): Promise<Workout> {\n    try {\n      const response = await fetch(`${this.BASE_URL}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ...data, userId }),\n      });\n      if (!response.ok) throw new Error('Erreur lors de la cr\xE9ation du workout');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.createWorkout:', error);\n      throw error;\n    }\n  }\n\n  // Mise \xE0 jour d'un workout\n  static async updateWorkout(workoutId: string, data: UpdateWorkoutData): Promise<Workout> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${workoutId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) throw new Error('Erreur lors de la mise \xE0 jour du workout');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.updateWorkout:', error);\n      throw error;\n    }\n  }\n\n  // Suppression d'un workout\n  static async deleteWorkout(workoutId: string): Promise<void> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${workoutId}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) throw new Error('Erreur lors de la suppression du workout');\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.deleteWorkout:', error);\n      throw error;\n    }\n  }\n\n  // === GESTION DES SESSIONS ===\n\n  // D\xE9marrage d'une session de workout\n  static async startWorkoutSession(userId: string, workoutId: string): Promise<WorkoutSession> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${workoutId}/start`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId }),\n      });\n      if (!response.ok) throw new Error('Erreur lors du d\xE9marrage de la session');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.startWorkoutSession:', error);\n      return this.getMockWorkoutSession(workoutId, userId);\n    }\n  }\n\n  // Pause d'une session\n  static async pauseWorkoutSession(sessionId: string): Promise<WorkoutSession> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/sessions/${sessionId}/pause`, {\n        method: 'POST',\n      });\n      if (!response.ok) throw new Error('Erreur lors de la pause de la session');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.pauseWorkoutSession:', error);\n      throw error;\n    }\n  }\n\n  // Reprise d'une session\n  static async resumeWorkoutSession(sessionId: string): Promise<WorkoutSession> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/sessions/${sessionId}/resume`, {\n        method: 'POST',\n      });\n      if (!response.ok) throw new Error('Erreur lors de la reprise de la session');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.resumeWorkoutSession:', error);\n      throw error;\n    }\n  }\n\n  // Finalisation d'une session\n  static async completeWorkoutSession(sessionId: string): Promise<WorkoutSession> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/sessions/${sessionId}/complete`, {\n        method: 'POST',\n      });\n      if (!response.ok) throw new Error('Erreur lors de la finalisation de la session');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.completeWorkoutSession:', error);\n      throw error;\n    }\n  }\n\n  // Annulation d'une session\n  static async cancelWorkoutSession(sessionId: string): Promise<void> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/sessions/${sessionId}/cancel`, {\n        method: 'POST',\n      });\n      if (!response.ok) throw new Error(\"Erreur lors de l'annulation de la session\");\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.cancelWorkoutSession:', error);\n      throw error;\n    }\n  }\n\n  // Enregistrement d'un exercice\n  static async logExercise(\n    sessionId: string,\n    exerciseId: string,\n    data: { sets: number; reps: number; weight?: number; duration?: number }\n  ): Promise<void> {\n    try {\n      const response = await fetch(\n        `${this.BASE_URL}/sessions/${sessionId}/exercises/${exerciseId}`,\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(data),\n        }\n      );\n      if (!response.ok) throw new Error(\"Erreur lors de l'enregistrement de l'exercice\");\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.logExercise:', error);\n      throw error;\n    }\n  }\n\n  // === STATISTIQUES ===\n\n  // R\xE9cup\xE9ration des statistiques\n  static async getWorkoutStats(userId: string): Promise<WorkoutStats> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/stats/${userId}`);\n      if (!response.ok) throw new Error('Erreur lors de la r\xE9cup\xE9ration des statistiques');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.getWorkoutStats:', error);\n      return this.getMockWorkoutStats();\n    }\n  }\n\n  // Progression d'un exercice\n  static async getExerciseProgress(userId: string, exerciseId: string): Promise<WorkoutProgress> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/progress/${userId}/exercise/${exerciseId}`);\n      if (!response.ok) throw new Error('Erreur lors de la r\xE9cup\xE9ration de la progression');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.getExerciseProgress:', error);\n      return this.getMockExerciseProgress();\n    }\n  }\n\n  // === RECHERCHE ET TEMPLATES ===\n\n  // Recherche de workouts\n  static async searchWorkouts(query: WorkoutSearchQuery): Promise<Workout[]> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/search`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(query),\n      });\n      if (!response.ok) throw new Error('Erreur lors de la recherche');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.searchWorkouts:', error);\n      return this.getMockWorkouts();\n    }\n  }\n\n  // Templates populaires\n  static async getPopularTemplates(): Promise<WorkoutTemplate[]> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/templates/popular`);\n      if (!response.ok) throw new Error('Erreur lors de la r\xE9cup\xE9ration des templates');\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur WorkoutService.getPopularTemplates:', error);\n      return this.getMockWorkoutTemplates();\n    }\n  }\n\n  // === DONN\xC9ES DE MOCK ===\n\n  private static getMockWorkouts(): Workout[] {\n    return [\n      {\n        id: '1',\n        name: 'Push Day - Poitrine & Triceps',\n        description: 'Workout focalis\xE9 sur le haut du corps',\n        duration: 60,\n        difficulty: 'intermediate',\n        category: 'strength',\n        exercises: [\n          {\n            id: 'ex1',\n            name: 'D\xE9velopp\xE9 couch\xE9',\n            description: 'Exercice de base pour la poitrine',\n            sets: 4,\n            reps: 8,\n            weight: 80,\n            restTime: 120,\n            instructions: ['Allongez-vous sur le banc', 'Descendez la barre lentement'],\n            muscleGroups: ['chest', 'triceps'],\n          },\n          {\n            id: 'ex2',\n            name: 'Dips',\n            description: 'Exercice au poids du corps',\n            sets: 3,\n            reps: 12,\n            restTime: 90,\n            instructions: ['Descendez lentement', 'Remontez en contractant'],\n            muscleGroups: ['chest', 'triceps'],\n          },\n        ],\n        tags: ['force', 'haut du corps'],\n        equipment: [],\n        caloriesBurned: 350,\n        isPublic: true,\n        createdBy: 'coach1',\n        createdAt: '2024-01-01T00:00:00Z',\n        updatedAt: '2024-01-01T00:00:00Z',\n      },\n    ];\n  }\n\n  private static getMockWorkoutSession(workoutId: string, userId: string): WorkoutSession {\n    return {\n      id: 'session-' + Date.now(),\n      workoutId,\n      userId,\n      startTime: new Date().toISOString(),\n      status: 'in_progress',\n      exercises: [],\n    };\n  }\n\n  private static getMockWorkoutStats(): WorkoutStats {\n    return {\n      totalWorkouts: 45,\n      totalDuration: 2700, // 45 heures\n      totalCaloriesBurned: 15750,\n      averageWorkoutDuration: 60,\n      currentStreak: 12,\n      longestStreak: 28,\n      favoriteExercises: [],\n      weeklyStats: [],\n      monthlyStats: [],\n      muscleGroupDistribution: {\n        chest: 15,\n        back: 12,\n        shoulders: 10,\n        biceps: 8,\n        triceps: 8,\n        forearms: 3,\n        abs: 6,\n        obliques: 4,\n        lower_back: 5,\n        quadriceps: 12,\n        hamstrings: 8,\n        glutes: 10,\n        calves: 6,\n        full_body: 3,\n        core: 8,\n      },\n    };\n  }\n\n  private static getMockExerciseProgress(): WorkoutProgress {\n    return {\n      exerciseId: 'ex1',\n      historicalData: [\n        {\n          date: '2024-01-01',\n          sets: 4,\n          reps: 8,\n          weight: 75,\n          volume: 2400,\n        },\n        {\n          date: '2024-01-03',\n          sets: 4,\n          reps: 8,\n          weight: 80,\n          volume: 2560,\n        },\n      ],\n      personalBest: {\n        maxWeight: 85,\n        maxReps: 10,\n        maxVolume: 2720,\n        achievedAt: '2024-01-05T00:00:00Z',\n      },\n      trend: 'improving',\n    };\n  }\n\n  private static getMockWorkoutTemplates(): WorkoutTemplate[] {\n    return [\n      {\n        id: 'template1',\n        name: 'D\xE9butant Full Body',\n        description: 'Workout complet pour d\xE9butants',\n        exercises: [],\n        difficulty: 'beginner',\n        estimatedDuration: 45,\n        targetMuscleGroups: ['full_body'],\n        equipment: [],\n        isPublic: true,\n        rating: 4.5,\n        usageCount: 1250,\n      },\n    ];\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d720f72fe694b8a82097868d2bdac134b1aff153"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b3o7zlbqq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b3o7zlbqq();
cov_1b3o7zlbqq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1b3o7zlbqq().s[1]++;
exports.WorkoutService = void 0;
class WorkoutService {
  // === GESTION DES WORKOUTS ===
  // Récupération des workouts d'un utilisateur
  static async getWorkouts(userId, filters) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[0]++;
    cov_1b3o7zlbqq().s[2]++;
    try {
      const params =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[3]++, new URLSearchParams());
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[4]++;
      if (filters) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[0][0]++;
        cov_1b3o7zlbqq().s[5]++;
        Object.entries(filters).forEach(([key, value]) => {
          /* istanbul ignore next */
          cov_1b3o7zlbqq().f[1]++;
          cov_1b3o7zlbqq().s[6]++;
          if (value !== undefined) {
            /* istanbul ignore next */
            cov_1b3o7zlbqq().b[1][0]++;
            cov_1b3o7zlbqq().s[7]++;
            if (Array.isArray(value)) {
              /* istanbul ignore next */
              cov_1b3o7zlbqq().b[2][0]++;
              cov_1b3o7zlbqq().s[8]++;
              params.append(key, value.join(','));
            } else {
              /* istanbul ignore next */
              cov_1b3o7zlbqq().b[2][1]++;
              cov_1b3o7zlbqq().s[9]++;
              if (typeof value === 'object') {
                /* istanbul ignore next */
                cov_1b3o7zlbqq().b[3][0]++;
                cov_1b3o7zlbqq().s[10]++;
                params.append(key, JSON.stringify(value));
              } else {
                /* istanbul ignore next */
                cov_1b3o7zlbqq().b[3][1]++;
                cov_1b3o7zlbqq().s[11]++;
                params.append(key, value.toString());
              }
            }
          } else
          /* istanbul ignore next */
          {
            cov_1b3o7zlbqq().b[1][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[0][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[12]++, await fetch(`${this.BASE_URL}/user/${userId}?${params}`));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[13]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[4][0]++;
        cov_1b3o7zlbqq().s[14]++;
        throw new Error('Erreur lors de la récupération des workouts');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[4][1]++;
      }
      cov_1b3o7zlbqq().s[15]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[16]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.getWorkouts:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[17]++;
      return this.getMockWorkouts();
    }
  }
  // Création d'un nouveau workout
  static async createWorkout(userId, data) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[2]++;
    cov_1b3o7zlbqq().s[18]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[19]++, await fetch(`${this.BASE_URL}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          ...data,
          userId
        })
      }));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[20]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[5][0]++;
        cov_1b3o7zlbqq().s[21]++;
        throw new Error('Erreur lors de la création du workout');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[5][1]++;
      }
      cov_1b3o7zlbqq().s[22]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[23]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.createWorkout:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[24]++;
      throw error;
    }
  }
  // Mise à jour d'un workout
  static async updateWorkout(workoutId, data) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[3]++;
    cov_1b3o7zlbqq().s[25]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[26]++, await fetch(`${this.BASE_URL}/${workoutId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      }));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[27]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[6][0]++;
        cov_1b3o7zlbqq().s[28]++;
        throw new Error('Erreur lors de la mise à jour du workout');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[6][1]++;
      }
      cov_1b3o7zlbqq().s[29]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[30]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.updateWorkout:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[31]++;
      throw error;
    }
  }
  // Suppression d'un workout
  static async deleteWorkout(workoutId) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[4]++;
    cov_1b3o7zlbqq().s[32]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[33]++, await fetch(`${this.BASE_URL}/${workoutId}`, {
        method: 'DELETE'
      }));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[34]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[7][0]++;
        cov_1b3o7zlbqq().s[35]++;
        throw new Error('Erreur lors de la suppression du workout');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[7][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[36]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.deleteWorkout:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[37]++;
      throw error;
    }
  }
  // === GESTION DES SESSIONS ===
  // Démarrage d'une session de workout
  static async startWorkoutSession(userId, workoutId) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[5]++;
    cov_1b3o7zlbqq().s[38]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[39]++, await fetch(`${this.BASE_URL}/${workoutId}/start`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          userId
        })
      }));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[40]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[8][0]++;
        cov_1b3o7zlbqq().s[41]++;
        throw new Error('Erreur lors du démarrage de la session');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[8][1]++;
      }
      cov_1b3o7zlbqq().s[42]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[43]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.startWorkoutSession:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[44]++;
      return this.getMockWorkoutSession(workoutId, userId);
    }
  }
  // Pause d'une session
  static async pauseWorkoutSession(sessionId) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[6]++;
    cov_1b3o7zlbqq().s[45]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[46]++, await fetch(`${this.BASE_URL}/sessions/${sessionId}/pause`, {
        method: 'POST'
      }));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[47]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[9][0]++;
        cov_1b3o7zlbqq().s[48]++;
        throw new Error('Erreur lors de la pause de la session');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[9][1]++;
      }
      cov_1b3o7zlbqq().s[49]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[50]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.pauseWorkoutSession:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[51]++;
      throw error;
    }
  }
  // Reprise d'une session
  static async resumeWorkoutSession(sessionId) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[7]++;
    cov_1b3o7zlbqq().s[52]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[53]++, await fetch(`${this.BASE_URL}/sessions/${sessionId}/resume`, {
        method: 'POST'
      }));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[54]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[10][0]++;
        cov_1b3o7zlbqq().s[55]++;
        throw new Error('Erreur lors de la reprise de la session');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[10][1]++;
      }
      cov_1b3o7zlbqq().s[56]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[57]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.resumeWorkoutSession:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[58]++;
      throw error;
    }
  }
  // Finalisation d'une session
  static async completeWorkoutSession(sessionId) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[8]++;
    cov_1b3o7zlbqq().s[59]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[60]++, await fetch(`${this.BASE_URL}/sessions/${sessionId}/complete`, {
        method: 'POST'
      }));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[61]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[11][0]++;
        cov_1b3o7zlbqq().s[62]++;
        throw new Error('Erreur lors de la finalisation de la session');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[11][1]++;
      }
      cov_1b3o7zlbqq().s[63]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[64]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.completeWorkoutSession:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[65]++;
      throw error;
    }
  }
  // Annulation d'une session
  static async cancelWorkoutSession(sessionId) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[9]++;
    cov_1b3o7zlbqq().s[66]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[67]++, await fetch(`${this.BASE_URL}/sessions/${sessionId}/cancel`, {
        method: 'POST'
      }));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[68]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[12][0]++;
        cov_1b3o7zlbqq().s[69]++;
        throw new Error("Erreur lors de l'annulation de la session");
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[12][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[70]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.cancelWorkoutSession:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[71]++;
      throw error;
    }
  }
  // Enregistrement d'un exercice
  static async logExercise(sessionId, exerciseId, data) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[10]++;
    cov_1b3o7zlbqq().s[72]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[73]++, await fetch(`${this.BASE_URL}/sessions/${sessionId}/exercises/${exerciseId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      }));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[74]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[13][0]++;
        cov_1b3o7zlbqq().s[75]++;
        throw new Error("Erreur lors de l'enregistrement de l'exercice");
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[13][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[76]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.logExercise:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[77]++;
      throw error;
    }
  }
  // === STATISTIQUES ===
  // Récupération des statistiques
  static async getWorkoutStats(userId) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[11]++;
    cov_1b3o7zlbqq().s[78]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[79]++, await fetch(`${this.BASE_URL}/stats/${userId}`));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[80]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[14][0]++;
        cov_1b3o7zlbqq().s[81]++;
        throw new Error('Erreur lors de la récupération des statistiques');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[14][1]++;
      }
      cov_1b3o7zlbqq().s[82]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[83]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.getWorkoutStats:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[84]++;
      return this.getMockWorkoutStats();
    }
  }
  // Progression d'un exercice
  static async getExerciseProgress(userId, exerciseId) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[12]++;
    cov_1b3o7zlbqq().s[85]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[86]++, await fetch(`${this.BASE_URL}/progress/${userId}/exercise/${exerciseId}`));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[87]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[15][0]++;
        cov_1b3o7zlbqq().s[88]++;
        throw new Error('Erreur lors de la récupération de la progression');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[15][1]++;
      }
      cov_1b3o7zlbqq().s[89]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[90]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.getExerciseProgress:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[91]++;
      return this.getMockExerciseProgress();
    }
  }
  // === RECHERCHE ET TEMPLATES ===
  // Recherche de workouts
  static async searchWorkouts(query) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[13]++;
    cov_1b3o7zlbqq().s[92]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[93]++, await fetch(`${this.BASE_URL}/search`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(query)
      }));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[94]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[16][0]++;
        cov_1b3o7zlbqq().s[95]++;
        throw new Error('Erreur lors de la recherche');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[16][1]++;
      }
      cov_1b3o7zlbqq().s[96]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[97]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.searchWorkouts:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[98]++;
      return this.getMockWorkouts();
    }
  }
  // Templates populaires
  static async getPopularTemplates() {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[14]++;
    cov_1b3o7zlbqq().s[99]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1b3o7zlbqq().s[100]++, await fetch(`${this.BASE_URL}/templates/popular`));
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[101]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1b3o7zlbqq().b[17][0]++;
        cov_1b3o7zlbqq().s[102]++;
        throw new Error('Erreur lors de la récupération des templates');
      } else
      /* istanbul ignore next */
      {
        cov_1b3o7zlbqq().b[17][1]++;
      }
      cov_1b3o7zlbqq().s[103]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[104]++;
      // Erreur silencieuse
      console.error('Erreur WorkoutService.getPopularTemplates:', error);
      /* istanbul ignore next */
      cov_1b3o7zlbqq().s[105]++;
      return this.getMockWorkoutTemplates();
    }
  }
  // === DONNÉES DE MOCK ===
  static getMockWorkouts() {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[15]++;
    cov_1b3o7zlbqq().s[106]++;
    return [{
      id: '1',
      name: 'Push Day - Poitrine & Triceps',
      description: 'Workout focalisé sur le haut du corps',
      duration: 60,
      difficulty: 'intermediate',
      category: 'strength',
      exercises: [{
        id: 'ex1',
        name: 'Développé couché',
        description: 'Exercice de base pour la poitrine',
        sets: 4,
        reps: 8,
        weight: 80,
        restTime: 120,
        instructions: ['Allongez-vous sur le banc', 'Descendez la barre lentement'],
        muscleGroups: ['chest', 'triceps']
      }, {
        id: 'ex2',
        name: 'Dips',
        description: 'Exercice au poids du corps',
        sets: 3,
        reps: 12,
        restTime: 90,
        instructions: ['Descendez lentement', 'Remontez en contractant'],
        muscleGroups: ['chest', 'triceps']
      }],
      tags: ['force', 'haut du corps'],
      equipment: [],
      caloriesBurned: 350,
      isPublic: true,
      createdBy: 'coach1',
      createdAt: '2024-01-01T00:00:00Z',
      updatedAt: '2024-01-01T00:00:00Z'
    }];
  }
  static getMockWorkoutSession(workoutId, userId) {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[16]++;
    cov_1b3o7zlbqq().s[107]++;
    return {
      id: 'session-' + Date.now(),
      workoutId,
      userId,
      startTime: new Date().toISOString(),
      status: 'in_progress',
      exercises: []
    };
  }
  static getMockWorkoutStats() {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[17]++;
    cov_1b3o7zlbqq().s[108]++;
    return {
      totalWorkouts: 45,
      totalDuration: 2700,
      // 45 heures
      totalCaloriesBurned: 15750,
      averageWorkoutDuration: 60,
      currentStreak: 12,
      longestStreak: 28,
      favoriteExercises: [],
      weeklyStats: [],
      monthlyStats: [],
      muscleGroupDistribution: {
        chest: 15,
        back: 12,
        shoulders: 10,
        biceps: 8,
        triceps: 8,
        forearms: 3,
        abs: 6,
        obliques: 4,
        lower_back: 5,
        quadriceps: 12,
        hamstrings: 8,
        glutes: 10,
        calves: 6,
        full_body: 3,
        core: 8
      }
    };
  }
  static getMockExerciseProgress() {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[18]++;
    cov_1b3o7zlbqq().s[109]++;
    return {
      exerciseId: 'ex1',
      historicalData: [{
        date: '2024-01-01',
        sets: 4,
        reps: 8,
        weight: 75,
        volume: 2400
      }, {
        date: '2024-01-03',
        sets: 4,
        reps: 8,
        weight: 80,
        volume: 2560
      }],
      personalBest: {
        maxWeight: 85,
        maxReps: 10,
        maxVolume: 2720,
        achievedAt: '2024-01-05T00:00:00Z'
      },
      trend: 'improving'
    };
  }
  static getMockWorkoutTemplates() {
    /* istanbul ignore next */
    cov_1b3o7zlbqq().f[19]++;
    cov_1b3o7zlbqq().s[110]++;
    return [{
      id: 'template1',
      name: 'Débutant Full Body',
      description: 'Workout complet pour débutants',
      exercises: [],
      difficulty: 'beginner',
      estimatedDuration: 45,
      targetMuscleGroups: ['full_body'],
      equipment: [],
      isPublic: true,
      rating: 4.5,
      usageCount: 1250
    }];
  }
}
/* istanbul ignore next */
cov_1b3o7zlbqq().s[111]++;
exports.WorkoutService = WorkoutService;
/* istanbul ignore next */
cov_1b3o7zlbqq().s[112]++;
Object.defineProperty(WorkoutService, "BASE_URL", {
  enumerable: true,
  configurable: true,
  writable: true,
  value: '/api/workouts'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,