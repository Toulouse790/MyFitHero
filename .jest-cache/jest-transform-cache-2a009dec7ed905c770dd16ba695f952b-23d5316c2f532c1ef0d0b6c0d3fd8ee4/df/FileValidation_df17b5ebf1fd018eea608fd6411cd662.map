{"version":3,"names":["cov_2dm59wycb6","actualCoverage","s","FileValidation","validateImageFile","file","f","type","startsWith","b","isValid","error","maxSize","size","Promise","resolve","img","Image","onload","width","height","onerror","src","URL","createObjectURL","createPreviewUrl","reject","reader","FileReader","e","target","result","Error","readAsDataURL","exports"],"sources":["/workspaces/MyFitHero/src/features/profile/components/avatar/FileValidation.tsx"],"sourcesContent":["import React from 'react';\n// src/features/profile/components/avatar/FileValidation.tsx\n\nexport interface ValidationResult {\n  isValid: boolean;\n  error?: string;\n}\n\nexport class FileValidation {\n  static validateImageFile(file: File): ValidationResult {\n    // Vérifier le type de fichier\n    if (!file.type.startsWith('image/')) {\n      return {\n        isValid: false,\n        error: 'Veuillez sélectionner une image valide.',\n      };\n    }\n\n    // Vérifier la taille (max 5MB)\n    const maxSize = 5 * 1024 * 1024; // 5MB\n    if (file.size > maxSize) {\n      return {\n        isValid: false,\n        error: \"L'image ne doit pas dépasser 5MB.\",\n      };\n    }\n\n    // Vérifier les dimensions minimales\n    return new Promise<ValidationResult>((resolve) => {\n      const img = new Image();\n      img.onload = () => {\n        if (img.width < 100 || img.height < 100) {\n          resolve({\n            isValid: false,\n            error: 'L\\'image doit faire au moins 100x100 pixels.',\n          });\n        } else {\n          resolve({ isValid: true });\n        }\n      };\n      img.onerror = () => {\n        resolve({\n          isValid: false,\n          error: 'Impossible de lire l\\'image.',\n        });\n      };\n      img.src = URL.createObjectURL(file);\n    }) as any;\n  }\n\n  static createPreviewUrl(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        resolve(e.target?.result as string);\n      };\n      reader.onerror = () => {\n        reject(new Error('Erreur lors de la lecture du fichier'));\n      };\n      reader.readAsDataURL(file);\n    });\n  }\n}"],"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","ignoreList":[]}