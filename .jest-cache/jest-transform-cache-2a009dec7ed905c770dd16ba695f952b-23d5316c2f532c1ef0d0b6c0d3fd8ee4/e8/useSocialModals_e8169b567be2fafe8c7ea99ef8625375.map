{"version":3,"names":["cov_2gycmwzmnn","actualCoverage","s","react_1","require","useSocialModals","f","showCreatePost","setShowCreatePost","useState","showCreateChallenge","setShowCreateChallenge","showComments","setShowComments","newPost","setNewPost","content","post_type","media_files","achievements","location","newChallenge","setNewChallenge","title","description","pillar","challenge_type","target_value","target_unit","duration_days","difficulty","reward_points","newComment","setNewComment","openCreatePost","closeCreatePost","resetPostForm","openCreateChallenge","closeCreateChallenge","resetChallengeForm","openComments","postId","closeComments","updateNewPost","data","prev","updateNewChallenge","resetForms","submitPost","Promise","resolve","setTimeout","error","console","submitChallenge","submitComment","b","trim","log","exports"],"sources":["/workspaces/MyFitHero/src/features/social/hooks/useSocialModals.ts"],"sourcesContent":["// src/features/social/hooks/useSocialModals.ts\nimport { useState } from 'react';\nimport { CreatePostData, CreateChallengeData } from '@/features/social/types';\n\nexport interface UseSocialModalsReturn {\n  // Modal states\n  showCreatePost: boolean;\n  showCreateChallenge: boolean;\n  showComments: string | undefined;\n  \n  // Form data\n  newPost: CreatePostData;\n  newChallenge: CreateChallengeData;\n  newComment: string;\n  \n  // Modal actions\n  openCreatePost: () => void;\n  closeCreatePost: () => void;\n  openCreateChallenge: () => void;\n  closeCreateChallenge: () => void;\n  openComments: (postId: string) => void;\n  closeComments: () => void;\n  \n  // Form actions\n  updateNewPost: (data: Partial<CreatePostData>) => void;\n  updateNewChallenge: (data: Partial<CreateChallengeData>) => void;\n  setNewComment: (comment: string) => void;\n  resetForms: () => void;\n  \n  // Submit actions\n  submitPost: () => Promise<void>;\n  submitChallenge: () => Promise<void>;\n  submitComment: () => Promise<void>;\n}\n\nexport const useSocialModals = (): UseSocialModalsReturn => {\n  // Modal states\n  const [showCreatePost, setShowCreatePost] = useState(false);\n  const [showCreateChallenge, setShowCreateChallenge] = useState(false);\n  const [showComments, setShowComments] = useState<string | null>(null);\n  \n  // Form states\n  const [newPost, setNewPost] = useState<CreatePostData>({\n    content: '',\n    post_type: 'general',\n    media_files: [],\n    achievements: [],\n    location: '',\n  });\n\n  const [newChallenge, setNewChallenge] = useState<CreateChallengeData>({\n    title: '',\n    description: '',\n    pillar: 'workout',\n    challenge_type: 'community',\n    target_value: 0,\n    target_unit: '',\n    duration_days: 7,\n    difficulty: 'medium',\n    reward_points: 100,\n  });\n\n  const [newComment, setNewComment] = useState('');\n\n  // Modal actions\n  const openCreatePost = () => setShowCreatePost(true);\n  const closeCreatePost = () => {\n    setShowCreatePost(false);\n    resetPostForm();\n  };\n\n  const openCreateChallenge = () => setShowCreateChallenge(true);\n  const closeCreateChallenge = () => {\n    setShowCreateChallenge(false);\n    resetChallengeForm();\n  };\n\n  const openComments = (postId: string) => setShowComments(postId);\n  const closeComments = () => {\n    setShowComments(null);\n    setNewComment('');\n  };\n\n  // Form actions\n  const updateNewPost = (data: Partial<CreatePostData>) => {\n    setNewPost(prev => ({ ...prev, ...data }));\n  };\n\n  const updateNewChallenge = (data: Partial<CreateChallengeData>) => {\n    setNewChallenge(prev => ({ ...prev, ...data }));\n  };\n\n  const resetPostForm = () => {\n    setNewPost({\n      content: '',\n      post_type: 'general',\n      media_files: [],\n      achievements: [],\n      location: '',\n    });\n  };\n\n  const resetChallengeForm = () => {\n    setNewChallenge({\n      title: '',\n      description: '',\n      pillar: 'workout',\n      challenge_type: 'community',\n      target_value: 0,\n      target_unit: '',\n      duration_days: 7,\n      difficulty: 'medium',\n      reward_points: 100,\n    });\n  };\n\n  const resetForms = () => {\n    resetPostForm();\n    resetChallengeForm();\n    setNewComment('');\n  };\n\n  // Submit actions\n  const submitPost = async () => {\n    try {\n      // Mock API call\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Reset form and close modal\n      closeCreatePost();\n      \n      // You would typically call a refresh function here\n      // to reload the posts with the new post\n    } catch (error: any) {\n      console.error('Error creating post:', error);\n      throw error;\n    }\n  };\n\n  const submitChallenge = async () => {\n    try {\n      // Mock API call\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Reset form and close modal\n      closeCreateChallenge();\n      \n      // You would typically call a refresh function here\n      // to reload the challenges with the new challenge\n    } catch (error: any) {\n      console.error('Error creating challenge:', error);\n      throw error;\n    }\n  };\n\n  const submitComment = async () => {\n    if (!newComment.trim() || !showComments) return;\n\n    try {\n      // Mock API call - just log for now\n      console.log('Creating comment:', {\n        postId: showComments,\n        content: newComment,\n      });\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Reset comment\n      setNewComment('');\n      \n      // You would typically call a refresh function here\n      // to reload the post comments\n    } catch (error: any) {\n      console.error('Error creating comment:', error);\n      throw error;\n    }\n  };\n\n  return {\n    // Modal states\n    showCreatePost,\n    showCreateChallenge,\n    showComments,\n    \n    // Form data\n    newPost,\n    newChallenge,\n    newComment,\n    \n    // Modal actions\n    openCreatePost,\n    closeCreatePost,\n    openCreateChallenge,\n    closeCreateChallenge,\n    openComments,\n    closeComments,\n    \n    // Form actions\n    updateNewPost,\n    updateNewChallenge,\n    setNewComment,\n    resetForms,\n    \n    // Submit actions\n    submitPost,\n    submitChallenge,\n    submitComment,\n  };\n};"],"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","ignoreList":[]}