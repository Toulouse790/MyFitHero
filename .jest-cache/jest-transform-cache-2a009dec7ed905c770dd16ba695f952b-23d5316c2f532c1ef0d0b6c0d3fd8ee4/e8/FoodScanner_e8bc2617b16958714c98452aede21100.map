{"version":3,"names":["react_1","cov_2irv0qkpkj","s","__importStar","require","lucide_react_1","card_1","CameraCaptureMode_1","ScanModeSelector_1","ScanningProgress_1","ScanResults_1","ErrorDisplay_1","FoodAnalysisService_1","FoodScanner","f","isScanning","setIsScanning","useState","scanResult","setScanResult","previewImage","setPreviewImage","error","setError","isCapturing","setIsCapturing","hasCameraSupport","b","navigator","mediaDevices","getUserMedia","isDevelopment","process","env","NODE_ENV","handleCameraMode","handleCameraCapture","useCallback","file","scanFood","handleCameraCancel","handleFileUpload","handleDemoTest","File","type","image","previewUrl","URL","createObjectURL","result","FoodAnalysisService","console","message","Error","resetScan","revokeObjectURL","handleError","errorData","handleErrorRetry","handleErrorDismiss","handleAddToJournal","handleModifyPortion","jsx_runtime_1","jsxs","className","children","Card","jsx","CardHeader","CardTitle","Camera","CardContent","ScanModeSelector","onCameraMode","onFileUpload","onDemoTest","undefined","CameraCaptureMode","onCapture","onCancel","onError","ScanningProgress","ErrorDisplay","onRetry","onDismiss","ScanResults","onReset","onAddToJournal","onModifyPortion","exports","default"],"sources":["/workspaces/MyFitHero/src/features/nutrition/components/FoodScanner.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport { Camera, Upload, X, Loader2 } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\n// Import des composants modulaires\nimport { CameraCaptureMode } from './CameraCaptureMode';\nimport { ScanModeSelector } from './ScanModeSelector';\nimport { ScanningProgress } from './ScanningProgress';\nimport { ScanResults } from './ScanResults';\nimport { ErrorDisplay } from './ErrorDisplay';\nimport { FoodAnalysisService } from './FoodAnalysisService';\n\n// Types \ninterface FoodScanResult {\n  name: string;\n  calories: number;\n  protein: number;\n  carbs: number;\n  fat: number;\n  fiber?: number;\n  sugar?: number;\n  sodium?: number;\n  confidence: number;\n  alternatives?: any[];\n  portion_size?: string;\n  weight_grams?: number;\n}\n\ninterface ScanError {\n  message: string;\n  type: 'network' | 'analysis' | 'upload' | 'camera';\n}\n\nexport const FoodScanner: React.FC = () => {\n  // États pour la gestion du scan\n  const [isScanning, setIsScanning] = useState(false);\n  const [scanResult, setScanResult] = useState<FoodScanResult | null>(null);\n  const [previewImage, setPreviewImage] = useState<string | null>(null);\n  const [error, setError] = useState<ScanError | null>(null);\n  const [isCapturing, setIsCapturing] = useState(false);\n\n  // Détection des capacités de l'appareil\n  const hasCameraSupport = !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n  const isDevelopment = process.env.NODE_ENV === 'development';\n\n  // Fonctions de gestion des modes\n  const handleCameraMode = () => {\n    setIsCapturing(true);\n    setError(null);\n  };\n\n  const handleCameraCapture = useCallback((file: File) => {\n    setIsCapturing(false);\n    scanFood(file);\n  }, []);\n\n  const handleCameraCancel = () => {\n    setIsCapturing(false);\n  };\n\n  const handleFileUpload = useCallback((file: File) => {\n    scanFood(file);\n  }, []);\n\n  const handleDemoTest = () => {\n    scanFood(new File([], 'demo.jpg', { type: 'image/jpeg' }));\n  };\n\n  // Scanner une image alimentaire\n  const scanFood = async (image: File) => {\n    setIsScanning(true);\n    setError(null);\n    \n    try {\n      // Créer preview\n      const previewUrl = URL.createObjectURL(image);\n      setPreviewImage(previewUrl);\n\n      // Analyser l'image\n      const result = await FoodAnalysisService.scanFood(image);\n      setScanResult(result);\n      \n    } catch (error: any) {\n      console.error('Scan error:', error);\n      setError({\n        message: error instanceof Error ? error.message : 'Échec du scan alimentaire',\n        type: 'analysis'\n      });\n    } finally {\n      setIsScanning(false);\n    }\n  };\n\n  // Reset du scan\n  const resetScan = () => {\n    setScanResult(null);\n    setPreviewImage(null);\n    setError(null);\n    if (previewImage) {\n      URL.revokeObjectURL(previewImage);\n    }\n  };\n\n  // Gestion des erreurs\n  const handleError = (errorData: { message: string; type: string }) => {\n    setError(errorData as ScanError);\n    setIsCapturing(false);\n  };\n\n  const handleErrorRetry = () => {\n    setError(null);\n    resetScan();\n  };\n\n  const handleErrorDismiss = () => {\n    setError(null);\n  };\n\n  // Actions sur les résultats\n  const handleAddToJournal = () => {\n    // TODO: Implémenter l'ajout au journal\n  };\n\n  const handleModifyPortion = () => {\n    // TODO: Implémenter la modification de portion\n  };\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto space-y-6\">\n      {/* Header */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Camera className=\"w-5 h-5\" />\n            Scanner un Aliment\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          \n          {/* Mode Sélection */}\n          {!isCapturing && !scanResult && !isScanning && (\n            <ScanModeSelector\n              onCameraMode={handleCameraMode}\n              onFileUpload={handleFileUpload}\n              onDemoTest={isDevelopment ? handleDemoTest : undefined}\n              hasCameraSupport={hasCameraSupport}\n              isDevelopment={isDevelopment}\n            />\n          )}\n\n          {/* Mode Capture Caméra */}\n          <CameraCaptureMode\n            isCapturing={isCapturing}\n            onCapture={handleCameraCapture}\n            onCancel={handleCameraCancel}\n            onError={handleError}\n          />\n\n          {/* État de chargement */}\n          <ScanningProgress \n            isScanning={isScanning}\n          />\n\n          {/* Affichage des erreurs */}\n          <ErrorDisplay\n            error={error}\n            onRetry={handleErrorRetry}\n            onDismiss={handleErrorDismiss}\n          />\n        </CardContent>\n      </Card>\n\n      {/* Résultats du scan */}\n      <ScanResults\n        result={scanResult}\n        previewImage={previewImage}\n        onReset={resetScan}\n        onAddToJournal={handleAddToJournal}\n        onModifyPortion={handleModifyPortion}\n      />\n    </div>\n  );\n};\n\nexport default FoodScanner;"],"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","ignoreList":[]}