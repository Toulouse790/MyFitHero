b4e6c50735643fe723f587bfdb338095
"use strict";

/* istanbul ignore next */
function cov_2gycmwzmnn() {
  var path = "/workspaces/MyFitHero/src/features/social/hooks/useSocialModals.ts";
  var hash = "c5d341be079b4305d5e484cd5128e263671d275f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/social/hooks/useSocialModals.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "3": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 159,
          column: 1
        }
      },
      "4": {
        start: {
          line: 8,
          column: 48
        },
        end: {
          line: 8,
          column: 76
        }
      },
      "5": {
        start: {
          line: 9,
          column: 58
        },
        end: {
          line: 9,
          column: 86
        }
      },
      "6": {
        start: {
          line: 10,
          column: 44
        },
        end: {
          line: 10,
          column: 71
        }
      },
      "7": {
        start: {
          line: 12,
          column: 34
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "8": {
        start: {
          line: 19,
          column: 44
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "9": {
        start: {
          line: 30,
          column: 40
        },
        end: {
          line: 30,
          column: 65
        }
      },
      "10": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "11": {
        start: {
          line: 32,
          column: 33
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "12": {
        start: {
          line: 33,
          column: 28
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "13": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "15": {
        start: {
          line: 37,
          column: 32
        },
        end: {
          line: 37,
          column: 66
        }
      },
      "16": {
        start: {
          line: 37,
          column: 38
        },
        end: {
          line: 37,
          column: 66
        }
      },
      "17": {
        start: {
          line: 38,
          column: 33
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "18": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 38
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "20": {
        start: {
          line: 42,
          column: 25
        },
        end: {
          line: 42,
          column: 60
        }
      },
      "21": {
        start: {
          line: 42,
          column: 37
        },
        end: {
          line: 42,
          column: 60
        }
      },
      "22": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "23": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 30
        }
      },
      "24": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 26
        }
      },
      "25": {
        start: {
          line: 48,
          column: 26
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 51
        }
      },
      "27": {
        start: {
          line: 49,
          column: 28
        },
        end: {
          line: 49,
          column: 48
        }
      },
      "28": {
        start: {
          line: 51,
          column: 31
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "29": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 56
        }
      },
      "30": {
        start: {
          line: 52,
          column: 33
        },
        end: {
          line: 52,
          column: 53
        }
      },
      "31": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "32": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "33": {
        start: {
          line: 63,
          column: 31
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "34": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "35": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "36": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 24
        }
      },
      "37": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 29
        }
      },
      "38": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 26
        }
      },
      "39": {
        start: {
          line: 82,
          column: 23
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "40": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "41": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 68
        }
      },
      "42": {
        start: {
          line: 86,
          column: 41
        },
        end: {
          line: 86,
          column: 66
        }
      },
      "43": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 30
        }
      },
      "44": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 57
        }
      },
      "45": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 24
        }
      },
      "46": {
        start: {
          line: 97,
          column: 28
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "47": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "48": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 68
        }
      },
      "49": {
        start: {
          line: 101,
          column: 41
        },
        end: {
          line: 101,
          column: 66
        }
      },
      "50": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 35
        }
      },
      "51": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 62
        }
      },
      "52": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 24
        }
      },
      "53": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "54": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 114,
          column: 19
        }
      },
      "55": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 19
        }
      },
      "56": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "57": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 120,
          column: 15
        }
      },
      "58": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 67
        }
      },
      "59": {
        start: {
          line: 122,
          column: 41
        },
        end: {
          line: 122,
          column: 65
        }
      },
      "60": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 30
        }
      },
      "61": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 60
        }
      },
      "62": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 24
        }
      },
      "63": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 158,
          column: 6
        }
      },
      "64": {
        start: {
          line: 160,
          column: 0
        },
        end: {
          line: 160,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 24
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 159,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 27
          },
          end: {
            line: 32,
            column: 28
          }
        },
        loc: {
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 32,
            column: 56
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 33,
            column: 29
          }
        },
        loc: {
          start: {
            line: 33,
            column: 34
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 33
          }
        },
        loc: {
          start: {
            line: 37,
            column: 38
          },
          end: {
            line: 37,
            column: 66
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 38,
            column: 34
          }
        },
        loc: {
          start: {
            line: 38,
            column: 39
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 26
          }
        },
        loc: {
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 42,
            column: 60
          }
        },
        line: 42
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 43,
            column: 27
          }
        },
        loc: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 48,
            column: 27
          }
        },
        loc: {
          start: {
            line: 48,
            column: 36
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 49,
            column: 20
          }
        },
        loc: {
          start: {
            line: 49,
            column: 28
          },
          end: {
            line: 49,
            column: 48
          }
        },
        line: 49
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 32
          }
        },
        loc: {
          start: {
            line: 51,
            column: 41
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 25
          }
        },
        loc: {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 53
          }
        },
        line: 52
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 54,
            column: 26
          },
          end: {
            line: 54,
            column: 27
          }
        },
        loc: {
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 54
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 63,
            column: 31
          },
          end: {
            line: 63,
            column: 32
          }
        },
        loc: {
          start: {
            line: 63,
            column: 37
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 63
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 76,
            column: 23
          },
          end: {
            line: 76,
            column: 24
          }
        },
        loc: {
          start: {
            line: 76,
            column: 29
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 76
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 82,
            column: 23
          },
          end: {
            line: 82,
            column: 24
          }
        },
        loc: {
          start: {
            line: 82,
            column: 35
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 82
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 86,
            column: 30
          },
          end: {
            line: 86,
            column: 31
          }
        },
        loc: {
          start: {
            line: 86,
            column: 41
          },
          end: {
            line: 86,
            column: 66
          }
        },
        line: 86
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 97,
            column: 28
          },
          end: {
            line: 97,
            column: 29
          }
        },
        loc: {
          start: {
            line: 97,
            column: 40
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 97
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 101,
            column: 31
          }
        },
        loc: {
          start: {
            line: 101,
            column: 41
          },
          end: {
            line: 101,
            column: 66
          }
        },
        line: 101
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 112,
            column: 26
          },
          end: {
            line: 112,
            column: 27
          }
        },
        loc: {
          start: {
            line: 112,
            column: 38
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 112
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 122,
            column: 31
          }
        },
        loc: {
          start: {
            line: 122,
            column: 41
          },
          end: {
            line: 122,
            column: 65
          }
        },
        line: 122
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 114,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 114,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "1": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 30
          }
        }, {
          start: {
            line: 113,
            column: 34
          },
          end: {
            line: 113,
            column: 47
          }
        }],
        line: 113
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/social/hooks/useSocialModals.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/social/hooks/useSocialModals.ts"],
      sourcesContent: ["// src/features/social/hooks/useSocialModals.ts\nimport { useState } from 'react';\nimport { CreatePostData, CreateChallengeData } from '@/features/social/types';\n\nexport interface UseSocialModalsReturn {\n  // Modal states\n  showCreatePost: boolean;\n  showCreateChallenge: boolean;\n  showComments: string | undefined;\n  \n  // Form data\n  newPost: CreatePostData;\n  newChallenge: CreateChallengeData;\n  newComment: string;\n  \n  // Modal actions\n  openCreatePost: () => void;\n  closeCreatePost: () => void;\n  openCreateChallenge: () => void;\n  closeCreateChallenge: () => void;\n  openComments: (postId: string) => void;\n  closeComments: () => void;\n  \n  // Form actions\n  updateNewPost: (data: Partial<CreatePostData>) => void;\n  updateNewChallenge: (data: Partial<CreateChallengeData>) => void;\n  setNewComment: (comment: string) => void;\n  resetForms: () => void;\n  \n  // Submit actions\n  submitPost: () => Promise<void>;\n  submitChallenge: () => Promise<void>;\n  submitComment: () => Promise<void>;\n}\n\nexport const useSocialModals = (): UseSocialModalsReturn => {\n  // Modal states\n  const [showCreatePost, setShowCreatePost] = useState(false);\n  const [showCreateChallenge, setShowCreateChallenge] = useState(false);\n  const [showComments, setShowComments] = useState<string | null>(null);\n  \n  // Form states\n  const [newPost, setNewPost] = useState<CreatePostData>({\n    content: '',\n    post_type: 'general',\n    media_files: [],\n    achievements: [],\n    location: '',\n  });\n\n  const [newChallenge, setNewChallenge] = useState<CreateChallengeData>({\n    title: '',\n    description: '',\n    pillar: 'workout',\n    challenge_type: 'community',\n    target_value: 0,\n    target_unit: '',\n    duration_days: 7,\n    difficulty: 'medium',\n    reward_points: 100,\n  });\n\n  const [newComment, setNewComment] = useState('');\n\n  // Modal actions\n  const openCreatePost = () => setShowCreatePost(true);\n  const closeCreatePost = () => {\n    setShowCreatePost(false);\n    resetPostForm();\n  };\n\n  const openCreateChallenge = () => setShowCreateChallenge(true);\n  const closeCreateChallenge = () => {\n    setShowCreateChallenge(false);\n    resetChallengeForm();\n  };\n\n  const openComments = (postId: string) => setShowComments(postId);\n  const closeComments = () => {\n    setShowComments(null);\n    setNewComment('');\n  };\n\n  // Form actions\n  const updateNewPost = (data: Partial<CreatePostData>) => {\n    setNewPost(prev => ({ ...prev, ...data }));\n  };\n\n  const updateNewChallenge = (data: Partial<CreateChallengeData>) => {\n    setNewChallenge(prev => ({ ...prev, ...data }));\n  };\n\n  const resetPostForm = () => {\n    setNewPost({\n      content: '',\n      post_type: 'general',\n      media_files: [],\n      achievements: [],\n      location: '',\n    });\n  };\n\n  const resetChallengeForm = () => {\n    setNewChallenge({\n      title: '',\n      description: '',\n      pillar: 'workout',\n      challenge_type: 'community',\n      target_value: 0,\n      target_unit: '',\n      duration_days: 7,\n      difficulty: 'medium',\n      reward_points: 100,\n    });\n  };\n\n  const resetForms = () => {\n    resetPostForm();\n    resetChallengeForm();\n    setNewComment('');\n  };\n\n  // Submit actions\n  const submitPost = async () => {\n    try {\n      // Mock API call\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Reset form and close modal\n      closeCreatePost();\n      \n      // You would typically call a refresh function here\n      // to reload the posts with the new post\n    } catch (error: any) {\n      console.error('Error creating post:', error);\n      throw error;\n    }\n  };\n\n  const submitChallenge = async () => {\n    try {\n      // Mock API call\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Reset form and close modal\n      closeCreateChallenge();\n      \n      // You would typically call a refresh function here\n      // to reload the challenges with the new challenge\n    } catch (error: any) {\n      console.error('Error creating challenge:', error);\n      throw error;\n    }\n  };\n\n  const submitComment = async () => {\n    if (!newComment.trim() || !showComments) return;\n\n    try {\n      // Mock API call - just log for now\n      console.log('Creating comment:', {\n        postId: showComments,\n        content: newComment,\n      });\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Reset comment\n      setNewComment('');\n      \n      // You would typically call a refresh function here\n      // to reload the post comments\n    } catch (error: any) {\n      console.error('Error creating comment:', error);\n      throw error;\n    }\n  };\n\n  return {\n    // Modal states\n    showCreatePost,\n    showCreateChallenge,\n    showComments,\n    \n    // Form data\n    newPost,\n    newChallenge,\n    newComment,\n    \n    // Modal actions\n    openCreatePost,\n    closeCreatePost,\n    openCreateChallenge,\n    closeCreateChallenge,\n    openComments,\n    closeComments,\n    \n    // Form actions\n    updateNewPost,\n    updateNewChallenge,\n    setNewComment,\n    resetForms,\n    \n    // Submit actions\n    submitPost,\n    submitChallenge,\n    submitComment,\n  };\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c5d341be079b4305d5e484cd5128e263671d275f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2gycmwzmnn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2gycmwzmnn();
cov_2gycmwzmnn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2gycmwzmnn().s[1]++;
exports.useSocialModals = void 0;
// src/features/social/hooks/useSocialModals.ts
const react_1 =
/* istanbul ignore next */
(cov_2gycmwzmnn().s[2]++, require("react"));
/* istanbul ignore next */
cov_2gycmwzmnn().s[3]++;
const useSocialModals = () => {
  /* istanbul ignore next */
  cov_2gycmwzmnn().f[0]++;
  // Modal states
  const [showCreatePost, setShowCreatePost] =
  /* istanbul ignore next */
  (cov_2gycmwzmnn().s[4]++, (0, react_1.useState)(false));
  const [showCreateChallenge, setShowCreateChallenge] =
  /* istanbul ignore next */
  (cov_2gycmwzmnn().s[5]++, (0, react_1.useState)(false));
  const [showComments, setShowComments] =
  /* istanbul ignore next */
  (cov_2gycmwzmnn().s[6]++, (0, react_1.useState)(null));
  // Form states
  const [newPost, setNewPost] =
  /* istanbul ignore next */
  (cov_2gycmwzmnn().s[7]++, (0, react_1.useState)({
    content: '',
    post_type: 'general',
    media_files: [],
    achievements: [],
    location: ''
  }));
  const [newChallenge, setNewChallenge] =
  /* istanbul ignore next */
  (cov_2gycmwzmnn().s[8]++, (0, react_1.useState)({
    title: '',
    description: '',
    pillar: 'workout',
    challenge_type: 'community',
    target_value: 0,
    target_unit: '',
    duration_days: 7,
    difficulty: 'medium',
    reward_points: 100
  }));
  const [newComment, setNewComment] =
  /* istanbul ignore next */
  (cov_2gycmwzmnn().s[9]++, (0, react_1.useState)(''));
  // Modal actions
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[10]++;
  const openCreatePost = () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[1]++;
    cov_2gycmwzmnn().s[11]++;
    return setShowCreatePost(true);
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[12]++;
  const closeCreatePost = () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[2]++;
    cov_2gycmwzmnn().s[13]++;
    setShowCreatePost(false);
    /* istanbul ignore next */
    cov_2gycmwzmnn().s[14]++;
    resetPostForm();
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[15]++;
  const openCreateChallenge = () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[3]++;
    cov_2gycmwzmnn().s[16]++;
    return setShowCreateChallenge(true);
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[17]++;
  const closeCreateChallenge = () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[4]++;
    cov_2gycmwzmnn().s[18]++;
    setShowCreateChallenge(false);
    /* istanbul ignore next */
    cov_2gycmwzmnn().s[19]++;
    resetChallengeForm();
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[20]++;
  const openComments = postId => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[5]++;
    cov_2gycmwzmnn().s[21]++;
    return setShowComments(postId);
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[22]++;
  const closeComments = () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[6]++;
    cov_2gycmwzmnn().s[23]++;
    setShowComments(null);
    /* istanbul ignore next */
    cov_2gycmwzmnn().s[24]++;
    setNewComment('');
  };
  // Form actions
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[25]++;
  const updateNewPost = data => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[7]++;
    cov_2gycmwzmnn().s[26]++;
    setNewPost(prev => {
      /* istanbul ignore next */
      cov_2gycmwzmnn().f[8]++;
      cov_2gycmwzmnn().s[27]++;
      return {
        ...prev,
        ...data
      };
    });
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[28]++;
  const updateNewChallenge = data => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[9]++;
    cov_2gycmwzmnn().s[29]++;
    setNewChallenge(prev => {
      /* istanbul ignore next */
      cov_2gycmwzmnn().f[10]++;
      cov_2gycmwzmnn().s[30]++;
      return {
        ...prev,
        ...data
      };
    });
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[31]++;
  const resetPostForm = () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[11]++;
    cov_2gycmwzmnn().s[32]++;
    setNewPost({
      content: '',
      post_type: 'general',
      media_files: [],
      achievements: [],
      location: ''
    });
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[33]++;
  const resetChallengeForm = () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[12]++;
    cov_2gycmwzmnn().s[34]++;
    setNewChallenge({
      title: '',
      description: '',
      pillar: 'workout',
      challenge_type: 'community',
      target_value: 0,
      target_unit: '',
      duration_days: 7,
      difficulty: 'medium',
      reward_points: 100
    });
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[35]++;
  const resetForms = () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[13]++;
    cov_2gycmwzmnn().s[36]++;
    resetPostForm();
    /* istanbul ignore next */
    cov_2gycmwzmnn().s[37]++;
    resetChallengeForm();
    /* istanbul ignore next */
    cov_2gycmwzmnn().s[38]++;
    setNewComment('');
  };
  // Submit actions
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[39]++;
  const submitPost = async () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[14]++;
    cov_2gycmwzmnn().s[40]++;
    try {
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[41]++;
      // Mock API call
      // Simulate API delay
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2gycmwzmnn().f[15]++;
        cov_2gycmwzmnn().s[42]++;
        return setTimeout(resolve, 1000);
      });
      // Reset form and close modal
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[43]++;
      closeCreatePost();
      // You would typically call a refresh function here
      // to reload the posts with the new post
    } catch (error) {
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[44]++;
      console.error('Error creating post:', error);
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[45]++;
      throw error;
    }
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[46]++;
  const submitChallenge = async () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[16]++;
    cov_2gycmwzmnn().s[47]++;
    try {
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[48]++;
      // Mock API call
      // Simulate API delay
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2gycmwzmnn().f[17]++;
        cov_2gycmwzmnn().s[49]++;
        return setTimeout(resolve, 1000);
      });
      // Reset form and close modal
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[50]++;
      closeCreateChallenge();
      // You would typically call a refresh function here
      // to reload the challenges with the new challenge
    } catch (error) {
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[51]++;
      console.error('Error creating challenge:', error);
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[52]++;
      throw error;
    }
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[53]++;
  const submitComment = async () => {
    /* istanbul ignore next */
    cov_2gycmwzmnn().f[18]++;
    cov_2gycmwzmnn().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_2gycmwzmnn().b[1][0]++, !newComment.trim()) ||
    /* istanbul ignore next */
    (cov_2gycmwzmnn().b[1][1]++, !showComments)) {
      /* istanbul ignore next */
      cov_2gycmwzmnn().b[0][0]++;
      cov_2gycmwzmnn().s[55]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2gycmwzmnn().b[0][1]++;
    }
    cov_2gycmwzmnn().s[56]++;
    try {
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[57]++;
      // Mock API call - just log for now
      console.log('Creating comment:', {
        postId: showComments,
        content: newComment
      });
      // Simulate API delay
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[58]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2gycmwzmnn().f[19]++;
        cov_2gycmwzmnn().s[59]++;
        return setTimeout(resolve, 500);
      });
      // Reset comment
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[60]++;
      setNewComment('');
      // You would typically call a refresh function here
      // to reload the post comments
    } catch (error) {
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[61]++;
      console.error('Error creating comment:', error);
      /* istanbul ignore next */
      cov_2gycmwzmnn().s[62]++;
      throw error;
    }
  };
  /* istanbul ignore next */
  cov_2gycmwzmnn().s[63]++;
  return {
    // Modal states
    showCreatePost,
    showCreateChallenge,
    showComments,
    // Form data
    newPost,
    newChallenge,
    newComment,
    // Modal actions
    openCreatePost,
    closeCreatePost,
    openCreateChallenge,
    closeCreateChallenge,
    openComments,
    closeComments,
    // Form actions
    updateNewPost,
    updateNewChallenge,
    setNewComment,
    resetForms,
    // Submit actions
    submitPost,
    submitChallenge,
    submitComment
  };
};
/* istanbul ignore next */
cov_2gycmwzmnn().s[64]++;
exports.useSocialModals = useSocialModals;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,