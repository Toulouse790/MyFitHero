afbfd7ba112166d4ec708b6ee186bf39
"use strict";

/* istanbul ignore next */
function cov_28vj12lxbt() {
  var path = "/workspaces/MyFitHero/src/features/sleep/components/SleepFactors.tsx";
  var hash = "4f551c1f4a661ba03be2f7f938e44005d937d121";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/sleep/components/SleepFactors.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 9,
          column: 16
        },
        end: {
          line: 9,
          column: 49
        }
      },
      "6": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 46
        }
      },
      "7": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "8": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "9": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 67
        }
      },
      "10": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "11": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "13": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 66
        }
      },
      "14": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 54
        }
      },
      "15": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "16": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 74
        }
      },
      "17": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 818
        }
      },
      "18": {
        start: {
          line: 25,
          column: 94
        },
        end: {
          line: 25,
          column: 119
        }
      },
      "19": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 22
          }
        },
        loc: {
          start: {
            line: 14,
            column: 62
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 15,
            column: 30
          }
        },
        loc: {
          start: {
            line: 15,
            column: 53
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 322
          },
          end: {
            line: 23,
            column: 323
          }
        },
        loc: {
          start: {
            line: 23,
            column: 341
          },
          end: {
            line: 26,
            column: 17
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 88
          },
          end: {
            line: 25,
            column: 89
          }
        },
        loc: {
          start: {
            line: 25,
            column: 94
          },
          end: {
            line: 25,
            column: 119
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 21,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 14
          },
          end: {
            line: 20,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 14
          },
          end: {
            line: 21,
            column: 53
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 555
          },
          end: {
            line: 25,
            column: 609
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 584
          },
          end: {
            line: 25,
            column: 593
          }
        }, {
          start: {
            line: 25,
            column: 596
          },
          end: {
            line: 25,
            column: 609
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 643
          },
          end: {
            line: 25,
            column: 681
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 672
          },
          end: {
            line: 25,
            column: 675
          }
        }, {
          start: {
            line: 25,
            column: 678
          },
          end: {
            line: 25,
            column: 681
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 25,
            column: 686
          },
          end: {
            line: 25,
            column: 794
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 686
          },
          end: {
            line: 25,
            column: 696
          }
        }, {
          start: {
            line: 25,
            column: 701
          },
          end: {
            line: 25,
            column: 793
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/sleep/components/SleepFactors.tsx",
      mappings: ";;;;;;;AAAA,iDAAiD;AACjD,kDAA0B;AAC1B,+CAA2C;AAC3C,iDAA8C;AAC9C,iDAA8C;AAC9C,oEAAyE;AAOlE,MAAM,YAAY,GAAgC,CAAC,EACxD,eAAe,EACf,cAAc,EACf,EAAE,EAAE;IACH,MAAM,gBAAgB,GAAG,CAAC,MAAW,EAAE,UAAmB,EAAU,EAAE;QACpE,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,OAAO,8CAA8C,CAAC;QACxD,CAAC;QAED,OAAO,MAAM,CAAC,IAAI,KAAK,UAAU;YAC/B,CAAC,CAAC,6CAA6C;YAC/C,CAAC,CAAC,uCAAuC,CAAC;IAC9C,CAAC,CAAC;IAEF,OAAO,CACL,iCAAK,SAAS,EAAC,WAAW,aACxB,uBAAC,aAAK,8DAA+C,EACrD,gCAAK,SAAS,EAAC,iDAAiD,YAC7D,iCAAmB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;oBACzC,MAAM,UAAU,GAAG,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAEvD,OAAO,CACL,mCAEE,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,EACxC,SAAS,EAAE,qDAAqD,gBAAgB,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,YAEtG,iCAAK,SAAS,EAAC,mCAAmC,aAChD,iCAAM,SAAS,EAAC,qBAAqB,YAAE,MAAM,CAAC,IAAI,GAAQ,EAC1D,iCAAK,SAAS,EAAC,6BAA6B,aAC1C,uBAAC,aAAK,IACJ,OAAO,EAAE,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,EAC/D,SAAS,EAAC,SAAS,YAElB,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GACjC,EACP,UAAU,IAAI,CACb,uBAAC,0BAAW,IAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAC,eAAe,GAAG,CACpD,IACG,IACF,IAlBD,MAAM,CAAC,EAAE,CAmBP,CACV,CAAC;gBACJ,CAAC,CAAC,GACE,IACF,CACP,CAAC;AACJ,CAAC,CAAC;AAhDW,QAAA,YAAY,gBAgDvB",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/sleep/components/SleepFactors.tsx"],
      sourcesContent: ["// src/features/sleep/components/SleepFactors.tsx\nimport React from 'react';\nimport { CheckCircle } from 'lucide-react';\nimport { Label } from '@/components/ui/label';\nimport { Badge } from '@/components/ui/badge';\nimport { defaultSleepFactors } from '@/features/sleep/utils/sleepConfig';\n\ninterface SleepFactorsProps {\n  selectedFactors: string[];\n  onToggleFactor: (factorId: string) => void;\n}\n\nexport const SleepFactors: React.FC<SleepFactorsProps> = ({\n  selectedFactors,\n  onToggleFactor\n}) => {\n  const getFactorClasses = (factor: any, isSelected: boolean): string => {\n    if (!isSelected) {\n      return 'bg-gray-50 border-gray-200 hover:bg-gray-100';\n    }\n    \n    return factor.type === 'positive'\n      ? 'bg-green-50 border-green-300 text-green-800'\n      : 'bg-red-50 border-red-300 text-red-800';\n  };\n\n  return (\n    <div className=\"space-y-3\">\n      <Label>Facteurs ayant influenc\xE9 votre sommeil</Label>\n      <div className=\"grid grid-cols-1 gap-2 max-h-40 overflow-y-auto\">\n        {defaultSleepFactors.map((factor, index) => {\n          const isSelected = selectedFactors.includes(factor.id);\n          \n          return (\n            <button\n              key={factor.id}\n              type=\"button\"\n              onClick={() => onToggleFactor(factor.id)}\n              className={`text-left p-2 rounded-lg border transition-colors ${getFactorClasses(factor, isSelected)}`}\n            >\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm font-medium\">{factor.name}</span>\n                <div className=\"flex items-center space-x-1\">\n                  <Badge\n                    variant={factor.type === 'positive' ? 'default' : 'destructive'}\n                    className=\"text-xs\"\n                  >\n                    {factor.type === 'positive' ? '+' : '-'}\n                  </Badge>\n                  {isSelected && (\n                    <CheckCircle size={16} className=\"text-blue-600\" />\n                  )}\n                </div>\n              </div>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f551c1f4a661ba03be2f7f938e44005d937d121"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28vj12lxbt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_28vj12lxbt();
var __importDefault =
/* istanbul ignore next */
(cov_28vj12lxbt().s[0]++,
/* istanbul ignore next */
(cov_28vj12lxbt().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_28vj12lxbt().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_28vj12lxbt().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_28vj12lxbt().f[0]++;
  cov_28vj12lxbt().s[1]++;
  return /* istanbul ignore next */(cov_28vj12lxbt().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_28vj12lxbt().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_28vj12lxbt().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_28vj12lxbt().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_28vj12lxbt().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_28vj12lxbt().s[3]++;
exports.SleepFactors = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_28vj12lxbt().s[4]++, require("react/jsx-runtime"));
// src/features/sleep/components/SleepFactors.tsx
const react_1 =
/* istanbul ignore next */
(cov_28vj12lxbt().s[5]++, __importDefault(require("react")));
const lucide_react_1 =
/* istanbul ignore next */
(cov_28vj12lxbt().s[6]++, require("lucide-react"));
const label_1 =
/* istanbul ignore next */
(cov_28vj12lxbt().s[7]++, require("@/components/ui/label"));
const badge_1 =
/* istanbul ignore next */
(cov_28vj12lxbt().s[8]++, require("@/components/ui/badge"));
const sleepConfig_1 =
/* istanbul ignore next */
(cov_28vj12lxbt().s[9]++, require("@/features/sleep/utils/sleepConfig"));
/* istanbul ignore next */
cov_28vj12lxbt().s[10]++;
const SleepFactors = ({
  selectedFactors,
  onToggleFactor
}) => {
  /* istanbul ignore next */
  cov_28vj12lxbt().f[1]++;
  cov_28vj12lxbt().s[11]++;
  const getFactorClasses = (factor, isSelected) => {
    /* istanbul ignore next */
    cov_28vj12lxbt().f[2]++;
    cov_28vj12lxbt().s[12]++;
    if (!isSelected) {
      /* istanbul ignore next */
      cov_28vj12lxbt().b[3][0]++;
      cov_28vj12lxbt().s[13]++;
      return 'bg-gray-50 border-gray-200 hover:bg-gray-100';
    } else
    /* istanbul ignore next */
    {
      cov_28vj12lxbt().b[3][1]++;
    }
    cov_28vj12lxbt().s[14]++;
    return factor.type === 'positive' ?
    /* istanbul ignore next */
    (cov_28vj12lxbt().b[4][0]++, 'bg-green-50 border-green-300 text-green-800') :
    /* istanbul ignore next */
    (cov_28vj12lxbt().b[4][1]++, 'bg-red-50 border-red-300 text-red-800');
  };
  /* istanbul ignore next */
  cov_28vj12lxbt().s[15]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: "space-y-3",
    children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
      children: "Facteurs ayant influenc\u00E9 votre sommeil"
    }), (0, jsx_runtime_1.jsx)("div", {
      className: "grid grid-cols-1 gap-2 max-h-40 overflow-y-auto",
      children: sleepConfig_1.defaultSleepFactors.map((factor, index) => {
        /* istanbul ignore next */
        cov_28vj12lxbt().f[3]++;
        const isSelected =
        /* istanbul ignore next */
        (cov_28vj12lxbt().s[16]++, selectedFactors.includes(factor.id));
        /* istanbul ignore next */
        cov_28vj12lxbt().s[17]++;
        return (0, jsx_runtime_1.jsx)("button", {
          type: "button",
          onClick: () => {
            /* istanbul ignore next */
            cov_28vj12lxbt().f[4]++;
            cov_28vj12lxbt().s[18]++;
            return onToggleFactor(factor.id);
          },
          className: `text-left p-2 rounded-lg border transition-colors ${getFactorClasses(factor, isSelected)}`,
          children: (0, jsx_runtime_1.jsxs)("div", {
            className: "flex items-center justify-between",
            children: [(0, jsx_runtime_1.jsx)("span", {
              className: "text-sm font-medium",
              children: factor.name
            }), (0, jsx_runtime_1.jsxs)("div", {
              className: "flex items-center space-x-1",
              children: [(0, jsx_runtime_1.jsx)(badge_1.Badge, {
                variant: factor.type === 'positive' ?
                /* istanbul ignore next */
                (cov_28vj12lxbt().b[5][0]++, 'default') :
                /* istanbul ignore next */
                (cov_28vj12lxbt().b[5][1]++, 'destructive'),
                className: "text-xs",
                children: factor.type === 'positive' ?
                /* istanbul ignore next */
                (cov_28vj12lxbt().b[6][0]++, '+') :
                /* istanbul ignore next */
                (cov_28vj12lxbt().b[6][1]++, '-')
              }),
              /* istanbul ignore next */
              (cov_28vj12lxbt().b[7][0]++, isSelected) &&
              /* istanbul ignore next */
              (cov_28vj12lxbt().b[7][1]++, (0, jsx_runtime_1.jsx)(lucide_react_1.CheckCircle, {
                size: 16,
                className: "text-blue-600"
              }))]
            })]
          })
        }, factor.id);
      })
    })]
  });
};
/* istanbul ignore next */
cov_28vj12lxbt().s[19]++;
exports.SleepFactors = SleepFactors;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjh2ajEybHhidCIsImFjdHVhbENvdmVyYWdlIiwicmVhY3RfMSIsInMiLCJfX2ltcG9ydERlZmF1bHQiLCJyZXF1aXJlIiwibHVjaWRlX3JlYWN0XzEiLCJsYWJlbF8xIiwiYmFkZ2VfMSIsInNsZWVwQ29uZmlnXzEiLCJTbGVlcEZhY3RvcnMiLCJzZWxlY3RlZEZhY3RvcnMiLCJvblRvZ2dsZUZhY3RvciIsImYiLCJnZXRGYWN0b3JDbGFzc2VzIiwiZmFjdG9yIiwiaXNTZWxlY3RlZCIsImIiLCJ0eXBlIiwianN4X3J1bnRpbWVfMSIsImpzeHMiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsImpzeCIsIkxhYmVsIiwiZGVmYXVsdFNsZWVwRmFjdG9ycyIsIm1hcCIsImluZGV4IiwiaW5jbHVkZXMiLCJpZCIsIm9uQ2xpY2siLCJuYW1lIiwiQmFkZ2UiLCJ2YXJpYW50IiwiQ2hlY2tDaXJjbGUiLCJzaXplIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL015Rml0SGVyby9zcmMvZmVhdHVyZXMvc2xlZXAvY29tcG9uZW50cy9TbGVlcEZhY3RvcnMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9mZWF0dXJlcy9zbGVlcC9jb21wb25lbnRzL1NsZWVwRmFjdG9ycy50c3hcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDaGVja0NpcmNsZSB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG5pbXBvcnQgeyBMYWJlbCB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9sYWJlbCc7XG5pbXBvcnQgeyBCYWRnZSB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9iYWRnZSc7XG5pbXBvcnQgeyBkZWZhdWx0U2xlZXBGYWN0b3JzIH0gZnJvbSAnQC9mZWF0dXJlcy9zbGVlcC91dGlscy9zbGVlcENvbmZpZyc7XG5cbmludGVyZmFjZSBTbGVlcEZhY3RvcnNQcm9wcyB7XG4gIHNlbGVjdGVkRmFjdG9yczogc3RyaW5nW107XG4gIG9uVG9nZ2xlRmFjdG9yOiAoZmFjdG9ySWQ6IHN0cmluZykgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNvbnN0IFNsZWVwRmFjdG9yczogUmVhY3QuRkM8U2xlZXBGYWN0b3JzUHJvcHM+ID0gKHtcbiAgc2VsZWN0ZWRGYWN0b3JzLFxuICBvblRvZ2dsZUZhY3RvclxufSkgPT4ge1xuICBjb25zdCBnZXRGYWN0b3JDbGFzc2VzID0gKGZhY3RvcjogYW55LCBpc1NlbGVjdGVkOiBib29sZWFuKTogc3RyaW5nID0+IHtcbiAgICBpZiAoIWlzU2VsZWN0ZWQpIHtcbiAgICAgIHJldHVybiAnYmctZ3JheS01MCBib3JkZXItZ3JheS0yMDAgaG92ZXI6YmctZ3JheS0xMDAnO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gZmFjdG9yLnR5cGUgPT09ICdwb3NpdGl2ZSdcbiAgICAgID8gJ2JnLWdyZWVuLTUwIGJvcmRlci1ncmVlbi0zMDAgdGV4dC1ncmVlbi04MDAnXG4gICAgICA6ICdiZy1yZWQtNTAgYm9yZGVyLXJlZC0zMDAgdGV4dC1yZWQtODAwJztcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0zXCI+XG4gICAgICA8TGFiZWw+RmFjdGV1cnMgYXlhbnQgaW5mbHVlbmPDqSB2b3RyZSBzb21tZWlsPC9MYWJlbD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBnYXAtMiBtYXgtaC00MCBvdmVyZmxvdy15LWF1dG9cIj5cbiAgICAgICAge2RlZmF1bHRTbGVlcEZhY3RvcnMubWFwKChmYWN0b3IsIGluZGV4KSA9PiB7XG4gICAgICAgICAgY29uc3QgaXNTZWxlY3RlZCA9IHNlbGVjdGVkRmFjdG9ycy5pbmNsdWRlcyhmYWN0b3IuaWQpO1xuICAgICAgICAgIFxuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIGtleT17ZmFjdG9yLmlkfVxuICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25Ub2dnbGVGYWN0b3IoZmFjdG9yLmlkKX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgdGV4dC1sZWZ0IHAtMiByb3VuZGVkLWxnIGJvcmRlciB0cmFuc2l0aW9uLWNvbG9ycyAke2dldEZhY3RvckNsYXNzZXMoZmFjdG9yLCBpc1NlbGVjdGVkKX1gfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlblwiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW1cIj57ZmFjdG9yLm5hbWV9PC9zcGFuPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xXCI+XG4gICAgICAgICAgICAgICAgICA8QmFkZ2VcbiAgICAgICAgICAgICAgICAgICAgdmFyaWFudD17ZmFjdG9yLnR5cGUgPT09ICdwb3NpdGl2ZScgPyAnZGVmYXVsdCcgOiAnZGVzdHJ1Y3RpdmUnfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LXhzXCJcbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge2ZhY3Rvci50eXBlID09PSAncG9zaXRpdmUnID8gJysnIDogJy0nfVxuICAgICAgICAgICAgICAgICAgPC9CYWRnZT5cbiAgICAgICAgICAgICAgICAgIHtpc1NlbGVjdGVkICYmIChcbiAgICAgICAgICAgICAgICAgICAgPENoZWNrQ2lyY2xlIHNpemU9ezE2fSBjbGFzc05hbWU9XCJ0ZXh0LWJsdWUtNjAwXCIgLz5cbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgKTtcbiAgICAgICAgfSl9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWlCUTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBakJSO0FBQ0EsTUFBQUUsT0FBQTtBQUFBO0FBQUEsQ0FBQUYsY0FBQSxHQUFBRyxDQUFBLE9BQUFDLGVBQUEs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