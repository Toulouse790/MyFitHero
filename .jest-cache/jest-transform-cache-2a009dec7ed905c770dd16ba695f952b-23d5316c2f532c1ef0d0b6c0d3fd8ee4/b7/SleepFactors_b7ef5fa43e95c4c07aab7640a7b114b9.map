{"version":3,"names":["cov_28vj12lxbt","actualCoverage","react_1","s","__importDefault","require","lucide_react_1","label_1","badge_1","sleepConfig_1","SleepFactors","selectedFactors","onToggleFactor","f","getFactorClasses","factor","isSelected","b","type","jsx_runtime_1","jsxs","className","children","jsx","Label","defaultSleepFactors","map","index","includes","id","onClick","name","Badge","variant","CheckCircle","size","exports"],"sources":["/workspaces/MyFitHero/src/features/sleep/components/SleepFactors.tsx"],"sourcesContent":["// src/features/sleep/components/SleepFactors.tsx\nimport React from 'react';\nimport { CheckCircle } from 'lucide-react';\nimport { Label } from '@/components/ui/label';\nimport { Badge } from '@/components/ui/badge';\nimport { defaultSleepFactors } from '@/features/sleep/utils/sleepConfig';\n\ninterface SleepFactorsProps {\n  selectedFactors: string[];\n  onToggleFactor: (factorId: string) => void;\n}\n\nexport const SleepFactors: React.FC<SleepFactorsProps> = ({\n  selectedFactors,\n  onToggleFactor\n}) => {\n  const getFactorClasses = (factor: any, isSelected: boolean): string => {\n    if (!isSelected) {\n      return 'bg-gray-50 border-gray-200 hover:bg-gray-100';\n    }\n    \n    return factor.type === 'positive'\n      ? 'bg-green-50 border-green-300 text-green-800'\n      : 'bg-red-50 border-red-300 text-red-800';\n  };\n\n  return (\n    <div className=\"space-y-3\">\n      <Label>Facteurs ayant influenc√© votre sommeil</Label>\n      <div className=\"grid grid-cols-1 gap-2 max-h-40 overflow-y-auto\">\n        {defaultSleepFactors.map((factor, index) => {\n          const isSelected = selectedFactors.includes(factor.id);\n          \n          return (\n            <button\n              key={factor.id}\n              type=\"button\"\n              onClick={() => onToggleFactor(factor.id)}\n              className={`text-left p-2 rounded-lg border transition-colors ${getFactorClasses(factor, isSelected)}`}\n            >\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm font-medium\">{factor.name}</span>\n                <div className=\"flex items-center space-x-1\">\n                  <Badge\n                    variant={factor.type === 'positive' ? 'default' : 'destructive'}\n                    className=\"text-xs\"\n                  >\n                    {factor.type === 'positive' ? '+' : '-'}\n                  </Badge>\n                  {isSelected && (\n                    <CheckCircle size={16} className=\"text-blue-600\" />\n                  )}\n                </div>\n              </div>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};"],"mappingsiBQ;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAjBR;AACA,MAAAE,OAAA;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,OAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,cAAA;AAAA;AAAA,CAAAN,cAAA,GAAAG,CAAA,OAAAE,OAAA;AACA,MAAAE,OAAA;AAAA;AAAA,CAAAP,cAAA,GAAAG,CAAA,OAAAE,OAAA;AACA,MAAAG,OAAA;AAAA;AAAA,CAAAR,cAAA,GAAAG,CAAA,OAAAE,OAAA;AACA,MAAAI,aAAA;AAAA;AAAA,CAAAT,cAAA,GAAAG,CAAA,OAAAE,OAAA;AAAyE;AAAAL,cAAA,GAAAG,CAAA;AAOlE,MAAMO,YAAY,GAAgCA,CAAC;EACxDC,eAAe;EACfC;AAAc,CACf,KAAI;EAAA;EAAAZ,cAAA,GAAAa,CAAA;EAAAb,cAAA,GAAAG,CAAA;EACH,MAAMW,gBAAgB,GAAGA,CAACC,MAAW,EAAEC,UAAmB,KAAY;IAAA;IAAAhB,cAAA,GAAAa,CAAA;IAAAb,cAAA,GAAAG,CAAA;IACpE,IAAI,CAACa,UAAU,EAAE;MAAA;MAAAhB,cAAA,GAAAiB,CAAA;MAAAjB,cAAA,GAAAG,CAAA;MACf,OAAO,8CAA8C;IACvD,CAAC;IAAA;IAAA;MAAAH,cAAA,GAAAiB,CAAA;IAAA;IAAAjB,cAAA,GAAAG,CAAA;IAED,OAAOY,MAAM,CAACG,IAAI,KAAK,UAAU;IAAA;IAAA,CAAAlB,cAAA,GAAAiB,CAAA,UAC7B,6CAA6C;IAAA;IAAA,CAAAjB,cAAA,GAAAiB,CAAA,UAC7C,uCAAuC;EAC7C,CAAC;EAAC;EAAAjB,cAAA,GAAAG,CAAA;EAEF,OACE,IAAAgB,aAAA,CAAAC,IAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,QAAA,GACxB,IAAAH,aAAA,CAAAI,GAAA,EAAChB,OAAA,CAAAiB,KAAK;MAAAF,QAAA;IAAA,EAA+C,EACrD,IAAAH,aAAA,CAAAI,GAAA;MAAKF,SAAS,EAAC,iDAAiD;MAAAC,QAAA,EAC7Db,aAAA,CAAAgB,mBAAmB,CAACC,GAAG,CAAC,CAACX,MAAM,EAAEY,KAAK,KAAI;QAAA;QAAA3B,cAAA,GAAAa,CAAA;QACzC,MAAMG,UAAU;QAAA;QAAA,CAAAhB,cAAA,GAAAG,CAAA,QAAGQ,eAAe,CAACiB,QAAQ,CAACb,MAAM,CAACc,EAAE,CAAC;QAAC;QAAA7B,cAAA,GAAAG,CAAA;QAEvD,OACE,IAAAgB,aAAA,CAAAI,GAAA;UAEEL,IAAI,EAAC,QAAQ;UACbY,OAAO,EAAEA,CAAA,KAAM;YAAA;YAAA9B,cAAA,GAAAa,CAAA;YAAAb,cAAA,GAAAG,CAAA;YAAA,OAAAS,cAAc,CAACG,MAAM,CAACc,EAAE,CAAC;UAAD,CAAC;UACxCR,SAAS,EAAE,qDAAqDP,gBAAgB,CAACC,MAAM,EAAEC,UAAU,CAAC,EAAE;UAAAM,QAAA,EAEtG,IAAAH,aAAA,CAAAC,IAAA;YAAKC,SAAS,EAAC,mCAAmC;YAAAC,QAAA,GAChD,IAAAH,aAAA,CAAAI,GAAA;cAAMF,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAEP,MAAM,CAACgB;YAAI,EAAQ,EAC1D,IAAAZ,aAAA,CAAAC,IAAA;cAAKC,SAAS,EAAC,6BAA6B;cAAAC,QAAA,GAC1C,IAAAH,aAAA,CAAAI,GAAA,EAACf,OAAA,CAAAwB,KAAK;gBACJC,OAAO,EAAElB,MAAM,CAACG,IAAI,KAAK,UAAU;gBAAA;gBAAA,CAAAlB,cAAA,GAAAiB,CAAA,UAAG,SAAS;gBAAA;gBAAA,CAAAjB,cAAA,GAAAiB,CAAA,UAAG,aAAa;gBAC/DI,SAAS,EAAC,SAAS;gBAAAC,QAAA,EAElBP,MAAM,CAACG,IAAI,KAAK,UAAU;gBAAA;gBAAA,CAAAlB,cAAA,GAAAiB,CAAA,UAAG,GAAG;gBAAA;gBAAA,CAAAjB,cAAA,GAAAiB,CAAA,UAAG,GAAG;cAAA,EACjC;cACP;cAAA,CAAAjB,cAAA,GAAAiB,CAAA,UAAAD,UAAU;cAAA;cAAA,CAAAhB,cAAA,GAAAiB,CAAA,UACT,IAAAE,aAAA,CAAAI,GAAA,EAACjB,cAAA,CAAA4B,WAAW;gBAACC,IAAI,EAAE,EAAE;gBAAEd,SAAS,EAAC;cAAe,EAAG,CACpD;YAAA,EACG;UAAA;QACF,GAlBDN,MAAM,CAACc,EAAE,CAmBP;MAEb,CAAC;IAAC,EACE;EAAA,EACF;AAEV,CAAC;AAAC;AAAA7B,cAAA,GAAAG,CAAA;AAhDWiC,OAAA,CAAA1B,YAAY,GAAAA,YAAA","ignoreList":[]}