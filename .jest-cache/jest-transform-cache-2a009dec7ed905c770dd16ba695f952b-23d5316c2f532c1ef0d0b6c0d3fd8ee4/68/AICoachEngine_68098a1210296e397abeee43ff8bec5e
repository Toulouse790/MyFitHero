0aa8dece69e7ee1f6e394abfa7353d48
"use strict";

/* istanbul ignore next */
function cov_28mmbtp1iz() {
  var path = "/workspaces/MyFitHero/src/features/ai-coach/components/AICoachEngine.tsx";
  var hash = "8f53dd65c541e5958b6c346c41bc4bade9ddedea";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/ai-coach/components/AICoachEngine.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 31
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 49
        }
      },
      "6": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 11,
          column: 99
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 99
        }
      },
      "9": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 13,
          column: 95
        }
      },
      "10": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 95
        }
      },
      "11": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 124
        }
      },
      "12": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 9,
            column: 23
          }
        },
        loc: {
          start: {
            line: 9,
            column: 36
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 11,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 11,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "4": {
        loc: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 13,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 13,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "5": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 19
          }
        }, {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 46
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/ai-coach/components/AICoachEngine.tsx",
      mappings: ";;;;;;;AAAA,kDAA0B;AAMnB,MAAM,aAAa,GAAiC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;IACtE,IAAI,CAAC,IAAI;QAAE,OAAO,mFAA0C,CAAC;IAC7D,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,+EAA2C,CAAC;IAC/F,0CAA0C;IAC1C,OAAO,uFAAwC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAO,CAAC;AAC9E,CAAC,CAAC;AALW,QAAA,aAAa,iBAKxB",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/ai-coach/components/AICoachEngine.tsx"],
      sourcesContent: ["import React from 'react';\n\ninterface AICoachEngineProps {\n  user: { id: string; goals: string[]; injuries: string[] } | null;\n}\n\nexport const AICoachEngine: React.FC<AICoachEngineProps> = ({ user }) => {\n  if (!user) return <div>Erreur : utilisateur non d\xE9fini</div>;\n  if (!user.goals || user.goals.length === 0) return <div>Aucune recommandation disponible</div>;\n  // Simule une recommandation personnalis\xE9e\n  return <div>Recommandation personnalis\xE9e pour {user.goals.join(', ')}</div>;\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f53dd65c541e5958b6c346c41bc4bade9ddedea"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28mmbtp1iz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_28mmbtp1iz();
var __importDefault =
/* istanbul ignore next */
(cov_28mmbtp1iz().s[0]++,
/* istanbul ignore next */
(cov_28mmbtp1iz().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_28mmbtp1iz().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_28mmbtp1iz().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_28mmbtp1iz().f[0]++;
  cov_28mmbtp1iz().s[1]++;
  return /* istanbul ignore next */(cov_28mmbtp1iz().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_28mmbtp1iz().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_28mmbtp1iz().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_28mmbtp1iz().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_28mmbtp1iz().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_28mmbtp1iz().s[3]++;
exports.AICoachEngine = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_28mmbtp1iz().s[4]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_28mmbtp1iz().s[5]++, __importDefault(require("react")));
/* istanbul ignore next */
cov_28mmbtp1iz().s[6]++;
const AICoachEngine = ({
  user
}) => {
  /* istanbul ignore next */
  cov_28mmbtp1iz().f[1]++;
  cov_28mmbtp1iz().s[7]++;
  if (!user) {
    /* istanbul ignore next */
    cov_28mmbtp1iz().b[3][0]++;
    cov_28mmbtp1iz().s[8]++;
    return (0, jsx_runtime_1.jsx)("div", {
      children: "Erreur : utilisateur non d\u00E9fini"
    });
  } else
  /* istanbul ignore next */
  {
    cov_28mmbtp1iz().b[3][1]++;
  }
  cov_28mmbtp1iz().s[9]++;
  if (
  /* istanbul ignore next */
  (cov_28mmbtp1iz().b[5][0]++, !user.goals) ||
  /* istanbul ignore next */
  (cov_28mmbtp1iz().b[5][1]++, user.goals.length === 0)) {
    /* istanbul ignore next */
    cov_28mmbtp1iz().b[4][0]++;
    cov_28mmbtp1iz().s[10]++;
    return (0, jsx_runtime_1.jsx)("div", {
      children: "Aucune recommandation disponible"
    });
  } else
  /* istanbul ignore next */
  {
    cov_28mmbtp1iz().b[4][1]++;
  }
  // Simule une recommandation personnalisée
  cov_28mmbtp1iz().s[11]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    children: ["Recommandation personnalis\u00E9e pour ", user.goals.join(', ')]
  });
};
/* istanbul ignore next */
cov_28mmbtp1iz().s[12]++;
exports.AICoachEngine = AICoachEngine;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjhtbWJ0cDFpeiIsImFjdHVhbENvdmVyYWdlIiwicmVhY3RfMSIsInMiLCJfX2ltcG9ydERlZmF1bHQiLCJyZXF1aXJlIiwiQUlDb2FjaEVuZ2luZSIsInVzZXIiLCJmIiwiYiIsImpzeF9ydW50aW1lXzEiLCJqc3giLCJjaGlsZHJlbiIsImdvYWxzIiwibGVuZ3RoIiwianN4cyIsImpvaW4iLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvTXlGaXRIZXJvL3NyYy9mZWF0dXJlcy9haS1jb2FjaC9jb21wb25lbnRzL0FJQ29hY2hFbmdpbmUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmludGVyZmFjZSBBSUNvYWNoRW5naW5lUHJvcHMge1xuICB1c2VyOiB7IGlkOiBzdHJpbmc7IGdvYWxzOiBzdHJpbmdbXTsgaW5qdXJpZXM6IHN0cmluZ1tdIH0gfCBudWxsO1xufVxuXG5leHBvcnQgY29uc3QgQUlDb2FjaEVuZ2luZTogUmVhY3QuRkM8QUlDb2FjaEVuZ2luZVByb3BzPiA9ICh7IHVzZXIgfSkgPT4ge1xuICBpZiAoIXVzZXIpIHJldHVybiA8ZGl2PkVycmV1ciA6IHV0aWxpc2F0ZXVyIG5vbiBkw6lmaW5pPC9kaXY+O1xuICBpZiAoIXVzZXIuZ29hbHMgfHwgdXNlci5nb2Fscy5sZW5ndGggPT09IDApIHJldHVybiA8ZGl2PkF1Y3VuZSByZWNvbW1hbmRhdGlvbiBkaXNwb25pYmxlPC9kaXY+O1xuICAvLyBTaW11bGUgdW5lIHJlY29tbWFuZGF0aW9uIHBlcnNvbm5hbGlzw6llXG4gIHJldHVybiA8ZGl2PlJlY29tbWFuZGF0aW9uIHBlcnNvbm5hbGlzw6llIHBvdXIge3VzZXIuZ29hbHMuam9pbignLCAnKX08L2Rpdj47XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBV0U7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVhGLE1BQUFFLE9BQUE7QUFBQTtBQUFBLENBQUFGLGNBQUEsR0FBQUcsQ0FBQSxPQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFBMEI7QUFBQUwsY0FBQSxHQUFBRyxDQUFBO0FBTW5CLE1BQU1HLGFBQWEsR0FBaUNBLENBQUM7RUFBRUM7QUFBSSxDQUFFLEtBQUk7RUFBQTtFQUFBUCxjQUFBLEdBQUFRLENBQUE7RUFBQVIsY0FBQSxHQUFBRyxDQUFBO0VBQ3RFLElBQUksQ0FBQ0ksSUFBSSxFQUFFO0lBQUE7SUFBQVAsY0FBQSxHQUFBUyxDQUFBO0lBQUFULGNBQUEsR0FBQUcsQ0FBQTtJQUFBLE9BQU8sSUFBQU8sYUFBQSxDQUFBQyxHQUFBO01BQUFDLFFBQUE7SUFBQSxFQUEwQztFQUFBLENBQUM7RUFBQTtFQUFBO0lBQUFaLGNBQUEsR0FBQVMsQ0FBQTtFQUFBO0VBQUFULGNBQUEsR0FBQUcsQ0FBQTtFQUM3RDtFQUFJO0VBQUEsQ0FBQUgsY0FBQSxHQUFBUyxDQUFBLFdBQUNGLElBQUksQ0FBQ00sS0FBSztFQUFBO0VBQUEsQ0FBQWIsY0FBQSxHQUFBUyxDQUFBLFVBQUlGLElBQUksQ0FBQ00sS0FBSyxDQUFDQyxNQUFNLEtBQUssQ0FBQyxHQUFFO0lBQUE7SUFBQWQsY0FBQSxHQUFBUyxDQUFBO0lBQUFULGNBQUEsR0FBQUcsQ0FBQTtJQUFBLE9BQU8sSUFBQU8sYUFBQSxDQUFBQyxHQUFBO01BQUFDLFFBQUE7SUFBQSxFQUEyQztFQUFBLENBQUM7RUFBQTtFQUFBO0lBQUFaLGNBQUEsR0FBQVMsQ0FBQTtFQUFBO0VBQy9GO0VBQUFULGNBQUEsR0FBQUcsQ0FBQTtFQUNBLE9BQU8sSUFBQU8sYUFBQSxDQUFBSyxJQUFBO0lBQUFILFFBQUEsOENBQXdDTCxJQUFJLENBQUNNLEtBQUssQ0FBQ0csSUFBSSxDQUFDLElBQUksQ0FBQztFQUFBLEVBQU87QUFDN0UsQ0FBQztBQUFDO0FBQUFoQixjQUFBLEdBQUFHLENBQUE7QUFMV2MsT0FBQSxDQUFBWCxhQUFhLEdBQUFBLGFBQUEiLCJpZ25vcmVMaXN0IjpbXX0=