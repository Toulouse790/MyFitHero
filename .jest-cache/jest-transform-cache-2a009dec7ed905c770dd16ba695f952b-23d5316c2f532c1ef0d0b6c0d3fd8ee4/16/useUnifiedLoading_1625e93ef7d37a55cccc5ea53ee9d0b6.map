{"version":3,"names":["cov_exuot2mzj","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","react_1","require","useUnifiedLoading","initialLoading","state","setState","useState","isLoading","error","lastAction","undefined","startedAt","setLoading","useCallback","loading","action","prev","Date","now","setError","clearError","withLoading","asyncFn","result","errorMessage","Error","message","reset","actions","exports","useSimpleLoading","useLoadingWithError","useAsyncLoading","useFormLoading","submitForm","submitFn","onSuccess","onError","useDataLoading","data","setData","fetchData","fetchFn","refetch","useLoadingState","useLoadingError","default"],"sources":["/workspaces/MyFitHero/src/features/ai-coach/hooks/useUnifiedLoading.ts"],"sourcesContent":["// hooks/useUnifiedLoading.ts - HOOK UNIFI√â\n// üéØ Remplace les 20+ patterns de loading state dupliqu√©s\n\nimport React, { useState, useCallback } from 'react';\n\n// Interface pour l'√©tat de loading\nexport interface LoadingState {\n  isLoading: boolean;\n  error: string | undefined;\n  lastAction?: string | undefined;\n  startedAt?: number | undefined;\n}\n\n// Interface pour les actions\nexport interface LoadingActions {\n  setLoading: (loading: boolean, action?: string) => void;\n  setError: (error: string | null) => void;\n  clearError: () => void;\n  withLoading: <T>(asyncFn: () => Promise<T>, action?: string) => Promise<T>;\n  reset: () => void;\n}\n\n// Hook principal unifi√©\nexport const useUnifiedLoading = (initialLoading = false): [LoadingState, LoadingActions] => {\n  const [state, setState] = useState<LoadingState>({\n    isLoading: initialLoading,\n    error: null,\n    lastAction: undefined,\n    startedAt: undefined,\n  });\n\n  const setLoading = useCallback((loading: boolean, action?: string) => {\n    setState(prev => ({\n      ...prev,\n      isLoading: loading,\n      lastAction: action || prev.lastAction,\n      startedAt: loading ? Date.now() : undefined,\n      // Optionnel: clear error when starting loading\n      error: loading ? null : prev.error,\n    }));\n  }, []);\n\n  const setError = useCallback((error: string | null) => {\n    setState(prev => ({\n      ...prev,\n      error,\n      isLoading: false, // Stop loading on error\n    }));\n  }, []);\n\n  const clearError = useCallback(() => {\n    setState(prev => ({\n      ...prev,\n      error: null,\n    }));\n  }, []);\n\n  const withLoading = useCallback(\n    async <T>(asyncFn: () => Promise<T>, action?: string): Promise<T> => {\n      setLoading(true, action);\n      try {\n        const result = await asyncFn();\n        setLoading(false);\n        return result;\n      } catch (error: any) {\n      // Erreur silencieuse\n        const errorMessage = error instanceof Error ? error.message : 'Une erreur est survenue';\n        setError(errorMessage);\n        throw error;\n      }\n    },\n    [setLoading, setError]\n  );\n\n  const reset = useCallback(() => {\n    setState({\n      isLoading: false,\n      error: null,\n      lastAction: undefined,\n      startedAt: undefined,\n    });\n  }, []);\n\n  const actions: LoadingActions = {\n    setLoading,\n    setError,\n    clearError,\n    withLoading,\n    reset,\n  };\n\n  return [state, actions];\n};\n\n// Helpers sp√©cialis√©s pour les patterns fr√©quents\n\n// Pattern simple: juste isLoading + setLoading\nexport const useSimpleLoading = (initialLoading = false) => {\n  const [{ isLoading }, { setLoading }] = useUnifiedLoading(initialLoading);\n  return { isLoading, setLoading };\n};\n\n// Pattern avec error: isLoading + error + setError\nexport const useLoadingWithError = (initialLoading = false) => {\n  const [{ isLoading, error }, { setLoading, setError, clearError }] =\n    useUnifiedLoading(initialLoading);\n  return { isLoading, error, setLoading, setError, clearError };\n};\n\n// Pattern async: withLoading wrapper\nexport const useAsyncLoading = () => {\n  const [{ isLoading, error }, { withLoading, clearError }] = useUnifiedLoading();\n  return { isLoading, error, withLoading, clearError };\n};\n\n// Pattern pour les formulaires\nexport const useFormLoading = () => {\n  const [{ isLoading, error }, { withLoading, setError, clearError }] = useUnifiedLoading();\n\n  const submitForm = useCallback(\n    async <T>(\n      submitFn: () => Promise<T>,\n      onSuccess?: (result: T) => void,\n      onError?: (error: Error) => void\n    ) => {\n      try {\n        const result = await withLoading(submitFn, 'form_submit');\n        onSuccess?.(result);\n        return result;\n      } catch (error: any) {\n      // Erreur silencieuse\n        onError?.(error as Error);\n        throw error;\n      }\n    },\n    [withLoading]\n  );\n\n  return {\n    isLoading,\n    error,\n    submitForm,\n    setError,\n    clearError,\n  };\n};\n\n// Pattern pour les fetch de donn√©es\nexport const useDataLoading = <T>() => {\n  const [{ isLoading, error }, { withLoading, clearError }] = useUnifiedLoading();\n  const [data, setData] = useState<T | null>(null);\n\n  const fetchData = useCallback(\n    async (fetchFn: () => Promise<T>, onSuccess?: (data: T) => void) => {\n      try {\n        const result = await withLoading(fetchFn, 'data_fetch');\n        setData(result);\n        onSuccess?.(result);\n        return result;\n      } catch (error: any) {\n      // Erreur silencieuse\n        setData(null);\n        throw error;\n      }\n    },\n    [withLoading]\n  );\n\n  const refetch = useCallback(\n    (fetchFn: () => Promise<T>) => {\n      return fetchData(fetchFn);\n    },\n    [fetchData]\n  );\n\n  return {\n    data,\n    isLoading,\n    error,\n    fetchData,\n    refetch,\n    clearError,\n  };\n};\n\n// Migrations helpers pour faciliter la transition\n\n/** @deprecated Use useSimpleLoading instead */\nexport const useLoadingState = useSimpleLoading;\n\n/** @deprecated Use useLoadingWithError instead */\nexport const useLoadingError = useLoadingWithError;\n\nexport default useUnifiedLoading;\n"],"mappings":";;AAAA;AACA;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;Q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","ignoreList":[]}