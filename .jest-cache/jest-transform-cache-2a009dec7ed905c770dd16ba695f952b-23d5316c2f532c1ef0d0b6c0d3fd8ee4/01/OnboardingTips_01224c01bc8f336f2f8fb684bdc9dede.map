{"version":3,"names":["cov_qp26tcivl","actualCoverage","react_1","s","__importDefault","require","framer_motion_1","card_1","badge_1","lucide_react_1","OnboardingTips","currentStepType","b","userLevel","className","f","allTips","id","title","description","icon","jsx_runtime_1","jsx","Target","category","Star","Zap","Lightbulb","stepSpecificTips","getRelevantTips","tips","generalTips","filter","tip","slice","relevantTips","length","jsxs","motion","div","initial","opacity","y","animate","transition","duration","delay","children","map","index","x","Card","CardContent","Badge","variant","exports"],"sources":["/workspaces/MyFitHero/src/features/auth/components/OnboardingTips.tsx"],"sourcesContent":["// src/features/auth/components/OnboardingTips.tsx\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Lightbulb, Target, Star, Zap } from 'lucide-react';\n\ninterface Tip {\n  id: string;\n  title: string;\n  description: string;\n  icon: React.ReactNode;\n  category: 'beginner' | 'intermediate' | 'advanced' | 'general';\n}\n\ninterface OnboardingTipsProps {\n  currentStepType?: string;\n  userLevel?: 'beginner' | 'intermediate' | 'advanced';\n  className?: string;\n}\n\nexport const OnboardingTips: React.FC<OnboardingTipsProps> = ({\n  currentStepType = 'general',\n  userLevel = 'beginner',\n  className = ''\n}) => {\n  \n  // Base de conseils contextuels\n  const allTips: Tip[] = [\n    {\n      id: 'honest-answers',\n      title: 'Soyez honnête',\n      description: 'Plus vos réponses sont précises, mieux nous pourrons personnaliser votre expérience.',\n      icon: <Target className=\"h-4 w-4\" />,\n      category: 'general'\n    },\n    {\n      id: 'goals-realistic',\n      title: 'Objectifs réalisables',\n      description: 'Commencez petit et progressez graduellement pour des résultats durables.',\n      icon: <Star className=\"h-4 w-4\" />,\n      category: 'beginner'\n    },\n    {\n      id: 'consistency',\n      title: 'Régularité avant intensité',\n      description: '3 séances modérées par semaine valent mieux qu\\'une séance intense.',\n      icon: <Zap className=\"h-4 w-4\" />,\n      category: 'general'\n    },\n    {\n      id: 'nutrition-importance',\n      title: 'Nutrition = 70% du succès',\n      description: 'L\\'alimentation joue un rôle crucial dans l\\'atteinte de vos objectifs.',\n      icon: <Lightbulb className=\"h-4 w-4\" />,\n      category: 'intermediate'\n    }\n  ];\n\n  // Conseils spécifiques par étape\n  const stepSpecificTips = {\n    'personal-info': [\n      {\n        id: 'data-privacy',\n        title: 'Confidentialité garantie',\n        description: 'Vos données personnelles sont sécurisées et ne seront jamais partagées.',\n        icon: <Target className=\"h-4 w-4\" />,\n        category: 'general' as const\n      }\n    ],\n    'fitness-goals': [\n      {\n        id: 'multiple-goals',\n        title: 'Objectifs multiples',\n        description: 'Vous pouvez sélectionner plusieurs objectifs, nous les hiérarchiserons.',\n        icon: <Star className=\"h-4 w-4\" />,\n        category: 'general' as const\n      }\n    ],\n    'sport-selection': [\n      {\n        id: 'try-new-sports',\n        title: 'Explorez de nouveaux sports',\n        description: 'N\\'hésitez pas à essayer des activités que vous n\\'avez jamais pratiquées.',\n        icon: <Zap className=\"h-4 w-4\" />,\n        category: 'general' as const\n      }\n    ]\n  };\n\n  // Sélection des conseils à afficher\n  const getRelevantTips = (): Tip[] => {\n    let tips: Tip[] = [];\n    \n    // Ajouter les conseils spécifiques à l'étape\n    if (stepSpecificTips[currentStepType as keyof typeof stepSpecificTips]) {\n      tips = [...stepSpecificTips[currentStepType as keyof typeof stepSpecificTips]];\n    }\n    \n    // Ajouter des conseils généraux adaptés au niveau\n    const generalTips = allTips.filter(tip => \n      tip.category === 'general' || tip.category === userLevel\n    );\n    \n    tips = [...tips, ...generalTips.slice(0, 2)];\n    \n    return tips.slice(0, 3); // Limiter à 3 conseils max\n  };\n\n  const relevantTips = getRelevantTips();\n\n  if (relevantTips.length === 0) return null;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, delay: 0.2 }}\n      className={`space-y-4 ${className}`}\n    >\n      <div className=\"flex items-center space-x-2 text-muted-foreground\">\n        <Lightbulb className=\"h-4 w-4\" />\n        <span className=\"text-sm font-medium\">Conseils utiles</span>\n      </div>\n\n      <div className=\"grid gap-3\">\n        {relevantTips.map((tip, index) => (\n          <motion.div\n            key={tip.id}\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.3, delay: 0.1 * index }}\n          >\n            <Card className=\"border-l-4 border-l-primary/20 hover:border-l-primary/40 transition-colors\">\n              <CardContent className=\"p-3\">\n                <div className=\"flex items-start space-x-3\">\n                  <div className=\"flex-shrink-0 p-1.5 bg-primary/10 rounded-md text-primary\">\n                    {tip.icon}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <h4 className=\"text-sm font-medium text-foreground\">\n                      {tip.title}\n                    </h4>\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      {tip.description}\n                    </p>\n                  </div>\n                  {tip.category !== 'general' && (\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {tip.category}\n                    </Badge>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        ))}\n      </div>\n    </motion.div>\n  );\n};"],"mappings":"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","ignoreList":[]}