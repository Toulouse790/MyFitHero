{"version":3,"names":["react_1","cov_1t5rqd5n66","s","__importStar","require","card_1","badge_1","progress_1","lucide_react_1","userDataService_1","badgeService_1","StatsOverview","userId","timeframe","b","showBadges","className","f","stats","setStats","useState","isLoading","setIsLoading","badges","setBadges","useEffect","loadStats","loadRecentBadges","userStats","UserDataService","getUserStats","error","console","userBadges","BadgeService","getUserBadges","recentBadges","sort","a","Date","earned_at","getTime","slice","getTimeframeLabel","jsx_runtime_1","jsxs","Card","children","jsx","CardHeader","CardTitle","CardContent","map","i","toLowerCase","Activity","Badge","variant","total_workouts","Target","total_nutrition_logs","Zap","current_streak","Heart","badges_earned","Math","min","toFixed","Progress","value","total_sleep_hours","total_hydration_logs","length","userBadge","badge","name","id","exports"],"sources":["/workspaces/MyFitHero/src/shared/components/StatsOverview.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Activity, Target, Zap, Heart } from 'lucide-react';\nimport { UserDataService, UserStats } from '@/lib/services/userDataService';\nimport { BadgeService, UserBadge } from '@/lib/services/badgeService';\n\ninterface StatsOverviewProps {\n  userId?: string;\n  timeframe?: 'week' | 'month' | 'year';\n  showBadges?: boolean;\n  className?: string;\n}\n\nconst StatsOverview: React.FC<StatsOverviewProps> = ({\n  userId,\n  timeframe = 'week',\n  showBadges = true,\n  className = '',\n}) => {\n  const [stats, setStats] = useState<UserStats | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [badges, setBadges] = useState<UserBadge[]>([]);\n\n  useEffect(() => {\n    loadStats();\n    if (showBadges) {\n      loadRecentBadges();\n    }\n  }, [userId, timeframe]);\n\n  const loadStats = async () => {\n    if (!userId) return;\n\n    setIsLoading(true);\n    try {\n      const userStats = await UserDataService.getUserStats(userId);\n      setStats(userStats);\n    } catch (error) {\n      console.error('Erreur chargement stats:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadRecentBadges = async () => {\n    if (!userId) return;\n\n    try {\n      const userBadges = await BadgeService.getUserBadges(userId);\n      // Prendre les 3 badges les plus r√©cents\n      const recentBadges = userBadges\n        .sort((a, b) => new Date(b.earned_at).getTime() - new Date(a.earned_at).getTime())\n        .slice(0, 3);\n      setBadges(recentBadges);\n    } catch (error) {\n      console.error('Erreur chargement badges:', error);\n    }\n  };\n\n  const getTimeframeLabel = () => {\n    switch (timeframe) {\n      case 'week':\n        return 'Cette semaine';\n      case 'month':\n        return 'Ce mois';\n      case 'year':\n        return 'Cette ann√©e';\n      default:\n        return 'P√©riode';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Card className={`w-full ${className}`}>\n        <CardHeader>\n          <CardTitle>Aper√ßu des statistiques</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {[1, 2, 3, 4].map((i) => (\n              <div key={i} className=\"animate-pulse\">\n                <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n                <div className=\"h-2 bg-gray-200 rounded w-full\"></div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!stats) {\n    return (\n      <Card className={`w-full ${className}`}>\n        <CardHeader>\n          <CardTitle>Aper√ßu des statistiques</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-gray-600 text-center py-8\">\n            Aucune donn√©e disponible pour {getTimeframeLabel().toLowerCase()}\n          </p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={`w-full ${className}`}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center space-x-2\">\n          <Activity className=\"w-5 h-5\" />\n          <span>Aper√ßu des statistiques</span>\n          <Badge variant=\"outline\">{getTimeframeLabel()}</Badge>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n          {/* Activit√© physique */}\n          <div className=\"p-4 border rounded-lg\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium\">Activit√© physique</span>\n              <Activity className=\"w-4 h-4 text-green-500\" />\n            </div>\n            <div className=\"text-2xl font-bold\">{stats.total_workouts || 0}</div>\n            <div className=\"text-xs text-gray-600\">\n              s√©ances d'entra√Ænement\n            </div>\n          </div>\n\n          {/* Nutrition */}\n          <div className=\"p-4 border rounded-lg\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium\">Nutrition</span>\n              <Target className=\"w-4 h-4 text-blue-500\" />\n            </div>\n            <div className=\"text-2xl font-bold\">{stats.total_nutrition_logs || 0}</div>\n            <div className=\"text-xs text-gray-600\">\n              journaux nutrition\n            </div>\n          </div>\n\n          {/* Sommeil */}\n          {/* Sommeil */}\n          <div className=\"p-4 border rounded-lg\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium\">Constance</span>\n              <Zap className=\"w-4 h-4 text-orange-500\" />\n            </div>\n            <div className=\"text-2xl font-bold\">{stats.current_streak || 0}</div>\n            <div className=\"text-xs text-gray-600\">\n              jours cons√©cutifs\n            </div>\n          </div>\n\n          {/* Motivation */}\n          <div className=\"p-4 border rounded-lg\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium\">Motivation</span>\n              <Heart className=\"w-4 h-4 text-red-500\" />\n            </div>\n            <div className=\"text-2xl font-bold\">{stats.badges_earned || 0}</div>\n            <div className=\"text-xs text-gray-600\">\n              badges gagn√©s\n            </div>\n          </div>\n        </div>\n\n        {/* Progression par pilier */}\n        <div className=\"space-y-3 mb-6\">\n          <h4 className=\"font-medium\">Progression par pilier</h4>\n          \n          <div className=\"space-y-2\">\n            <div>\n              <div className=\"flex justify-between text-sm mb-1\">\n                <span>Entra√Ænement</span>\n                <span>{Math.min(((stats.total_workouts || 0) / 30) * 100, 100).toFixed(0)}%</span>\n              </div>\n              <Progress value={Math.min(((stats.total_workouts || 0) / 30) * 100, 100)} className=\"h-2\" />\n            </div>\n\n            <div>\n              <div className=\"flex justify-between text-sm mb-1\">\n                <span>Nutrition</span>\n                <span>{Math.min(((stats.total_nutrition_logs || 0) / 30) * 100, 100).toFixed(0)}%</span>\n              </div>\n              <Progress value={Math.min(((stats.total_nutrition_logs || 0) / 30) * 100, 100)} className=\"h-2\" />\n            </div>\n\n            <div>\n              <div className=\"flex justify-between text-sm mb-1\">\n                <span>Sommeil</span>\n                <span>{Math.min(((stats.total_sleep_hours || 0) / 240) * 100, 100).toFixed(0)}%</span>\n              </div>\n              <Progress value={Math.min(((stats.total_sleep_hours || 0) / 240) * 100, 100)} className=\"h-2\" />\n            </div>\n\n            <div>\n              <div className=\"flex justify-between text-sm mb-1\">\n                <span>Hydratation</span>\n                <span>{Math.min(((stats.total_hydration_logs || 0) / 30) * 100, 100).toFixed(0)}%</span>\n              </div>\n              <Progress value={Math.min(((stats.total_hydration_logs || 0) / 30) * 100, 100)} className=\"h-2\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Badges r√©cents */}\n        {showBadges && badges.length > 0 && (\n          <div className=\"pt-4 border-t\">\n            <h4 className=\"font-medium mb-3\">Badges r√©cents</h4>\n            <div className=\"flex space-x-2\">\n              {badges.map((userBadge) => (\n                <div key={userBadge.id} className=\"text-center\">\n                  <div className=\"w-8 h-8 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center text-white mb-1\">\n                    üèÜ\n                  </div>\n                  <span className=\"text-xs\">{userBadge.badge?.name || 'Badge'}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport { StatsOverview };"],"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","ignoreList":[]}