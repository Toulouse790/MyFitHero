{"version":3,"names":["exports","default","ResetPasswordPage","react_1","cov_1sc8l95945","s","__importStar","require","wouter_1","supabase_1","button_1","input_1","card_1","use_toast_1","f","setLocation","useLocation","password","setPassword","useState","confirmPassword","setConfirmPassword","loading","setLoading","accessToken","setAccessToken","toast","useToast","useEffect","hashParams","URLSearchParams","window","location","hash","substring","token","get","b","variant","title","description","handleSubmit","e","preventDefault","length","error","supabase","auth","updateUser","Error","message","jsx_runtime_1","jsx","className","children","jsxs","Card","CardHeader","CardTitle","CardContent","onSubmit","Input","type","placeholder","value","onChange","target","required","minLength","Button","disabled"],"sources":["/workspaces/MyFitHero/src/features/auth/pages/ResetPasswordPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { supabase } from '@/lib/supabase';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useToast } from '@/shared/hooks/use-toast';\n\nexport default function ResetPasswordPage() {\n  const [, setLocation] = useLocation();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [accessToken, setAccessToken] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    // Récupérer le token depuis l'URL\n    const hashParams = new URLSearchParams(window.location.hash.substring(1));\n    const token = hashParams.get('access_token');\n    \n    if (token) {\n      setAccessToken(token);\n    } else {\n      toast({\n        variant: 'destructive',\n        title: 'Lien invalide',\n        description: 'Le lien de réinitialisation est invalide ou a expiré.',\n      });\n      setLocation('/auth');\n    }\n  }, [setLocation, toast]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (password !== confirmPassword) {\n      toast({\n        variant: 'destructive',\n        title: 'Erreur',\n        description: 'Les mots de passe ne correspondent pas.',\n      });\n      return;\n    }\n\n    if (password.length < 6) {\n      toast({\n        variant: 'destructive',\n        title: 'Erreur',\n        description: 'Le mot de passe doit contenir au moins 6 caractères.',\n      });\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const { error } = await supabase.auth.updateUser({\n        password: password\n      });\n\n      if (error) throw error;\n\n      toast({\n        title: 'Succès !',\n        description: 'Votre mot de passe a été mis à jour avec succès.',\n      });\n\n      setLocation('/auth');\n    } catch (error: any) {\n      toast({\n        variant: 'destructive',\n        title: 'Erreur',\n        description: error instanceof Error ? error.message : 'Une erreur est survenue.',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!accessToken) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader>\n          <CardTitle className=\"text-center\">\n            Nouveau mot de passe\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <Input\n                type=\"password\"\n                placeholder=\"Nouveau mot de passe\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                minLength={6}\n              />\n            </div>\n            <div>\n              <Input\n                type=\"password\"\n                placeholder=\"Confirmer le mot de passe\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                required\n                minLength={6}\n              />\n            </div>\n            <Button \n              type=\"submit\" \n              className=\"w-full\" \n              disabled={loading}\n            >\n              {loading ? 'Mise à jour...' : 'Mettre à jour le mot de passe'}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}