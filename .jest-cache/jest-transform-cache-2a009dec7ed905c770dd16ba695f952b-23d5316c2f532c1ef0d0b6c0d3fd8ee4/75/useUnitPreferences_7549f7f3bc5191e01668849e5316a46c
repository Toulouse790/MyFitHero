c0538d26246386e310a4a92e9e31ee5e
"use strict";

/* istanbul ignore next */
function cov_280ap3814y() {
  var path = "/workspaces/MyFitHero/src/shared/hooks/useUnitPreferences.ts";
  var hash = "b98da4e850d731011e648395450b6571162cd997";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/shared/hooks/useUnitPreferences.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 27
        },
        end: {
          line: 11,
          column: 1
        }
      },
      "4": {
        start: {
          line: 12,
          column: 27
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "5": {
        start: {
          line: 13,
          column: 42
        },
        end: {
          line: 13,
          column: 83
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 25,
          column: 11
        }
      },
      "7": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "9": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 23,
          column: 13
        }
      },
      "10": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "11": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 72
        }
      },
      "12": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "13": {
        start: {
          line: 27,
          column: 31
        },
        end: {
          line: 27,
          column: 61
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 39
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 80
        }
      },
      "16": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 43
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 84
        }
      },
      "19": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 6
        }
      },
      "20": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 27
          },
          end: {
            line: 12,
            column: 28
          }
        },
        loc: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 15,
            column: 28
          }
        },
        loc: {
          start: {
            line: 15,
            column: 33
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 26,
            column: 31
          }
        },
        loc: {
          start: {
            line: 26,
            column: 43
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 31,
            column: 28
          }
        },
        loc: {
          start: {
            line: 31,
            column: 33
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 31
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/shared/hooks/useUnitPreferences.ts",
      mappings: ";;;AAAA,iCAA4C;AAU5C,MAAM,kBAAkB,GAAoB;IAC1C,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,IAAI;IACZ,QAAQ,EAAE,IAAI;IACd,MAAM,EAAE,IAAI;IACZ,WAAW,EAAE,SAAS;CACvB,CAAC;AAEK,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAAkB,kBAAkB,CAAC,CAAC;IAEpF,kCAAkC;IAClC,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACvD,IAAI,MAAM,EAAE,CAAC;YACX,IAAI,CAAC;gBACH,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACrC,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACpB,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YAC1D,CAAC;QACH,CAAC;IACH,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,iBAAiB,GAAG,CAAC,OAAiC,EAAE,EAAE;QAC9D,MAAM,cAAc,GAAG,EAAE,GAAG,WAAW,EAAE,GAAG,OAAO,EAAE,CAAC;QACtD,cAAc,CAAC,cAAc,CAAC,CAAC;QAC/B,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC;IAEF,MAAM,cAAc,GAAG,GAAG,EAAE;QAC1B,cAAc,CAAC,kBAAkB,CAAC,CAAC;QACnC,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC9E,CAAC,CAAC;IAEF,OAAO;QACL,WAAW;QACX,iBAAiB;QACjB,cAAc;KACf,CAAC;AACJ,CAAC,CAAC;AA/BW,QAAA,kBAAkB,sBA+B7B",
      names: [],
      sources: ["/workspaces/MyFitHero/src/shared/hooks/useUnitPreferences.ts"],
      sourcesContent: ["import { useState, useEffect } from 'react';\n\ninterface UnitPreferences {\n  weight: 'kg' | 'lbs';\n  height: 'cm' | 'ft' | 'ft/in';\n  distance: 'km' | 'mi';\n  liquid: 'ml' | 'fl_oz';\n  temperature: 'celsius' | 'fahrenheit';\n}\n\nconst defaultPreferences: UnitPreferences = {\n  weight: 'kg',\n  height: 'cm', \n  distance: 'km',\n  liquid: 'ml',\n  temperature: 'celsius'\n};\n\nexport const useUnitPreferences = () => {\n  const [preferences, setPreferences] = useState<UnitPreferences>(defaultPreferences);\n\n  // Load from localStorage on mount\n  useEffect(() => {\n    const stored = localStorage.getItem('unitPreferences');\n    if (stored) {\n      try {\n        setPreferences(JSON.parse(stored));\n      } catch (error: any) {\n        console.error('Error loading unit preferences:', error);\n      }\n    }\n  }, []);\n\n  const updatePreferences = (updates: Partial<UnitPreferences>) => {\n    const newPreferences = { ...preferences, ...updates };\n    setPreferences(newPreferences);\n    localStorage.setItem('unitPreferences', JSON.stringify(newPreferences));\n  };\n\n  const resetToDefault = () => {\n    setPreferences(defaultPreferences);\n    localStorage.setItem('unitPreferences', JSON.stringify(defaultPreferences));\n  };\n\n  return {\n    preferences,\n    updatePreferences,\n    resetToDefault\n  };\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b98da4e850d731011e648395450b6571162cd997"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_280ap3814y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_280ap3814y();
cov_280ap3814y().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_280ap3814y().s[1]++;
exports.useUnitPreferences = void 0;
const react_1 =
/* istanbul ignore next */
(cov_280ap3814y().s[2]++, require("react"));
const defaultPreferences =
/* istanbul ignore next */
(cov_280ap3814y().s[3]++, {
  weight: 'kg',
  height: 'cm',
  distance: 'km',
  liquid: 'ml',
  temperature: 'celsius'
});
/* istanbul ignore next */
cov_280ap3814y().s[4]++;
const useUnitPreferences = () => {
  /* istanbul ignore next */
  cov_280ap3814y().f[0]++;
  const [preferences, setPreferences] =
  /* istanbul ignore next */
  (cov_280ap3814y().s[5]++, (0, react_1.useState)(defaultPreferences));
  // Load from localStorage on mount
  /* istanbul ignore next */
  cov_280ap3814y().s[6]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_280ap3814y().f[1]++;
    const stored =
    /* istanbul ignore next */
    (cov_280ap3814y().s[7]++, localStorage.getItem('unitPreferences'));
    /* istanbul ignore next */
    cov_280ap3814y().s[8]++;
    if (stored) {
      /* istanbul ignore next */
      cov_280ap3814y().b[0][0]++;
      cov_280ap3814y().s[9]++;
      try {
        /* istanbul ignore next */
        cov_280ap3814y().s[10]++;
        setPreferences(JSON.parse(stored));
      } catch (error) {
        /* istanbul ignore next */
        cov_280ap3814y().s[11]++;
        console.error('Error loading unit preferences:', error);
      }
    } else
    /* istanbul ignore next */
    {
      cov_280ap3814y().b[0][1]++;
    }
  }, []);
  /* istanbul ignore next */
  cov_280ap3814y().s[12]++;
  const updatePreferences = updates => {
    /* istanbul ignore next */
    cov_280ap3814y().f[2]++;
    const newPreferences =
    /* istanbul ignore next */
    (cov_280ap3814y().s[13]++, {
      ...preferences,
      ...updates
    });
    /* istanbul ignore next */
    cov_280ap3814y().s[14]++;
    setPreferences(newPreferences);
    /* istanbul ignore next */
    cov_280ap3814y().s[15]++;
    localStorage.setItem('unitPreferences', JSON.stringify(newPreferences));
  };
  /* istanbul ignore next */
  cov_280ap3814y().s[16]++;
  const resetToDefault = () => {
    /* istanbul ignore next */
    cov_280ap3814y().f[3]++;
    cov_280ap3814y().s[17]++;
    setPreferences(defaultPreferences);
    /* istanbul ignore next */
    cov_280ap3814y().s[18]++;
    localStorage.setItem('unitPreferences', JSON.stringify(defaultPreferences));
  };
  /* istanbul ignore next */
  cov_280ap3814y().s[19]++;
  return {
    preferences,
    updatePreferences,
    resetToDefault
  };
};
/* istanbul ignore next */
cov_280ap3814y().s[20]++;
exports.useUnitPreferences = useUnitPreferences;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjgwYXAzODE0eSIsImFjdHVhbENvdmVyYWdlIiwicyIsInJlYWN0XzEiLCJyZXF1aXJlIiwiZGVmYXVsdFByZWZlcmVuY2VzIiwid2VpZ2h0IiwiaGVpZ2h0IiwiZGlzdGFuY2UiLCJsaXF1aWQiLCJ0ZW1wZXJhdHVyZSIsInVzZVVuaXRQcmVmZXJlbmNlcyIsImYiLCJwcmVmZXJlbmNlcyIsInNldFByZWZlcmVuY2VzIiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJzdG9yZWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiYiIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwiY29uc29sZSIsInVwZGF0ZVByZWZlcmVuY2VzIiwidXBkYXRlcyIsIm5ld1ByZWZlcmVuY2VzIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsInJlc2V0VG9EZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL015Rml0SGVyby9zcmMvc2hhcmVkL2hvb2tzL3VzZVVuaXRQcmVmZXJlbmNlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgVW5pdFByZWZlcmVuY2VzIHtcbiAgd2VpZ2h0OiAna2cnIHwgJ2xicyc7XG4gIGhlaWdodDogJ2NtJyB8ICdmdCcgfCAnZnQvaW4nO1xuICBkaXN0YW5jZTogJ2ttJyB8ICdtaSc7XG4gIGxpcXVpZDogJ21sJyB8ICdmbF9veic7XG4gIHRlbXBlcmF0dXJlOiAnY2Vsc2l1cycgfCAnZmFocmVuaGVpdCc7XG59XG5cbmNvbnN0IGRlZmF1bHRQcmVmZXJlbmNlczogVW5pdFByZWZlcmVuY2VzID0ge1xuICB3ZWlnaHQ6ICdrZycsXG4gIGhlaWdodDogJ2NtJywgXG4gIGRpc3RhbmNlOiAna20nLFxuICBsaXF1aWQ6ICdtbCcsXG4gIHRlbXBlcmF0dXJlOiAnY2Vsc2l1cydcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VVbml0UHJlZmVyZW5jZXMgPSAoKSA9PiB7XG4gIGNvbnN0IFtwcmVmZXJlbmNlcywgc2V0UHJlZmVyZW5jZXNdID0gdXNlU3RhdGU8VW5pdFByZWZlcmVuY2VzPihkZWZhdWx0UHJlZmVyZW5jZXMpO1xuXG4gIC8vIExvYWQgZnJvbSBsb2NhbFN0b3JhZ2Ugb24gbW91bnRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBzdG9yZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndW5pdFByZWZlcmVuY2VzJyk7XG4gICAgaWYgKHN0b3JlZCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0UHJlZmVyZW5jZXMoSlNPTi5wYXJzZShzdG9yZWQpKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyB1bml0IHByZWZlcmVuY2VzOicsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtdKTtcblxuICBjb25zdCB1cGRhdGVQcmVmZXJlbmNlcyA9ICh1cGRhdGVzOiBQYXJ0aWFsPFVuaXRQcmVmZXJlbmNlcz4pID0+IHtcbiAgICBjb25zdCBuZXdQcmVmZXJlbmNlcyA9IHsgLi4ucHJlZmVyZW5jZXMsIC4uLnVwZGF0ZXMgfTtcbiAgICBzZXRQcmVmZXJlbmNlcyhuZXdQcmVmZXJlbmNlcyk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VuaXRQcmVmZXJlbmNlcycsIEpTT04uc3RyaW5naWZ5KG5ld1ByZWZlcmVuY2VzKSk7XG4gIH07XG5cbiAgY29uc3QgcmVzZXRUb0RlZmF1bHQgPSAoKSA9PiB7XG4gICAgc2V0UHJlZmVyZW5jZXMoZGVmYXVsdFByZWZlcmVuY2VzKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndW5pdFByZWZlcmVuY2VzJywgSlNPTi5zdHJpbmdpZnkoZGVmYXVsdFByZWZlcmVuY2VzKSk7XG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBwcmVmZXJlbmNlcyxcbiAgICB1cGRhdGVQcmVmZXJlbmNlcyxcbiAgICByZXNldFRvRGVmYXVsdFxuICB9O1xufTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBdUJJO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFBQUEsY0FBQSxHQUFBRSxDQUFBOzs7Ozs7O0FBdkJKLE1BQUFDLE9BQUE7QUFBQTtBQUFBLENBQUFILGNBQUEsR0FBQUUsQ0FBQSxPQUFBRSxPQUFBO0FBVUEsTUFBTUMsa0JBQWtCO0FBQUE7QUFBQSxDQUFBTCxjQUFBLEdBQUFFLENBQUEsT0FBb0I7RUFDMUNJLE1BQU0sRUFBRSxJQUFJO0VBQ1pDLE1BQU0sRUFBRSxJQUFJO0VBQ1pDLFFBQVEsRUFBRSxJQUFJO0VBQ2RDLE1BQU0sRUFBRSxJQUFJO0VBQ1pDLFdBQVcsRUFBRTtDQUNkO0FBQUM7QUFBQVYsY0FBQSxHQUFBRSxDQUFBO0FBRUssTUFBTVMsa0JBQWtCLEdBQUdBLENBQUEsS0FBSztFQUFBO0VBQUFYLGNBQUEsR0FBQVksQ0FBQTtFQUNyQyxNQUFNLENBQUNDLFdBQVcsRUFBRUMsY0FBYyxDQUFDO0VBQUE7RUFBQSxDQUFBZCxjQUFBLEdBQUFFLENBQUEsT0FBRyxJQUFBQyxPQUFBLENBQUFZLFFBQVEsRUFBa0JWLGtCQUFrQixDQUFDO0VBRW5GO0VBQUE7RUFBQUwsY0FBQSxHQUFBRSxDQUFBO0VBQ0EsSUFBQUMsT0FBQSxDQUFBYSxTQUFTLEVBQUMsTUFBSztJQUFBO0lBQUFoQixjQUFBLEdBQUFZLENBQUE7SUFDYixNQUFNSyxNQUFNO0lBQUE7SUFBQSxDQUFBakIsY0FBQSxHQUFBRSxDQUFBLE9BQUdnQixZQUFZLENBQUNDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztJQUFDO0lBQUFuQixjQUFBLEdBQUFFLENBQUE7SUFDdkQsSUFBSWUsTUFBTSxFQUFFO01BQUE7TUFBQWpCLGNBQUEsR0FBQW9CLENBQUE7TUFBQXBCLGNBQUEsR0FBQUUsQ0FBQTtNQUNWLElBQUk7UUFBQTtRQUFBRixjQUFBLEdBQUFFLENBQUE7UUFDRlksY0FBYyxDQUFDTyxJQUFJLENBQUNDLEtBQUssQ0FBQ0wsTUFBTSxDQUFDLENBQUM7TUFDcEMsQ0FBQyxDQUFDLE9BQU9NLEtBQVUsRUFBRTtRQUFBO1FBQUF2QixjQUFBLEdBQUFFLENBQUE7UUFDbkJzQixPQUFPLENBQUNELEtBQUssQ0FBQyxpQ0FBaUMsRUFBRUEsS0FBSyxDQUFDO01BQ3pEO0lBQ0YsQ0FBQztJQUFBO0lBQUE7TUFBQXZCLGNBQUEsR0FBQW9CLENBQUE7SUFBQTtFQUNILENBQUMsRUFBRSxFQUFFLENBQUM7RUFBQztFQUFBcEIsY0FBQSxHQUFBRSxDQUFBO0VBRVAsTUFBTXVCLGlCQUFpQixHQUFJQyxPQUFpQyxJQUFJO0lBQUE7SUFBQTFCLGNBQUEsR0FBQVksQ0FBQTtJQUM5RCxNQUFNZSxjQUFjO0lBQUE7SUFBQSxDQUFBM0IsY0FBQSxHQUFBRSxDQUFBLFFBQUc7TUFBRSxHQUFHVyxXQUFXO01BQUUsR0FBR2E7SUFBTyxDQUFFO0lBQUM7SUFBQTFCLGNBQUEsR0FBQUUsQ0FBQTtJQUN0RFksY0FBYyxDQUFDYSxjQUFjLENBQUM7SUFBQztJQUFBM0IsY0FBQSxHQUFBRSxDQUFBO0lBQy9CZ0IsWUFBWSxDQUFDVSxPQUFPLENBQUMsaUJBQWlCLEVBQUVQLElBQUksQ0FBQ1EsU0FBUyxDQUFDRixjQUFjLENBQUMsQ0FBQztFQUN6RSxDQUFDO0VBQUM7RUFBQTNCLGNBQUEsR0FBQUUsQ0FBQTtFQUVGLE1BQU00QixjQUFjLEdBQUdBLENBQUEsS0FBSztJQUFBO0lBQUE5QixjQUFBLEdBQUFZLENBQUE7SUFBQVosY0FBQSxHQUFBRSxDQUFBO0lBQzFCWSxjQUFjLENBQUNULGtCQUFrQixDQUFDO0lBQUM7SUFBQUwsY0FBQSxHQUFBRSxDQUFBO0lBQ25DZ0IsWUFBWSxDQUFDVSxPQUFPLENBQUMsaUJBQWlCLEVBQUVQLElBQUksQ0FBQ1EsU0FBUyxDQUFDeEIsa0JBQWtCLENBQUMsQ0FBQztFQUM3RSxDQUFDO0VBQUM7RUFBQUwsY0FBQSxHQUFBRSxDQUFBO0VBRUYsT0FBTztJQUNMVyxXQUFXO0lBQ1hZLGlCQUFpQjtJQUNqQks7R0FDRDtBQUNILENBQUM7QUFBQztBQUFBOUIsY0FBQSxHQUFBRSxDQUFBO0FBL0JXNkIsT0FBQSxDQUFBcEIsa0JBQWtCLEdBQUFBLGtCQUFBIiwiaWdub3JlTGlzdCI6W119