e8f5b468e870c053a42ab13b9bee3959
"use strict";

/* istanbul ignore next */
function cov_1wmf5q8wpz() {
  var path = "/workspaces/MyFitHero/src/features/social/hooks/useSocialStore.ts";
  var hash = "62d33ffb7d6c6bb19a503b90f5d1363fb8b17c79";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/social/hooks/useSocialStore.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "4": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 117,
          column: 4
        }
      },
      "5": {
        start: {
          line: 6,
          column: 90
        },
        end: {
          line: 110,
          column: 1
        }
      },
      "6": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 12
        }
      },
      "7": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "8": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 12
        }
      },
      "9": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "10": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 43,
          column: 16
        }
      },
      "11": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 42,
          column: 16
        }
      },
      "12": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "13": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 12
        }
      },
      "14": {
        start: {
          line: 61,
          column: 22
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "15": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 69,
          column: 16
        }
      },
      "16": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 68,
          column: 16
        }
      },
      "17": {
        start: {
          line: 66,
          column: 26
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "18": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 93,
          column: 12
        }
      },
      "19": {
        start: {
          line: 90,
          column: 22
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "20": {
        start: {
          line: 91,
          column: 69
        },
        end: {
          line: 91,
          column: 131
        }
      },
      "21": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 99,
          column: 12
        }
      },
      "22": {
        start: {
          line: 96,
          column: 22
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "23": {
        start: {
          line: 97,
          column: 70
        },
        end: {
          line: 97,
          column: 94
        }
      },
      "24": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 116,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 75
          },
          end: {
            line: 6,
            column: 76
          }
        },
        loc: {
          start: {
            line: 6,
            column: 90
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 19
          },
          end: {
            line: 27,
            column: 20
          }
        },
        loc: {
          start: {
            line: 27,
            column: 38
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        },
        loc: {
          start: {
            line: 28,
            column: 22
          },
          end: {
            line: 30,
            column: 9
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 18
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 33
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 13
          }
        },
        loc: {
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 36,
            column: 9
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 39,
            column: 19
          },
          end: {
            line: 39,
            column: 20
          }
        },
        loc: {
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 43,
            column: 9
          }
        },
        line: 39
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 17
          }
        },
        loc: {
          start: {
            line: 40,
            column: 26
          },
          end: {
            line: 42,
            column: 13
          }
        },
        line: 40
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 45,
            column: 24
          }
        },
        loc: {
          start: {
            line: 45,
            column: 41
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 26
          }
        },
        loc: {
          start: {
            line: 48,
            column: 46
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 27
          }
        },
        loc: {
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 54,
            column: 18
          },
          end: {
            line: 54,
            column: 19
          }
        },
        loc: {
          start: {
            line: 54,
            column: 38
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 54
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        },
        loc: {
          start: {
            line: 57,
            column: 36
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 60,
            column: 15
          },
          end: {
            line: 60,
            column: 16
          }
        },
        loc: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 60
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        loc: {
          start: {
            line: 61,
            column: 22
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 61
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 65,
            column: 20
          }
        },
        loc: {
          start: {
            line: 65,
            column: 25
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 65
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 66,
            column: 17
          }
        },
        loc: {
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 68,
            column: 13
          }
        },
        line: 66
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 71,
            column: 14
          },
          end: {
            line: 71,
            column: 15
          }
        },
        loc: {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 71
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 74,
            column: 17
          },
          end: {
            line: 74,
            column: 18
          }
        },
        loc: {
          start: {
            line: 74,
            column: 44
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 74
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 16
          }
        },
        loc: {
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 77
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 80,
            column: 21
          },
          end: {
            line: 80,
            column: 22
          }
        },
        loc: {
          start: {
            line: 80,
            column: 46
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 80
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 20
          }
        },
        loc: {
          start: {
            line: 83,
            column: 42
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 83
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 86,
            column: 29
          },
          end: {
            line: 86,
            column: 30
          }
        },
        loc: {
          start: {
            line: 86,
            column: 62
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 86
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 89,
            column: 28
          },
          end: {
            line: 89,
            column: 29
          }
        },
        loc: {
          start: {
            line: 89,
            column: 54
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 89
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        loc: {
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 90
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 91,
            column: 51
          },
          end: {
            line: 91,
            column: 52
          }
        },
        loc: {
          start: {
            line: 91,
            column: 69
          },
          end: {
            line: 91,
            column: 131
          }
        },
        line: 91
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 95,
            column: 32
          },
          end: {
            line: 95,
            column: 33
          }
        },
        loc: {
          start: {
            line: 95,
            column: 44
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 95
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        loc: {
          start: {
            line: 96,
            column: 22
          },
          end: {
            line: 99,
            column: 9
          }
        },
        line: 96
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 97,
            column: 51
          },
          end: {
            line: 97,
            column: 52
          }
        },
        loc: {
          start: {
            line: 97,
            column: 70
          },
          end: {
            line: 97,
            column: 94
          }
        },
        line: 97
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 101,
            column: 21
          }
        },
        loc: {
          start: {
            line: 101,
            column: 48
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 101
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 104,
            column: 24
          },
          end: {
            line: 104,
            column: 25
          }
        },
        loc: {
          start: {
            line: 104,
            column: 30
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 104
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 107,
            column: 17
          },
          end: {
            line: 107,
            column: 18
          }
        },
        loc: {
          start: {
            line: 107,
            column: 43
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 107
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 112,
            column: 17
          }
        },
        loc: {
          start: {
            line: 112,
            column: 26
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 112
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 21
          },
          end: {
            line: 29,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 29,
            column: 69
          }
        }, {
          start: {
            line: 29,
            column: 72
          },
          end: {
            line: 29,
            column: 76
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 91,
            column: 69
          },
          end: {
            line: 91,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 99
          },
          end: {
            line: 91,
            column: 123
          }
        }, {
          start: {
            line: 91,
            column: 126
          },
          end: {
            line: 91,
            column: 131
          }
        }],
        line: 91
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/social/hooks/useSocialStore.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/social/hooks/useSocialStore.ts"],
      sourcesContent: ["import { Activity, Search, Users } from 'lucide-react';\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\n// Types simplifi\xE9s pour le store social\ninterface SocialProfile {\n  id: string;\n  userId: string;\n  username: string;\n  displayName: string;\n  avatar?: string;\n  sport: string;\n  level: number;\n  stats: SocialStats;\n  badges: Badge[];\n  privacy: PrivacySettings;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface SocialStats {\n  totalWorkouts: number;\n  totalDuration: number;\n  streakDays: number;\n  achievements: number;\n  ranking: number;\n  points: number;\n}\n\ninterface Badge {\n  id: string;\n  name: string;\n  description: string;\n  icon: string;\n  category: 'workout' | 'social' | 'achievement' | 'special';\n  rarity: 'common' | 'uncommon' | 'rare' | 'epic' | 'legendary';\n  unlockedAt?: string;\n}\n\ninterface PrivacySettings {\n  profileVisibility: 'public' | 'friends' | 'private';\n  workoutVisibility: 'public' | 'friends' | 'private';\n  friendsVisibility: 'public' | 'friends' | 'private';\n  allowMessages: boolean;\n  allowFriendRequests: boolean;\n}\n\ninterface Friend {\n  id: string;\n  userId: string;\n  friendId: string;\n  status: 'pending' | 'accepted' | 'blocked';\n  connectedAt: string;\n  friend: SocialProfile;\n}\n\ninterface ActivityPost {\n  id: string;\n  userId: string;\n  title: string;\n  description?: string;\n  type: 'workout' | 'achievement' | 'challenge' | 'milestone';\n  data: any;\n  media?: MediaFile[];\n  visibility: 'public' | 'friends' | 'private';\n  likes: number;\n  shares: number;\n  comments: Comment[];\n  created_at: string;\n  updated_at: string;\n}\n\ninterface MediaFile {\n  url: string;\n  type: 'image' | 'video';\n  thumbnail?: string;\n}\n\ninterface Comment {\n  id: string;\n  userId: string;\n  content: string;\n  likes: number;\n  created_at: string;\n}\n\ninterface Challenge {\n  id: string;\n  title: string;\n  description: string;\n  type: 'distance' | 'duration' | 'frequency' | 'custom';\n  target: number;\n  unit: string;\n  duration: number;\n  visibility: 'public' | 'friends' | 'invite-only';\n  maxParticipants?: number;\n  participants: ChallengeParticipant[];\n  prizes: string[];\n  rules: string[];\n  creatorId: string;\n  status: string;\n  created_at: string;\n}\n\ninterface ChallengeParticipant {\n  id: string;\n  challengeId: string;\n  userId: string;\n  progress: number;\n  rank: number;\n  completed: boolean;\n  joinedAt: string;\n}\n\ninterface SocialNotification {\n  id: string;\n  userId: string;\n  type: 'friend_request' | 'post_like' | 'comment' | 'challenge_invite';\n  title: string;\n  message: string;\n  read: boolean;\n  created_at: string;\n}\n\ninterface LeaderboardEntry {\n  userId: string;\n  username: string;\n  avatar?: string;\n  value: number;\n  rank: number;\n}\n\ninterface SocialStore {\n  // State\n  profile: SocialProfile | undefined;\n  friends: Friend[];\n  friendRequests: Friend[];\n  posts: ActivityPost[];\n  userPosts: ActivityPost[];\n  challenges: Challenge[];\n  userChallenges: Challenge[];\n  notifications: SocialNotification[];\n  unreadCount: number;\n  leaderboards: Record<string, LeaderboardEntry[]>;\n\n  loading: {\n    profile: boolean;\n    friends: boolean;\n    posts: boolean;\n    challenges: boolean;\n    notifications: boolean;\n  };\n\n  errors: Record<string, string | null>;\n\n  // Actions\n  updateProfile: (updates: Partial<SocialProfile>) => Promise<void>;\n  loadFriends: () => Promise<void>;\n  sendFriendRequest: (userId: string) => Promise<void>;\n  acceptFriendRequest: (requestId: string) => Promise<void>;\n  declineFriendRequest: (requestId: string) => Promise<void>;\n  removeFriend: (friendId: string) => Promise<void>;\n\n  createPost: (postData: any) => Promise<void>;\n  loadPosts: (filter?: any) => Promise<void>;\n  likePost: (postId: string) => Promise<void>;\n  commentPost: (postId: string, content: string) => Promise<void>;\n  sharePost: (postId: string) => Promise<void>;\n\n  createChallenge: (challengeData: any) => Promise<void>;\n  joinChallenge: (challengeId: string) => Promise<void>;\n  updateChallengeProgress: (challengeId: string, progress: number) => Promise<void>;\n\n  markNotificationAsRead: (notificationId: string) => Promise<void>;\n  markAllNotificationsAsRead: () => Promise<void>;\n\n  getLeaderboard: (category: string, period: string) => Promise<void>;\n\n  initializeRealTime: () => void;\n  searchUsers: (query: string, filters?: any) => Promise<void>;\n}\n\nexport const useSocialStore = create<SocialStore>()(\n  persist(\n    (set, get) => ({\n      // Initial state\n      profile: null,\n      friends: [],\n      friendRequests: [],\n      posts: [],\n      userPosts: [],\n      challenges: [],\n      userChallenges: [],\n      notifications: [],\n      unreadCount: 0,\n      leaderboards: {},\n\n      loading: {\n        profile: false,\n        friends: false,\n        posts: false,\n        challenges: false,\n        notifications: false,\n      },\n\n      errors: {},\n\n      // Actions - Placeholder implementations\n      updateProfile: async (updates: Partial<SocialProfile>) => {\n        set(state => ({\n          profile: state.profile ? { ...state.profile, ...updates } : null,\n        }));\n        // TODO: Implement real API call\n      },\n\n      loadFriends: async () => {\n        set(state => ({\n          loading: { ...state.loading, friends: true },\n        }));\n\n        // TODO: Implement real API call\n        // For now, just clear loading state\n        setTimeout(() => {\n          set(state => ({\n            loading: { ...state.loading, friends: false },\n          }));\n        }, 100);\n      },\n\n      sendFriendRequest: async (userId: string) => {\n        // TODO: Implement real API call\n      },\n\n      acceptFriendRequest: async (requestId: string) => {\n        // TODO: Implement real API call\n      },\n\n      declineFriendRequest: async (requestId: string) => {\n        // TODO: Implement real API call\n      },\n\n      removeFriend: async (friendId: string) => {\n        // TODO: Implement real API call\n      },\n\n      createPost: async (postData: any) => {\n        // TODO: Implement real API call\n      },\n\n      loadPosts: async (filter?: any) => {\n        set(state => ({\n          loading: { ...state.loading, posts: true },\n        }));\n\n        // TODO: Implement real API call\n        setTimeout(() => {\n          set(state => ({\n            loading: { ...state.loading, posts: false },\n          }));\n        }, 100);\n      },\n\n      likePost: async (postId: string) => {\n        // TODO: Implement real API call\n      },\n\n      commentPost: async (postId: string, content: string) => {\n        // TODO: Implement real API call\n      },\n\n      sharePost: async (postId: string) => {\n        // TODO: Implement real API call\n      },\n\n      createChallenge: async (challengeData: any) => {\n        // TODO: Implement real API call\n      },\n\n      joinChallenge: async (challengeId: string) => {\n        // TODO: Implement real API call\n      },\n\n      updateChallengeProgress: async (challengeId: string, progress: number) => {\n        // TODO: Implement real API call\n      },\n\n      markNotificationAsRead: async (notificationId: string) => {\n        set(state => ({\n          notifications: state.notifications.map((notif, index) =>\n            notif.id === notificationId ? { ...notif, read: true } : notif\n          ),\n          unreadCount: Math.max(0, state.unreadCount - 1),\n        }));\n      },\n\n      markAllNotificationsAsRead: async () => {\n        set(state => ({\n          notifications: state.notifications.map((notif, index) => ({ ...notif, read: true })),\n          unreadCount: 0,\n        }));\n      },\n\n      getLeaderboard: async (category: string, period: string) => {\n        // TODO: Implement real API call\n      },\n\n      initializeRealTime: () => {\n        // TODO: Implement real-time subscriptions\n      },\n\n      searchUsers: async (query: string, filters?: any) => {\n        // TODO: Implement real API call\n      },\n    }),\n    {\n      name: 'social-store',\n      partialize: state => ({\n        profile: state.profile,\n        friends: state.friends,\n        // Don't persist loading states or errors\n      }),\n    }\n  )\n);\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "62d33ffb7d6c6bb19a503b90f5d1363fb8b17c79"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wmf5q8wpz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wmf5q8wpz();
cov_1wmf5q8wpz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1wmf5q8wpz().s[1]++;
exports.useSocialStore = void 0;
const zustand_1 =
/* istanbul ignore next */
(cov_1wmf5q8wpz().s[2]++, require("zustand"));
const middleware_1 =
/* istanbul ignore next */
(cov_1wmf5q8wpz().s[3]++, require("zustand/middleware"));
/* istanbul ignore next */
cov_1wmf5q8wpz().s[4]++;
exports.useSocialStore = (0, zustand_1.create)()((0, middleware_1.persist)((set, get) => {
  /* istanbul ignore next */
  cov_1wmf5q8wpz().f[0]++;
  cov_1wmf5q8wpz().s[5]++;
  return {
    // Initial state
    profile: null,
    friends: [],
    friendRequests: [],
    posts: [],
    userPosts: [],
    challenges: [],
    userChallenges: [],
    notifications: [],
    unreadCount: 0,
    leaderboards: {},
    loading: {
      profile: false,
      friends: false,
      posts: false,
      challenges: false,
      notifications: false
    },
    errors: {},
    // Actions - Placeholder implementations
    updateProfile: async updates => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[1]++;
      cov_1wmf5q8wpz().s[6]++;
      set(state => {
        /* istanbul ignore next */
        cov_1wmf5q8wpz().f[2]++;
        cov_1wmf5q8wpz().s[7]++;
        return {
          profile: state.profile ?
          /* istanbul ignore next */
          (cov_1wmf5q8wpz().b[0][0]++, {
            ...state.profile,
            ...updates
          }) :
          /* istanbul ignore next */
          (cov_1wmf5q8wpz().b[0][1]++, null)
        };
      });
      // TODO: Implement real API call
    },
    loadFriends: async () => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[3]++;
      cov_1wmf5q8wpz().s[8]++;
      set(state => {
        /* istanbul ignore next */
        cov_1wmf5q8wpz().f[4]++;
        cov_1wmf5q8wpz().s[9]++;
        return {
          loading: {
            ...state.loading,
            friends: true
          }
        };
      });
      // TODO: Implement real API call
      // For now, just clear loading state
      /* istanbul ignore next */
      cov_1wmf5q8wpz().s[10]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1wmf5q8wpz().f[5]++;
        cov_1wmf5q8wpz().s[11]++;
        set(state => {
          /* istanbul ignore next */
          cov_1wmf5q8wpz().f[6]++;
          cov_1wmf5q8wpz().s[12]++;
          return {
            loading: {
              ...state.loading,
              friends: false
            }
          };
        });
      }, 100);
    },
    sendFriendRequest: async userId => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[7]++;
    } // TODO: Implement real API call
    ,
    acceptFriendRequest: async requestId => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[8]++;
    } // TODO: Implement real API call
    ,
    declineFriendRequest: async requestId => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[9]++;
    } // TODO: Implement real API call
    ,
    removeFriend: async friendId => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[10]++;
    } // TODO: Implement real API call
    ,
    createPost: async postData => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[11]++;
    } // TODO: Implement real API call
    ,
    loadPosts: async filter => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[12]++;
      cov_1wmf5q8wpz().s[13]++;
      set(state => {
        /* istanbul ignore next */
        cov_1wmf5q8wpz().f[13]++;
        cov_1wmf5q8wpz().s[14]++;
        return {
          loading: {
            ...state.loading,
            posts: true
          }
        };
      });
      // TODO: Implement real API call
      /* istanbul ignore next */
      cov_1wmf5q8wpz().s[15]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1wmf5q8wpz().f[14]++;
        cov_1wmf5q8wpz().s[16]++;
        set(state => {
          /* istanbul ignore next */
          cov_1wmf5q8wpz().f[15]++;
          cov_1wmf5q8wpz().s[17]++;
          return {
            loading: {
              ...state.loading,
              posts: false
            }
          };
        });
      }, 100);
    },
    likePost: async postId => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[16]++;
    } // TODO: Implement real API call
    ,
    commentPost: async (postId, content) => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[17]++;
    } // TODO: Implement real API call
    ,
    sharePost: async postId => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[18]++;
    } // TODO: Implement real API call
    ,
    createChallenge: async challengeData => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[19]++;
    } // TODO: Implement real API call
    ,
    joinChallenge: async challengeId => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[20]++;
    } // TODO: Implement real API call
    ,
    updateChallengeProgress: async (challengeId, progress) => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[21]++;
    } // TODO: Implement real API call
    ,
    markNotificationAsRead: async notificationId => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[22]++;
      cov_1wmf5q8wpz().s[18]++;
      set(state => {
        /* istanbul ignore next */
        cov_1wmf5q8wpz().f[23]++;
        cov_1wmf5q8wpz().s[19]++;
        return {
          notifications: state.notifications.map((notif, index) => {
            /* istanbul ignore next */
            cov_1wmf5q8wpz().f[24]++;
            cov_1wmf5q8wpz().s[20]++;
            return notif.id === notificationId ?
            /* istanbul ignore next */
            (cov_1wmf5q8wpz().b[1][0]++, {
              ...notif,
              read: true
            }) :
            /* istanbul ignore next */
            (cov_1wmf5q8wpz().b[1][1]++, notif);
          }),
          unreadCount: Math.max(0, state.unreadCount - 1)
        };
      });
    },
    markAllNotificationsAsRead: async () => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[25]++;
      cov_1wmf5q8wpz().s[21]++;
      set(state => {
        /* istanbul ignore next */
        cov_1wmf5q8wpz().f[26]++;
        cov_1wmf5q8wpz().s[22]++;
        return {
          notifications: state.notifications.map((notif, index) => {
            /* istanbul ignore next */
            cov_1wmf5q8wpz().f[27]++;
            cov_1wmf5q8wpz().s[23]++;
            return {
              ...notif,
              read: true
            };
          }),
          unreadCount: 0
        };
      });
    },
    getLeaderboard: async (category, period) => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[28]++;
    } // TODO: Implement real API call
    ,
    initializeRealTime: () => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[29]++;
    } // TODO: Implement real-time subscriptions
    ,
    searchUsers: async (query, filters) => {
      /* istanbul ignore next */
      cov_1wmf5q8wpz().f[30]++;
    } // TODO: Implement real API call
  };
}, {
  name: 'social-store',
  partialize: state => {
    /* istanbul ignore next */
    cov_1wmf5q8wpz().f[31]++;
    cov_1wmf5q8wpz().s[24]++;
    return {
      profile: state.profile,
      friends: state.friends
      // Don't persist loading states or errors
    };
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,