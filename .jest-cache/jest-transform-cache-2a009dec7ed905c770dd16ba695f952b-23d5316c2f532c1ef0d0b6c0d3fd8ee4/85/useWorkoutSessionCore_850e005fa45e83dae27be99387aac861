9b0f3552f65df5d13a08d4335fbe64c9
"use strict";

/* istanbul ignore next */
function cov_2k2udou03a() {
  var path = "/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutSessionCore.ts";
  var hash = "f861f391d0455b1a64556896d32e2b2df2d1cac0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutSessionCore.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 39
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 55
        }
      },
      "4": {
        start: {
          line: 7,
          column: 19
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "5": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "6": {
        start: {
          line: 9,
          column: 30
        },
        end: {
          line: 255,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 10,
          column: 49
        }
      },
      "8": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 11,
          column: 40
        }
      },
      "9": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 55
        }
      },
      "10": {
        start: {
          line: 13,
          column: 48
        },
        end: {
          line: 13,
          column: 95
        }
      },
      "11": {
        start: {
          line: 13,
          column: 76
        },
        end: {
          line: 13,
          column: 94
        }
      },
      "12": {
        start: {
          line: 14,
          column: 50
        },
        end: {
          line: 14,
          column: 127
        }
      },
      "13": {
        start: {
          line: 14,
          column: 78
        },
        end: {
          line: 14,
          column: 126
        }
      },
      "14": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "15": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "16": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 83
        }
      },
      "17": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "18": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "19": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 26,
          column: 69
        }
      },
      "20": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "21": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 73
        }
      },
      "22": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 61
        }
      },
      "23": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 24
        }
      },
      "24": {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "25": {
        start: {
          line: 37,
          column: 18
        },
        end: {
          line: 37,
          column: 44
        }
      },
      "26": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 21
        }
      },
      "27": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 52
        }
      },
      "28": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "29": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "30": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "31": {
        start: {
          line: 59,
          column: 38
        },
        end: {
          line: 59,
          column: 100
        }
      },
      "32": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 61,
          column: 28
        }
      },
      "33": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 28
        }
      },
      "34": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 87
        }
      },
      "35": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 60
        }
      },
      "36": {
        start: {
          line: 68,
          column: 26
        },
        end: {
          line: 75,
          column: 24
        }
      },
      "37": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 70,
          column: 19
        }
      },
      "38": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 19
        }
      },
      "39": {
        start: {
          line: 71,
          column: 31
        },
        end: {
          line: 71,
          column: 64
        }
      },
      "40": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 42
        }
      },
      "41": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 41
        }
      },
      "42": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 42
        }
      },
      "43": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 114,
          column: 52
        }
      },
      "44": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "45": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 82,
          column: 15
        }
      },
      "46": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "47": {
        start: {
          line: 85,
          column: 27
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "48": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 38
        }
      },
      "49": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 33
        }
      },
      "50": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 37
        }
      },
      "51": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 44
        }
      },
      "52": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "53": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "54": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 112,
          column: 15
        }
      },
      "55": {
        start: {
          line: 115,
          column: 25
        },
        end: {
          line: 127,
          column: 50
        }
      },
      "56": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "57": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "58": {
        start: {
          line: 118,
          column: 24
        },
        end: {
          line: 118,
          column: 63
        }
      },
      "59": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 35
        }
      },
      "60": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 34
        }
      },
      "61": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 34
        }
      },
      "62": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 41
        }
      },
      "63": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 126,
          column: 11
        }
      },
      "64": {
        start: {
          line: 128,
          column: 26
        },
        end: {
          line: 140,
          column: 50
        }
      },
      "65": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 130,
          column: 19
        }
      },
      "66": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 19
        }
      },
      "67": {
        start: {
          line: 131,
          column: 24
        },
        end: {
          line: 131,
          column: 63
        }
      },
      "68": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 35
        }
      },
      "69": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 33
        }
      },
      "70": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 34
        }
      },
      "71": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 41
        }
      },
      "72": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "73": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 187,
          column: 87
        }
      },
      "74": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 143,
          column: 19
        }
      },
      "75": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 19
        }
      },
      "76": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 144,
          column: 30
        }
      },
      "77": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 145,
          column: 109
        }
      },
      "78": {
        start: {
          line: 146,
          column: 26
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "79": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 37
        }
      },
      "80": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 34
        }
      },
      "81": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 31
        }
      },
      "82": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 43
        }
      },
      "83": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "84": {
        start: {
          line: 159,
          column: 26
        },
        end: {
          line: 159,
          column: 64
        }
      },
      "85": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "86": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 75
        }
      },
      "87": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "88": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "89": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 185,
          column: 15
        }
      },
      "90": {
        start: {
          line: 188,
          column: 26
        },
        end: {
          line: 200,
          column: 50
        }
      },
      "91": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 190,
          column: 19
        }
      },
      "92": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 19
        }
      },
      "93": {
        start: {
          line: 191,
          column: 26
        },
        end: {
          line: 191,
          column: 68
        }
      },
      "94": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 37
        }
      },
      "95": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 34
        }
      },
      "96": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 31
        }
      },
      "97": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 43
        }
      },
      "98": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "99": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 243,
          column: 43
        }
      },
      "100": {
        start: {
          line: 203,
          column: 39
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "101": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "102": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 239,
          column: 17
        }
      },
      "103": {
        start: {
          line: 206,
          column: 59
        },
        end: {
          line: 212,
          column: 33
        }
      },
      "104": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 234,
          column: 21
        }
      },
      "105": {
        start: {
          line: 214,
          column: 42
        },
        end: {
          line: 214,
          column: 49
        }
      },
      "106": {
        start: {
          line: 216,
          column: 40
        },
        end: {
          line: 230,
          column: 25
        }
      },
      "107": {
        start: {
          line: 231,
          column: 24
        },
        end: {
          line: 231,
          column: 51
        }
      },
      "108": {
        start: {
          line: 232,
          column: 24
        },
        end: {
          line: 232,
          column: 72
        }
      },
      "109": {
        start: {
          line: 233,
          column: 24
        },
        end: {
          line: 233,
          column: 50
        }
      },
      "110": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 85
        }
      },
      "111": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 33
        }
      },
      "112": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 254,
          column: 6
        }
      },
      "113": {
        start: {
          line: 256,
          column: 0
        },
        end: {
          line: 256,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 9,
            column: 31
          }
        },
        loc: {
          start: {
            line: 9,
            column: 36
          },
          end: {
            line: 255,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 70
          },
          end: {
            line: 13,
            column: 71
          }
        },
        loc: {
          start: {
            line: 13,
            column: 76
          },
          end: {
            line: 13,
            column: 94
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 72
          },
          end: {
            line: 14,
            column: 73
          }
        },
        loc: {
          start: {
            line: 14,
            column: 78
          },
          end: {
            line: 14,
            column: 126
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 16,
            column: 30
          }
        },
        loc: {
          start: {
            line: 16,
            column: 42
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 16
      },
      "4": {
        name: "loadLocalSession",
        decl: {
          start: {
            line: 24,
            column: 13
          },
          end: {
            line: 24,
            column: 29
          }
        },
        loc: {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 55
          },
          end: {
            line: 36,
            column: 56
          }
        },
        loc: {
          start: {
            line: 36,
            column: 68
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 36
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 41,
            column: 31
          }
        },
        loc: {
          start: {
            line: 41,
            column: 49
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 41
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 68,
            column: 51
          },
          end: {
            line: 68,
            column: 52
          }
        },
        loc: {
          start: {
            line: 68,
            column: 64
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 68
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 76,
            column: 50
          },
          end: {
            line: 76,
            column: 51
          }
        },
        loc: {
          start: {
            line: 76,
            column: 176
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 76
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 115,
            column: 50
          },
          end: {
            line: 115,
            column: 51
          }
        },
        loc: {
          start: {
            line: 115,
            column: 62
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 115
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 128,
            column: 51
          },
          end: {
            line: 128,
            column: 52
          }
        },
        loc: {
          start: {
            line: 128,
            column: 63
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 128
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 141,
            column: 53
          },
          end: {
            line: 141,
            column: 54
          }
        },
        loc: {
          start: {
            line: 141,
            column: 65
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 141
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 188,
            column: 51
          },
          end: {
            line: 188,
            column: 52
          }
        },
        loc: {
          start: {
            line: 188,
            column: 63
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 188
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 202,
            column: 27
          },
          end: {
            line: 202,
            column: 28
          }
        },
        loc: {
          start: {
            line: 202,
            column: 33
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 202
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 203,
            column: 39
          },
          end: {
            line: 203,
            column: 40
          }
        },
        loc: {
          start: {
            line: 203,
            column: 51
          },
          end: {
            line: 241,
            column: 9
          }
        },
        line: 203
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 78
          },
          end: {
            line: 14,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 78
          },
          end: {
            line: 14,
            column: 117
          }
        }, {
          start: {
            line: 14,
            column: 121
          },
          end: {
            line: 14,
            column: 126
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        }, {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 22,
            column: 9
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 19
          },
          end: {
            line: 27,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 27,
            column: 40
          }
        }, {
          start: {
            line: 27,
            column: 43
          },
          end: {
            line: 27,
            column: 47
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 18
          },
          end: {
            line: 37,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 18
          },
          end: {
            line: 37,
            column: 38
          }
        }, {
          start: {
            line: 37,
            column: 42
          },
          end: {
            line: 37,
            column: 44
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 61,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 61,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 70,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 70,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 76,
            column: 70
          },
          end: {
            line: 76,
            column: 171
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 169
          },
          end: {
            line: 76,
            column: 171
          }
        }],
        line: 76
      },
      "7": {
        loc: {
          start: {
            line: 76,
            column: 72
          },
          end: {
            line: 76,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 89
          },
          end: {
            line: 76,
            column: 91
          }
        }],
        line: 76
      },
      "8": {
        loc: {
          start: {
            line: 76,
            column: 93
          },
          end: {
            line: 76,
            column: 118
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 108
          },
          end: {
            line: 76,
            column: 118
          }
        }],
        line: 76
      },
      "9": {
        loc: {
          start: {
            line: 76,
            column: 120
          },
          end: {
            line: 76,
            column: 147
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 133
          },
          end: {
            line: 76,
            column: 147
          }
        }],
        line: 76
      },
      "10": {
        loc: {
          start: {
            line: 76,
            column: 149
          },
          end: {
            line: 76,
            column: 163
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 161
          },
          end: {
            line: 76,
            column: 163
          }
        }],
        line: 76
      },
      "11": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "12": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "13": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 107,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 107,
            column: 41
          }
        }, {
          start: {
            line: 107,
            column: 45
          },
          end: {
            line: 107,
            column: 56
          }
        }],
        line: 107
      },
      "14": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "15": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 130,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 130,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "16": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 143,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 143,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "17": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 142,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 142,
            column: 27
          }
        }, {
          start: {
            line: 142,
            column: 31
          },
          end: {
            line: 142,
            column: 48
          }
        }],
        line: 142
      },
      "18": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "19": {
        loc: {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 179,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 179,
            column: 41
          }
        }, {
          start: {
            line: 179,
            column: 45
          },
          end: {
            line: 179,
            column: 56
          }
        }],
        line: 179
      },
      "20": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 190,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 190,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "21": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "22": {
        loc: {
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 204,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 204,
            column: 32
          }
        }, {
          start: {
            line: 204,
            column: 36
          },
          end: {
            line: 204,
            column: 51
          }
        }],
        line: 204
      },
      "23": {
        loc: {
          start: {
            line: 213,
            column: 20
          },
          end: {
            line: 234,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 20
          },
          end: {
            line: 234,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "24": {
        loc: {
          start: {
            line: 213,
            column: 24
          },
          end: {
            line: 213,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 24
          },
          end: {
            line: 213,
            column: 30
          }
        }, {
          start: {
            line: 213,
            column: 34
          },
          end: {
            line: 213,
            column: 38
          }
        }, {
          start: {
            line: 213,
            column: 42
          },
          end: {
            line: 213,
            column: 57
          }
        }],
        line: 213
      },
      "25": {
        loc: {
          start: {
            line: 222,
            column: 39
          },
          end: {
            line: 222,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 39
          },
          end: {
            line: 222,
            column: 65
          }
        }, {
          start: {
            line: 222,
            column: 69
          },
          end: {
            line: 222,
            column: 70
          }
        }],
        line: 222
      },
      "26": {
        loc: {
          start: {
            line: 224,
            column: 36
          },
          end: {
            line: 224,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 61
          },
          end: {
            line: 224,
            column: 72
          }
        }, {
          start: {
            line: 224,
            column: 75
          },
          end: {
            line: 224,
            column: 83
          }
        }],
        line: 224
      },
      "27": {
        loc: {
          start: {
            line: 225,
            column: 44
          },
          end: {
            line: 225,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 44
          },
          end: {
            line: 225,
            column: 69
          }
        }, {
          start: {
            line: 225,
            column: 73
          },
          end: {
            line: 225,
            column: 74
          }
        }],
        line: 225
      },
      "28": {
        loc: {
          start: {
            line: 226,
            column: 42
          },
          end: {
            line: 226,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 42
          },
          end: {
            line: 226,
            column: 64
          }
        }, {
          start: {
            line: 226,
            column: 68
          },
          end: {
            line: 226,
            column: 78
          }
        }],
        line: 226
      },
      "29": {
        loc: {
          start: {
            line: 227,
            column: 40
          },
          end: {
            line: 227,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 40
          },
          end: {
            line: 227,
            column: 60
          }
        }, {
          start: {
            line: 227,
            column: 64
          },
          end: {
            line: 227,
            column: 78
          }
        }],
        line: 227
      },
      "30": {
        loc: {
          start: {
            line: 228,
            column: 39
          },
          end: {
            line: 228,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 39
          },
          end: {
            line: 228,
            column: 58
          }
        }, {
          start: {
            line: 228,
            column: 62
          },
          end: {
            line: 228,
            column: 64
          }
        }],
        line: 228
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutSessionCore.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutSessionCore.ts"],
      sourcesContent: ["import React, { useState, useEffect, useCallback } from 'react';\n// hooks/workout/useWorkoutSessionCore.ts\nimport { useToast } from '@/shared/hooks/use-toast';\nimport { appStore } from '@/store/appStore';\nimport { supabase } from '@/lib/supabase';\nimport type { WorkoutSession, WorkoutExercise, ExerciseSet } from '@/shared/types/workout.types';\n\nexport interface UseWorkoutSessionCoreReturn {\n  currentSession: WorkoutSession | undefined;\n  isSessionActive: boolean;\n  startSession: (\n    workoutName: string,\n    options?: {\n      targetDuration?: number;\n      workout_type?: WorkoutSession['workout_type'];\n      difficulty?: WorkoutSession['difficulty'];\n      exercises?: WorkoutExercise[];\n    }\n  ) => Promise<void>;\n  pauseSession: () => Promise<void>;\n  resumeSession: () => Promise<void>;\n  completeSession: () => Promise<void>;\n  cancelSession: () => Promise<void>;\n  calculateCalories: (minutes: number) => number;\n  updateSession: (updates: Partial<WorkoutSession>) => void;\n}\n\nexport const useWorkoutSessionCore = (): UseWorkoutSessionCoreReturn => {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const { appStoreUser } = appStore();\n\n  const [currentSession, setCurrentSession] = useState<WorkoutSession | null>(() =>\n    loadLocalSession()\n  );\n  const [isSessionActive, setIsSessionActive] = useState<boolean>(\n    () => loadLocalSession()?.status === 'active' || false\n  );\n\n  // Utilitaires localStorage\n  const saveLocalSession = (session: WorkoutSession | null) => {\n    if (session) {\n      localStorage.setItem('currentWorkoutSession', JSON.stringify(session));\n    } else {\n      localStorage.removeItem('currentWorkoutSession');\n    }\n  };\n\n  function loadLocalSession(): WorkoutSession | undefined {\n    try {\n      const raw = localStorage.getItem('currentWorkoutSession');\n      return raw ? (JSON.parse(raw) as WorkoutSession) : null;\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur parsing session localStorage:', error);\n      localStorage.removeItem('currentWorkoutSession');\n      return null;\n    }\n  }\n\n  const calculateCalories = useCallback(\n    (minutes: number) => {\n      const w = appStoreUser?.weight || 70;\n      const MET = 6;\n      return Math.round((w * MET * minutes) / 60);\n    },\n    [appStoreUser?.weight]\n  );\n\n  const persistToSupabase = async (session: WorkoutSession) => {\n    try {\n      // Adapter les donn\xE9es pour correspondre au sch\xE9ma Supabase\n      const workoutData = {\n        id: session.id,\n        user_id: session.user_id,\n        name: session.name,\n        workout_type: session.workout_type,\n        difficulty: session.difficulty,\n        started_at: session.startTime,\n        completed_at: session.endTime,\n        duration_minutes: Math.floor(session.duration / 60),\n        calories_burned: session.caloriesBurned,\n        exercises: session.exercises,\n        notes: session.notes,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n      };\n\n      const { error: _error } = await (supabase as any).from('workouts').upsert(workoutData);\n\n      if (error) throw error;\n      queryClient.invalidateQueries({ queryKey: ['workouts', session.user_id] });\n    } catch (e) {\n      console.error('Supabase persistence error:', e);\n    }\n  };\n\n  const updateSession = useCallback(\n    (updates: Partial<WorkoutSession>) => {\n      if (!currentSession) return;\n      const updatedSession = { ...currentSession, ...updates };\n      setCurrentSession(updatedSession);\n      saveLocalSession(updatedSession);\n      persistToSupabase(updatedSession);\n    },\n    [currentSession]\n  );\n\n  const startSession = useCallback(\n    async (\n      workoutName: string,\n      {\n        targetDuration = 30,\n        workout_type = 'strength',\n        difficulty = 'intermediate',\n        exercises = [] as WorkoutExercise[],\n      } = {}\n    ) => {\n      if (!appStoreUser?.id) {\n        toast({\n          title: 'Erreur',\n          description: 'Utilisateur non connect\xE9',\n          variant: 'destructive',\n        });\n        return;\n      }\n\n      const newSession: WorkoutSession = {\n        id: crypto.randomUUID(),\n        user_id: appStoreUser.id,\n        name: workoutName,\n        startTime: new Date().toISOString(),\n        duration: 0,\n        targetDuration,\n        status: 'active',\n        caloriesBurned: 0,\n        workout_type: workout_type as 'strength' | 'cardio' | 'flexibility' | 'sports' | 'other',\n        difficulty: difficulty as 'beginner' | 'intermediate' | 'advanced',\n        exercises,\n      };\n\n      setCurrentSession(newSession);\n      setIsSessionActive(true);\n      saveLocalSession(newSession);\n      await persistToSupabase(newSession);\n\n      toast({\n        title: 'Session d\xE9marr\xE9e',\n        description: `\xAB ${workoutName} \xBB en cours`,\n      });\n\n      // Analytics\n      if (typeof window !== 'undefined' && (window as any).gtag) {\n        (window as any).gtag('event', 'workout_started', {\n          workout_name: workoutName,\n          workout_type,\n          user_id: appStoreUser.id,\n        });\n      }\n    },\n    [appStoreUser?.id, toast, persistToSupabase]\n  );\n\n  const pauseSession = useCallback(async () => {\n    if (!currentSession) return;\n    const updated = { ...currentSession, status: 'paused' as const };\n    setCurrentSession(updated);\n    setIsSessionActive(false);\n    saveLocalSession(updated);\n    await persistToSupabase(updated);\n\n    toast({\n      title: 'Session en pause',\n      description: 'Reprenez quand vous \xEAtes pr\xEAt',\n    });\n  }, [currentSession, persistToSupabase, toast]);\n\n  const resumeSession = useCallback(async () => {\n    if (!currentSession) return;\n    const updated = { ...currentSession, status: 'active' as const };\n    setCurrentSession(updated);\n    setIsSessionActive(true);\n    saveLocalSession(updated);\n    await persistToSupabase(updated);\n\n    toast({\n      title: 'Session reprise',\n      description: 'Bon entra\xEEnement !',\n    });\n  }, [currentSession, persistToSupabase, toast]);\n\n  const completeSession = useCallback(async () => {\n    if (!currentSession || !appStoreUser?.id) return;\n\n    const end = new Date();\n    const durationSec = Math.floor(\n      (end.getTime() - new Date(currentSession.startTime).getTime()) / 1000\n    );\n\n    const completed: WorkoutSession = {\n      ...currentSession,\n      endTime: end.toISOString(),\n      duration: durationSec,\n      caloriesBurned: calculateCalories(durationSec / 60),\n      status: 'completed',\n    };\n\n    setCurrentSession(completed);\n    setIsSessionActive(false);\n    saveLocalSession(null);\n    await persistToSupabase(completed);\n\n    // Mettre \xE0 jour les stats quotidiennes\n    try {\n      const today = new Date().toISOString().split('T')[0];\n      await (supabase as any).from('daily_stats').upsert(\n        {\n          user_id: appStoreUser.id,\n          stat_date: today,\n          workouts_completed: 1,\n          total_workout_minutes: Math.floor(durationSec / 60),\n          calories_burned: completed.caloriesBurned,\n        },\n        {\n          onConflict: 'user_id,stat_date',\n        }\n      );\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur mise \xE0 jour stats quotidiennes:', error);\n    }\n\n    toast({\n      title: 'Session termin\xE9e ! \uD83C\uDF89',\n      description: `${Math.round(durationSec / 60)} min \u2022 ${completed.caloriesBurned} kcal`,\n    });\n\n    // Analytics\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'workout_completed', {\n        duration_minutes: Math.round(durationSec / 60),\n        calories_burned: completed.caloriesBurned,\n        workout_type: completed.workout_type,\n        user_id: appStoreUser.id,\n      });\n    }\n  }, [currentSession, calculateCalories, toast, appStoreUser?.id, persistToSupabase]);\n\n  const cancelSession = useCallback(async () => {\n    if (!currentSession) return;\n    const cancelled = { ...currentSession, status: 'cancelled' as const };\n    setCurrentSession(cancelled);\n    setIsSessionActive(false);\n    saveLocalSession(null);\n    await persistToSupabase(cancelled);\n\n    toast({\n      title: 'Session annul\xE9e',\n      variant: 'destructive',\n    });\n  }, [currentSession, toast, persistToSupabase]);\n\n  // Sync au montage - r\xE9cup\xE9rer session interrompue\n  useEffect(() => {\n    const loadInterruptedSession = async () => {\n      if (appStoreUser?.id && !currentSession) {\n        try {\n          const { data: _data, error: _error } = await supabase\n            .from('workouts')\n            .select('*')\n            .eq('user_id', appStoreUser.id)\n            .is('completed_at', null) // Sessions non termin\xE9es\n            .order('started_at', { ascending: false })\n            .limit(1);\n\n          if (!error && data && data.length > 0) {\n            const dbSession = data[0] as any;\n            // Convertir les donn\xE9es DB vers le format WorkoutSession\n            const session: WorkoutSession = {\n              id: dbSession.id,\n              user_id: dbSession.user_id,\n              name: dbSession.name,\n              startTime: dbSession.started_at,\n              endTime: dbSession.completed_at,\n              duration: (dbSession.duration_minutes || 0) * 60,\n              targetDuration: 30, // Valeur par d\xE9faut\n              status: dbSession.completed_at ? 'completed' : 'active',\n              caloriesBurned: dbSession.calories_burned || 0,\n              workout_type: dbSession.workout_type || 'strength',\n              difficulty: dbSession.difficulty || 'intermediate',\n              exercises: dbSession.exercises || [],\n              notes: dbSession.notes,\n            };\n\n            setCurrentSession(session);\n            setIsSessionActive(session.status === 'active');\n            saveLocalSession(session);\n          }\n        } catch (error: any) {\n      // Erreur silencieuse\n          console.error('Erreur r\xE9cup\xE9ration session interrompue:', error);\n        }\n      }\n    };\n\n    loadInterruptedSession();\n  }, [appStoreUser?.id, currentSession]);\n\n  return {\n    currentSession,\n    isSessionActive,\n    startSession,\n    pauseSession,\n    resumeSession,\n    completeSession,\n    cancelSession,\n    calculateCalories,\n    updateSession,\n  };\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f861f391d0455b1a64556896d32e2b2df2d1cac0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2k2udou03a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2k2udou03a();
cov_2k2udou03a().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2k2udou03a().s[1]++;
exports.useWorkoutSessionCore = void 0;
const react_1 =
/* istanbul ignore next */
(cov_2k2udou03a().s[2]++, require("react"));
// hooks/workout/useWorkoutSessionCore.ts
const use_toast_1 =
/* istanbul ignore next */
(cov_2k2udou03a().s[3]++, require("@/shared/hooks/use-toast"));
const appStore_1 =
/* istanbul ignore next */
(cov_2k2udou03a().s[4]++, require("@/store/appStore"));
const supabase_1 =
/* istanbul ignore next */
(cov_2k2udou03a().s[5]++, require("@/lib/supabase"));
/* istanbul ignore next */
cov_2k2udou03a().s[6]++;
const useWorkoutSessionCore = () => {
  /* istanbul ignore next */
  cov_2k2udou03a().f[0]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[7]++, (0, use_toast_1.useToast)());
  const queryClient =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[8]++, useQueryClient());
  const {
    appStoreUser
  } =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[9]++, (0, appStore_1.appStore)());
  const [currentSession, setCurrentSession] =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[10]++, (0, react_1.useState)(() => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[1]++;
    cov_2k2udou03a().s[11]++;
    return loadLocalSession();
  }));
  const [isSessionActive, setIsSessionActive] =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[12]++, (0, react_1.useState)(() => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[2]++;
    cov_2k2udou03a().s[13]++;
    return /* istanbul ignore next */(cov_2k2udou03a().b[0][0]++, loadLocalSession()?.status === 'active') ||
    /* istanbul ignore next */
    (cov_2k2udou03a().b[0][1]++, false);
  }));
  // Utilitaires localStorage
  /* istanbul ignore next */
  cov_2k2udou03a().s[14]++;
  const saveLocalSession = session => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[3]++;
    cov_2k2udou03a().s[15]++;
    if (session) {
      /* istanbul ignore next */
      cov_2k2udou03a().b[1][0]++;
      cov_2k2udou03a().s[16]++;
      localStorage.setItem('currentWorkoutSession', JSON.stringify(session));
    } else {
      /* istanbul ignore next */
      cov_2k2udou03a().b[1][1]++;
      cov_2k2udou03a().s[17]++;
      localStorage.removeItem('currentWorkoutSession');
    }
  };
  function loadLocalSession() {
    /* istanbul ignore next */
    cov_2k2udou03a().f[4]++;
    cov_2k2udou03a().s[18]++;
    try {
      const raw =
      /* istanbul ignore next */
      (cov_2k2udou03a().s[19]++, localStorage.getItem('currentWorkoutSession'));
      /* istanbul ignore next */
      cov_2k2udou03a().s[20]++;
      return raw ?
      /* istanbul ignore next */
      (cov_2k2udou03a().b[2][0]++, JSON.parse(raw)) :
      /* istanbul ignore next */
      (cov_2k2udou03a().b[2][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_2k2udou03a().s[21]++;
      // Erreur silencieuse
      console.error('Erreur parsing session localStorage:', error);
      /* istanbul ignore next */
      cov_2k2udou03a().s[22]++;
      localStorage.removeItem('currentWorkoutSession');
      /* istanbul ignore next */
      cov_2k2udou03a().s[23]++;
      return null;
    }
  }
  const calculateCalories =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[24]++, (0, react_1.useCallback)(minutes => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[5]++;
    const w =
    /* istanbul ignore next */
    (cov_2k2udou03a().s[25]++,
    /* istanbul ignore next */
    (cov_2k2udou03a().b[3][0]++, appStoreUser?.weight) ||
    /* istanbul ignore next */
    (cov_2k2udou03a().b[3][1]++, 70));
    const MET =
    /* istanbul ignore next */
    (cov_2k2udou03a().s[26]++, 6);
    /* istanbul ignore next */
    cov_2k2udou03a().s[27]++;
    return Math.round(w * MET * minutes / 60);
  }, [appStoreUser?.weight]));
  /* istanbul ignore next */
  cov_2k2udou03a().s[28]++;
  const persistToSupabase = async session => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[6]++;
    cov_2k2udou03a().s[29]++;
    try {
      // Adapter les données pour correspondre au schéma Supabase
      const workoutData =
      /* istanbul ignore next */
      (cov_2k2udou03a().s[30]++, {
        id: session.id,
        user_id: session.user_id,
        name: session.name,
        workout_type: session.workout_type,
        difficulty: session.difficulty,
        started_at: session.startTime,
        completed_at: session.endTime,
        duration_minutes: Math.floor(session.duration / 60),
        calories_burned: session.caloriesBurned,
        exercises: session.exercises,
        notes: session.notes,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      });
      const {
        error: _error
      } =
      /* istanbul ignore next */
      (cov_2k2udou03a().s[31]++, await supabase_1.supabase.from('workouts').upsert(workoutData));
      /* istanbul ignore next */
      cov_2k2udou03a().s[32]++;
      if (error) {
        /* istanbul ignore next */
        cov_2k2udou03a().b[4][0]++;
        cov_2k2udou03a().s[33]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_2k2udou03a().b[4][1]++;
      }
      cov_2k2udou03a().s[34]++;
      queryClient.invalidateQueries({
        queryKey: ['workouts', session.user_id]
      });
    } catch (e) {
      /* istanbul ignore next */
      cov_2k2udou03a().s[35]++;
      console.error('Supabase persistence error:', e);
    }
  };
  const updateSession =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[36]++, (0, react_1.useCallback)(updates => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[7]++;
    cov_2k2udou03a().s[37]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_2k2udou03a().b[5][0]++;
      cov_2k2udou03a().s[38]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2k2udou03a().b[5][1]++;
    }
    const updatedSession =
    /* istanbul ignore next */
    (cov_2k2udou03a().s[39]++, {
      ...currentSession,
      ...updates
    });
    /* istanbul ignore next */
    cov_2k2udou03a().s[40]++;
    setCurrentSession(updatedSession);
    /* istanbul ignore next */
    cov_2k2udou03a().s[41]++;
    saveLocalSession(updatedSession);
    /* istanbul ignore next */
    cov_2k2udou03a().s[42]++;
    persistToSupabase(updatedSession);
  }, [currentSession]));
  const startSession =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[43]++, (0, react_1.useCallback)(async (workoutName, {
    targetDuration =
    /* istanbul ignore next */
    (cov_2k2udou03a().b[7][0]++, 30),
    workout_type =
    /* istanbul ignore next */
    (cov_2k2udou03a().b[8][0]++, 'strength'),
    difficulty =
    /* istanbul ignore next */
    (cov_2k2udou03a().b[9][0]++, 'intermediate'),
    exercises =
    /* istanbul ignore next */
    (cov_2k2udou03a().b[10][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_2k2udou03a().b[6][0]++, {})) => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[8]++;
    cov_2k2udou03a().s[44]++;
    if (!appStoreUser?.id) {
      /* istanbul ignore next */
      cov_2k2udou03a().b[11][0]++;
      cov_2k2udou03a().s[45]++;
      toast({
        title: 'Erreur',
        description: 'Utilisateur non connecté',
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_2k2udou03a().s[46]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2k2udou03a().b[11][1]++;
    }
    const newSession =
    /* istanbul ignore next */
    (cov_2k2udou03a().s[47]++, {
      id: crypto.randomUUID(),
      user_id: appStoreUser.id,
      name: workoutName,
      startTime: new Date().toISOString(),
      duration: 0,
      targetDuration,
      status: 'active',
      caloriesBurned: 0,
      workout_type: workout_type,
      difficulty: difficulty,
      exercises
    });
    /* istanbul ignore next */
    cov_2k2udou03a().s[48]++;
    setCurrentSession(newSession);
    /* istanbul ignore next */
    cov_2k2udou03a().s[49]++;
    setIsSessionActive(true);
    /* istanbul ignore next */
    cov_2k2udou03a().s[50]++;
    saveLocalSession(newSession);
    /* istanbul ignore next */
    cov_2k2udou03a().s[51]++;
    await persistToSupabase(newSession);
    /* istanbul ignore next */
    cov_2k2udou03a().s[52]++;
    toast({
      title: 'Session démarrée',
      description: `« ${workoutName} » en cours`
    });
    // Analytics
    /* istanbul ignore next */
    cov_2k2udou03a().s[53]++;
    if (
    /* istanbul ignore next */
    (cov_2k2udou03a().b[13][0]++, typeof window !== 'undefined') &&
    /* istanbul ignore next */
    (cov_2k2udou03a().b[13][1]++, window.gtag)) {
      /* istanbul ignore next */
      cov_2k2udou03a().b[12][0]++;
      cov_2k2udou03a().s[54]++;
      window.gtag('event', 'workout_started', {
        workout_name: workoutName,
        workout_type,
        user_id: appStoreUser.id
      });
    } else
    /* istanbul ignore next */
    {
      cov_2k2udou03a().b[12][1]++;
    }
  }, [appStoreUser?.id, toast, persistToSupabase]));
  const pauseSession =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[55]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[9]++;
    cov_2k2udou03a().s[56]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_2k2udou03a().b[14][0]++;
      cov_2k2udou03a().s[57]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2k2udou03a().b[14][1]++;
    }
    const updated =
    /* istanbul ignore next */
    (cov_2k2udou03a().s[58]++, {
      ...currentSession,
      status: 'paused'
    });
    /* istanbul ignore next */
    cov_2k2udou03a().s[59]++;
    setCurrentSession(updated);
    /* istanbul ignore next */
    cov_2k2udou03a().s[60]++;
    setIsSessionActive(false);
    /* istanbul ignore next */
    cov_2k2udou03a().s[61]++;
    saveLocalSession(updated);
    /* istanbul ignore next */
    cov_2k2udou03a().s[62]++;
    await persistToSupabase(updated);
    /* istanbul ignore next */
    cov_2k2udou03a().s[63]++;
    toast({
      title: 'Session en pause',
      description: 'Reprenez quand vous êtes prêt'
    });
  }, [currentSession, persistToSupabase, toast]));
  const resumeSession =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[64]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[10]++;
    cov_2k2udou03a().s[65]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_2k2udou03a().b[15][0]++;
      cov_2k2udou03a().s[66]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2k2udou03a().b[15][1]++;
    }
    const updated =
    /* istanbul ignore next */
    (cov_2k2udou03a().s[67]++, {
      ...currentSession,
      status: 'active'
    });
    /* istanbul ignore next */
    cov_2k2udou03a().s[68]++;
    setCurrentSession(updated);
    /* istanbul ignore next */
    cov_2k2udou03a().s[69]++;
    setIsSessionActive(true);
    /* istanbul ignore next */
    cov_2k2udou03a().s[70]++;
    saveLocalSession(updated);
    /* istanbul ignore next */
    cov_2k2udou03a().s[71]++;
    await persistToSupabase(updated);
    /* istanbul ignore next */
    cov_2k2udou03a().s[72]++;
    toast({
      title: 'Session reprise',
      description: 'Bon entraînement !'
    });
  }, [currentSession, persistToSupabase, toast]));
  const completeSession =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[73]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[11]++;
    cov_2k2udou03a().s[74]++;
    if (
    /* istanbul ignore next */
    (cov_2k2udou03a().b[17][0]++, !currentSession) ||
    /* istanbul ignore next */
    (cov_2k2udou03a().b[17][1]++, !appStoreUser?.id)) {
      /* istanbul ignore next */
      cov_2k2udou03a().b[16][0]++;
      cov_2k2udou03a().s[75]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2k2udou03a().b[16][1]++;
    }
    const end =
    /* istanbul ignore next */
    (cov_2k2udou03a().s[76]++, new Date());
    const durationSec =
    /* istanbul ignore next */
    (cov_2k2udou03a().s[77]++, Math.floor((end.getTime() - new Date(currentSession.startTime).getTime()) / 1000));
    const completed =
    /* istanbul ignore next */
    (cov_2k2udou03a().s[78]++, {
      ...currentSession,
      endTime: end.toISOString(),
      duration: durationSec,
      caloriesBurned: calculateCalories(durationSec / 60),
      status: 'completed'
    });
    /* istanbul ignore next */
    cov_2k2udou03a().s[79]++;
    setCurrentSession(completed);
    /* istanbul ignore next */
    cov_2k2udou03a().s[80]++;
    setIsSessionActive(false);
    /* istanbul ignore next */
    cov_2k2udou03a().s[81]++;
    saveLocalSession(null);
    /* istanbul ignore next */
    cov_2k2udou03a().s[82]++;
    await persistToSupabase(completed);
    // Mettre à jour les stats quotidiennes
    /* istanbul ignore next */
    cov_2k2udou03a().s[83]++;
    try {
      const today =
      /* istanbul ignore next */
      (cov_2k2udou03a().s[84]++, new Date().toISOString().split('T')[0]);
      /* istanbul ignore next */
      cov_2k2udou03a().s[85]++;
      await supabase_1.supabase.from('daily_stats').upsert({
        user_id: appStoreUser.id,
        stat_date: today,
        workouts_completed: 1,
        total_workout_minutes: Math.floor(durationSec / 60),
        calories_burned: completed.caloriesBurned
      }, {
        onConflict: 'user_id,stat_date'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2k2udou03a().s[86]++;
      // Erreur silencieuse
      console.error('Erreur mise à jour stats quotidiennes:', error);
    }
    /* istanbul ignore next */
    cov_2k2udou03a().s[87]++;
    toast({
      title: 'Session terminée ! 🎉',
      description: `${Math.round(durationSec / 60)} min • ${completed.caloriesBurned} kcal`
    });
    // Analytics
    /* istanbul ignore next */
    cov_2k2udou03a().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_2k2udou03a().b[19][0]++, typeof window !== 'undefined') &&
    /* istanbul ignore next */
    (cov_2k2udou03a().b[19][1]++, window.gtag)) {
      /* istanbul ignore next */
      cov_2k2udou03a().b[18][0]++;
      cov_2k2udou03a().s[89]++;
      window.gtag('event', 'workout_completed', {
        duration_minutes: Math.round(durationSec / 60),
        calories_burned: completed.caloriesBurned,
        workout_type: completed.workout_type,
        user_id: appStoreUser.id
      });
    } else
    /* istanbul ignore next */
    {
      cov_2k2udou03a().b[18][1]++;
    }
  }, [currentSession, calculateCalories, toast, appStoreUser?.id, persistToSupabase]));
  const cancelSession =
  /* istanbul ignore next */
  (cov_2k2udou03a().s[90]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[12]++;
    cov_2k2udou03a().s[91]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_2k2udou03a().b[20][0]++;
      cov_2k2udou03a().s[92]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2k2udou03a().b[20][1]++;
    }
    const cancelled =
    /* istanbul ignore next */
    (cov_2k2udou03a().s[93]++, {
      ...currentSession,
      status: 'cancelled'
    });
    /* istanbul ignore next */
    cov_2k2udou03a().s[94]++;
    setCurrentSession(cancelled);
    /* istanbul ignore next */
    cov_2k2udou03a().s[95]++;
    setIsSessionActive(false);
    /* istanbul ignore next */
    cov_2k2udou03a().s[96]++;
    saveLocalSession(null);
    /* istanbul ignore next */
    cov_2k2udou03a().s[97]++;
    await persistToSupabase(cancelled);
    /* istanbul ignore next */
    cov_2k2udou03a().s[98]++;
    toast({
      title: 'Session annulée',
      variant: 'destructive'
    });
  }, [currentSession, toast, persistToSupabase]));
  // Sync au montage - récupérer session interrompue
  /* istanbul ignore next */
  cov_2k2udou03a().s[99]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_2k2udou03a().f[13]++;
    cov_2k2udou03a().s[100]++;
    const loadInterruptedSession = async () => {
      /* istanbul ignore next */
      cov_2k2udou03a().f[14]++;
      cov_2k2udou03a().s[101]++;
      if (
      /* istanbul ignore next */
      (cov_2k2udou03a().b[22][0]++, appStoreUser?.id) &&
      /* istanbul ignore next */
      (cov_2k2udou03a().b[22][1]++, !currentSession)) {
        /* istanbul ignore next */
        cov_2k2udou03a().b[21][0]++;
        cov_2k2udou03a().s[102]++;
        try {
          const {
            data: _data,
            error: _error
          } =
          /* istanbul ignore next */
          (cov_2k2udou03a().s[103]++, await supabase_1.supabase.from('workouts').select('*').eq('user_id', appStoreUser.id).is('completed_at', null) // Sessions non terminées
          .order('started_at', {
            ascending: false
          }).limit(1));
          /* istanbul ignore next */
          cov_2k2udou03a().s[104]++;
          if (
          /* istanbul ignore next */
          (cov_2k2udou03a().b[24][0]++, !error) &&
          /* istanbul ignore next */
          (cov_2k2udou03a().b[24][1]++, data) &&
          /* istanbul ignore next */
          (cov_2k2udou03a().b[24][2]++, data.length > 0)) {
            /* istanbul ignore next */
            cov_2k2udou03a().b[23][0]++;
            const dbSession =
            /* istanbul ignore next */
            (cov_2k2udou03a().s[105]++, data[0]);
            // Convertir les données DB vers le format WorkoutSession
            const session =
            /* istanbul ignore next */
            (cov_2k2udou03a().s[106]++, {
              id: dbSession.id,
              user_id: dbSession.user_id,
              name: dbSession.name,
              startTime: dbSession.started_at,
              endTime: dbSession.completed_at,
              duration: (
              /* istanbul ignore next */
              (cov_2k2udou03a().b[25][0]++, dbSession.duration_minutes) ||
              /* istanbul ignore next */
              (cov_2k2udou03a().b[25][1]++, 0)) * 60,
              targetDuration: 30,
              // Valeur par défaut
              status: dbSession.completed_at ?
              /* istanbul ignore next */
              (cov_2k2udou03a().b[26][0]++, 'completed') :
              /* istanbul ignore next */
              (cov_2k2udou03a().b[26][1]++, 'active'),
              caloriesBurned:
              /* istanbul ignore next */
              (cov_2k2udou03a().b[27][0]++, dbSession.calories_burned) ||
              /* istanbul ignore next */
              (cov_2k2udou03a().b[27][1]++, 0),
              workout_type:
              /* istanbul ignore next */
              (cov_2k2udou03a().b[28][0]++, dbSession.workout_type) ||
              /* istanbul ignore next */
              (cov_2k2udou03a().b[28][1]++, 'strength'),
              difficulty:
              /* istanbul ignore next */
              (cov_2k2udou03a().b[29][0]++, dbSession.difficulty) ||
              /* istanbul ignore next */
              (cov_2k2udou03a().b[29][1]++, 'intermediate'),
              exercises:
              /* istanbul ignore next */
              (cov_2k2udou03a().b[30][0]++, dbSession.exercises) ||
              /* istanbul ignore next */
              (cov_2k2udou03a().b[30][1]++, []),
              notes: dbSession.notes
            });
            /* istanbul ignore next */
            cov_2k2udou03a().s[107]++;
            setCurrentSession(session);
            /* istanbul ignore next */
            cov_2k2udou03a().s[108]++;
            setIsSessionActive(session.status === 'active');
            /* istanbul ignore next */
            cov_2k2udou03a().s[109]++;
            saveLocalSession(session);
          } else
          /* istanbul ignore next */
          {
            cov_2k2udou03a().b[23][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_2k2udou03a().s[110]++;
          // Erreur silencieuse
          console.error('Erreur récupération session interrompue:', error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_2k2udou03a().b[21][1]++;
      }
    };
    /* istanbul ignore next */
    cov_2k2udou03a().s[111]++;
    loadInterruptedSession();
  }, [appStoreUser?.id, currentSession]);
  /* istanbul ignore next */
  cov_2k2udou03a().s[112]++;
  return {
    currentSession,
    isSessionActive,
    startSession,
    pauseSession,
    resumeSession,
    completeSession,
    cancelSession,
    calculateCalories,
    updateSession
  };
};
/* istanbul ignore next */
cov_2k2udou03a().s[113]++;
exports.useWorkoutSessionCore = useWorkoutSessionCore;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,