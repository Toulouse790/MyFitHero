{"version":3,"names":["cov_2k2udou03a","actualCoverage","s","react_1","require","use_toast_1","appStore_1","supabase_1","useWorkoutSessionCore","f","toast","useToast","queryClient","useQueryClient","appStoreUser","appStore","currentSession","setCurrentSession","useState","loadLocalSession","isSessionActive","setIsSessionActive","b","status","saveLocalSession","session","localStorage","setItem","JSON","stringify","removeItem","raw","getItem","parse","error","console","calculateCalories","useCallback","minutes","w","weight","MET","Math","round","persistToSupabase","workoutData","id","user_id","name","workout_type","difficulty","started_at","startTime","completed_at","endTime","duration_minutes","floor","duration","calories_burned","caloriesBurned","exercises","notes","created_at","Date","toISOString","updated_at","_error","supabase","from","upsert","invalidateQueries","queryKey","e","updateSession","updates","updatedSession","startSession","workoutName","targetDuration","title","description","variant","newSession","crypto","randomUUID","window","gtag","workout_name","pauseSession","updated","resumeSession","completeSession","end","durationSec","getTime","completed","today","split","stat_date","workouts_completed","total_workout_minutes","onConflict","cancelSession","cancelled","useEffect","loadInterruptedSession","data","_data","select","eq","is","order","ascending","limit","length","dbSession","exports"],"sources":["/workspaces/MyFitHero/src/features/workout/hooks/useWorkoutSessionCore.ts"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n// hooks/workout/useWorkoutSessionCore.ts\nimport { useToast } from '@/shared/hooks/use-toast';\nimport { appStore } from '@/store/appStore';\nimport { supabase } from '@/lib/supabase';\nimport type { WorkoutSession, WorkoutExercise, ExerciseSet } from '@/shared/types/workout.types';\n\nexport interface UseWorkoutSessionCoreReturn {\n  currentSession: WorkoutSession | undefined;\n  isSessionActive: boolean;\n  startSession: (\n    workoutName: string,\n    options?: {\n      targetDuration?: number;\n      workout_type?: WorkoutSession['workout_type'];\n      difficulty?: WorkoutSession['difficulty'];\n      exercises?: WorkoutExercise[];\n    }\n  ) => Promise<void>;\n  pauseSession: () => Promise<void>;\n  resumeSession: () => Promise<void>;\n  completeSession: () => Promise<void>;\n  cancelSession: () => Promise<void>;\n  calculateCalories: (minutes: number) => number;\n  updateSession: (updates: Partial<WorkoutSession>) => void;\n}\n\nexport const useWorkoutSessionCore = (): UseWorkoutSessionCoreReturn => {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const { appStoreUser } = appStore();\n\n  const [currentSession, setCurrentSession] = useState<WorkoutSession | null>(() =>\n    loadLocalSession()\n  );\n  const [isSessionActive, setIsSessionActive] = useState<boolean>(\n    () => loadLocalSession()?.status === 'active' || false\n  );\n\n  // Utilitaires localStorage\n  const saveLocalSession = (session: WorkoutSession | null) => {\n    if (session) {\n      localStorage.setItem('currentWorkoutSession', JSON.stringify(session));\n    } else {\n      localStorage.removeItem('currentWorkoutSession');\n    }\n  };\n\n  function loadLocalSession(): WorkoutSession | undefined {\n    try {\n      const raw = localStorage.getItem('currentWorkoutSession');\n      return raw ? (JSON.parse(raw) as WorkoutSession) : null;\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur parsing session localStorage:', error);\n      localStorage.removeItem('currentWorkoutSession');\n      return null;\n    }\n  }\n\n  const calculateCalories = useCallback(\n    (minutes: number) => {\n      const w = appStoreUser?.weight || 70;\n      const MET = 6;\n      return Math.round((w * MET * minutes) / 60);\n    },\n    [appStoreUser?.weight]\n  );\n\n  const persistToSupabase = async (session: WorkoutSession) => {\n    try {\n      // Adapter les donn√©es pour correspondre au sch√©ma Supabase\n      const workoutData = {\n        id: session.id,\n        user_id: session.user_id,\n        name: session.name,\n        workout_type: session.workout_type,\n        difficulty: session.difficulty,\n        started_at: session.startTime,\n        completed_at: session.endTime,\n        duration_minutes: Math.floor(session.duration / 60),\n        calories_burned: session.caloriesBurned,\n        exercises: session.exercises,\n        notes: session.notes,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n      };\n\n      const { error: _error } = await (supabase as any).from('workouts').upsert(workoutData);\n\n      if (error) throw error;\n      queryClient.invalidateQueries({ queryKey: ['workouts', session.user_id] });\n    } catch (e) {\n      console.error('Supabase persistence error:', e);\n    }\n  };\n\n  const updateSession = useCallback(\n    (updates: Partial<WorkoutSession>) => {\n      if (!currentSession) return;\n      const updatedSession = { ...currentSession, ...updates };\n      setCurrentSession(updatedSession);\n      saveLocalSession(updatedSession);\n      persistToSupabase(updatedSession);\n    },\n    [currentSession]\n  );\n\n  const startSession = useCallback(\n    async (\n      workoutName: string,\n      {\n        targetDuration = 30,\n        workout_type = 'strength',\n        difficulty = 'intermediate',\n        exercises = [] as WorkoutExercise[],\n      } = {}\n    ) => {\n      if (!appStoreUser?.id) {\n        toast({\n          title: 'Erreur',\n          description: 'Utilisateur non connect√©',\n          variant: 'destructive',\n        });\n        return;\n      }\n\n      const newSession: WorkoutSession = {\n        id: crypto.randomUUID(),\n        user_id: appStoreUser.id,\n        name: workoutName,\n        startTime: new Date().toISOString(),\n        duration: 0,\n        targetDuration,\n        status: 'active',\n        caloriesBurned: 0,\n        workout_type: workout_type as 'strength' | 'cardio' | 'flexibility' | 'sports' | 'other',\n        difficulty: difficulty as 'beginner' | 'intermediate' | 'advanced',\n        exercises,\n      };\n\n      setCurrentSession(newSession);\n      setIsSessionActive(true);\n      saveLocalSession(newSession);\n      await persistToSupabase(newSession);\n\n      toast({\n        title: 'Session d√©marr√©e',\n        description: `¬´ ${workoutName} ¬ª en cours`,\n      });\n\n      // Analytics\n      if (typeof window !== 'undefined' && (window as any).gtag) {\n        (window as any).gtag('event', 'workout_started', {\n          workout_name: workoutName,\n          workout_type,\n          user_id: appStoreUser.id,\n        });\n      }\n    },\n    [appStoreUser?.id, toast, persistToSupabase]\n  );\n\n  const pauseSession = useCallback(async () => {\n    if (!currentSession) return;\n    const updated = { ...currentSession, status: 'paused' as const };\n    setCurrentSession(updated);\n    setIsSessionActive(false);\n    saveLocalSession(updated);\n    await persistToSupabase(updated);\n\n    toast({\n      title: 'Session en pause',\n      description: 'Reprenez quand vous √™tes pr√™t',\n    });\n  }, [currentSession, persistToSupabase, toast]);\n\n  const resumeSession = useCallback(async () => {\n    if (!currentSession) return;\n    const updated = { ...currentSession, status: 'active' as const };\n    setCurrentSession(updated);\n    setIsSessionActive(true);\n    saveLocalSession(updated);\n    await persistToSupabase(updated);\n\n    toast({\n      title: 'Session reprise',\n      description: 'Bon entra√Ænement !',\n    });\n  }, [currentSession, persistToSupabase, toast]);\n\n  const completeSession = useCallback(async () => {\n    if (!currentSession || !appStoreUser?.id) return;\n\n    const end = new Date();\n    const durationSec = Math.floor(\n      (end.getTime() - new Date(currentSession.startTime).getTime()) / 1000\n    );\n\n    const completed: WorkoutSession = {\n      ...currentSession,\n      endTime: end.toISOString(),\n      duration: durationSec,\n      caloriesBurned: calculateCalories(durationSec / 60),\n      status: 'completed',\n    };\n\n    setCurrentSession(completed);\n    setIsSessionActive(false);\n    saveLocalSession(null);\n    await persistToSupabase(completed);\n\n    // Mettre √† jour les stats quotidiennes\n    try {\n      const today = new Date().toISOString().split('T')[0];\n      await (supabase as any).from('daily_stats').upsert(\n        {\n          user_id: appStoreUser.id,\n          stat_date: today,\n          workouts_completed: 1,\n          total_workout_minutes: Math.floor(durationSec / 60),\n          calories_burned: completed.caloriesBurned,\n        },\n        {\n          onConflict: 'user_id,stat_date',\n        }\n      );\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur mise √† jour stats quotidiennes:', error);\n    }\n\n    toast({\n      title: 'Session termin√©e ! üéâ',\n      description: `${Math.round(durationSec / 60)} min ‚Ä¢ ${completed.caloriesBurned} kcal`,\n    });\n\n    // Analytics\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'workout_completed', {\n        duration_minutes: Math.round(durationSec / 60),\n        calories_burned: completed.caloriesBurned,\n        workout_type: completed.workout_type,\n        user_id: appStoreUser.id,\n      });\n    }\n  }, [currentSession, calculateCalories, toast, appStoreUser?.id, persistToSupabase]);\n\n  const cancelSession = useCallback(async () => {\n    if (!currentSession) return;\n    const cancelled = { ...currentSession, status: 'cancelled' as const };\n    setCurrentSession(cancelled);\n    setIsSessionActive(false);\n    saveLocalSession(null);\n    await persistToSupabase(cancelled);\n\n    toast({\n      title: 'Session annul√©e',\n      variant: 'destructive',\n    });\n  }, [currentSession, toast, persistToSupabase]);\n\n  // Sync au montage - r√©cup√©rer session interrompue\n  useEffect(() => {\n    const loadInterruptedSession = async () => {\n      if (appStoreUser?.id && !currentSession) {\n        try {\n          const { data: _data, error: _error } = await supabase\n            .from('workouts')\n            .select('*')\n            .eq('user_id', appStoreUser.id)\n            .is('completed_at', null) // Sessions non termin√©es\n            .order('started_at', { ascending: false })\n            .limit(1);\n\n          if (!error && data && data.length > 0) {\n            const dbSession = data[0] as any;\n            // Convertir les donn√©es DB vers le format WorkoutSession\n            const session: WorkoutSession = {\n              id: dbSession.id,\n              user_id: dbSession.user_id,\n              name: dbSession.name,\n              startTime: dbSession.started_at,\n              endTime: dbSession.completed_at,\n              duration: (dbSession.duration_minutes || 0) * 60,\n              targetDuration: 30, // Valeur par d√©faut\n              status: dbSession.completed_at ? 'completed' : 'active',\n              caloriesBurned: dbSession.calories_burned || 0,\n              workout_type: dbSession.workout_type || 'strength',\n              difficulty: dbSession.difficulty || 'intermediate',\n              exercises: dbSession.exercises || [],\n              notes: dbSession.notes,\n            };\n\n            setCurrentSession(session);\n            setIsSessionActive(session.status === 'active');\n            saveLocalSession(session);\n          }\n        } catch (error: any) {\n      // Erreur silencieuse\n          console.error('Erreur r√©cup√©ration session interrompue:', error);\n        }\n      }\n    };\n\n    loadInterruptedSession();\n  }, [appStoreUser?.id, currentSession]);\n\n  return {\n    currentSession,\n    isSessionActive,\n    startSession,\n    pauseSession,\n    resumeSession,\n    completeSession,\n    cancelSession,\n    calculateCalories,\n    updateSession,\n  };\n};\n"],"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","ignoreList":[]}