{"version":3,"names":["cov_l43sul26","actualCoverage","react_1","s","__importDefault","require","card_1","button_1","badge_1","lucide_react_1","WorkoutPlans","plans","onStartPlan","onCreatePlan","f","getDifficultyColor","difficulty","toLowerCase","b","formatDifficulty","jsx_runtime_1","jsxs","className","children","jsx","Button","onClick","PlusCircle","length","Card","CardContent","Calendar","map","plan","is_active","CardHeader","CardTitle","name","Badge","description","Clock","duration_weeks","workouts_per_week","target_muscles","Target","slice","muscle","index","variant","id","Play","exports"],"sources":["/workspaces/MyFitHero/src/features/workout/components/WorkoutPlans.tsx"],"sourcesContent":["// src/features/workout/components/WorkoutPlans.tsx\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Calendar, \n  Clock, \n  Target, \n  Play,\n  PlusCircle \n} from 'lucide-react';\n\ninterface WorkoutPlan {\n  id: string;\n  name: string;\n  description: string;\n  duration_weeks: number;\n  difficulty: string;\n  workouts_per_week: number;\n  target_muscles: string[];\n  created_at: Date;\n  is_active: boolean;\n}\n\ninterface WorkoutPlansProps {\n  plans: WorkoutPlan[];\n  onStartPlan: (planId: string) => void;\n  onCreatePlan: () => void;\n}\n\nexport const WorkoutPlans: React.FC<WorkoutPlansProps> = ({\n  plans,\n  onStartPlan,\n  onCreatePlan\n}) => {\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty.toLowerCase()) {\n      case 'beginner':\n        return 'bg-green-100 text-green-800';\n      case 'intermediate':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'advanced':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatDifficulty = (difficulty: string) => {\n    switch (difficulty.toLowerCase()) {\n      case 'beginner':\n        return 'Débutant';\n      case 'intermediate':\n        return 'Intermédiaire';\n      case 'advanced':\n        return 'Avancé';\n      default:\n        return difficulty;\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* En-tête avec bouton créer */}\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-semibold\">Mes programmes d'entraînement</h3>\n        <Button onClick={onCreatePlan}>\n          <PlusCircle className=\"mr-2 h-4 w-4\" />\n          Nouveau programme\n        </Button>\n      </div>\n\n      {/* Liste des plans */}\n      {plans.length === 0 ? (\n        <Card>\n          <CardContent className=\"text-center py-8\">\n            <Calendar className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground\" />\n            <h4 className=\"text-lg font-medium mb-2\">Aucun programme</h4>\n            <p className=\"text-muted-foreground mb-4\">\n              Créez votre premier programme d'entraînement personnalisé\n            </p>\n            <Button onClick={onCreatePlan}>\n              <PlusCircle className=\"mr-2 h-4 w-4\" />\n              Créer un programme\n            </Button>\n          </CardContent>\n        </Card>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {plans.map((plan) => (\n            <Card key={plan.id} className={plan.is_active ? 'ring-2 ring-blue-500' : ''}>\n              <CardHeader>\n                <div className=\"flex justify-between items-start\">\n                  <CardTitle className=\"text-lg\">{plan.name}</CardTitle>\n                  <div className=\"flex gap-2\">\n                    {plan.is_active && (\n                      <Badge className=\"bg-blue-100 text-blue-800\">Actif</Badge>\n                    )}\n                    <Badge className={getDifficultyColor(plan.difficulty)}>\n                      {formatDifficulty(plan.difficulty)}\n                    </Badge>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground mb-4 line-clamp-2\">\n                  {plan.description}\n                </p>\n\n                <div className=\"grid grid-cols-2 gap-4 mb-4 text-sm\">\n                  <div className=\"flex items-center\">\n                    <Clock className=\"h-4 w-4 mr-1 text-muted-foreground\" />\n                    {plan.duration_weeks} semaines\n                  </div>\n                  <div className=\"flex items-center\">\n                    <Calendar className=\"h-4 w-4 mr-1 text-muted-foreground\" />\n                    {plan.workouts_per_week}x/semaine\n                  </div>\n                </div>\n\n                {plan.target_muscles.length > 0 && (\n                  <div className=\"mb-4\">\n                    <div className=\"flex items-center mb-2\">\n                      <Target className=\"h-4 w-4 mr-1 text-muted-foreground\" />\n                      <span className=\"text-sm font-medium\">Muscles ciblés:</span>\n                    </div>\n                    <div className=\"flex flex-wrap gap-1\">\n                      {plan.target_muscles.slice(0, 3).map((muscle, index) => (\n                        <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                          {muscle}\n                        </Badge>\n                      ))}\n                      {plan.target_muscles.length > 3 && (\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          +{plan.target_muscles.length - 3}\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                <Button \n                  onClick={() => onStartPlan(plan.id)} \n                  className=\"w-full\"\n                  variant={plan.is_active ? \"default\" : \"outline\"}\n                >\n                  <Play className=\"mr-2 h-4 w-4\" />\n                  {plan.is_active ? \"Continuer\" : \"Commencer\"}\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};"],"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","ignoreList":[]}