{"version":3,"names":["react_1","cov_4snizdsqx","s","__importStar","require","supabase_1","clsx_1","__importDefault","framer_motion_1","zustand_1","sonner_1","useUserStore","create","set","f","userId","setUserId","id","fetchChallenges","page","pageSize","searchTerm","filterType","query","supabase","from","select","count","order","ascending","eq","trim","b","ilike","length","in","range","data","error","challenges","useChallenges","params","key","join","useQuery","keepPreviousData","staleTime","fetchUserParticipants","_data","_error","useUserParticipants","Promise","resolve","enabled","joinChallenge","challengeId","upsert","user_id","challenge_id","progress","completed","onConflict","leaveChallenge","delete","PAGE_SIZE","ChallengesPage","state","setSearchTerm","useState","setPage","challengeTypeFilter","setChallengeTypeFilter","queryClient","useQueryClient","isLoading","isError","totalCount","pageCount","Math","ceil","userParticipants","joinMutation","useMutation","reject","onSuccess","toast","success","invalidateQueries","onError","e","message","leaveMutation","isUserJoined","useCallback","some","p","handleJoinClick","mutate","challengeTypes","toggleChallengeTypeFilter","type","current","includes","filter","t","jsx_runtime_1","jsxs","className","children","jsx","value","onChange","target","placeholder","map","checked","default","charAt","toUpperCase","slice","Array","_","idx","challenge","joined","motion","article","layout","initial","opacity","y","animate","exit","title","description","challenge_type","goal_type","goal_target","Date","start_date","toLocaleDateString","end_date","onClick","disabled","max","exports"],"sources":["/workspaces/MyFitHero/src/features/social/pages/ChallengesPage.tsx"],"sourcesContent":["import { X, Search } from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport clsx from 'clsx';\nimport { motion } from 'framer-motion';\nimport { create } from 'zustand';\nimport { toast } from 'sonner';\n\n// ---- TypeScript types ----\ninterface Challenge {\n  id: string;\n  title: string;\n  description?: string;\n  start_date: string;\n  end_date: string;\n  challenge_type: 'daily' | 'weekly' | 'monthly' | 'competition' | 'custom';\n  goal_type: string;\n  goal_target: number;\n  is_active: boolean;\n}\n\ninterface ChallengeParticipant {\n  id: string;\n  user_id: string;\n  challenge_id: string;\n  progress: number;\n  joined_at: string;\n  completed: boolean;\n  completed_at?: string;\n}\n\n// ---- Zustand store for user state ----\ninterface UserState {\n  userId: string | null;\n  setUserId: (id: string | null) => void;\n}\n\nconst useUserStore = create<UserState>(set => ({\n  userId: null,\n  setUserId: id => set({ userId: id }),\n}));\n\n// ---- Fetch active challenges with pagination & filters ----\ninterface FetchChallengesParams {\n  page: number;\n  pageSize: number;\n  searchTerm?: string;\n  filterType?: string[];\n}\n\nasync function fetchChallenges({ page, pageSize, searchTerm, filterType }: FetchChallengesParams) {\n  let query = supabase\n    .from<Challenge>('challenges')\n    .select('*', { count: 'exact' })\n    .order('start_date', { ascending: true })\n    .eq('is_active', true);\n\n  if (searchTerm?.trim()) {\n    query = query.ilike('title', `%${searchTerm.trim()}%`);\n  }\n\n  if (filterType && filterType.length > 0) {\n    query = query.in('challenge_type', filterType);\n  }\n\n  query = query.range(page * pageSize, page * pageSize + pageSize - 1);\n\n  const { data, error, count } = await query;\n  if (error) throw error;\n  return { challenges: data ?? [], count };\n}\n\nfunction useChallenges(params: FetchChallengesParams) {\n  const key = [\n    'challenges',\n    params.page,\n    params.pageSize,\n    params.searchTerm,\n    params.filterType?.join(','),\n  ];\n  return useQuery(key, () => fetchChallenges(params), { keepPreviousData: true, staleTime: 30000 });\n}\n\n// ---- Fetch user participation for challenges ----\nasync function fetchUserParticipants(userId: string) {\n  const { data: _data, error: _error } = await supabase\n    .from<ChallengeParticipant>('challenge_participants')\n    .select('*')\n    .eq('user_id', userId);\n  if (error) throw error;\n  return data ?? [];\n}\n\nfunction useUserParticipants(userId: string | null) {\n  return useQuery(\n    ['user_participants', userId],\n    () => {\n      if (!userId) return Promise.resolve([]);\n      return fetchUserParticipants(userId);\n    },\n    { enabled: !!userId, staleTime: 30000 }\n  );\n}\n\n// ---- Mutations for join/leave challenge ----\nasync function joinChallenge(userId: string, challengeId: string) {\n  const { error: _error } = await supabase.from('challenge_participants').upsert(\n    {\n      user_id: userId,\n      challenge_id: challengeId,\n      progress: 0,\n      completed: false,\n    },\n    { onConflict: ['user_id', 'challenge_id'] }\n  );\n  if (error) throw error;\n}\n\nasync function leaveChallenge(userId: string, challengeId: string) {\n  const { error: _error } = await supabase\n    .from('challenge_participants')\n    .delete()\n    .eq('user_id', userId)\n    .eq('challenge_id', challengeId);\n  if (error) throw error;\n}\n\n// ---- Main Component ----\nconst PAGE_SIZE = 10;\n\nconst ChallengesPage: React.FC = () => {\n  const userId = useUserStore(state => state.userId);\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [page, setPage] = useState(0);\n  const [challengeTypeFilter, setChallengeTypeFilter] = useState<string[]>([]);\n\n  const queryClient = useQueryClient();\n\n  const { data, isLoading, isError } = useChallenges({\n    page,\n    pageSize: PAGE_SIZE,\n    searchTerm,\n    filterType: challengeTypeFilter,\n  });\n\n  const challenges = data?.challenges ?? [];\n  const totalCount = data?.count ?? 0;\n  const pageCount = Math.ceil(totalCount / PAGE_SIZE);\n\n  const { data: userParticipants } = useUserParticipants(userId);\n\n  const joinMutation = useMutation(\n    (challengeId: string) => {\n      if (!userId) return Promise.reject('User not logged in');\n      return joinChallenge(userId, challengeId);\n    },\n    {\n      onSuccess: () => {\n        toast.success('Inscription au défi réussie');\n        queryClient.invalidateQueries(['user_participants', userId]);\n      },\n      onError: (e: any) => toast.error(`Erreur inscription : ${e.message || e}`),\n    }\n  );\n\n  const leaveMutation = useMutation(\n    (challengeId: string) => {\n      if (!userId) return Promise.reject('User not logged in');\n      return leaveChallenge(userId, challengeId);\n    },\n    {\n      onSuccess: () => {\n        toast.success('Désinscription du défi réussie');\n        queryClient.invalidateQueries(['user_participants', userId]);\n      },\n      onError: (e: any) => toast.error(`Erreur désinscription : ${e.message || e}`),\n    }\n  );\n\n  const isUserJoined = useCallback(\n    (challengeId: string) => {\n      return userParticipants?.some(p => p.challenge_id === challengeId) ?? false;\n    },\n    [userParticipants]\n  );\n\n  const handleJoinClick = (challengeId: string) => {\n    if (isUserJoined(challengeId)) {\n      leaveMutation.mutate(challengeId);\n    } else {\n      joinMutation.mutate(challengeId);\n    }\n  };\n\n  // Filter challenge types options\n  const challengeTypes = ['daily', 'weekly', 'monthly', 'competition', 'custom'];\n\n  const toggleChallengeTypeFilter = (type: string) => {\n    setChallengeTypeFilter(current =>\n      current.includes(type) ? current.filter(t => t !== type) : [...current, type]\n    );\n    setPage(0);\n  };\n\n  return (\n    <main className=\"min-h-screen p-6 bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 max-w-6xl mx-auto\">\n      <h1 className=\"text-3xl font-extrabold mb-6 text-center\">Défis MyFitHero</h1>\n\n      {/* Search bar */}\n      <div className=\"max-w-md mx-auto mb-6\">\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={e => {\n            setSearchTerm(e.target.value);\n            setPage(0);\n          }}\n          placeholder=\"Rechercher un défi...\"\n          className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-600\"\n          aria-label=\"Rechercher un défi\"\n        />\n      </div>\n\n      {/* Challenge type filter */}\n      <fieldset\n        className=\"flex flex-wrap justify-center gap-3 mb-6\"\n        aria-label=\"Filtres types de défis\"\n      >\n        {challengeTypes.map(type => {\n          const checked = challengeTypeFilter.includes(type);\n          return (\n            <label\n              key={type}\n              className={clsx(\n                'cursor-pointer select-none rounded px-3 py-1 border',\n                checked\n                  ? 'bg-blue-600 text-white border-blue-600'\n                  : 'border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300'\n              )}\n            >\n              <input\n                type=\"checkbox\"\n                checked={checked}\n                onChange={() => toggleChallengeTypeFilter(type)}\n                className=\"sr-only\"\n              />\n              {type.charAt(0).toUpperCase() + type.slice(1)}\n            </label>\n          );\n        })}\n      </fieldset>\n\n      {/* Challenges list */}\n      <div className=\"grid gap-6 md:grid-cols-2\">\n        {isLoading &&\n          Array.from({ length: PAGE_SIZE }).map((_, idx) => (\n            <div\n              key={idx}\n              className=\"p-6 border rounded-md bg-gray-200 dark:bg-gray-700 animate-pulse h-48\"\n            />\n          ))}\n        {isError && (\n          <div className=\"col-span-full text-center text-red-600\">\n            Erreur de chargement des défis.\n          </div>\n        )}\n        {!isLoading && challenges.length === 0 && (\n          <div className=\"text-center text-gray-600\">Aucun défi trouvé.</div>\n        )}\n\n        {challenges.map(challenge => {\n          const joined = isUserJoined(challenge.id);\n          return (\n            <motion.article\n              key={challenge.id}\n              layout\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              className=\"p-6 border rounded-lg bg-white dark:bg-gray-800 shadow flex flex-col\"\n              aria-live=\"polite\"\n              aria-label={`Défi ${challenge.title}`}\n            >\n              <h2 className=\"text-xl font-semibold mb-2\">{challenge.title}</h2>\n              <p className=\"flex-grow text-gray-700 dark:text-gray-300 mb-4 line-clamp-4\">\n                {challenge.description}\n              </p>\n              <div className=\"mb-4 text-sm\">\n                <span>\n                  <strong>Type :</strong> {challenge.challenge_type}\n                </span>\n                <br />\n                <span>\n                  <strong>Objectif :</strong> {challenge.goal_type} - {challenge.goal_target}\n                </span>\n                <br />\n                <span>\n                  Période : {new Date(challenge.start_date).toLocaleDateString()} -{' '}\n                  {new Date(challenge.end_date).toLocaleDateString()}\n                </span>\n              </div>\n              <button\n                onClick={() => handleJoinClick(challenge.id)}\n                disabled={joinMutation.isLoading || leaveMutation.isLoading}\n                className={clsx(\n                  'px-4 py-2 rounded-md font-semibold',\n                  joined\n                    ? 'bg-red-600 hover:bg-red-700 text-white'\n                    : 'bg-green-600 hover:bg-green-700 text-white'\n                )}\n                aria-pressed={joined}\n                aria-label={\n                  joined\n                    ? `Se désinscrire du défi ${challenge.title}`\n                    : `S'inscrire au défi ${challenge.title}`\n                }\n              >\n                {joined ? 'Se désinscrire' : \"S'inscrire\"}\n              </button>\n            </motion.article>\n          );\n        })}\n      </div>\n\n      {/* Pagination */}\n      <nav\n        className=\"flex justify-center items-center mt-8 space-x-4\"\n        aria-label=\"Pagination des défis\"\n      >\n        <button\n          onClick={() => setPage(p => Math.max(p - 1, 0))}\n          disabled={page === 0}\n          className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\n          aria-label=\"Page précédente\"\n        >\n          Précédent\n        </button>\n        <span aria-live=\"polite\" aria-atomic=\"true\" className=\"text-lg\">\n          Page {page + 1} / {pageCount}\n        </span>\n        <button\n          onClick={() => setPage(p => (p + 1 < pageCount ? p + 1 : p))}\n          disabled={page + 1 >= pageCount}\n          className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\n          aria-label=\"Page suivante\"\n        >\n          Suivant\n        </button>\n      </nav>\n    </main>\n  );\n};\n\nexport default ChallengesPage;\n"],"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","ignoreList":[]}