86419ce65626d08c250ad4a9bd7fc1fa
"use strict";

/* istanbul ignore next */
function cov_4snizdsqx() {
  var path = "/workspaces/MyFitHero/src/features/social/pages/ChallengesPage.tsx";
  var hash = "6cd22b44a604fc97b7802a6e2190fee9b7b1dd0c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/social/pages/ChallengesPage.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "25": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "26": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "27": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 50
        }
      },
      "28": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "29": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "30": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 47
        }
      },
      "31": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 48
        }
      },
      "32": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 36
        }
      },
      "33": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 35,
          column: 34
        }
      },
      "34": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "35": {
        start: {
          line: 36,
          column: 51
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "36": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "37": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "38": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "39": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 63
        }
      },
      "40": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "41": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 55
        }
      },
      "42": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 73
        }
      },
      "43": {
        start: {
          line: 53,
          column: 35
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "44": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 55,
          column: 20
        }
      },
      "45": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 20
        }
      },
      "46": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 45
        }
      },
      "47": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "48": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 102
        }
      },
      "49": {
        start: {
          line: 66,
          column: 31
        },
        end: {
          line: 66,
          column: 54
        }
      },
      "50": {
        start: {
          line: 70,
          column: 43
        },
        end: {
          line: 73,
          column: 30
        }
      },
      "51": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 75,
          column: 20
        }
      },
      "52": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 20
        }
      },
      "53": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 22
        }
      },
      "54": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 83,
          column: 48
        }
      },
      "55": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 81,
          column: 39
        }
      },
      "56": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 39
        }
      },
      "57": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 45
        }
      },
      "58": {
        start: {
          line: 87,
          column: 30
        },
        end: {
          line: 92,
          column: 51
        }
      },
      "59": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 94,
          column: 20
        }
      },
      "60": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 20
        }
      },
      "61": {
        start: {
          line: 97,
          column: 30
        },
        end: {
          line: 101,
          column: 40
        }
      },
      "62": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 103,
          column: 20
        }
      },
      "63": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 20
        }
      },
      "64": {
        start: {
          line: 106,
          column: 18
        },
        end: {
          line: 106,
          column: 20
        }
      },
      "65": {
        start: {
          line: 107,
          column: 23
        },
        end: {
          line: 179,
          column: 1
        }
      },
      "66": {
        start: {
          line: 108,
          column: 19
        },
        end: {
          line: 108,
          column: 54
        }
      },
      "67": {
        start: {
          line: 108,
          column: 41
        },
        end: {
          line: 108,
          column: 53
        }
      },
      "68": {
        start: {
          line: 109,
          column: 40
        },
        end: {
          line: 109,
          column: 65
        }
      },
      "69": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 110,
          column: 52
        }
      },
      "70": {
        start: {
          line: 111,
          column: 58
        },
        end: {
          line: 111,
          column: 83
        }
      },
      "71": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 112,
          column: 40
        }
      },
      "72": {
        start: {
          line: 113,
          column: 41
        },
        end: {
          line: 118,
          column: 6
        }
      },
      "73": {
        start: {
          line: 119,
          column: 23
        },
        end: {
          line: 119,
          column: 45
        }
      },
      "74": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 120,
          column: 39
        }
      },
      "75": {
        start: {
          line: 121,
          column: 22
        },
        end: {
          line: 121,
          column: 55
        }
      },
      "76": {
        start: {
          line: 122,
          column: 39
        },
        end: {
          line: 122,
          column: 66
        }
      },
      "77": {
        start: {
          line: 123,
          column: 25
        },
        end: {
          line: 133,
          column: 6
        }
      },
      "78": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 125,
          column: 56
        }
      },
      "79": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 56
        }
      },
      "80": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 50
        }
      },
      "81": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 66
        }
      },
      "82": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 73
        }
      },
      "83": {
        start: {
          line: 132,
          column: 24
        },
        end: {
          line: 132,
          column: 86
        }
      },
      "84": {
        start: {
          line: 134,
          column: 26
        },
        end: {
          line: 144,
          column: 6
        }
      },
      "85": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 136,
          column: 56
        }
      },
      "86": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 56
        }
      },
      "87": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 51
        }
      },
      "88": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 69
        }
      },
      "89": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 73
        }
      },
      "90": {
        start: {
          line: 143,
          column: 24
        },
        end: {
          line: 143,
          column: 89
        }
      },
      "91": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 147,
          column: 26
        }
      },
      "92": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 84
        }
      },
      "93": {
        start: {
          line: 146,
          column: 43
        },
        end: {
          line: 146,
          column: 73
        }
      },
      "94": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "95": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "96": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 46
        }
      },
      "97": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 45
        }
      },
      "98": {
        start: {
          line: 157,
          column: 27
        },
        end: {
          line: 157,
          column: 82
        }
      },
      "99": {
        start: {
          line: 158,
          column: 38
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "100": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 121
        }
      },
      "101": {
        start: {
          line: 159,
          column: 42
        },
        end: {
          line: 159,
          column: 119
        }
      },
      "102": {
        start: {
          line: 159,
          column: 87
        },
        end: {
          line: 159,
          column: 97
        }
      },
      "103": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 19
        }
      },
      "104": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 178,
          column: 859
        }
      },
      "105": {
        start: {
          line: 163,
          column: 24
        },
        end: {
          line: 163,
          column: 54
        }
      },
      "106": {
        start: {
          line: 164,
          column: 24
        },
        end: {
          line: 164,
          column: 35
        }
      },
      "107": {
        start: {
          line: 166,
          column: 36
        },
        end: {
          line: 166,
          column: 70
        }
      },
      "108": {
        start: {
          line: 167,
          column: 20
        },
        end: {
          line: 169,
          column: 315
        }
      },
      "109": {
        start: {
          line: 169,
          column: 201
        },
        end: {
          line: 169,
          column: 232
        }
      },
      "110": {
        start: {
          line: 171,
          column: 75
        },
        end: {
          line: 171,
          column: 197
        }
      },
      "111": {
        start: {
          line: 172,
          column: 39
        },
        end: {
          line: 172,
          column: 65
        }
      },
      "112": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 177,
          column: 156
        }
      },
      "113": {
        start: {
          line: 173,
          column: 1279
        },
        end: {
          line: 173,
          column: 1308
        }
      },
      "114": {
        start: {
          line: 178,
          column: 227
        },
        end: {
          line: 178,
          column: 259
        }
      },
      "115": {
        start: {
          line: 178,
          column: 240
        },
        end: {
          line: 178,
          column: 258
        }
      },
      "116": {
        start: {
          line: 178,
          column: 641
        },
        end: {
          line: 178,
          column: 686
        }
      },
      "117": {
        start: {
          line: 178,
          column: 655
        },
        end: {
          line: 178,
          column: 684
        }
      },
      "118": {
        start: {
          line: 180,
          column: 0
        },
        end: {
          line: 180,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 25,
            column: 56
          },
          end: {
            line: 25,
            column: 57
          }
        },
        loc: {
          start: {
            line: 25,
            column: 71
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 25
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 44
          }
        },
        loc: {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 36
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 38,
            column: 16
          }
        },
        loc: {
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 38,
            column: 40
          }
        },
        line: 38
      },
      "9": {
        name: "fetchChallenges",
        decl: {
          start: {
            line: 40,
            column: 15
          },
          end: {
            line: 40,
            column: 30
          }
        },
        loc: {
          start: {
            line: 40,
            column: 75
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 40
      },
      "10": {
        name: "useChallenges",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 22
          }
        },
        loc: {
          start: {
            line: 58,
            column: 31
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 58
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 66,
            column: 26
          }
        },
        loc: {
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 66,
            column: 54
          }
        },
        line: 66
      },
      "12": {
        name: "fetchUserParticipants",
        decl: {
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 36
          }
        },
        loc: {
          start: {
            line: 69,
            column: 45
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 69
      },
      "13": {
        name: "useUserParticipants",
        decl: {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 78,
            column: 28
          }
        },
        loc: {
          start: {
            line: 78,
            column: 37
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 78
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 79,
            column: 51
          },
          end: {
            line: 79,
            column: 52
          }
        },
        loc: {
          start: {
            line: 79,
            column: 57
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 79
      },
      "15": {
        name: "joinChallenge",
        decl: {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 86,
            column: 28
          }
        },
        loc: {
          start: {
            line: 86,
            column: 50
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 86
      },
      "16": {
        name: "leaveChallenge",
        decl: {
          start: {
            line: 96,
            column: 15
          },
          end: {
            line: 96,
            column: 29
          }
        },
        loc: {
          start: {
            line: 96,
            column: 51
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 96
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 107,
            column: 23
          },
          end: {
            line: 107,
            column: 24
          }
        },
        loc: {
          start: {
            line: 107,
            column: 29
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 107
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 108,
            column: 32
          },
          end: {
            line: 108,
            column: 33
          }
        },
        loc: {
          start: {
            line: 108,
            column: 41
          },
          end: {
            line: 108,
            column: 53
          }
        },
        line: 108
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 123,
            column: 37
          },
          end: {
            line: 123,
            column: 38
          }
        },
        loc: {
          start: {
            line: 123,
            column: 54
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 123
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 128,
            column: 19
          },
          end: {
            line: 128,
            column: 20
          }
        },
        loc: {
          start: {
            line: 128,
            column: 25
          },
          end: {
            line: 131,
            column: 9
          }
        },
        line: 128
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 132,
            column: 17
          },
          end: {
            line: 132,
            column: 18
          }
        },
        loc: {
          start: {
            line: 132,
            column: 24
          },
          end: {
            line: 132,
            column: 86
          }
        },
        line: 132
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 134,
            column: 38
          },
          end: {
            line: 134,
            column: 39
          }
        },
        loc: {
          start: {
            line: 134,
            column: 55
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 134
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 139,
            column: 19
          },
          end: {
            line: 139,
            column: 20
          }
        },
        loc: {
          start: {
            line: 139,
            column: 25
          },
          end: {
            line: 142,
            column: 9
          }
        },
        line: 139
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 143,
            column: 17
          },
          end: {
            line: 143,
            column: 18
          }
        },
        loc: {
          start: {
            line: 143,
            column: 24
          },
          end: {
            line: 143,
            column: 89
          }
        },
        line: 143
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 145,
            column: 50
          },
          end: {
            line: 145,
            column: 51
          }
        },
        loc: {
          start: {
            line: 145,
            column: 67
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 145
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 146,
            column: 38
          },
          end: {
            line: 146,
            column: 39
          }
        },
        loc: {
          start: {
            line: 146,
            column: 43
          },
          end: {
            line: 146,
            column: 73
          }
        },
        line: 146
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 148,
            column: 28
          },
          end: {
            line: 148,
            column: 29
          }
        },
        loc: {
          start: {
            line: 148,
            column: 45
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 148
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 158,
            column: 38
          },
          end: {
            line: 158,
            column: 39
          }
        },
        loc: {
          start: {
            line: 158,
            column: 48
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 158
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 159,
            column: 31
          },
          end: {
            line: 159,
            column: 32
          }
        },
        loc: {
          start: {
            line: 159,
            column: 42
          },
          end: {
            line: 159,
            column: 119
          }
        },
        line: 159
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 159,
            column: 82
          },
          end: {
            line: 159,
            column: 83
          }
        },
        loc: {
          start: {
            line: 159,
            column: 87
          },
          end: {
            line: 159,
            column: 97
          }
        },
        line: 159
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 162,
            column: 445
          },
          end: {
            line: 162,
            column: 446
          }
        },
        loc: {
          start: {
            line: 162,
            column: 450
          },
          end: {
            line: 165,
            column: 21
          }
        },
        line: 162
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 165,
            column: 360
          },
          end: {
            line: 165,
            column: 361
          }
        },
        loc: {
          start: {
            line: 165,
            column: 368
          },
          end: {
            line: 170,
            column: 17
          }
        },
        line: 165
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 169,
            column: 195
          },
          end: {
            line: 169,
            column: 196
          }
        },
        loc: {
          start: {
            line: 169,
            column: 201
          },
          end: {
            line: 169,
            column: 232
          }
        },
        line: 169
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 171,
            column: 62
          },
          end: {
            line: 171,
            column: 63
          }
        },
        loc: {
          start: {
            line: 171,
            column: 75
          },
          end: {
            line: 171,
            column: 197
          }
        },
        line: 171
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 171,
            column: 527
          },
          end: {
            line: 171,
            column: 528
          }
        },
        loc: {
          start: {
            line: 171,
            column: 540
          },
          end: {
            line: 178,
            column: 21
          }
        },
        line: 171
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 173,
            column: 1273
          },
          end: {
            line: 173,
            column: 1274
          }
        },
        loc: {
          start: {
            line: 173,
            column: 1279
          },
          end: {
            line: 173,
            column: 1308
          }
        },
        line: 173
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 178,
            column: 221
          },
          end: {
            line: 178,
            column: 222
          }
        },
        loc: {
          start: {
            line: 178,
            column: 227
          },
          end: {
            line: 178,
            column: 259
          }
        },
        line: 178
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 178,
            column: 235
          },
          end: {
            line: 178,
            column: 236
          }
        },
        loc: {
          start: {
            line: 178,
            column: 240
          },
          end: {
            line: 178,
            column: 258
          }
        },
        line: 178
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 178,
            column: 635
          },
          end: {
            line: 178,
            column: 636
          }
        },
        loc: {
          start: {
            line: 178,
            column: 641
          },
          end: {
            line: 178,
            column: 686
          }
        },
        line: 178
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 178,
            column: 649
          },
          end: {
            line: 178,
            column: 650
          }
        },
        loc: {
          start: {
            line: 178,
            column: 655
          },
          end: {
            line: 178,
            column: 684
          }
        },
        line: 178
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 27,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 25,
            column: 27
          }
        }, {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: 25,
            column: 56
          },
          end: {
            line: 27,
            column: 1
          }
        }],
        line: 25
      },
      "17": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 37
          },
          end: {
            line: 26,
            column: 40
          }
        }, {
          start: {
            line: 26,
            column: 43
          },
          end: {
            line: 26,
            column: 61
          }
        }],
        line: 26
      },
      "18": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 15
          }
        }, {
          start: {
            line: 26,
            column: 19
          },
          end: {
            line: 26,
            column: 33
          }
        }],
        line: 26
      },
      "19": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "20": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "21": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 18
          }
        }, {
          start: {
            line: 49,
            column: 22
          },
          end: {
            line: 49,
            column: 43
          }
        }],
        line: 49
      },
      "22": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 55,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 55,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "23": {
        loc: {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 29
          }
        }, {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 35
          }
        }],
        line: 56
      },
      "24": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 75,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 75,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "25": {
        loc: {
          start: {
            line: 76,
            column: 11
          },
          end: {
            line: 76,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 11
          },
          end: {
            line: 76,
            column: 15
          }
        }, {
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 76,
            column: 21
          }
        }],
        line: 76
      },
      "26": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 81,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 81,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "27": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 94,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 94,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "28": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 103,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 103,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "29": {
        loc: {
          start: {
            line: 119,
            column: 23
          },
          end: {
            line: 119,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 23
          },
          end: {
            line: 119,
            column: 39
          }
        }, {
          start: {
            line: 119,
            column: 43
          },
          end: {
            line: 119,
            column: 45
          }
        }],
        line: 119
      },
      "30": {
        loc: {
          start: {
            line: 120,
            column: 23
          },
          end: {
            line: 120,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 23
          },
          end: {
            line: 120,
            column: 34
          }
        }, {
          start: {
            line: 120,
            column: 38
          },
          end: {
            line: 120,
            column: 39
          }
        }],
        line: 120
      },
      "31": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 125,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 125,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "32": {
        loc: {
          start: {
            line: 132,
            column: 69
          },
          end: {
            line: 132,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 69
          },
          end: {
            line: 132,
            column: 78
          }
        }, {
          start: {
            line: 132,
            column: 82
          },
          end: {
            line: 132,
            column: 83
          }
        }],
        line: 132
      },
      "33": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 136,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 136,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "34": {
        loc: {
          start: {
            line: 143,
            column: 72
          },
          end: {
            line: 143,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 72
          },
          end: {
            line: 143,
            column: 81
          }
        }, {
          start: {
            line: 143,
            column: 85
          },
          end: {
            line: 143,
            column: 86
          }
        }],
        line: 143
      },
      "35": {
        loc: {
          start: {
            line: 146,
            column: 15
          },
          end: {
            line: 146,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 15
          },
          end: {
            line: 146,
            column: 74
          }
        }, {
          start: {
            line: 146,
            column: 78
          },
          end: {
            line: 146,
            column: 83
          }
        }],
        line: 146
      },
      "36": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: 152,
            column: 13
          },
          end: {
            line: 154,
            column: 9
          }
        }],
        line: 149
      },
      "37": {
        loc: {
          start: {
            line: 159,
            column: 42
          },
          end: {
            line: 159,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 67
          },
          end: {
            line: 159,
            column: 98
          }
        }, {
          start: {
            line: 159,
            column: 101
          },
          end: {
            line: 159,
            column: 119
          }
        }],
        line: 159
      },
      "38": {
        loc: {
          start: {
            line: 167,
            column: 149
          },
          end: {
            line: 169,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 168,
            column: 70
          }
        }, {
          start: {
            line: 169,
            column: 30
          },
          end: {
            line: 169,
            column: 101
          }
        }],
        line: 167
      },
      "39": {
        loc: {
          start: {
            line: 170,
            column: 107
          },
          end: {
            line: 171,
            column: 199
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 107
          },
          end: {
            line: 170,
            column: 116
          }
        }, {
          start: {
            line: 171,
            column: 24
          },
          end: {
            line: 171,
            column: 199
          }
        }],
        line: 170
      },
      "40": {
        loc: {
          start: {
            line: 171,
            column: 201
          },
          end: {
            line: 171,
            column: 350
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 201
          },
          end: {
            line: 171,
            column: 208
          }
        }, {
          start: {
            line: 171,
            column: 213
          },
          end: {
            line: 171,
            column: 349
          }
        }],
        line: 171
      },
      "41": {
        loc: {
          start: {
            line: 171,
            column: 352
          },
          end: {
            line: 171,
            column: 510
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 352
          },
          end: {
            line: 171,
            column: 362
          }
        }, {
          start: {
            line: 171,
            column: 366
          },
          end: {
            line: 171,
            column: 389
          }
        }, {
          start: {
            line: 171,
            column: 394
          },
          end: {
            line: 171,
            column: 509
          }
        }],
        line: 171
      },
      "42": {
        loc: {
          start: {
            line: 173,
            column: 1320
          },
          end: {
            line: 173,
            column: 1369
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 1320
          },
          end: {
            line: 173,
            column: 1342
          }
        }, {
          start: {
            line: 173,
            column: 1346
          },
          end: {
            line: 173,
            column: 1369
          }
        }],
        line: 173
      },
      "43": {
        loc: {
          start: {
            line: 173,
            column: 1440
          },
          end: {
            line: 175,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 42
          },
          end: {
            line: 174,
            column: 82
          }
        }, {
          start: {
            line: 175,
            column: 42
          },
          end: {
            line: 175,
            column: 86
          }
        }],
        line: 173
      },
      "44": {
        loc: {
          start: {
            line: 175,
            column: 127
          },
          end: {
            line: 177,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 176,
            column: 42
          },
          end: {
            line: 176,
            column: 85
          }
        }, {
          start: {
            line: 177,
            column: 42
          },
          end: {
            line: 177,
            column: 81
          }
        }],
        line: 175
      },
      "45": {
        loc: {
          start: {
            line: 177,
            column: 93
          },
          end: {
            line: 177,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 102
          },
          end: {
            line: 177,
            column: 118
          }
        }, {
          start: {
            line: 177,
            column: 121
          },
          end: {
            line: 177,
            column: 133
          }
        }],
        line: 177
      },
      "46": {
        loc: {
          start: {
            line: 178,
            column: 655
          },
          end: {
            line: 178,
            column: 684
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 675
          },
          end: {
            line: 178,
            column: 680
          }
        }, {
          start: {
            line: 178,
            column: 683
          },
          end: {
            line: 178,
            column: 684
          }
        }],
        line: 178
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/social/pages/ChallengesPage.tsx",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/social/pages/ChallengesPage.tsx"],
      sourcesContent: ["import { X, Search } from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport clsx from 'clsx';\nimport { motion } from 'framer-motion';\nimport { create } from 'zustand';\nimport { toast } from 'sonner';\n\n// ---- TypeScript types ----\ninterface Challenge {\n  id: string;\n  title: string;\n  description?: string;\n  start_date: string;\n  end_date: string;\n  challenge_type: 'daily' | 'weekly' | 'monthly' | 'competition' | 'custom';\n  goal_type: string;\n  goal_target: number;\n  is_active: boolean;\n}\n\ninterface ChallengeParticipant {\n  id: string;\n  user_id: string;\n  challenge_id: string;\n  progress: number;\n  joined_at: string;\n  completed: boolean;\n  completed_at?: string;\n}\n\n// ---- Zustand store for user state ----\ninterface UserState {\n  userId: string | null;\n  setUserId: (id: string | null) => void;\n}\n\nconst useUserStore = create<UserState>(set => ({\n  userId: null,\n  setUserId: id => set({ userId: id }),\n}));\n\n// ---- Fetch active challenges with pagination & filters ----\ninterface FetchChallengesParams {\n  page: number;\n  pageSize: number;\n  searchTerm?: string;\n  filterType?: string[];\n}\n\nasync function fetchChallenges({ page, pageSize, searchTerm, filterType }: FetchChallengesParams) {\n  let query = supabase\n    .from<Challenge>('challenges')\n    .select('*', { count: 'exact' })\n    .order('start_date', { ascending: true })\n    .eq('is_active', true);\n\n  if (searchTerm?.trim()) {\n    query = query.ilike('title', `%${searchTerm.trim()}%`);\n  }\n\n  if (filterType && filterType.length > 0) {\n    query = query.in('challenge_type', filterType);\n  }\n\n  query = query.range(page * pageSize, page * pageSize + pageSize - 1);\n\n  const { data, error, count } = await query;\n  if (error) throw error;\n  return { challenges: data ?? [], count };\n}\n\nfunction useChallenges(params: FetchChallengesParams) {\n  const key = [\n    'challenges',\n    params.page,\n    params.pageSize,\n    params.searchTerm,\n    params.filterType?.join(','),\n  ];\n  return useQuery(key, () => fetchChallenges(params), { keepPreviousData: true, staleTime: 30000 });\n}\n\n// ---- Fetch user participation for challenges ----\nasync function fetchUserParticipants(userId: string) {\n  const { data: _data, error: _error } = await supabase\n    .from<ChallengeParticipant>('challenge_participants')\n    .select('*')\n    .eq('user_id', userId);\n  if (error) throw error;\n  return data ?? [];\n}\n\nfunction useUserParticipants(userId: string | null) {\n  return useQuery(\n    ['user_participants', userId],\n    () => {\n      if (!userId) return Promise.resolve([]);\n      return fetchUserParticipants(userId);\n    },\n    { enabled: !!userId, staleTime: 30000 }\n  );\n}\n\n// ---- Mutations for join/leave challenge ----\nasync function joinChallenge(userId: string, challengeId: string) {\n  const { error: _error } = await supabase.from('challenge_participants').upsert(\n    {\n      user_id: userId,\n      challenge_id: challengeId,\n      progress: 0,\n      completed: false,\n    },\n    { onConflict: ['user_id', 'challenge_id'] }\n  );\n  if (error) throw error;\n}\n\nasync function leaveChallenge(userId: string, challengeId: string) {\n  const { error: _error } = await supabase\n    .from('challenge_participants')\n    .delete()\n    .eq('user_id', userId)\n    .eq('challenge_id', challengeId);\n  if (error) throw error;\n}\n\n// ---- Main Component ----\nconst PAGE_SIZE = 10;\n\nconst ChallengesPage: React.FC = () => {\n  const userId = useUserStore(state => state.userId);\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [page, setPage] = useState(0);\n  const [challengeTypeFilter, setChallengeTypeFilter] = useState<string[]>([]);\n\n  const queryClient = useQueryClient();\n\n  const { data, isLoading, isError } = useChallenges({\n    page,\n    pageSize: PAGE_SIZE,\n    searchTerm,\n    filterType: challengeTypeFilter,\n  });\n\n  const challenges = data?.challenges ?? [];\n  const totalCount = data?.count ?? 0;\n  const pageCount = Math.ceil(totalCount / PAGE_SIZE);\n\n  const { data: userParticipants } = useUserParticipants(userId);\n\n  const joinMutation = useMutation(\n    (challengeId: string) => {\n      if (!userId) return Promise.reject('User not logged in');\n      return joinChallenge(userId, challengeId);\n    },\n    {\n      onSuccess: () => {\n        toast.success('Inscription au d\xE9fi r\xE9ussie');\n        queryClient.invalidateQueries(['user_participants', userId]);\n      },\n      onError: (e: any) => toast.error(`Erreur inscription : ${e.message || e}`),\n    }\n  );\n\n  const leaveMutation = useMutation(\n    (challengeId: string) => {\n      if (!userId) return Promise.reject('User not logged in');\n      return leaveChallenge(userId, challengeId);\n    },\n    {\n      onSuccess: () => {\n        toast.success('D\xE9sinscription du d\xE9fi r\xE9ussie');\n        queryClient.invalidateQueries(['user_participants', userId]);\n      },\n      onError: (e: any) => toast.error(`Erreur d\xE9sinscription : ${e.message || e}`),\n    }\n  );\n\n  const isUserJoined = useCallback(\n    (challengeId: string) => {\n      return userParticipants?.some(p => p.challenge_id === challengeId) ?? false;\n    },\n    [userParticipants]\n  );\n\n  const handleJoinClick = (challengeId: string) => {\n    if (isUserJoined(challengeId)) {\n      leaveMutation.mutate(challengeId);\n    } else {\n      joinMutation.mutate(challengeId);\n    }\n  };\n\n  // Filter challenge types options\n  const challengeTypes = ['daily', 'weekly', 'monthly', 'competition', 'custom'];\n\n  const toggleChallengeTypeFilter = (type: string) => {\n    setChallengeTypeFilter(current =>\n      current.includes(type) ? current.filter(t => t !== type) : [...current, type]\n    );\n    setPage(0);\n  };\n\n  return (\n    <main className=\"min-h-screen p-6 bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 max-w-6xl mx-auto\">\n      <h1 className=\"text-3xl font-extrabold mb-6 text-center\">D\xE9fis MyFitHero</h1>\n\n      {/* Search bar */}\n      <div className=\"max-w-md mx-auto mb-6\">\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={e => {\n            setSearchTerm(e.target.value);\n            setPage(0);\n          }}\n          placeholder=\"Rechercher un d\xE9fi...\"\n          className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-600\"\n          aria-label=\"Rechercher un d\xE9fi\"\n        />\n      </div>\n\n      {/* Challenge type filter */}\n      <fieldset\n        className=\"flex flex-wrap justify-center gap-3 mb-6\"\n        aria-label=\"Filtres types de d\xE9fis\"\n      >\n        {challengeTypes.map(type => {\n          const checked = challengeTypeFilter.includes(type);\n          return (\n            <label\n              key={type}\n              className={clsx(\n                'cursor-pointer select-none rounded px-3 py-1 border',\n                checked\n                  ? 'bg-blue-600 text-white border-blue-600'\n                  : 'border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300'\n              )}\n            >\n              <input\n                type=\"checkbox\"\n                checked={checked}\n                onChange={() => toggleChallengeTypeFilter(type)}\n                className=\"sr-only\"\n              />\n              {type.charAt(0).toUpperCase() + type.slice(1)}\n            </label>\n          );\n        })}\n      </fieldset>\n\n      {/* Challenges list */}\n      <div className=\"grid gap-6 md:grid-cols-2\">\n        {isLoading &&\n          Array.from({ length: PAGE_SIZE }).map((_, idx) => (\n            <div\n              key={idx}\n              className=\"p-6 border rounded-md bg-gray-200 dark:bg-gray-700 animate-pulse h-48\"\n            />\n          ))}\n        {isError && (\n          <div className=\"col-span-full text-center text-red-600\">\n            Erreur de chargement des d\xE9fis.\n          </div>\n        )}\n        {!isLoading && challenges.length === 0 && (\n          <div className=\"text-center text-gray-600\">Aucun d\xE9fi trouv\xE9.</div>\n        )}\n\n        {challenges.map(challenge => {\n          const joined = isUserJoined(challenge.id);\n          return (\n            <motion.article\n              key={challenge.id}\n              layout\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              className=\"p-6 border rounded-lg bg-white dark:bg-gray-800 shadow flex flex-col\"\n              aria-live=\"polite\"\n              aria-label={`D\xE9fi ${challenge.title}`}\n            >\n              <h2 className=\"text-xl font-semibold mb-2\">{challenge.title}</h2>\n              <p className=\"flex-grow text-gray-700 dark:text-gray-300 mb-4 line-clamp-4\">\n                {challenge.description}\n              </p>\n              <div className=\"mb-4 text-sm\">\n                <span>\n                  <strong>Type :</strong> {challenge.challenge_type}\n                </span>\n                <br />\n                <span>\n                  <strong>Objectif :</strong> {challenge.goal_type} - {challenge.goal_target}\n                </span>\n                <br />\n                <span>\n                  P\xE9riode : {new Date(challenge.start_date).toLocaleDateString()} -{' '}\n                  {new Date(challenge.end_date).toLocaleDateString()}\n                </span>\n              </div>\n              <button\n                onClick={() => handleJoinClick(challenge.id)}\n                disabled={joinMutation.isLoading || leaveMutation.isLoading}\n                className={clsx(\n                  'px-4 py-2 rounded-md font-semibold',\n                  joined\n                    ? 'bg-red-600 hover:bg-red-700 text-white'\n                    : 'bg-green-600 hover:bg-green-700 text-white'\n                )}\n                aria-pressed={joined}\n                aria-label={\n                  joined\n                    ? `Se d\xE9sinscrire du d\xE9fi ${challenge.title}`\n                    : `S'inscrire au d\xE9fi ${challenge.title}`\n                }\n              >\n                {joined ? 'Se d\xE9sinscrire' : \"S'inscrire\"}\n              </button>\n            </motion.article>\n          );\n        })}\n      </div>\n\n      {/* Pagination */}\n      <nav\n        className=\"flex justify-center items-center mt-8 space-x-4\"\n        aria-label=\"Pagination des d\xE9fis\"\n      >\n        <button\n          onClick={() => setPage(p => Math.max(p - 1, 0))}\n          disabled={page === 0}\n          className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\n          aria-label=\"Page pr\xE9c\xE9dente\"\n        >\n          Pr\xE9c\xE9dent\n        </button>\n        <span aria-live=\"polite\" aria-atomic=\"true\" className=\"text-lg\">\n          Page {page + 1} / {pageCount}\n        </span>\n        <button\n          onClick={() => setPage(p => (p + 1 < pageCount ? p + 1 : p))}\n          disabled={page + 1 >= pageCount}\n          className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\n          aria-label=\"Page suivante\"\n        >\n          Suivant\n        </button>\n      </nav>\n    </main>\n  );\n};\n\nexport default ChallengesPage;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6cd22b44a604fc97b7802a6e2190fee9b7b1dd0c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4snizdsqx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4snizdsqx();
var __createBinding =
/* istanbul ignore next */
(cov_4snizdsqx().s[0]++,
/* istanbul ignore next */
(cov_4snizdsqx().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_4snizdsqx().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_4snizdsqx().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_4snizdsqx().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[0]++;
  cov_4snizdsqx().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[2][0]++;
    cov_4snizdsqx().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_4snizdsqx().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_4snizdsqx().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_4snizdsqx().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_4snizdsqx().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_4snizdsqx().b[5][1]++,
  /* istanbul ignore next */
  (cov_4snizdsqx().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_4snizdsqx().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[3][0]++;
    cov_4snizdsqx().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_4snizdsqx().f[1]++;
        cov_4snizdsqx().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[3][1]++;
  }
  cov_4snizdsqx().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_4snizdsqx().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[2]++;
  cov_4snizdsqx().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[7][0]++;
    cov_4snizdsqx().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[7][1]++;
  }
  cov_4snizdsqx().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_4snizdsqx().s[11]++,
/* istanbul ignore next */
(cov_4snizdsqx().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_4snizdsqx().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_4snizdsqx().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_4snizdsqx().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[3]++;
  cov_4snizdsqx().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_4snizdsqx().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[4]++;
  cov_4snizdsqx().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_4snizdsqx().s[14]++,
/* istanbul ignore next */
(cov_4snizdsqx().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_4snizdsqx().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_4snizdsqx().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[5]++;
  cov_4snizdsqx().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_4snizdsqx().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_4snizdsqx().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[11][0]++;
    cov_4snizdsqx().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[17]++, {});
  /* istanbul ignore next */
  cov_4snizdsqx().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[13][0]++;
    cov_4snizdsqx().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_4snizdsqx().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_4snizdsqx().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_4snizdsqx().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_4snizdsqx().b[14][0]++;
        cov_4snizdsqx().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_4snizdsqx().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[13][1]++;
  }
  cov_4snizdsqx().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_4snizdsqx().s[23]++;
  return result;
}));
var __importDefault =
/* istanbul ignore next */
(cov_4snizdsqx().s[24]++,
/* istanbul ignore next */
(cov_4snizdsqx().b[16][0]++, this) &&
/* istanbul ignore next */
(cov_4snizdsqx().b[16][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_4snizdsqx().b[16][2]++, function (mod) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[6]++;
  cov_4snizdsqx().s[25]++;
  return /* istanbul ignore next */(cov_4snizdsqx().b[18][0]++, mod) &&
  /* istanbul ignore next */
  (cov_4snizdsqx().b[18][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_4snizdsqx().b[17][0]++, mod) :
  /* istanbul ignore next */
  (cov_4snizdsqx().b[17][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_4snizdsqx().s[26]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_4snizdsqx().s[27]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_4snizdsqx().s[28]++, __importStar(require("react")));
const supabase_1 =
/* istanbul ignore next */
(cov_4snizdsqx().s[29]++, require("@/lib/supabase"));
const clsx_1 =
/* istanbul ignore next */
(cov_4snizdsqx().s[30]++, __importDefault(require("clsx")));
const framer_motion_1 =
/* istanbul ignore next */
(cov_4snizdsqx().s[31]++, require("framer-motion"));
const zustand_1 =
/* istanbul ignore next */
(cov_4snizdsqx().s[32]++, require("zustand"));
const sonner_1 =
/* istanbul ignore next */
(cov_4snizdsqx().s[33]++, require("sonner"));
const useUserStore =
/* istanbul ignore next */
(cov_4snizdsqx().s[34]++, (0, zustand_1.create)(set => {
  /* istanbul ignore next */
  cov_4snizdsqx().f[7]++;
  cov_4snizdsqx().s[35]++;
  return {
    userId: null,
    setUserId: id => {
      /* istanbul ignore next */
      cov_4snizdsqx().f[8]++;
      cov_4snizdsqx().s[36]++;
      return set({
        userId: id
      });
    }
  };
}));
async function fetchChallenges({
  page,
  pageSize,
  searchTerm,
  filterType
}) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[9]++;
  let query =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[37]++, supabase_1.supabase.from('challenges').select('*', {
    count: 'exact'
  }).order('start_date', {
    ascending: true
  }).eq('is_active', true));
  /* istanbul ignore next */
  cov_4snizdsqx().s[38]++;
  if (searchTerm?.trim()) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[19][0]++;
    cov_4snizdsqx().s[39]++;
    query = query.ilike('title', `%${searchTerm.trim()}%`);
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[19][1]++;
  }
  cov_4snizdsqx().s[40]++;
  if (
  /* istanbul ignore next */
  (cov_4snizdsqx().b[21][0]++, filterType) &&
  /* istanbul ignore next */
  (cov_4snizdsqx().b[21][1]++, filterType.length > 0)) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[20][0]++;
    cov_4snizdsqx().s[41]++;
    query = query.in('challenge_type', filterType);
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[20][1]++;
  }
  cov_4snizdsqx().s[42]++;
  query = query.range(page * pageSize, page * pageSize + pageSize - 1);
  const {
    data,
    error,
    count
  } =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[43]++, await query);
  /* istanbul ignore next */
  cov_4snizdsqx().s[44]++;
  if (error) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[22][0]++;
    cov_4snizdsqx().s[45]++;
    throw error;
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[22][1]++;
  }
  cov_4snizdsqx().s[46]++;
  return {
    challenges:
    /* istanbul ignore next */
    (cov_4snizdsqx().b[23][0]++, data) ??
    /* istanbul ignore next */
    (cov_4snizdsqx().b[23][1]++, []),
    count
  };
}
function useChallenges(params) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[10]++;
  const key =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[47]++, ['challenges', params.page, params.pageSize, params.searchTerm, params.filterType?.join(',')]);
  /* istanbul ignore next */
  cov_4snizdsqx().s[48]++;
  return useQuery(key, () => {
    /* istanbul ignore next */
    cov_4snizdsqx().f[11]++;
    cov_4snizdsqx().s[49]++;
    return fetchChallenges(params);
  }, {
    keepPreviousData: true,
    staleTime: 30000
  });
}
// ---- Fetch user participation for challenges ----
async function fetchUserParticipants(userId) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[12]++;
  const {
    data: _data,
    error: _error
  } =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[50]++, await supabase_1.supabase.from('challenge_participants').select('*').eq('user_id', userId));
  /* istanbul ignore next */
  cov_4snizdsqx().s[51]++;
  if (error) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[24][0]++;
    cov_4snizdsqx().s[52]++;
    throw error;
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[24][1]++;
  }
  cov_4snizdsqx().s[53]++;
  return /* istanbul ignore next */(cov_4snizdsqx().b[25][0]++, data) ??
  /* istanbul ignore next */
  (cov_4snizdsqx().b[25][1]++, []);
}
function useUserParticipants(userId) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[13]++;
  cov_4snizdsqx().s[54]++;
  return useQuery(['user_participants', userId], () => {
    /* istanbul ignore next */
    cov_4snizdsqx().f[14]++;
    cov_4snizdsqx().s[55]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_4snizdsqx().b[26][0]++;
      cov_4snizdsqx().s[56]++;
      return Promise.resolve([]);
    } else
    /* istanbul ignore next */
    {
      cov_4snizdsqx().b[26][1]++;
    }
    cov_4snizdsqx().s[57]++;
    return fetchUserParticipants(userId);
  }, {
    enabled: !!userId,
    staleTime: 30000
  });
}
// ---- Mutations for join/leave challenge ----
async function joinChallenge(userId, challengeId) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[15]++;
  const {
    error: _error
  } =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[58]++, await supabase_1.supabase.from('challenge_participants').upsert({
    user_id: userId,
    challenge_id: challengeId,
    progress: 0,
    completed: false
  }, {
    onConflict: ['user_id', 'challenge_id']
  }));
  /* istanbul ignore next */
  cov_4snizdsqx().s[59]++;
  if (error) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[27][0]++;
    cov_4snizdsqx().s[60]++;
    throw error;
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[27][1]++;
  }
}
async function leaveChallenge(userId, challengeId) {
  /* istanbul ignore next */
  cov_4snizdsqx().f[16]++;
  const {
    error: _error
  } =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[61]++, await supabase_1.supabase.from('challenge_participants').delete().eq('user_id', userId).eq('challenge_id', challengeId));
  /* istanbul ignore next */
  cov_4snizdsqx().s[62]++;
  if (error) {
    /* istanbul ignore next */
    cov_4snizdsqx().b[28][0]++;
    cov_4snizdsqx().s[63]++;
    throw error;
  } else
  /* istanbul ignore next */
  {
    cov_4snizdsqx().b[28][1]++;
  }
}
// ---- Main Component ----
const PAGE_SIZE =
/* istanbul ignore next */
(cov_4snizdsqx().s[64]++, 10);
/* istanbul ignore next */
cov_4snizdsqx().s[65]++;
const ChallengesPage = () => {
  /* istanbul ignore next */
  cov_4snizdsqx().f[17]++;
  const userId =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[66]++, useUserStore(state => {
    /* istanbul ignore next */
    cov_4snizdsqx().f[18]++;
    cov_4snizdsqx().s[67]++;
    return state.userId;
  }));
  const [searchTerm, setSearchTerm] =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[68]++, (0, react_1.useState)(''));
  const [page, setPage] =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[69]++, (0, react_1.useState)(0));
  const [challengeTypeFilter, setChallengeTypeFilter] =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[70]++, (0, react_1.useState)([]));
  const queryClient =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[71]++, useQueryClient());
  const {
    data,
    isLoading,
    isError
  } =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[72]++, useChallenges({
    page,
    pageSize: PAGE_SIZE,
    searchTerm,
    filterType: challengeTypeFilter
  }));
  const challenges =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[73]++,
  /* istanbul ignore next */
  (cov_4snizdsqx().b[29][0]++, data?.challenges) ??
  /* istanbul ignore next */
  (cov_4snizdsqx().b[29][1]++, []));
  const totalCount =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[74]++,
  /* istanbul ignore next */
  (cov_4snizdsqx().b[30][0]++, data?.count) ??
  /* istanbul ignore next */
  (cov_4snizdsqx().b[30][1]++, 0));
  const pageCount =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[75]++, Math.ceil(totalCount / PAGE_SIZE));
  const {
    data: userParticipants
  } =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[76]++, useUserParticipants(userId));
  const joinMutation =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[77]++, useMutation(challengeId => {
    /* istanbul ignore next */
    cov_4snizdsqx().f[19]++;
    cov_4snizdsqx().s[78]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_4snizdsqx().b[31][0]++;
      cov_4snizdsqx().s[79]++;
      return Promise.reject('User not logged in');
    } else
    /* istanbul ignore next */
    {
      cov_4snizdsqx().b[31][1]++;
    }
    cov_4snizdsqx().s[80]++;
    return joinChallenge(userId, challengeId);
  }, {
    onSuccess: () => {
      /* istanbul ignore next */
      cov_4snizdsqx().f[20]++;
      cov_4snizdsqx().s[81]++;
      sonner_1.toast.success('Inscription au défi réussie');
      /* istanbul ignore next */
      cov_4snizdsqx().s[82]++;
      queryClient.invalidateQueries(['user_participants', userId]);
    },
    onError: e => {
      /* istanbul ignore next */
      cov_4snizdsqx().f[21]++;
      cov_4snizdsqx().s[83]++;
      return sonner_1.toast.error(`Erreur inscription : ${
      /* istanbul ignore next */
      (cov_4snizdsqx().b[32][0]++, e.message) ||
      /* istanbul ignore next */
      (cov_4snizdsqx().b[32][1]++, e)}`);
    }
  }));
  const leaveMutation =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[84]++, useMutation(challengeId => {
    /* istanbul ignore next */
    cov_4snizdsqx().f[22]++;
    cov_4snizdsqx().s[85]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_4snizdsqx().b[33][0]++;
      cov_4snizdsqx().s[86]++;
      return Promise.reject('User not logged in');
    } else
    /* istanbul ignore next */
    {
      cov_4snizdsqx().b[33][1]++;
    }
    cov_4snizdsqx().s[87]++;
    return leaveChallenge(userId, challengeId);
  }, {
    onSuccess: () => {
      /* istanbul ignore next */
      cov_4snizdsqx().f[23]++;
      cov_4snizdsqx().s[88]++;
      sonner_1.toast.success('Désinscription du défi réussie');
      /* istanbul ignore next */
      cov_4snizdsqx().s[89]++;
      queryClient.invalidateQueries(['user_participants', userId]);
    },
    onError: e => {
      /* istanbul ignore next */
      cov_4snizdsqx().f[24]++;
      cov_4snizdsqx().s[90]++;
      return sonner_1.toast.error(`Erreur désinscription : ${
      /* istanbul ignore next */
      (cov_4snizdsqx().b[34][0]++, e.message) ||
      /* istanbul ignore next */
      (cov_4snizdsqx().b[34][1]++, e)}`);
    }
  }));
  const isUserJoined =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[91]++, (0, react_1.useCallback)(challengeId => {
    /* istanbul ignore next */
    cov_4snizdsqx().f[25]++;
    cov_4snizdsqx().s[92]++;
    return /* istanbul ignore next */(cov_4snizdsqx().b[35][0]++, userParticipants?.some(p => {
      /* istanbul ignore next */
      cov_4snizdsqx().f[26]++;
      cov_4snizdsqx().s[93]++;
      return p.challenge_id === challengeId;
    })) ??
    /* istanbul ignore next */
    (cov_4snizdsqx().b[35][1]++, false);
  }, [userParticipants]));
  /* istanbul ignore next */
  cov_4snizdsqx().s[94]++;
  const handleJoinClick = challengeId => {
    /* istanbul ignore next */
    cov_4snizdsqx().f[27]++;
    cov_4snizdsqx().s[95]++;
    if (isUserJoined(challengeId)) {
      /* istanbul ignore next */
      cov_4snizdsqx().b[36][0]++;
      cov_4snizdsqx().s[96]++;
      leaveMutation.mutate(challengeId);
    } else {
      /* istanbul ignore next */
      cov_4snizdsqx().b[36][1]++;
      cov_4snizdsqx().s[97]++;
      joinMutation.mutate(challengeId);
    }
  };
  // Filter challenge types options
  const challengeTypes =
  /* istanbul ignore next */
  (cov_4snizdsqx().s[98]++, ['daily', 'weekly', 'monthly', 'competition', 'custom']);
  /* istanbul ignore next */
  cov_4snizdsqx().s[99]++;
  const toggleChallengeTypeFilter = type => {
    /* istanbul ignore next */
    cov_4snizdsqx().f[28]++;
    cov_4snizdsqx().s[100]++;
    setChallengeTypeFilter(current => {
      /* istanbul ignore next */
      cov_4snizdsqx().f[29]++;
      cov_4snizdsqx().s[101]++;
      return current.includes(type) ?
      /* istanbul ignore next */
      (cov_4snizdsqx().b[37][0]++, current.filter(t => {
        /* istanbul ignore next */
        cov_4snizdsqx().f[30]++;
        cov_4snizdsqx().s[102]++;
        return t !== type;
      })) :
      /* istanbul ignore next */
      (cov_4snizdsqx().b[37][1]++, [...current, type]);
    });
    /* istanbul ignore next */
    cov_4snizdsqx().s[103]++;
    setPage(0);
  };
  /* istanbul ignore next */
  cov_4snizdsqx().s[104]++;
  return (0, jsx_runtime_1.jsxs)("main", {
    className: "min-h-screen p-6 bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 max-w-6xl mx-auto",
    children: [(0, jsx_runtime_1.jsx)("h1", {
      className: "text-3xl font-extrabold mb-6 text-center",
      children: "D\u00E9fis MyFitHero"
    }), (0, jsx_runtime_1.jsx)("div", {
      className: "max-w-md mx-auto mb-6",
      children: (0, jsx_runtime_1.jsx)("input", {
        type: "text",
        value: searchTerm,
        onChange: e => {
          /* istanbul ignore next */
          cov_4snizdsqx().f[31]++;
          cov_4snizdsqx().s[105]++;
          setSearchTerm(e.target.value);
          /* istanbul ignore next */
          cov_4snizdsqx().s[106]++;
          setPage(0);
        },
        placeholder: "Rechercher un d\u00E9fi...",
        className: "w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-600",
        "aria-label": "Rechercher un d\u00E9fi"
      })
    }), (0, jsx_runtime_1.jsx)("fieldset", {
      className: "flex flex-wrap justify-center gap-3 mb-6",
      "aria-label": "Filtres types de d\u00E9fis",
      children: challengeTypes.map(type => {
        /* istanbul ignore next */
        cov_4snizdsqx().f[32]++;
        const checked =
        /* istanbul ignore next */
        (cov_4snizdsqx().s[107]++, challengeTypeFilter.includes(type));
        /* istanbul ignore next */
        cov_4snizdsqx().s[108]++;
        return (0, jsx_runtime_1.jsxs)("label", {
          className: (0, clsx_1.default)('cursor-pointer select-none rounded px-3 py-1 border', checked ?
          /* istanbul ignore next */
          (cov_4snizdsqx().b[38][0]++, 'bg-blue-600 text-white border-blue-600') :
          /* istanbul ignore next */
          (cov_4snizdsqx().b[38][1]++, 'border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300')),
          children: [(0, jsx_runtime_1.jsx)("input", {
            type: "checkbox",
            checked: checked,
            onChange: () => {
              /* istanbul ignore next */
              cov_4snizdsqx().f[33]++;
              cov_4snizdsqx().s[109]++;
              return toggleChallengeTypeFilter(type);
            },
            className: "sr-only"
          }), type.charAt(0).toUpperCase() + type.slice(1)]
        }, type);
      })
    }), (0, jsx_runtime_1.jsxs)("div", {
      className: "grid gap-6 md:grid-cols-2",
      children: [
      /* istanbul ignore next */
      (cov_4snizdsqx().b[39][0]++, isLoading) &&
      /* istanbul ignore next */
      (cov_4snizdsqx().b[39][1]++, Array.from({
        length: PAGE_SIZE
      }).map((_, idx) => {
        /* istanbul ignore next */
        cov_4snizdsqx().f[34]++;
        cov_4snizdsqx().s[110]++;
        return (0, jsx_runtime_1.jsx)("div", {
          className: "p-6 border rounded-md bg-gray-200 dark:bg-gray-700 animate-pulse h-48"
        }, idx);
      })),
      /* istanbul ignore next */
      (cov_4snizdsqx().b[40][0]++, isError) &&
      /* istanbul ignore next */
      (cov_4snizdsqx().b[40][1]++, (0, jsx_runtime_1.jsx)("div", {
        className: "col-span-full text-center text-red-600",
        children: "Erreur de chargement des d\u00E9fis."
      })),
      /* istanbul ignore next */
      (cov_4snizdsqx().b[41][0]++, !isLoading) &&
      /* istanbul ignore next */
      (cov_4snizdsqx().b[41][1]++, challenges.length === 0) &&
      /* istanbul ignore next */
      (cov_4snizdsqx().b[41][2]++, (0, jsx_runtime_1.jsx)("div", {
        className: "text-center text-gray-600",
        children: "Aucun d\u00E9fi trouv\u00E9."
      })), challenges.map(challenge => {
        /* istanbul ignore next */
        cov_4snizdsqx().f[35]++;
        const joined =
        /* istanbul ignore next */
        (cov_4snizdsqx().s[111]++, isUserJoined(challenge.id));
        /* istanbul ignore next */
        cov_4snizdsqx().s[112]++;
        return (0, jsx_runtime_1.jsxs)(framer_motion_1.motion.article, {
          layout: true,
          initial: {
            opacity: 0,
            y: 10
          },
          animate: {
            opacity: 1,
            y: 0
          },
          exit: {
            opacity: 0,
            y: -10
          },
          className: "p-6 border rounded-lg bg-white dark:bg-gray-800 shadow flex flex-col",
          "aria-live": "polite",
          "aria-label": `Défi ${challenge.title}`,
          children: [(0, jsx_runtime_1.jsx)("h2", {
            className: "text-xl font-semibold mb-2",
            children: challenge.title
          }), (0, jsx_runtime_1.jsx)("p", {
            className: "flex-grow text-gray-700 dark:text-gray-300 mb-4 line-clamp-4",
            children: challenge.description
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: "mb-4 text-sm",
            children: [(0, jsx_runtime_1.jsxs)("span", {
              children: [(0, jsx_runtime_1.jsx)("strong", {
                children: "Type :"
              }), " ", challenge.challenge_type]
            }), (0, jsx_runtime_1.jsx)("br", {}), (0, jsx_runtime_1.jsxs)("span", {
              children: [(0, jsx_runtime_1.jsx)("strong", {
                children: "Objectif :"
              }), " ", challenge.goal_type, " - ", challenge.goal_target]
            }), (0, jsx_runtime_1.jsx)("br", {}), (0, jsx_runtime_1.jsxs)("span", {
              children: ["P\u00E9riode : ", new Date(challenge.start_date).toLocaleDateString(), " -", ' ', new Date(challenge.end_date).toLocaleDateString()]
            })]
          }), (0, jsx_runtime_1.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_4snizdsqx().f[36]++;
              cov_4snizdsqx().s[113]++;
              return handleJoinClick(challenge.id);
            },
            disabled:
            /* istanbul ignore next */
            (cov_4snizdsqx().b[42][0]++, joinMutation.isLoading) ||
            /* istanbul ignore next */
            (cov_4snizdsqx().b[42][1]++, leaveMutation.isLoading),
            className: (0, clsx_1.default)('px-4 py-2 rounded-md font-semibold', joined ?
            /* istanbul ignore next */
            (cov_4snizdsqx().b[43][0]++, 'bg-red-600 hover:bg-red-700 text-white') :
            /* istanbul ignore next */
            (cov_4snizdsqx().b[43][1]++, 'bg-green-600 hover:bg-green-700 text-white')),
            "aria-pressed": joined,
            "aria-label": joined ?
            /* istanbul ignore next */
            (cov_4snizdsqx().b[44][0]++, `Se désinscrire du défi ${challenge.title}`) :
            /* istanbul ignore next */
            (cov_4snizdsqx().b[44][1]++, `S'inscrire au défi ${challenge.title}`),
            children: joined ?
            /* istanbul ignore next */
            (cov_4snizdsqx().b[45][0]++, 'Se désinscrire') :
            /* istanbul ignore next */
            (cov_4snizdsqx().b[45][1]++, "S'inscrire")
          })]
        }, challenge.id);
      })]
    }), (0, jsx_runtime_1.jsxs)("nav", {
      className: "flex justify-center items-center mt-8 space-x-4",
      "aria-label": "Pagination des d\u00E9fis",
      children: [(0, jsx_runtime_1.jsx)("button", {
        onClick: () => {
          /* istanbul ignore next */
          cov_4snizdsqx().f[37]++;
          cov_4snizdsqx().s[114]++;
          return setPage(p => {
            /* istanbul ignore next */
            cov_4snizdsqx().f[38]++;
            cov_4snizdsqx().s[115]++;
            return Math.max(p - 1, 0);
          });
        },
        disabled: page === 0,
        className: "px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50",
        "aria-label": "Page pr\u00E9c\u00E9dente",
        children: "Pr\u00E9c\u00E9dent"
      }), (0, jsx_runtime_1.jsxs)("span", {
        "aria-live": "polite",
        "aria-atomic": "true",
        className: "text-lg",
        children: ["Page ", page + 1, " / ", pageCount]
      }), (0, jsx_runtime_1.jsx)("button", {
        onClick: () => {
          /* istanbul ignore next */
          cov_4snizdsqx().f[39]++;
          cov_4snizdsqx().s[116]++;
          return setPage(p => {
            /* istanbul ignore next */
            cov_4snizdsqx().f[40]++;
            cov_4snizdsqx().s[117]++;
            return p + 1 < pageCount ?
            /* istanbul ignore next */
            (cov_4snizdsqx().b[46][0]++, p + 1) :
            /* istanbul ignore next */
            (cov_4snizdsqx().b[46][1]++, p);
          });
        },
        disabled: page + 1 >= pageCount,
        className: "px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50",
        "aria-label": "Page suivante",
        children: "Suivant"
      })]
    })]
  });
};
/* istanbul ignore next */
cov_4snizdsqx().s[118]++;
exports.default = ChallengesPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,