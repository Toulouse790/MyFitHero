d38ec7a38793c64a12b28aff0be2a865
"use strict";

/* istanbul ignore next */
function cov_2pefzjpgaa() {
  var path = "/workspaces/MyFitHero/src/features/analytics/components/AdvancedCharts.tsx";
  var hash = "395c7c55f444df7c77a7affe501ee1b5a4132144";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/analytics/components/AdvancedCharts.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 50
        }
      },
      "4": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 49
        }
      },
      "5": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "6": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 68
        }
      },
      "7": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 110,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 67
        }
      },
      "9": {
        start: {
          line: 13,
          column: 37
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "10": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 15,
          column: 22
        }
      },
      "11": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 22
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 22,
          column: 11
        }
      },
      "13": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "14": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 20,
          column: 15
        }
      },
      "15": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 64
        }
      },
      "16": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "17": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 55
        }
      },
      "18": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "19": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "20": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 34,
          column: 477
        }
      },
      "21": {
        start: {
          line: 34,
          column: 191
        },
        end: {
          line: 34,
          column: 469
        }
      },
      "22": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 20
        }
      },
      "23": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "24": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 112
        }
      },
      "25": {
        start: {
          line: 40,
          column: 56
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "26": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "27": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 913
        }
      },
      "28": {
        start: {
          line: 43,
          column: 654
        },
        end: {
          line: 43,
          column: 905
        }
      },
      "29": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 877
        }
      },
      "30": {
        start: {
          line: 45,
          column: 654
        },
        end: {
          line: 45,
          column: 869
        }
      },
      "31": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 824
        }
      },
      "32": {
        start: {
          line: 47,
          column: 653
        },
        end: {
          line: 47,
          column: 816
        }
      },
      "33": {
        start: {
          line: 50,
          column: 34
        },
        end: {
          line: 54,
          column: 25
        }
      },
      "34": {
        start: {
          line: 50,
          column: 82
        },
        end: {
          line: 54,
          column: 17
        }
      },
      "35": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 766
        }
      },
      "36": {
        start: {
          line: 58,
          column: 32
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "37": {
        start: {
          line: 58,
          column: 72
        },
        end: {
          line: 62,
          column: 17
        }
      },
      "38": {
        start: {
          line: 60,
          column: 57
        },
        end: {
          line: 60,
          column: 62
        }
      },
      "39": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 572
        }
      },
      "40": {
        start: {
          line: 63,
          column: 208
        },
        end: {
          line: 63,
          column: 248
        }
      },
      "41": {
        start: {
          line: 63,
          column: 382
        },
        end: {
          line: 63,
          column: 461
        }
      },
      "42": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 106
        }
      },
      "43": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 109,
          column: 26
        }
      },
      "44": {
        start: {
          line: 111,
          column: 0
        },
        end: {
          line: 111,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 10,
            column: 24
          }
        },
        loc: {
          start: {
            line: 10,
            column: 126
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 37
          },
          end: {
            line: 13,
            column: 38
          }
        },
        loc: {
          start: {
            line: 13,
            column: 52
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 16,
            column: 36
          },
          end: {
            line: 16,
            column: 37
          }
        },
        loc: {
          start: {
            line: 16,
            column: 54
          },
          end: {
            line: 22,
            column: 9
          }
        },
        line: 16
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 18,
            column: 40
          },
          end: {
            line: 18,
            column: 41
          }
        },
        loc: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 20,
            column: 13
          }
        },
        line: 18
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 27
          }
        },
        loc: {
          start: {
            line: 26,
            column: 58
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 34,
            column: 172
          },
          end: {
            line: 34,
            column: 173
          }
        },
        loc: {
          start: {
            line: 34,
            column: 191
          },
          end: {
            line: 34,
            column: 469
          }
        },
        line: 34
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 25
          }
        },
        loc: {
          start: {
            line: 39,
            column: 30
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 39
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 40,
            column: 42
          },
          end: {
            line: 40,
            column: 43
          }
        },
        loc: {
          start: {
            line: 40,
            column: 56
          },
          end: {
            line: 40,
            column: 63
          }
        },
        line: 40
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 43,
            column: 633
          },
          end: {
            line: 43,
            column: 634
          }
        },
        loc: {
          start: {
            line: 43,
            column: 654
          },
          end: {
            line: 43,
            column: 905
          }
        },
        line: 43
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 45,
            column: 633
          },
          end: {
            line: 45,
            column: 634
          }
        },
        loc: {
          start: {
            line: 45,
            column: 654
          },
          end: {
            line: 45,
            column: 869
          }
        },
        line: 45
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 47,
            column: 632
          },
          end: {
            line: 47,
            column: 633
          }
        },
        loc: {
          start: {
            line: 47,
            column: 653
          },
          end: {
            line: 47,
            column: 816
          }
        },
        line: 47
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 50,
            column: 63
          },
          end: {
            line: 50,
            column: 64
          }
        },
        loc: {
          start: {
            line: 50,
            column: 82
          },
          end: {
            line: 54,
            column: 17
          }
        },
        line: 50
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 58,
            column: 51
          },
          end: {
            line: 58,
            column: 52
          }
        },
        loc: {
          start: {
            line: 58,
            column: 72
          },
          end: {
            line: 62,
            column: 17
          }
        },
        line: 58
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 60,
            column: 47
          },
          end: {
            line: 60,
            column: 48
          }
        },
        loc: {
          start: {
            line: 60,
            column: 57
          },
          end: {
            line: 60,
            column: 62
          }
        },
        line: 60
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 63,
            column: 185
          },
          end: {
            line: 63,
            column: 186
          }
        },
        loc: {
          start: {
            line: 63,
            column: 208
          },
          end: {
            line: 63,
            column: 248
          }
        },
        line: 63
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 63,
            column: 363
          },
          end: {
            line: 63,
            column: 364
          }
        },
        loc: {
          start: {
            line: 63,
            column: 382
          },
          end: {
            line: 63,
            column: 461
          }
        },
        line: 63
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 10,
            column: 38
          },
          end: {
            line: 10,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 47
          },
          end: {
            line: 10,
            column: 50
          }
        }],
        line: 10
      },
      "4": {
        loc: {
          start: {
            line: 10,
            column: 52
          },
          end: {
            line: 10,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 65
          },
          end: {
            line: 10,
            column: 69
          }
        }],
        line: 10
      },
      "5": {
        loc: {
          start: {
            line: 10,
            column: 71
          },
          end: {
            line: 10,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 82
          },
          end: {
            line: 10,
            column: 86
          }
        }],
        line: 10
      },
      "6": {
        loc: {
          start: {
            line: 10,
            column: 88
          },
          end: {
            line: 10,
            column: 102
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 98
          },
          end: {
            line: 10,
            column: 102
          }
        }],
        line: 10
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 104
          },
          end: {
            line: 10,
            column: 118
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 116
          },
          end: {
            line: 10,
            column: 118
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 15,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 15,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "9": {
        loc: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 29
          }
        }, {
          start: {
            line: 14,
            column: 33
          },
          end: {
            line: 14,
            column: 52
          }
        }],
        line: 14
      },
      "10": {
        loc: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 58
          }
        }, {
          start: {
            line: 19,
            column: 62
          },
          end: {
            line: 19,
            column: 63
          }
        }],
        line: 19
      },
      "11": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "12": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 18
          }
        }, {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 29
          }
        }, {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 27,
            column: 47
          }
        }],
        line: 27
      },
      "13": {
        loc: {
          start: {
            line: 34,
            column: 312
          },
          end: {
            line: 34,
            column: 347
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 312
          },
          end: {
            line: 34,
            column: 340
          }
        }, {
          start: {
            line: 34,
            column: 344
          },
          end: {
            line: 34,
            column: 347
          }
        }],
        line: 34
      },
      "14": {
        loc: {
          start: {
            line: 34,
            column: 349
          },
          end: {
            line: 34,
            column: 385
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 349
          },
          end: {
            line: 34,
            column: 375
          }
        }, {
          start: {
            line: 34,
            column: 379
          },
          end: {
            line: 34,
            column: 385
          }
        }],
        line: 34
      },
      "15": {
        loc: {
          start: {
            line: 34,
            column: 387
          },
          end: {
            line: 34,
            column: 418
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 387
          },
          end: {
            line: 34,
            column: 411
          }
        }, {
          start: {
            line: 34,
            column: 415
          },
          end: {
            line: 34,
            column: 418
          }
        }],
        line: 34
      },
      "16": {
        loc: {
          start: {
            line: 34,
            column: 420
          },
          end: {
            line: 34,
            column: 458
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 420
          },
          end: {
            line: 34,
            column: 449
          }
        }, {
          start: {
            line: 34,
            column: 453
          },
          end: {
            line: 34,
            column: 458
          }
        }],
        line: 34
      },
      "17": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 64
          }
        }, {
          start: {
            line: 40,
            column: 68
          },
          end: {
            line: 40,
            column: 112
          }
        }],
        line: 40
      },
      "18": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 43,
            column: 913
          }
        }, {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 45,
            column: 877
          }
        }, {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 47,
            column: 824
          }
        }, {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 55,
            column: 766
          }
        }, {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 63,
            column: 572
          }
        }, {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 65,
            column: 106
          }
        }],
        line: 41
      },
      "19": {
        loc: {
          start: {
            line: 43,
            column: 103
          },
          end: {
            line: 43,
            column: 238
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 103
          },
          end: {
            line: 43,
            column: 111
          }
        }, {
          start: {
            line: 43,
            column: 116
          },
          end: {
            line: 43,
            column: 237
          }
        }],
        line: 43
      },
      "20": {
        loc: {
          start: {
            line: 43,
            column: 553
          },
          end: {
            line: 43,
            column: 612
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 553
          },
          end: {
            line: 43,
            column: 563
          }
        }, {
          start: {
            line: 43,
            column: 567
          },
          end: {
            line: 43,
            column: 612
          }
        }],
        line: 43
      },
      "21": {
        loc: {
          start: {
            line: 43,
            column: 869
          },
          end: {
            line: 43,
            column: 887
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 879
          },
          end: {
            line: 43,
            column: 883
          }
        }, {
          start: {
            line: 43,
            column: 886
          },
          end: {
            line: 43,
            column: 887
          }
        }],
        line: 43
      },
      "22": {
        loc: {
          start: {
            line: 45,
            column: 103
          },
          end: {
            line: 45,
            column: 238
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 103
          },
          end: {
            line: 45,
            column: 111
          }
        }, {
          start: {
            line: 45,
            column: 116
          },
          end: {
            line: 45,
            column: 237
          }
        }],
        line: 45
      },
      "23": {
        loc: {
          start: {
            line: 45,
            column: 553
          },
          end: {
            line: 45,
            column: 612
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 553
          },
          end: {
            line: 45,
            column: 563
          }
        }, {
          start: {
            line: 45,
            column: 567
          },
          end: {
            line: 45,
            column: 612
          }
        }],
        line: 45
      },
      "24": {
        loc: {
          start: {
            line: 45,
            column: 833
          },
          end: {
            line: 45,
            column: 851
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 843
          },
          end: {
            line: 45,
            column: 847
          }
        }, {
          start: {
            line: 45,
            column: 850
          },
          end: {
            line: 45,
            column: 851
          }
        }],
        line: 45
      },
      "25": {
        loc: {
          start: {
            line: 47,
            column: 102
          },
          end: {
            line: 47,
            column: 237
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 102
          },
          end: {
            line: 47,
            column: 110
          }
        }, {
          start: {
            line: 47,
            column: 115
          },
          end: {
            line: 47,
            column: 236
          }
        }],
        line: 47
      },
      "26": {
        loc: {
          start: {
            line: 47,
            column: 552
          },
          end: {
            line: 47,
            column: 611
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 552
          },
          end: {
            line: 47,
            column: 562
          }
        }, {
          start: {
            line: 47,
            column: 566
          },
          end: {
            line: 47,
            column: 611
          }
        }],
        line: 47
      },
      "27": {
        loc: {
          start: {
            line: 47,
            column: 780
          },
          end: {
            line: 47,
            column: 798
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 790
          },
          end: {
            line: 47,
            column: 794
          }
        }, {
          start: {
            line: 47,
            column: 797
          },
          end: {
            line: 47,
            column: 798
          }
        }],
        line: 47
      },
      "28": {
        loc: {
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 54,
            column: 25
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 54,
            column: 19
          }
        }, {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 25
          }
        }],
        line: 50
      },
      "29": {
        loc: {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 51,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 51,
            column: 49
          }
        }, {
          start: {
            line: 51,
            column: 53
          },
          end: {
            line: 51,
            column: 68
          }
        }],
        line: 51
      },
      "30": {
        loc: {
          start: {
            line: 53,
            column: 43
          },
          end: {
            line: 53,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 43
          },
          end: {
            line: 53,
            column: 67
          }
        }, {
          start: {
            line: 53,
            column: 71
          },
          end: {
            line: 53,
            column: 76
          }
        }],
        line: 53
      },
      "31": {
        loc: {
          start: {
            line: 55,
            column: 639
          },
          end: {
            line: 55,
            column: 657
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 649
          },
          end: {
            line: 55,
            column: 653
          }
        }, {
          start: {
            line: 55,
            column: 656
          },
          end: {
            line: 55,
            column: 657
          }
        }],
        line: 55
      },
      "32": {
        loc: {
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 62,
            column: 25
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 62,
            column: 19
          }
        }, {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 62,
            column: 25
          }
        }],
        line: 58
      },
      "33": {
        loc: {
          start: {
            line: 63,
            column: 321
          },
          end: {
            line: 63,
            column: 339
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 331
          },
          end: {
            line: 63,
            column: 335
          }
        }, {
          start: {
            line: 63,
            column: 338
          },
          end: {
            line: 63,
            column: 339
          }
        }],
        line: 63
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/analytics/components/AdvancedCharts.tsx",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/analytics/components/AdvancedCharts.tsx"],
      sourcesContent: ["import { X } from 'lucide-react';\nimport React from 'react';\nimport {\n  LineChart,\n  Line,\n  AreaChart,\n  Area,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Radar,\n} from 'recharts';\nimport { useAdaptiveColors } from '@/shared/components/ThemeProvider';\n\ninterface ChartData {\n  labels?: string[];\n  datasets?: Array<{\n    label: string;\n    data: number[];\n    color: string;\n    pillar: string;\n  }>;\n}\n\ninterface AdvancedChartsProps {\n  data: ChartData;\n  type: 'line' | 'area' | 'bar' | 'radar' | 'pie';\n  height?: number;\n  showLegend?: boolean;\n  showGrid?: boolean;\n  animate?: boolean;\n  className?: string;\n}\n\nconst AdvancedCharts: React.FC<AdvancedChartsProps> = ({\n  data,\n  type,\n  height = 300,\n  showLegend = true,\n  showGrid = true,\n  animate = true,\n  className = '',\n}) => {\n  const adaptiveColors = useAdaptiveColors();\n\n  // Transformation des donn\xE9es pour Recharts\n  const transformDataForRecharts = (chartData: ChartData) => {\n    if (!chartData.labels || !chartData.datasets) return [];\n\n    return chartData.labels.map((label, index) => {\n      const point: any = { name: label };\n      chartData.datasets?.forEach(dataset => {\n        point[dataset.label] = dataset.data[index] || 0;\n      });\n      return point;\n    });\n  };\n\n  const rechartsData = transformDataForRecharts(data);\n\n  // Configuration du tooltip personnalis\xE9\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <div\n          className=\"custom-tooltip\"\n          style={{\n            background: adaptiveColors.surface,\n            border: `1px solid ${adaptiveColors.border}`,\n            borderRadius: '8px',\n            padding: '12px',\n            boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          }}\n        >\n          <p style={{ color: adaptiveColors.text, fontWeight: 'bold', marginBottom: '8px' }}>\n            {label}\n          </p>\n          {payload.map((entry: any, index: number) => (\n            <p key={index} style={{ color: entry.color, margin: '4px 0' }}>\n              {entry.name}: {entry.value}\n              {entry.name === 'Hydratation' && 'L'}\n              {entry.name === 'Nutrition' && ' cal'}\n              {entry.name === 'Sommeil' && 'h'}\n              {entry.name === 'Entra\xEEnement' && 'min'}\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // Rendu selon le type de graphique\n  const renderChart = () => {\n    const colors = data.datasets?.map((d, index) => d.color) || ['#06b6d4', '#10b981', '#8b5cf6', '#ef4444'];\n\n    switch (type) {\n      case 'line':\n        return (\n          <LineChart data={rechartsData}>\n            {showGrid && (\n              <CartesianGrid strokeDasharray=\"3 3\" stroke={adaptiveColors.border} opacity={0.3} />\n            )}\n            <XAxis dataKey=\"name\" stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <YAxis stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <Tooltip content={<CustomTooltip />} />\n            {showLegend && <Legend />}\n            {data.datasets?.map((dataset, index) => (\n              <Line\n                key={dataset.label}\n                type=\"monotone\"\n                dataKey={dataset.label}\n                stroke={dataset.color}\n                strokeWidth={3}\n                dot={{ fill: dataset.color, strokeWidth: 2, r: 4 }}\n                activeDot={{ r: 6 }}\n                animationDuration={animate ? 1000 : 0}\n              />\n            ))}\n          </LineChart>\n        );\n\n      case 'area':\n        return (\n          <AreaChart data={rechartsData}>\n            {showGrid && (\n              <CartesianGrid strokeDasharray=\"3 3\" stroke={adaptiveColors.border} opacity={0.3} />\n            )}\n            <XAxis dataKey=\"name\" stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <YAxis stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <Tooltip content={<CustomTooltip />} />\n            {showLegend && <Legend />}\n            {data.datasets?.map((dataset, index) => (\n              <Area\n                key={dataset.label}\n                type=\"monotone\"\n                dataKey={dataset.label}\n                stackId=\"1\"\n                stroke={dataset.color}\n                fill={dataset.color}\n                fillOpacity={0.6}\n                animationDuration={animate ? 1000 : 0}\n              />\n            ))}\n          </AreaChart>\n        );\n\n      case 'bar':\n        return (\n          <BarChart data={rechartsData}>\n            {showGrid && (\n              <CartesianGrid strokeDasharray=\"3 3\" stroke={adaptiveColors.border} opacity={0.3} />\n            )}\n            <XAxis dataKey=\"name\" stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <YAxis stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <Tooltip content={<CustomTooltip />} />\n            {showLegend && <Legend />}\n            {data.datasets?.map((dataset, index) => (\n              <Bar\n                key={dataset.label}\n                dataKey={dataset.label}\n                fill={dataset.color}\n                radius={[4, 4, 0, 0]}\n                animationDuration={animate ? 1000 : 0}\n              />\n            ))}\n          </BarChart>\n        );\n\n      case 'radar':\n        // Transformation sp\xE9ciale pour le radar\n        const radarData =\n          data.datasets?.[0]?.data.map((value, index) => ({\n            subject: data.labels?.[index] || `Item ${index}`,\n            value: value,\n            fullMark: Math.max(...(data.datasets?.[0]?.data || [100])),\n          })) || [];\n\n        return (\n          <RadarChart data={radarData}>\n            <PolarGrid stroke={adaptiveColors.border} />\n            <PolarAngleAxis\n              dataKey=\"subject\"\n              tick={{ fontSize: 12, fill: adaptiveColors.textSecondary }}\n            />\n            <PolarRadiusAxis\n              angle={90}\n              domain={[0, 'dataMax']}\n              tick={{ fontSize: 10, fill: adaptiveColors.textSecondary }}\n            />\n            <Radar\n              name=\"Performance\"\n              dataKey=\"value\"\n              stroke={colors[0]}\n              fill={colors[0]}\n              fillOpacity={0.3}\n              strokeWidth={2}\n              animationDuration={animate ? 1000 : 0}\n            />\n            <Tooltip content={<CustomTooltip />} />\n          </RadarChart>\n        );\n\n      case 'pie':\n        // Transformation pour le pie chart\n        const pieData =\n          data.datasets?.map((dataset, index) => ({\n            name: dataset.label,\n            value: dataset.data.reduce((a, b) => a + b, 0),\n            color: dataset.color,\n          })) || [];\n\n        return (\n          <PieChart>\n            <Pie\n              data={pieData}\n              cx=\"50%\"\n              cy=\"50%\"\n              labelLine={false}\n              label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n              outerRadius={80}\n              fill=\"#8884d8\"\n              dataKey=\"value\"\n              animationDuration={animate ? 1000 : 0}\n            >\n              {pieData.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={entry.color} />\n              ))}\n            </Pie>\n            <Tooltip content={<CustomTooltip />} />\n          </PieChart>\n        );\n\n      default:\n        return <div>Type de graphique non support\xE9</div>;\n    }\n  };\n\n  return (\n    <div className={`advanced-charts ${className}`}>\n      <ResponsiveContainer width=\"100%\" height={height}>\n        {renderChart()}\n      </ResponsiveContainer>\n\n      <style\n        dangerouslySetInnerHTML={{\n          __html: `\n        .advanced-charts {\n          background: ${adaptiveColors.surface};\n          border-radius: 12px;\n          padding: 16px;\n          border: 1px solid ${adaptiveColors.border};\n        }\n\n        .custom-tooltip {\n          animation: fadeIn 0.3s ease-out;\n        }\n\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        .recharts-legend-wrapper {\n          padding-top: 16px !important;\n        }\n\n        .recharts-legend-item-text {\n          color: ${adaptiveColors.text} !important;\n          font-size: 14px !important;\n        }\n\n        .recharts-cartesian-axis-tick-value {\n          fill: ${adaptiveColors.textSecondary} !important;\n        }\n\n        .recharts-polar-angle-axis-tick-value {\n          fill: ${adaptiveColors.textSecondary} !important;\n        }\n      `,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default AdvancedCharts;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "395c7c55f444df7c77a7affe501ee1b5a4132144"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2pefzjpgaa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2pefzjpgaa();
var __importDefault =
/* istanbul ignore next */
(cov_2pefzjpgaa().s[0]++,
/* istanbul ignore next */
(cov_2pefzjpgaa().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2pefzjpgaa().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2pefzjpgaa().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2pefzjpgaa().f[0]++;
  cov_2pefzjpgaa().s[1]++;
  return /* istanbul ignore next */(cov_2pefzjpgaa().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2pefzjpgaa().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2pefzjpgaa().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2pefzjpgaa().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2pefzjpgaa().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_2pefzjpgaa().s[3]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_2pefzjpgaa().s[4]++, __importDefault(require("react")));
const recharts_1 =
/* istanbul ignore next */
(cov_2pefzjpgaa().s[5]++, require("recharts"));
const ThemeProvider_1 =
/* istanbul ignore next */
(cov_2pefzjpgaa().s[6]++, require("@/shared/components/ThemeProvider"));
/* istanbul ignore next */
cov_2pefzjpgaa().s[7]++;
const AdvancedCharts = ({
  data,
  type,
  height =
  /* istanbul ignore next */
  (cov_2pefzjpgaa().b[3][0]++, 300),
  showLegend =
  /* istanbul ignore next */
  (cov_2pefzjpgaa().b[4][0]++, true),
  showGrid =
  /* istanbul ignore next */
  (cov_2pefzjpgaa().b[5][0]++, true),
  animate =
  /* istanbul ignore next */
  (cov_2pefzjpgaa().b[6][0]++, true),
  className =
  /* istanbul ignore next */
  (cov_2pefzjpgaa().b[7][0]++, '')
}) => {
  /* istanbul ignore next */
  cov_2pefzjpgaa().f[1]++;
  const adaptiveColors =
  /* istanbul ignore next */
  (cov_2pefzjpgaa().s[8]++, (0, ThemeProvider_1.useAdaptiveColors)());
  // Transformation des données pour Recharts
  /* istanbul ignore next */
  cov_2pefzjpgaa().s[9]++;
  const transformDataForRecharts = chartData => {
    /* istanbul ignore next */
    cov_2pefzjpgaa().f[2]++;
    cov_2pefzjpgaa().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_2pefzjpgaa().b[9][0]++, !chartData.labels) ||
    /* istanbul ignore next */
    (cov_2pefzjpgaa().b[9][1]++, !chartData.datasets)) {
      /* istanbul ignore next */
      cov_2pefzjpgaa().b[8][0]++;
      cov_2pefzjpgaa().s[11]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2pefzjpgaa().b[8][1]++;
    }
    cov_2pefzjpgaa().s[12]++;
    return chartData.labels.map((label, index) => {
      /* istanbul ignore next */
      cov_2pefzjpgaa().f[3]++;
      const point =
      /* istanbul ignore next */
      (cov_2pefzjpgaa().s[13]++, {
        name: label
      });
      /* istanbul ignore next */
      cov_2pefzjpgaa().s[14]++;
      chartData.datasets?.forEach(dataset => {
        /* istanbul ignore next */
        cov_2pefzjpgaa().f[4]++;
        cov_2pefzjpgaa().s[15]++;
        point[dataset.label] =
        /* istanbul ignore next */
        (cov_2pefzjpgaa().b[10][0]++, dataset.data[index]) ||
        /* istanbul ignore next */
        (cov_2pefzjpgaa().b[10][1]++, 0);
      });
      /* istanbul ignore next */
      cov_2pefzjpgaa().s[16]++;
      return point;
    });
  };
  const rechartsData =
  /* istanbul ignore next */
  (cov_2pefzjpgaa().s[17]++, transformDataForRecharts(data));
  // Configuration du tooltip personnalisé
  /* istanbul ignore next */
  cov_2pefzjpgaa().s[18]++;
  const CustomTooltip = ({
    active,
    payload,
    label
  }) => {
    /* istanbul ignore next */
    cov_2pefzjpgaa().f[5]++;
    cov_2pefzjpgaa().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_2pefzjpgaa().b[12][0]++, active) &&
    /* istanbul ignore next */
    (cov_2pefzjpgaa().b[12][1]++, payload) &&
    /* istanbul ignore next */
    (cov_2pefzjpgaa().b[12][2]++, payload.length)) {
      /* istanbul ignore next */
      cov_2pefzjpgaa().b[11][0]++;
      cov_2pefzjpgaa().s[20]++;
      return (0, jsx_runtime_1.jsxs)("div", {
        className: "custom-tooltip",
        style: {
          background: adaptiveColors.surface,
          border: `1px solid ${adaptiveColors.border}`,
          borderRadius: '8px',
          padding: '12px',
          boxShadow: '0 4px 12px rgba(0,0,0,0.1)'
        },
        children: [(0, jsx_runtime_1.jsx)("p", {
          style: {
            color: adaptiveColors.text,
            fontWeight: 'bold',
            marginBottom: '8px'
          },
          children: label
        }), payload.map((entry, index) => {
          /* istanbul ignore next */
          cov_2pefzjpgaa().f[6]++;
          cov_2pefzjpgaa().s[21]++;
          return (0, jsx_runtime_1.jsxs)("p", {
            style: {
              color: entry.color,
              margin: '4px 0'
            },
            children: [entry.name, ": ", entry.value,
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[13][0]++, entry.name === 'Hydratation') &&
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[13][1]++, 'L'),
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[14][0]++, entry.name === 'Nutrition') &&
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[14][1]++, ' cal'),
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[15][0]++, entry.name === 'Sommeil') &&
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[15][1]++, 'h'),
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[16][0]++, entry.name === 'Entraînement') &&
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[16][1]++, 'min')]
          }, index);
        })]
      });
    } else
    /* istanbul ignore next */
    {
      cov_2pefzjpgaa().b[11][1]++;
    }
    cov_2pefzjpgaa().s[22]++;
    return null;
  };
  // Rendu selon le type de graphique
  /* istanbul ignore next */
  cov_2pefzjpgaa().s[23]++;
  const renderChart = () => {
    /* istanbul ignore next */
    cov_2pefzjpgaa().f[7]++;
    const colors =
    /* istanbul ignore next */
    (cov_2pefzjpgaa().s[24]++,
    /* istanbul ignore next */
    (cov_2pefzjpgaa().b[17][0]++, data.datasets?.map((d, index) => {
      /* istanbul ignore next */
      cov_2pefzjpgaa().f[8]++;
      cov_2pefzjpgaa().s[25]++;
      return d.color;
    })) ||
    /* istanbul ignore next */
    (cov_2pefzjpgaa().b[17][1]++, ['#06b6d4', '#10b981', '#8b5cf6', '#ef4444']));
    /* istanbul ignore next */
    cov_2pefzjpgaa().s[26]++;
    switch (type) {
      case 'line':
        /* istanbul ignore next */
        cov_2pefzjpgaa().b[18][0]++;
        cov_2pefzjpgaa().s[27]++;
        return (0, jsx_runtime_1.jsxs)(recharts_1.LineChart, {
          data: rechartsData,
          children: [
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[19][0]++, showGrid) &&
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[19][1]++, (0, jsx_runtime_1.jsx)(recharts_1.CartesianGrid, {
            strokeDasharray: "3 3",
            stroke: adaptiveColors.border,
            opacity: 0.3
          })), (0, jsx_runtime_1.jsx)(recharts_1.XAxis, {
            dataKey: "name",
            stroke: adaptiveColors.textSecondary,
            fontSize: 12
          }), (0, jsx_runtime_1.jsx)(recharts_1.YAxis, {
            stroke: adaptiveColors.textSecondary,
            fontSize: 12
          }), (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, {
            content: (0, jsx_runtime_1.jsx)(CustomTooltip, {})
          }),
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[20][0]++, showLegend) &&
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[20][1]++, (0, jsx_runtime_1.jsx)(recharts_1.Legend, {})), data.datasets?.map((dataset, index) => {
            /* istanbul ignore next */
            cov_2pefzjpgaa().f[9]++;
            cov_2pefzjpgaa().s[28]++;
            return (0, jsx_runtime_1.jsx)(recharts_1.Line, {
              type: "monotone",
              dataKey: dataset.label,
              stroke: dataset.color,
              strokeWidth: 3,
              dot: {
                fill: dataset.color,
                strokeWidth: 2,
                r: 4
              },
              activeDot: {
                r: 6
              },
              animationDuration: animate ?
              /* istanbul ignore next */
              (cov_2pefzjpgaa().b[21][0]++, 1000) :
              /* istanbul ignore next */
              (cov_2pefzjpgaa().b[21][1]++, 0)
            }, dataset.label);
          })]
        });
      case 'area':
        /* istanbul ignore next */
        cov_2pefzjpgaa().b[18][1]++;
        cov_2pefzjpgaa().s[29]++;
        return (0, jsx_runtime_1.jsxs)(recharts_1.AreaChart, {
          data: rechartsData,
          children: [
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[22][0]++, showGrid) &&
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[22][1]++, (0, jsx_runtime_1.jsx)(recharts_1.CartesianGrid, {
            strokeDasharray: "3 3",
            stroke: adaptiveColors.border,
            opacity: 0.3
          })), (0, jsx_runtime_1.jsx)(recharts_1.XAxis, {
            dataKey: "name",
            stroke: adaptiveColors.textSecondary,
            fontSize: 12
          }), (0, jsx_runtime_1.jsx)(recharts_1.YAxis, {
            stroke: adaptiveColors.textSecondary,
            fontSize: 12
          }), (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, {
            content: (0, jsx_runtime_1.jsx)(CustomTooltip, {})
          }),
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[23][0]++, showLegend) &&
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[23][1]++, (0, jsx_runtime_1.jsx)(recharts_1.Legend, {})), data.datasets?.map((dataset, index) => {
            /* istanbul ignore next */
            cov_2pefzjpgaa().f[10]++;
            cov_2pefzjpgaa().s[30]++;
            return (0, jsx_runtime_1.jsx)(recharts_1.Area, {
              type: "monotone",
              dataKey: dataset.label,
              stackId: "1",
              stroke: dataset.color,
              fill: dataset.color,
              fillOpacity: 0.6,
              animationDuration: animate ?
              /* istanbul ignore next */
              (cov_2pefzjpgaa().b[24][0]++, 1000) :
              /* istanbul ignore next */
              (cov_2pefzjpgaa().b[24][1]++, 0)
            }, dataset.label);
          })]
        });
      case 'bar':
        /* istanbul ignore next */
        cov_2pefzjpgaa().b[18][2]++;
        cov_2pefzjpgaa().s[31]++;
        return (0, jsx_runtime_1.jsxs)(recharts_1.BarChart, {
          data: rechartsData,
          children: [
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[25][0]++, showGrid) &&
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[25][1]++, (0, jsx_runtime_1.jsx)(recharts_1.CartesianGrid, {
            strokeDasharray: "3 3",
            stroke: adaptiveColors.border,
            opacity: 0.3
          })), (0, jsx_runtime_1.jsx)(recharts_1.XAxis, {
            dataKey: "name",
            stroke: adaptiveColors.textSecondary,
            fontSize: 12
          }), (0, jsx_runtime_1.jsx)(recharts_1.YAxis, {
            stroke: adaptiveColors.textSecondary,
            fontSize: 12
          }), (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, {
            content: (0, jsx_runtime_1.jsx)(CustomTooltip, {})
          }),
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[26][0]++, showLegend) &&
          /* istanbul ignore next */
          (cov_2pefzjpgaa().b[26][1]++, (0, jsx_runtime_1.jsx)(recharts_1.Legend, {})), data.datasets?.map((dataset, index) => {
            /* istanbul ignore next */
            cov_2pefzjpgaa().f[11]++;
            cov_2pefzjpgaa().s[32]++;
            return (0, jsx_runtime_1.jsx)(recharts_1.Bar, {
              dataKey: dataset.label,
              fill: dataset.color,
              radius: [4, 4, 0, 0],
              animationDuration: animate ?
              /* istanbul ignore next */
              (cov_2pefzjpgaa().b[27][0]++, 1000) :
              /* istanbul ignore next */
              (cov_2pefzjpgaa().b[27][1]++, 0)
            }, dataset.label);
          })]
        });
      case 'radar':
        /* istanbul ignore next */
        cov_2pefzjpgaa().b[18][3]++;
        // Transformation spéciale pour le radar
        const radarData =
        /* istanbul ignore next */
        (cov_2pefzjpgaa().s[33]++,
        /* istanbul ignore next */
        (cov_2pefzjpgaa().b[28][0]++, data.datasets?.[0]?.data.map((value, index) => {
          /* istanbul ignore next */
          cov_2pefzjpgaa().f[12]++;
          cov_2pefzjpgaa().s[34]++;
          return {
            subject:
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[29][0]++, data.labels?.[index]) ||
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[29][1]++, `Item ${index}`),
            value: value,
            fullMark: Math.max(...(
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[30][0]++, data.datasets?.[0]?.data) ||
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[30][1]++, [100])))
          };
        })) ||
        /* istanbul ignore next */
        (cov_2pefzjpgaa().b[28][1]++, []));
        /* istanbul ignore next */
        cov_2pefzjpgaa().s[35]++;
        return (0, jsx_runtime_1.jsxs)(recharts_1.RadarChart, {
          data: radarData,
          children: [(0, jsx_runtime_1.jsx)(recharts_1.PolarGrid, {
            stroke: adaptiveColors.border
          }), (0, jsx_runtime_1.jsx)(recharts_1.PolarAngleAxis, {
            dataKey: "subject",
            tick: {
              fontSize: 12,
              fill: adaptiveColors.textSecondary
            }
          }), (0, jsx_runtime_1.jsx)(recharts_1.PolarRadiusAxis, {
            angle: 90,
            domain: [0, 'dataMax'],
            tick: {
              fontSize: 10,
              fill: adaptiveColors.textSecondary
            }
          }), (0, jsx_runtime_1.jsx)(recharts_1.Radar, {
            name: "Performance",
            dataKey: "value",
            stroke: colors[0],
            fill: colors[0],
            fillOpacity: 0.3,
            strokeWidth: 2,
            animationDuration: animate ?
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[31][0]++, 1000) :
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[31][1]++, 0)
          }), (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, {
            content: (0, jsx_runtime_1.jsx)(CustomTooltip, {})
          })]
        });
      case 'pie':
        /* istanbul ignore next */
        cov_2pefzjpgaa().b[18][4]++;
        // Transformation pour le pie chart
        const pieData =
        /* istanbul ignore next */
        (cov_2pefzjpgaa().s[36]++,
        /* istanbul ignore next */
        (cov_2pefzjpgaa().b[32][0]++, data.datasets?.map((dataset, index) => {
          /* istanbul ignore next */
          cov_2pefzjpgaa().f[13]++;
          cov_2pefzjpgaa().s[37]++;
          return {
            name: dataset.label,
            value: dataset.data.reduce((a, b) => {
              /* istanbul ignore next */
              cov_2pefzjpgaa().f[14]++;
              cov_2pefzjpgaa().s[38]++;
              return a + b;
            }, 0),
            color: dataset.color
          };
        })) ||
        /* istanbul ignore next */
        (cov_2pefzjpgaa().b[32][1]++, []));
        /* istanbul ignore next */
        cov_2pefzjpgaa().s[39]++;
        return (0, jsx_runtime_1.jsxs)(recharts_1.PieChart, {
          children: [(0, jsx_runtime_1.jsx)(recharts_1.Pie, {
            data: pieData,
            cx: "50%",
            cy: "50%",
            labelLine: false,
            label: ({
              name,
              percent
            }) => {
              /* istanbul ignore next */
              cov_2pefzjpgaa().f[15]++;
              cov_2pefzjpgaa().s[40]++;
              return `${name} ${(percent * 100).toFixed(0)}%`;
            },
            outerRadius: 80,
            fill: "#8884d8",
            dataKey: "value",
            animationDuration: animate ?
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[33][0]++, 1000) :
            /* istanbul ignore next */
            (cov_2pefzjpgaa().b[33][1]++, 0),
            children: pieData.map((entry, index) => {
              /* istanbul ignore next */
              cov_2pefzjpgaa().f[16]++;
              cov_2pefzjpgaa().s[41]++;
              return (0, jsx_runtime_1.jsx)(recharts_1.Cell, {
                fill: entry.color
              }, `cell-${index}`);
            })
          }), (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, {
            content: (0, jsx_runtime_1.jsx)(CustomTooltip, {})
          })]
        });
      default:
        /* istanbul ignore next */
        cov_2pefzjpgaa().b[18][5]++;
        cov_2pefzjpgaa().s[42]++;
        return (0, jsx_runtime_1.jsx)("div", {
          children: "Type de graphique non support\u00E9"
        });
    }
  };
  /* istanbul ignore next */
  cov_2pefzjpgaa().s[43]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: `advanced-charts ${className}`,
    children: [(0, jsx_runtime_1.jsx)(recharts_1.ResponsiveContainer, {
      width: "100%",
      height: height,
      children: renderChart()
    }), (0, jsx_runtime_1.jsx)("style", {
      dangerouslySetInnerHTML: {
        __html: `
        .advanced-charts {
          background: ${adaptiveColors.surface};
          border-radius: 12px;
          padding: 16px;
          border: 1px solid ${adaptiveColors.border};
        }

        .custom-tooltip {
          animation: fadeIn 0.3s ease-out;
        }

        @keyframes fadeIn {
          from {
            opacity: 0;
            transform: translateY(-10px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }

        .recharts-legend-wrapper {
          padding-top: 16px !important;
        }

        .recharts-legend-item-text {
          color: ${adaptiveColors.text} !important;
          font-size: 14px !important;
        }

        .recharts-cartesian-axis-tick-value {
          fill: ${adaptiveColors.textSecondary} !important;
        }

        .recharts-polar-angle-axis-tick-value {
          fill: ${adaptiveColors.textSecondary} !important;
        }
      `
      }
    })]
  });
};
/* istanbul ignore next */
cov_2pefzjpgaa().s[44]++;
exports.default = AdvancedCharts;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,