2f74ff2aab30410dabd31e771918ac49
"use strict";

/* istanbul ignore next */
function cov_yaftkmsdp() {
  var path = "/workspaces/MyFitHero/src/features/auth/hooks/useAuthStatus.ts";
  var hash = "8f199edf69997751fe775e79942eb1b10934cb9e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/auth/hooks/useAuthStatus.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 31
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 44
        }
      },
      "4": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 59,
          column: 1
        }
      },
      "5": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 55
        }
      },
      "6": {
        start: {
          line: 8,
          column: 34
        },
        end: {
          line: 8,
          column: 61
        }
      },
      "7": {
        start: {
          line: 9,
          column: 34
        },
        end: {
          line: 9,
          column: 61
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "9": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "10": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 28,
          column: 13
        }
      },
      "11": {
        start: {
          line: 14,
          column: 54
        },
        end: {
          line: 14,
          column: 97
        }
      },
      "12": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "13": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "14": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "15": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "16": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 61
        }
      },
      "17": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "18": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 30
        }
      },
      "19": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 34
        }
      },
      "20": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "21": {
        start: {
          line: 32,
          column: 44
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "22": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 32
        }
      },
      "23": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "24": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "25": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "26": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "27": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "28": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "29": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 70
        }
      },
      "30": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 43,
          column: 28
        }
      },
      "31": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 28
        }
      },
      "32": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 29
        }
      },
      "33": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 26
        }
      },
      "34": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 55
        }
      },
      "35": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 58,
          column: 6
        }
      },
      "36": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 22
          },
          end: {
            line: 6,
            column: 23
          }
        },
        loc: {
          start: {
            line: 6,
            column: 28
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 27
          },
          end: {
            line: 10,
            column: 28
          }
        },
        loc: {
          start: {
            line: 10,
            column: 33
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 12,
            column: 27
          }
        },
        loc: {
          start: {
            line: 12,
            column: 38
          },
          end: {
            line: 29,
            column: 9
          }
        },
        line: 12
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 87
          },
          end: {
            line: 32,
            column: 88
          }
        },
        loc: {
          start: {
            line: 32,
            column: 113
          },
          end: {
            line: 36,
            column: 9
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 16
          }
        },
        loc: {
          start: {
            line: 37,
            column: 21
          },
          end: {
            line: 37,
            column: 47
          }
        },
        line: 37
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 39,
            column: 20
          },
          end: {
            line: 39,
            column: 21
          }
        },
        loc: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 16,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 37
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 18,
            column: 45
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 33
          }
        }, {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 34,
            column: 41
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 43,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 43,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/auth/hooks/useAuthStatus.ts",
      mappings: ";;;AAAA,iCAAmD;AACnD,6CAA0C;AAUnC,MAAM,aAAa,GAAG,GAAe,EAAE;IAC5C,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,IAAA,gBAAQ,EAAa,IAAI,CAAC,CAAC;IACnD,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAa,IAAI,CAAC,CAAC;IACzD,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,IAAI,CAAC,CAAC;IAE7C,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,+BAA+B;QAC/B,MAAM,SAAS,GAAG,KAAK,IAAI,EAAE;YAC3B,IAAI,CAAC;gBACH,MAAM,EACJ,IAAI,EAAE,EAAE,OAAO,EAAE,EACjB,KAAK,GACN,GAAG,MAAM,mBAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;gBACrC,IAAI,KAAK;oBAAE,MAAM,KAAK,CAAC;gBAEvB,UAAU,CAAC,OAAO,CAAC,CAAC;gBACpB,OAAO,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,CAAC;YACjC,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACtB,qBAAqB;gBACnB,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;gBAC7C,UAAU,CAAC,IAAI,CAAC,CAAC;gBACjB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC;oBAAS,CAAC;gBACT,UAAU,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC;QACH,CAAC,CAAC;QAEF,SAAS,EAAE,CAAC;QAEZ,6CAA6C;QAC7C,MAAM,EACJ,IAAI,EAAE,EAAE,YAAY,EAAE,GACvB,GAAG,mBAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE;YAC3D,UAAU,CAAC,OAAO,CAAC,CAAC;YACpB,OAAO,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,CAAC;YAC/B,UAAU,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,OAAO,GAAG,KAAK,IAAI,EAAE;QACzB,IAAI,CAAC;YACH,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,mBAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAChD,IAAI,KAAK;gBAAE,MAAM,KAAK,CAAC;YACvB,UAAU,CAAC,IAAI,CAAC,CAAC;YACjB,OAAO,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,qBAAqB;YACrB,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC,CAAC;IAEF,OAAO;QACL,eAAe,EAAE,CAAC,CAAC,IAAI;QACvB,IAAI;QACJ,OAAO;QACP,OAAO;QACP,OAAO;KACR,CAAC;AACJ,CAAC,CAAC;AA5DW,QAAA,aAAa,iBA4DxB",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/auth/hooks/useAuthStatus.ts"],
      sourcesContent: ["import React, { useState, useEffect } from 'react';\nimport { supabase } from '@/lib/supabase';\n\nexport interface AuthStatus {\n  isAuthenticated: boolean;\n  user: any | undefined;\n  session: any | undefined;\n  loading: boolean;\n  signOut: () => Promise<void>;\n}\n\nexport const useAuthStatus = (): AuthStatus => {\n  const [user, setUser] = useState<any | null>(null);\n  const [session, setSession] = useState<any | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // V\xE9rifier la session actuelle\n    const checkUser = async () => {\n      try {\n        const {\n          data: { session },\n          error,\n        } = await supabase.auth.getSession();\n        if (error) throw error;\n\n        setSession(session);\n        setUser(session?.user || null);\n      } catch (error: any) {\n      // Erreur silencieuse\n        console.error('Error checking user:', error);\n        setSession(null);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkUser();\n\n    // \xC9couter les changements d'authentification\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      setSession(null);\n      setUser(null);\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Error signing out:', error);\n    }\n  };\n\n  return {\n    isAuthenticated: !!user,\n    user,\n    session,\n    loading,\n    signOut,\n  };\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f199edf69997751fe775e79942eb1b10934cb9e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_yaftkmsdp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_yaftkmsdp();
cov_yaftkmsdp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_yaftkmsdp().s[1]++;
exports.useAuthStatus = void 0;
const react_1 =
/* istanbul ignore next */
(cov_yaftkmsdp().s[2]++, require("react"));
const supabase_1 =
/* istanbul ignore next */
(cov_yaftkmsdp().s[3]++, require("@/lib/supabase"));
/* istanbul ignore next */
cov_yaftkmsdp().s[4]++;
const useAuthStatus = () => {
  /* istanbul ignore next */
  cov_yaftkmsdp().f[0]++;
  const [user, setUser] =
  /* istanbul ignore next */
  (cov_yaftkmsdp().s[5]++, (0, react_1.useState)(null));
  const [session, setSession] =
  /* istanbul ignore next */
  (cov_yaftkmsdp().s[6]++, (0, react_1.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_yaftkmsdp().s[7]++, (0, react_1.useState)(true));
  /* istanbul ignore next */
  cov_yaftkmsdp().s[8]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_yaftkmsdp().f[1]++;
    cov_yaftkmsdp().s[9]++;
    // Vérifier la session actuelle
    const checkUser = async () => {
      /* istanbul ignore next */
      cov_yaftkmsdp().f[2]++;
      cov_yaftkmsdp().s[10]++;
      try {
        const {
          data: {
            session
          },
          error
        } =
        /* istanbul ignore next */
        (cov_yaftkmsdp().s[11]++, await supabase_1.supabase.auth.getSession());
        /* istanbul ignore next */
        cov_yaftkmsdp().s[12]++;
        if (error) {
          /* istanbul ignore next */
          cov_yaftkmsdp().b[0][0]++;
          cov_yaftkmsdp().s[13]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_yaftkmsdp().b[0][1]++;
        }
        cov_yaftkmsdp().s[14]++;
        setSession(session);
        /* istanbul ignore next */
        cov_yaftkmsdp().s[15]++;
        setUser(
        /* istanbul ignore next */
        (cov_yaftkmsdp().b[1][0]++, session?.user) ||
        /* istanbul ignore next */
        (cov_yaftkmsdp().b[1][1]++, null));
      } catch (error) {
        /* istanbul ignore next */
        cov_yaftkmsdp().s[16]++;
        // Erreur silencieuse
        console.error('Error checking user:', error);
        /* istanbul ignore next */
        cov_yaftkmsdp().s[17]++;
        setSession(null);
        /* istanbul ignore next */
        cov_yaftkmsdp().s[18]++;
        setUser(null);
      } finally {
        /* istanbul ignore next */
        cov_yaftkmsdp().s[19]++;
        setLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_yaftkmsdp().s[20]++;
    checkUser();
    // Écouter les changements d'authentification
    const {
      data: {
        subscription
      }
    } =
    /* istanbul ignore next */
    (cov_yaftkmsdp().s[21]++, supabase_1.supabase.auth.onAuthStateChange(async (event, session) => {
      /* istanbul ignore next */
      cov_yaftkmsdp().f[3]++;
      cov_yaftkmsdp().s[22]++;
      setSession(session);
      /* istanbul ignore next */
      cov_yaftkmsdp().s[23]++;
      setUser(
      /* istanbul ignore next */
      (cov_yaftkmsdp().b[2][0]++, session?.user) ??
      /* istanbul ignore next */
      (cov_yaftkmsdp().b[2][1]++, null));
      /* istanbul ignore next */
      cov_yaftkmsdp().s[24]++;
      setLoading(false);
    }));
    /* istanbul ignore next */
    cov_yaftkmsdp().s[25]++;
    return () => {
      /* istanbul ignore next */
      cov_yaftkmsdp().f[4]++;
      cov_yaftkmsdp().s[26]++;
      return subscription.unsubscribe();
    };
  }, []);
  /* istanbul ignore next */
  cov_yaftkmsdp().s[27]++;
  const signOut = async () => {
    /* istanbul ignore next */
    cov_yaftkmsdp().f[5]++;
    cov_yaftkmsdp().s[28]++;
    try {
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_yaftkmsdp().s[29]++, await supabase_1.supabase.auth.signOut());
      /* istanbul ignore next */
      cov_yaftkmsdp().s[30]++;
      if (error) {
        /* istanbul ignore next */
        cov_yaftkmsdp().b[3][0]++;
        cov_yaftkmsdp().s[31]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_yaftkmsdp().b[3][1]++;
      }
      cov_yaftkmsdp().s[32]++;
      setSession(null);
      /* istanbul ignore next */
      cov_yaftkmsdp().s[33]++;
      setUser(null);
    } catch (error) {
      /* istanbul ignore next */
      cov_yaftkmsdp().s[34]++;
      // Erreur silencieuse
      console.error('Error signing out:', error);
    }
  };
  /* istanbul ignore next */
  cov_yaftkmsdp().s[35]++;
  return {
    isAuthenticated: !!user,
    user,
    session,
    loading,
    signOut
  };
};
/* istanbul ignore next */
cov_yaftkmsdp().s[36]++;
exports.useAuthStatus = useAuthStatus;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,