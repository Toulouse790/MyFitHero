{"version":3,"names":["cov_zgoqtm5l9","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","react_1","require","zustand_1","middleware_1","supabase_1","exports","DEFAULT_SETTINGS","theme","language","units","notifications","workoutReminders","nutritionReminders","hydrationReminders","sleepReminders","socialNotifications","challengeUpdates","systemUpdates","pushNotifications","emailNotifications","inAppSounds","vibration","ui","compactMode","highContrast","reducedMotion","showAdvancedStats","autoStartWorkouts","showTips","workout","defaultRestTime","autoProgressSets","showRPE","showTempo","motivationalQuotes","warmupReminders","privacy","shareWorkouts","shareNutrition","allowFriendRequests","showInLeaderboards","dataCollection","marketingEmails","wearables","autoSync","syncInterval","preferredDevice","backgroundSync","useSettingsStore","create","subscribeWithSelector","persist","set","get","settings","isLoading","error","lastSyncTime","isDirty","updateSettings","updates","currentSettings","newSettings","syncWithSupabase","Date","Error","message","data","user","supabase","auth","getUser","from","upsert","user_id","id","updated_at","toISOString","console","loadFromSupabase","select","eq","single","code","mergedSettings","resetSettings","exportSettings","importSettings","getSettingValue","key","setSettingValue","value","resetSection","section","defaultValue","storage","getItem","str","localStorage","JSON","parse","setItem","stringify","removeItem","partialize","state","useSettingsValue","useSettingsActions","useSettingsSync","useEffect","interval","setInterval","catch","clearInterval"],"sources":["/workspaces/MyFitHero/src/core/settings/settings.store.ts"],"sourcesContent":["// ðŸŽ¯ STORE UNIFIÃ‰ POUR LES PARAMÃˆTRES UTILISATEUR\n// Centralise la gestion des paramÃ¨tres avec sync automatique localStorage/Supabase/Zustand\n\nimport { useEffect } from 'react';\nimport { create } from 'zustand';\nimport { persist, subscribeWithSelector } from 'zustand/middleware';\nimport { supabase } from '@/lib/supabase';\nimport { useToast } from '@/shared/hooks/use-toast';\n\n// ðŸ“Š TYPES CENTRALISÃ‰S\nexport interface UserSettings {\n  // PrÃ©fÃ©rences gÃ©nÃ©rales\n  theme: 'light' | 'dark' | 'system';\n  language: 'en' | 'fr' | 'es';\n  units: 'metric' | 'imperial';\n  \n  // Notifications\n  notifications: {\n    workoutReminders: boolean;\n    nutritionReminders: boolean;\n    hydrationReminders: boolean;\n    sleepReminders: boolean;\n    socialNotifications: boolean;\n    challengeUpdates: boolean;\n    systemUpdates: boolean;\n    pushNotifications: boolean;\n    emailNotifications: boolean;\n    inAppSounds: boolean;\n    vibration: boolean;\n  };\n  \n  // Interface utilisateur\n  ui: {\n    compactMode: boolean;\n    highContrast: boolean;\n    reducedMotion: boolean;\n    showAdvancedStats: boolean;\n    autoStartWorkouts: boolean;\n    showTips: boolean;\n  };\n  \n  // EntraÃ®nement\n  workout: {\n    defaultRestTime: number;\n    autoProgressSets: boolean;\n    showRPE: boolean;\n    showTempo: boolean;\n    motivationalQuotes: boolean;\n    warmupReminders: boolean;\n  };\n  \n  // ConfidentialitÃ©\n  privacy: {\n    shareWorkouts: boolean;\n    shareNutrition: boolean;\n    allowFriendRequests: boolean;\n    showInLeaderboards: boolean;\n    dataCollection: boolean;\n    marketingEmails: boolean;\n  };\n  \n  // Wearables\n  wearables: {\n    autoSync: boolean;\n    syncInterval: number; // minutes\n    preferredDevice: 'apple' | 'google' | 'garmin' | 'fitbit' | undefined;\n    backgroundSync: boolean;\n  };\n}\n\ninterface SettingsState {\n  // Ã‰tat\n  settings: UserSettings;\n  isLoading: boolean;\n  error: string | undefined;\n  lastSyncTime: Date | undefined;\n  isDirty: boolean; // Modifications non sauvegardÃ©es\n  \n  // Actions\n  updateSettings: (updates: Partial<UserSettings>) => Promise<void>;\n  resetSettings: () => Promise<void>;\n  syncWithSupabase: () => Promise<void>;\n  loadFromSupabase: () => Promise<void>;\n  exportSettings: () => UserSettings;\n  importSettings: (settings: UserSettings) => Promise<void>;\n  \n  // Utilitaires\n  getSettingValue: <K extends keyof UserSettings>(key: K) => UserSettings[K];\n  setSettingValue: <K extends keyof UserSettings>(key: K, value: UserSettings[K]) => Promise<void>;\n  resetSection: <K extends keyof UserSettings>(section: K) => Promise<void>;\n}\n\n// ðŸŽ¯ PARAMÃˆTRES PAR DÃ‰FAUT OPTIMISÃ‰S US\nexport const DEFAULT_SETTINGS: UserSettings = {\n  theme: 'system',\n  language: 'en',\n  units: 'imperial', // US par dÃ©faut\n  \n  notifications: {\n    workoutReminders: true,\n    nutritionReminders: true,\n    hydrationReminders: true,\n    sleepReminders: false,\n    socialNotifications: true,\n    challengeUpdates: true,\n    systemUpdates: true,\n    pushNotifications: true,\n    emailNotifications: false,\n    inAppSounds: true,\n    vibration: true,\n  },\n  \n  ui: {\n    compactMode: false,\n    highContrast: false,\n    reducedMotion: false,\n    showAdvancedStats: true,\n    autoStartWorkouts: false,\n    showTips: true,\n  },\n  \n  workout: {\n    defaultRestTime: 90,\n    autoProgressSets: true,\n    showRPE: true,\n    showTempo: false,\n    motivationalQuotes: true,\n    warmupReminders: true,\n  },\n  \n  privacy: {\n    shareWorkouts: true,\n    shareNutrition: false,\n    allowFriendRequests: true,\n    showInLeaderboards: true,\n    dataCollection: true,\n    marketingEmails: false,\n  },\n  \n  wearables: {\n    autoSync: true,\n    syncInterval: 15,\n    preferredDevice: null,\n    backgroundSync: true,\n  },\n};\n\n// ðŸš€ STORE PRINCIPAL\nexport const useSettingsStore = create<SettingsState>()(\n  subscribeWithSelector(\n    persist(\n      (set, get) => ({\n        // Ã‰tat initial\n        settings: DEFAULT_SETTINGS,\n        isLoading: false,\n        error: null,\n        lastSyncTime: null,\n        isDirty: false,\n        \n        // ðŸ’¾ MISE Ã€ JOUR DES PARAMÃˆTRES\n        updateSettings: async (updates: Partial<UserSettings>) => {\n          set({ isLoading: true, error: null });\n          \n          try {\n            const currentSettings = get().settings;\n            const newSettings = { ...currentSettings, ...updates };\n            \n            // Mise Ã  jour locale immÃ©diate\n            set({ \n              settings: newSettings, \n              isDirty: true \n            });\n            \n            // Sync avec Supabase en arriÃ¨re-plan\n            await get().syncWithSupabase();\n            \n            set({ \n              isDirty: false,\n              lastSyncTime: new Date() \n            });\n            \n          } catch (error: any) {\n            set({ \n              error: error instanceof Error ? error.message : 'Erreur de sauvegarde',\n              isDirty: true \n            });\n            throw error;\n          } finally {\n            set({ isLoading: false });\n          }\n        },\n        \n        // ðŸ”„ SYNCHRONISATION SUPABASE\n        syncWithSupabase: async () => {\n          try {\n            const { data: { user } } = await supabase.auth.getUser();\n            if (!user) throw new Error('Utilisateur non authentifiÃ©');\n            \n            const { settings } = get();\n            \n            const { error } = await supabase\n              .from('user_settings')\n              .upsert({\n                user_id: user.id,\n                settings: settings,\n                updated_at: new Date().toISOString(),\n              });\n              \n            if (error) throw error;\n            \n          } catch (error: any) {\n            console.error('Erreur sync Supabase:', error);\n            throw error;\n          }\n        },\n        \n        // ðŸ“¥ CHARGEMENT DEPUIS SUPABASE\n        loadFromSupabase: async () => {\n          set({ isLoading: true, error: null });\n          \n          try {\n            const { data: { user } } = await supabase.auth.getUser();\n            if (!user) throw new Error('Utilisateur non authentifiÃ©');\n            \n            const { data, error }: any = await supabase\n              .from('user_settings')\n              .select('settings, updated_at')\n              .eq('user_id', user.id)\n              .single();\n              \n            if (error && error.code !== 'PGRST116') throw error;\n            \n            if (data?.settings) {\n              // Fusionner avec les paramÃ¨tres par dÃ©faut pour les nouvelles options\n              const mergedSettings = { ...DEFAULT_SETTINGS, ...data.settings };\n              \n              set({ \n                settings: mergedSettings,\n                lastSyncTime: new Date(data.updated_at),\n                isDirty: false \n              });\n            }\n            \n          } catch (error: any) {\n            set({ \n              error: error instanceof Error ? error.message : 'Erreur de chargement'\n            });\n            throw error;\n          } finally {\n            set({ isLoading: false });\n          }\n        },\n        \n        // ðŸ”„ RESET DES PARAMÃˆTRES\n        resetSettings: async () => {\n          set({ isLoading: true });\n          \n          try {\n            set({ settings: DEFAULT_SETTINGS, isDirty: true });\n            await get().syncWithSupabase();\n            set({ isDirty: false, lastSyncTime: new Date() });\n            \n          } catch (error: any) {\n            set({ \n              error: error instanceof Error ? error.message : 'Erreur de reset'\n            });\n            throw error;\n          } finally {\n            set({ isLoading: false });\n          }\n        },\n        \n        // ðŸ“¤ EXPORT DES PARAMÃˆTRES\n        exportSettings: () => {\n          return get().settings;\n        },\n        \n        // ðŸ“¥ IMPORT DES PARAMÃˆTRES\n        importSettings: async (settings: UserSettings) => {\n          await get().updateSettings(settings);\n        },\n        \n        // ðŸŽ¯ UTILITAIRES\n        getSettingValue: <K extends keyof UserSettings>(key: K) => {\n          return get().settings[key];\n        },\n        \n        setSettingValue: async <K extends keyof UserSettings>(key: K, value: UserSettings[K]) => {\n          await get().updateSettings({ [key]: value } as Partial<UserSettings>);\n        },\n        \n        resetSection: async <K extends keyof UserSettings>(section: K) => {\n          const defaultValue = DEFAULT_SETTINGS[section];\n          await get().updateSettings({ [section]: defaultValue } as Partial<UserSettings>);\n        },\n      }),\n      {\n        name: 'myfithero-settings-v2', // Nouvelle version\n        storage: {\n          getItem: (name) => {\n            const str = localStorage.getItem(name);\n            if (!str) return null;\n            return JSON.parse(str);\n          },\n          setItem: (name, value) => {\n            localStorage.setItem(name, JSON.stringify(value));\n          },\n          removeItem: (name) => localStorage.removeItem(name),\n        },\n        // Ne persister que les paramÃ¨tres essentiels\n        partialize: (state) => ({\n          settings: state.settings,\n          lastSyncTime: state.lastSyncTime,\n          isLoading: false,\n          error: null,\n          isDirty: false,\n          updateSettings: state.updateSettings,\n          resetSettings: state.resetSettings,\n          syncWithSupabase: state.syncWithSupabase,\n          loadFromSupabase: state.loadFromSupabase,\n          exportSettings: state.exportSettings,\n          importSettings: state.importSettings,\n          getSettingValue: state.getSettingValue,\n          setSettingValue: state.setSettingValue,\n          resetSection: state.resetSection,\n        }),\n      }\n    )\n  )\n);\n\n// ðŸŽ¯ HOOKS UTILITAIRES\nexport const useSettingsValue = <K extends keyof UserSettings>(key: K) => {\n  return useSettingsStore((state) => state.settings[key]);\n};\n\nexport const useSettingsActions = () => {\n  return useSettingsStore((state) => ({\n    updateSettings: state.updateSettings,\n    resetSettings: state.resetSettings,\n    syncWithSupabase: state.syncWithSupabase,\n    loadFromSupabase: state.loadFromSupabase,\n  }));\n};\n\n// ðŸ”„ HOOK POUR LA SYNCHRONISATION AUTO\n\nexport const useSettingsSync = () => {\n  const { isDirty, syncWithSupabase } = useSettingsStore();\n  \n  // Auto-sync toutes les 30 secondes si des modifications sont en attente\n  useEffect(() => {\n    if (!isDirty) return;\n    \n    const interval = setInterval(() => {\n      syncWithSupabase().catch(console.error);\n    }, 30000);\n    \n    return () => clearInterval(interval);\n  }, [isDirty, syncWithSupabase]);\n};"],"mappings":"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","ignoreList":[]}