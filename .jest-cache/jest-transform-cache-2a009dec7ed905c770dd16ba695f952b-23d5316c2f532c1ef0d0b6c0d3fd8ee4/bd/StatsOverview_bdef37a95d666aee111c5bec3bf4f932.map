{"version":3,"names":["react_1","cov_9nzv7ruky","s","__importStar","require","lucide_react_1","card_1","badge_1","supabase_1","use_toast_1","UserDataService","getUserStats","uid","f","userId","totalWorkouts","total_workouts","totalCaloriesBurned","averageWorkoutDuration","streakDays","current_streak","longestStreak","longest_streak","totalNutritionLogs","total_nutrition_logs","total_sleep_hours","total_hydration_logs","averageSleepQuality","averageHydrationScore","totalBadges","badges_earned","totalXP","experience_points","level","healthScore","lastActivityDate","Date","joinDate","updatedAt","BadgeService","getBadgeStats","StatsOverview","className","b","showDetailed","stats","setStats","useState","badgeStats","setBadgeStats","loading","setLoading","setUserId","toast","useToast","useEffect","initialize","data","user","supabase","auth","getUser","id","loadStats","userStats","badgeStatsData","Promise","all","error","console","title","description","variant","getLevel","experience","Math","floor","getExperienceForNextLevel","currentLevel","getStreakColor","streak","getStreakEmoji","jsx_runtime_1","jsxs","Card","children","jsx","CardHeader","CardTitle","CardContent","TrendingUp","Flame","Star","Badge","style","width","Dumbbell","Apple","Moon","Droplets","Trophy","earnedBadges","commonBadges","rareBadges","epicBadges","legendaryBadges","totalPoints","exports","default"],"sources":["/workspaces/MyFitHero/src/features/analytics/components/StatsOverview.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  TrendingUp,\n  TrendingDown,\n  Flame,\n  Target,\n  Calendar,\n  Dumbbell,\n  Apple,\n  Moon,\n  Droplets,\n  Trophy,\n  Star,\n  Zap,\n  Activity,\n  BarChart3,\n  Award,\n  Clock,\n  Heart,\n  Brain,\n  Shield\n} from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { supabase } from '@/lib/supabase';\nimport { useToast } from '@/shared/hooks/use-toast';\n\n// Services temporaires (Ã  implÃ©menter)\nconst UserDataService = {\n  getUserStats: async (uid: string): Promise<UserStats> => ({\n    userId: uid,\n    totalWorkouts: 15,\n    total_workouts: 15,\n    totalCaloriesBurned: 2500,\n    averageWorkoutDuration: 45,\n    streakDays: 7,\n    current_streak: 7,\n    longestStreak: 14,\n    longest_streak: 14,\n    totalNutritionLogs: 25,\n    total_nutrition_logs: 25,\n    total_sleep_hours: 56,\n    total_hydration_logs: 30,\n    averageSleepQuality: 8.2,\n    averageHydrationScore: 85,\n    totalBadges: 8,\n    badges_earned: 8,\n    totalXP: 1250,\n    experience_points: 1250,\n    level: 5,\n    healthScore: 87,\n    lastActivityDate: new Date(),\n    joinDate: new Date('2024-01-01'),\n    updatedAt: new Date(),\n  }),\n};\nconst BadgeService = {\n  getBadgeStats: async (uid: string) => ({ totalBadges: 8 }),\n};\n\n// Types pour les statistiques utilisateur MyFitHero\ninterface UserStats {\n  userId: string;\n  totalWorkouts: number;\n  total_workouts: number;\n  totalCaloriesBurned: number;\n  averageWorkoutDuration: number;\n  streakDays: number;\n  current_streak: number;\n  longestStreak: number;\n  longest_streak: number;\n  totalNutritionLogs: number;\n  total_nutrition_logs: number;\n  total_sleep_hours: number;\n  total_hydration_logs: number;\n  averageSleepQuality: number;\n  averageHydrationScore: number;\n  totalBadges: number;\n  badges_earned: number;\n  totalXP: number;\n  experience_points: number;\n  level: number;\n  healthScore: number;\n  lastActivityDate: Date | undefined;\n  joinDate: Date;\n  updatedAt: Date;\n}\n\ninterface StatsOverviewProps {\n  className?: string;\n  showDetailed?: boolean;\n}\n\nexport const StatsOverview: React.FC<StatsOverviewProps> = ({\n  className = '',\n  showDetailed = false,\n}) => {\n  const [stats, setStats] = useState<UserStats | null>(null);\n  const [badgeStats, setBadgeStats] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [userId, setUserId] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const initialize = async () => {\n      const {\n        data: { user },\n      } = await supabase.auth.getUser();\n      if (!user) return;\n\n      setUserId(user.id);\n      await loadStats(user.id);\n    };\n\n    initialize();\n  }, []);\n\n  const loadStats = async (uid: string) => {\n    try {\n      setLoading(true);\n\n      const [userStats, badgeStatsData] = await Promise.all([\n        UserDataService.getUserStats(uid),\n        BadgeService.getBadgeStats(uid),\n      ]);\n\n      setStats(userStats);\n      setBadgeStats(badgeStatsData);\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur lors du chargement des statistiques:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger les statistiques',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getLevel = (experience: number): number => {\n    return Math.floor(experience / 1000) + 1;\n  };\n\n  const getExperienceForNextLevel = (experience: number): number => {\n    const currentLevel = getLevel(experience);\n    return currentLevel * 1000 - experience;\n  };\n\n  const getStreakColor = (streak: number): string => {\n    if (streak >= 30) return 'text-purple-600 bg-purple-100';\n    if (streak >= 14) return 'text-blue-600 bg-blue-100';\n    if (streak >= 7) return 'text-green-600 bg-green-100';\n    if (streak >= 3) return 'text-yellow-600 bg-yellow-100';\n    return 'text-gray-600 bg-gray-100';\n  };\n\n  const getStreakEmoji = (streak: number): string => {\n    if (streak >= 30) return 'ðŸ”¥';\n    if (streak >= 14) return 'âš¡';\n    if (streak >= 7) return 'ðŸŒŸ';\n    if (streak >= 3) return 'ðŸ’ª';\n    return 'ðŸŽ¯';\n  };\n\n  if (loading) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle>Statistiques</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center h-32\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!stats) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle>Statistiques</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-center text-gray-600\">Aucune statistique disponible</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center space-x-2\">\n          <TrendingUp className=\"w-5 h-5\" />\n          <span>Vos Statistiques</span>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-6\">\n          {/* Streak et Niveau */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className={`p-4 rounded-lg ${getStreakColor(stats.current_streak)}`}>\n              <div className=\"flex items-center justify-between mb-2\">\n                <Flame className=\"w-6 h-6\" />\n                <span className=\"text-2xl\">{getStreakEmoji(stats.current_streak)}</span>\n              </div>\n              <p className=\"text-sm font-medium mb-1\">Streak actuelle</p>\n              <p className=\"text-2xl font-bold\">{stats.current_streak}</p>\n              <p className=\"text-xs opacity-75\">Record: {stats.longest_streak} jours</p>\n            </div>\n\n            <div className=\"p-4 bg-gradient-to-br from-blue-100 to-purple-100 rounded-lg\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <Star className=\"w-6 h-6 text-purple-600\" />\n                <Badge variant=\"secondary\" className=\"bg-purple-200 text-purple-800\">\n                  Niveau {stats.level}\n                </Badge>\n              </div>\n              <p className=\"text-sm font-medium mb-1 text-purple-700\">ExpÃ©rience</p>\n              <p className=\"text-2xl font-bold text-purple-800\">{stats.experience_points}</p>\n              <div className=\"w-full bg-purple-200 rounded-full h-2 mt-2\">\n                <div\n                  className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n                  style={{\n                    width: `${((stats.experience_points % 1000) / 1000) * 100}%`,\n                  }}\n                />\n              </div>\n              <p className=\"text-xs text-purple-600 mt-1\">\n                {getExperienceForNextLevel(stats.experience_points)} XP pour le niveau{' '}\n                {getLevel(stats.experience_points) + 1}\n              </p>\n            </div>\n          </div>\n\n          {/* Statistiques des piliers */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"p-3 bg-orange-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Dumbbell className=\"w-5 h-5 text-orange-600\" />\n                <span className=\"text-sm font-medium text-orange-800\">Workouts</span>\n              </div>\n              <p className=\"text-xl font-bold text-orange-600\">{stats.total_workouts}</p>\n            </div>\n\n            <div className=\"p-3 bg-green-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Apple className=\"w-5 h-5 text-green-600\" />\n                <span className=\"text-sm font-medium text-green-800\">Nutrition</span>\n              </div>\n              <p className=\"text-xl font-bold text-green-600\">{stats.total_nutrition_logs}</p>\n            </div>\n\n            <div className=\"p-3 bg-indigo-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Moon className=\"w-5 h-5 text-indigo-600\" />\n                <span className=\"text-sm font-medium text-indigo-800\">Sommeil</span>\n              </div>\n              <p className=\"text-xl font-bold text-indigo-600\">{stats.total_sleep_hours}h</p>\n            </div>\n\n            <div className=\"p-3 bg-cyan-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Droplets className=\"w-5 h-5 text-cyan-600\" />\n                <span className=\"text-sm font-medium text-cyan-800\">Hydratation</span>\n              </div>\n              <p className=\"text-xl font-bold text-cyan-600\">{stats.total_hydration_logs}</p>\n            </div>\n          </div>\n\n          {/* Badges */}\n          {badgeStats && (\n            <div className=\"p-4 bg-gradient-to-r from-yellow-50 to-orange-50 rounded-lg\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center space-x-2\">\n                  <Trophy className=\"w-6 h-6 text-yellow-600\" />\n                  <span className=\"font-semibold text-yellow-800\">Badges</span>\n                </div>\n                <Badge variant=\"outline\" className=\"bg-yellow-100 text-yellow-800\">\n                  {badgeStats.earnedBadges}/{badgeStats.totalBadges}\n                </Badge>\n              </div>\n\n              <div className=\"grid grid-cols-4 gap-2 text-center\">\n                <div>\n                  <p className=\"text-lg font-bold text-gray-600\">{badgeStats.commonBadges}</p>\n                  <p className=\"text-xs text-gray-500\">Communs</p>\n                </div>\n                <div>\n                  <p className=\"text-lg font-bold text-blue-600\">{badgeStats.rareBadges}</p>\n                  <p className=\"text-xs text-blue-500\">Rares</p>\n                </div>\n                <div>\n                  <p className=\"text-lg font-bold text-purple-600\">{badgeStats.epicBadges}</p>\n                  <p className=\"text-xs text-purple-500\">Ã‰piques</p>\n                </div>\n                <div>\n                  <p className=\"text-lg font-bold text-yellow-600\">{badgeStats.legendaryBadges}</p>\n                  <p className=\"text-xs text-yellow-500\">LÃ©gendaires</p>\n                </div>\n              </div>\n\n              <div className=\"mt-3 pt-3 border-t border-yellow-200\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-yellow-700\">Points totaux</span>\n                  <span className=\"font-bold text-yellow-800\">{badgeStats.totalPoints} pts</span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Statistiques dÃ©taillÃ©es */}\n          {showDetailed && (\n            <div className=\"pt-4 border-t border-gray-200\">\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-gray-600\">Meilleure streak</span>\n                  <span className=\"font-semibold\">{stats.longest_streak} jours</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-gray-600\">Badges gagnÃ©s</span>\n                  <span className=\"font-semibold\">{stats.badges_earned}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-gray-600\">Niveau actuel</span>\n                  <span className=\"font-semibold\">{stats.level}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-gray-600\">XP total</span>\n                  <span className=\"font-semibold\">{stats.experience_points}</span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default StatsOverview;\n"],"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","ignoreList":[]}