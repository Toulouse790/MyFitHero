a5bbe4eb3a1f534438e50ba955ad7ff2
"use strict";

/* istanbul ignore next */
function cov_2eupd9obd0() {
  var path = "/workspaces/MyFitHero/src/features/sleep/components/QualitySlider.tsx";
  var hash = "fca4323ce86c52bf83707ca6d5e6501c4b71cdd8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/sleep/components/QualitySlider.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 31
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 9,
          column: 16
        },
        end: {
          line: 9,
          column: 49
        }
      },
      "6": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "7": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 22,
          column: 1
        }
      },
      "8": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "9": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "10": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "11": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "12": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "13": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "14": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "15": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "16": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 783
        }
      },
      "17": {
        start: {
          line: 21,
          column: 354
        },
        end: {
          line: 21,
          column: 395
        }
      },
      "18": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 11,
            column: 23
          }
        },
        loc: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 12,
            column: 29
          }
        },
        loc: {
          start: {
            line: 12,
            column: 39
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 12
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 349
          },
          end: {
            line: 21,
            column: 350
          }
        },
        loc: {
          start: {
            line: 21,
            column: 354
          },
          end: {
            line: 21,
            column: 395
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 14,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 14,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 16,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 16,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "5": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 18,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 18,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/sleep/components/QualitySlider.tsx",
      mappings: ";;;;;;;AAAA,kDAAkD;AAClD,kDAA0B;AAC1B,iDAA8C;AAOvC,MAAM,aAAa,GAAiC,CAAC,EAC1D,OAAO,EACP,eAAe,EAChB,EAAE,EAAE;IACH,MAAM,eAAe,GAAG,CAAC,KAAa,EAAU,EAAE;QAChD,IAAI,KAAK,IAAI,CAAC;YAAE,OAAO,gBAAgB,CAAC;QACxC,IAAI,KAAK,IAAI,CAAC;YAAE,OAAO,eAAe,CAAC;QACvC,IAAI,KAAK,IAAI,CAAC;YAAE,OAAO,iBAAiB,CAAC;QACzC,OAAO,cAAc,CAAC;IACxB,CAAC,CAAC;IAEF,OAAO,CACL,iCAAK,SAAS,EAAC,WAAW,aACxB,uBAAC,aAAK,iDAAkC,EACxC,iCAAK,SAAS,EAAC,6BAA6B,aAC1C,kCACE,IAAI,EAAC,OAAO,EACZ,GAAG,EAAC,GAAG,EACP,GAAG,EAAC,IAAI,EACR,KAAK,EAAE,OAAO,EACd,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACxD,SAAS,EAAC,QAAQ,GAClB,EACF,gCAAK,SAAS,EAAE,8BAA8B,eAAe,CAAC,OAAO,CAAC,EAAE,YACrE,OAAO,GACJ,IACF,EACN,iCAAK,SAAS,EAAC,4CAA4C,aACzD,iEAAyB,EACzB,yDAAsB,IAClB,IACF,CACP,CAAC;AACJ,CAAC,CAAC;AAjCW,QAAA,aAAa,iBAiCxB",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/sleep/components/QualitySlider.tsx"],
      sourcesContent: ["// src/features/sleep/components/QualitySlider.tsx\nimport React from 'react';\nimport { Label } from '@/components/ui/label';\n\ninterface QualitySliderProps {\n  quality: number;\n  onQualityChange: (quality: number) => void;\n}\n\nexport const QualitySlider: React.FC<QualitySliderProps> = ({\n  quality,\n  onQualityChange\n}) => {\n  const getQualityColor = (value: number): string => {\n    if (value >= 8) return 'text-green-600';\n    if (value >= 6) return 'text-blue-600';\n    if (value >= 4) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  return (\n    <div className=\"space-y-3\">\n      <Label>Qualit\xE9 du sommeil (1-10)</Label>\n      <div className=\"flex items-center space-x-2\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"10\"\n          value={quality}\n          onChange={e => onQualityChange(parseInt(e.target.value))}\n          className=\"flex-1\"\n        />\n        <div className={`w-12 text-center font-bold ${getQualityColor(quality)}`}>\n          {quality}\n        </div>\n      </div>\n      <div className=\"flex justify-between text-xs text-gray-500\">\n        <span>Tr\xE8s mauvais</span>\n        <span>Excellent</span>\n      </div>\n    </div>\n  );\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fca4323ce86c52bf83707ca6d5e6501c4b71cdd8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2eupd9obd0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2eupd9obd0();
var __importDefault =
/* istanbul ignore next */
(cov_2eupd9obd0().s[0]++,
/* istanbul ignore next */
(cov_2eupd9obd0().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2eupd9obd0().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2eupd9obd0().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2eupd9obd0().f[0]++;
  cov_2eupd9obd0().s[1]++;
  return /* istanbul ignore next */(cov_2eupd9obd0().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2eupd9obd0().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2eupd9obd0().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2eupd9obd0().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2eupd9obd0().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2eupd9obd0().s[3]++;
exports.QualitySlider = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_2eupd9obd0().s[4]++, require("react/jsx-runtime"));
// src/features/sleep/components/QualitySlider.tsx
const react_1 =
/* istanbul ignore next */
(cov_2eupd9obd0().s[5]++, __importDefault(require("react")));
const label_1 =
/* istanbul ignore next */
(cov_2eupd9obd0().s[6]++, require("@/components/ui/label"));
/* istanbul ignore next */
cov_2eupd9obd0().s[7]++;
const QualitySlider = ({
  quality,
  onQualityChange
}) => {
  /* istanbul ignore next */
  cov_2eupd9obd0().f[1]++;
  cov_2eupd9obd0().s[8]++;
  const getQualityColor = value => {
    /* istanbul ignore next */
    cov_2eupd9obd0().f[2]++;
    cov_2eupd9obd0().s[9]++;
    if (value >= 8) {
      /* istanbul ignore next */
      cov_2eupd9obd0().b[3][0]++;
      cov_2eupd9obd0().s[10]++;
      return 'text-green-600';
    } else
    /* istanbul ignore next */
    {
      cov_2eupd9obd0().b[3][1]++;
    }
    cov_2eupd9obd0().s[11]++;
    if (value >= 6) {
      /* istanbul ignore next */
      cov_2eupd9obd0().b[4][0]++;
      cov_2eupd9obd0().s[12]++;
      return 'text-blue-600';
    } else
    /* istanbul ignore next */
    {
      cov_2eupd9obd0().b[4][1]++;
    }
    cov_2eupd9obd0().s[13]++;
    if (value >= 4) {
      /* istanbul ignore next */
      cov_2eupd9obd0().b[5][0]++;
      cov_2eupd9obd0().s[14]++;
      return 'text-yellow-600';
    } else
    /* istanbul ignore next */
    {
      cov_2eupd9obd0().b[5][1]++;
    }
    cov_2eupd9obd0().s[15]++;
    return 'text-red-600';
  };
  /* istanbul ignore next */
  cov_2eupd9obd0().s[16]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: "space-y-3",
    children: [(0, jsx_runtime_1.jsx)(label_1.Label, {
      children: "Qualit\u00E9 du sommeil (1-10)"
    }), (0, jsx_runtime_1.jsxs)("div", {
      className: "flex items-center space-x-2",
      children: [(0, jsx_runtime_1.jsx)("input", {
        type: "range",
        min: "1",
        max: "10",
        value: quality,
        onChange: e => {
          /* istanbul ignore next */
          cov_2eupd9obd0().f[3]++;
          cov_2eupd9obd0().s[17]++;
          return onQualityChange(parseInt(e.target.value));
        },
        className: "flex-1"
      }), (0, jsx_runtime_1.jsx)("div", {
        className: `w-12 text-center font-bold ${getQualityColor(quality)}`,
        children: quality
      })]
    }), (0, jsx_runtime_1.jsxs)("div", {
      className: "flex justify-between text-xs text-gray-500",
      children: [(0, jsx_runtime_1.jsx)("span", {
        children: "Tr\u00E8s mauvais"
      }), (0, jsx_runtime_1.jsx)("span", {
        children: "Excellent"
      })]
    })]
  });
};
/* istanbul ignore next */
cov_2eupd9obd0().s[18]++;
exports.QualitySlider = QualitySlider;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmV1cGQ5b2JkMCIsImFjdHVhbENvdmVyYWdlIiwicmVhY3RfMSIsInMiLCJfX2ltcG9ydERlZmF1bHQiLCJyZXF1aXJlIiwibGFiZWxfMSIsIlF1YWxpdHlTbGlkZXIiLCJxdWFsaXR5Iiwib25RdWFsaXR5Q2hhbmdlIiwiZiIsImdldFF1YWxpdHlDb2xvciIsInZhbHVlIiwiYiIsImpzeF9ydW50aW1lXzEiLCJqc3hzIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJqc3giLCJMYWJlbCIsInR5cGUiLCJtaW4iLCJtYXgiLCJvbkNoYW5nZSIsImUiLCJwYXJzZUludCIsInRhcmdldCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvd29ya3NwYWNlcy9NeUZpdEhlcm8vc3JjL2ZlYXR1cmVzL3NsZWVwL2NvbXBvbmVudHMvUXVhbGl0eVNsaWRlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2ZlYXR1cmVzL3NsZWVwL2NvbXBvbmVudHMvUXVhbGl0eVNsaWRlci50c3hcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMYWJlbCB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9sYWJlbCc7XG5cbmludGVyZmFjZSBRdWFsaXR5U2xpZGVyUHJvcHMge1xuICBxdWFsaXR5OiBudW1iZXI7XG4gIG9uUXVhbGl0eUNoYW5nZTogKHF1YWxpdHk6IG51bWJlcikgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNvbnN0IFF1YWxpdHlTbGlkZXI6IFJlYWN0LkZDPFF1YWxpdHlTbGlkZXJQcm9wcz4gPSAoe1xuICBxdWFsaXR5LFxuICBvblF1YWxpdHlDaGFuZ2Vcbn0pID0+IHtcbiAgY29uc3QgZ2V0UXVhbGl0eUNvbG9yID0gKHZhbHVlOiBudW1iZXIpOiBzdHJpbmcgPT4ge1xuICAgIGlmICh2YWx1ZSA+PSA4KSByZXR1cm4gJ3RleHQtZ3JlZW4tNjAwJztcbiAgICBpZiAodmFsdWUgPj0gNikgcmV0dXJuICd0ZXh0LWJsdWUtNjAwJztcbiAgICBpZiAodmFsdWUgPj0gNCkgcmV0dXJuICd0ZXh0LXllbGxvdy02MDAnO1xuICAgIHJldHVybiAndGV4dC1yZWQtNjAwJztcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0zXCI+XG4gICAgICA8TGFiZWw+UXVhbGl0w6kgZHUgc29tbWVpbCAoMS0xMCk8L0xhYmVsPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTJcIj5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgdHlwZT1cInJhbmdlXCJcbiAgICAgICAgICBtaW49XCIxXCJcbiAgICAgICAgICBtYXg9XCIxMFwiXG4gICAgICAgICAgdmFsdWU9e3F1YWxpdHl9XG4gICAgICAgICAgb25DaGFuZ2U9e2UgPT4gb25RdWFsaXR5Q2hhbmdlKHBhcnNlSW50KGUudGFyZ2V0LnZhbHVlKSl9XG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmxleC0xXCJcbiAgICAgICAgLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2B3LTEyIHRleHQtY2VudGVyIGZvbnQtYm9sZCAke2dldFF1YWxpdHlDb2xvcihxdWFsaXR5KX1gfT5cbiAgICAgICAgICB7cXVhbGl0eX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWJldHdlZW4gdGV4dC14cyB0ZXh0LWdyYXktNTAwXCI+XG4gICAgICAgIDxzcGFuPlRyw6hzIG1hdXZhaXM8L3NwYW4+XG4gICAgICAgIDxzcGFuPkV4Y2VsbGVudDwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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