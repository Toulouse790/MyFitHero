{"file":"/workspaces/MyFitHero/src/__tests__/unit/features/workout.test.tsx","mappings":"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","names":[],"sources":["/workspaces/MyFitHero/src/__tests__/unit/features/workout.test.tsx"],"sourcesContent":["/**\n * TESTS UNITAIRES EXHAUSTIFS - MODULE WORKOUT  \n * Tests pour tous les composants critiques workout\n */\n\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { WorkoutSessionComponent } from '../../../features/workout/components/WorkoutSession';\nimport { WorkoutService } from '../../../features/workout/services/WorkoutService';\n\njest.mock('../../../features/workout/services/WorkoutService');\n\ndescribe('💪 WORKOUT MODULE - Tests Unitaires Exhaustifs', () => {\n  describe('WorkoutSession Component', () => {\n    const mockWorkout = {\n      id: 'workout-123',\n      name: 'Push Day - Upper Body',\n      exercises: [\n        {\n          id: 'ex-1',\n          name: 'Bench Press',\n          sets: 4,\n          reps: [8, 8, 6, 6],\n          weight: [80, 80, 85, 85],\n          rest_time: 120,\n          muscle_groups: ['chest', 'triceps', 'shoulders']\n        },\n        {\n          id: 'ex-2', \n          name: 'Overhead Press',\n          sets: 3,\n          reps: [10, 8, 8],\n          weight: [50, 52.5, 52.5],\n          rest_time: 90,\n          muscle_groups: ['shoulders', 'triceps']\n        }\n      ],\n      estimated_duration: 75,\n      difficulty: 'intermediate',\n      target_muscles: ['chest', 'shoulders', 'triceps']\n    };\n\n    beforeEach(() => {\n      jest.clearAllMocks();\n      (useWorkout as jest.Mock).mockReturnValue({\n        currentWorkout: mockWorkout,\n        isActive: false,\n        startWorkout: jest.fn(),\n        completeSet: jest.fn(),\n        isLoading: false\n      });\n    });\n\n    it('affiche correctement les détails du workout', () => {\n      render(<WorkoutSession workout={mockWorkout} />);\n      \n      expect(screen.getByText('Push Day - Upper Body')).toBeInTheDocument();\n      expect(screen.getByText('75 min')).toBeInTheDocument();\n      expect(screen.getByText('Intermédiaire')).toBeInTheDocument();\n      expect(screen.getByText('Bench Press')).toBeInTheDocument();\n      expect(screen.getByText('Overhead Press')).toBeInTheDocument();\n    });\n\n    it('démarre une session de workout correctement', async () => {\n      const mockStartWorkout = jest.fn();\n      (useWorkout as jest.Mock).mockReturnValue({\n        currentWorkout: mockWorkout,\n        isActive: false,\n        startWorkout: mockStartWorkout,\n        completeSet: jest.fn(),\n        isLoading: false\n      });\n\n      render(<WorkoutSession workout={mockWorkout} />);\n      \n      const startButton = screen.getByTestId('start-workout-button');\n      fireEvent.click(startButton);\n\n      expect(mockStartWorkout).toHaveBeenCalledWith(mockWorkout.id);\n    });\n\n    it('track les séries et répétitions en temps réel', async () => {\n      const mockCompleteSet = jest.fn();\n      (useWorkout as jest.Mock).mockReturnValue({\n        currentWorkout: mockWorkout,\n        isActive: true,\n        startWorkout: jest.fn(),\n        completeSet: mockCompleteSet,\n        isLoading: false\n      });\n\n      render(<WorkoutSession workout={mockWorkout} />);\n\n      // Compléter la première série du bench press\n      const completeSetButton = screen.getByTestId('complete-set-ex-1-0');\n      fireEvent.click(completeSetButton);\n\n      expect(mockCompleteSet).toHaveBeenCalledWith('ex-1', 0, {\n        reps: 8,\n        weight: 80\n      });\n    });\n\n    it('calcule et affiche la progression en temps réel', () => {\n      render(<WorkoutSession workout={mockWorkout} />);\n\n      // Vérifier l'affichage des métriques de progression\n      expect(screen.getByTestId('workout-progress')).toBeInTheDocument();\n      expect(screen.getByTestId('volume-tracker')).toBeInTheDocument();\n      expect(screen.getByTestId('time-elapsed')).toBeInTheDocument();\n    });\n\n    it('gère le timer de repos entre les séries', async () => {\n      (useWorkout as jest.Mock).mockReturnValue({\n        currentWorkout: mockWorkout,\n        isActive: true,\n        startWorkout: jest.fn(),\n        completeSet: jest.fn(),\n        isLoading: false,\n        restTimer: { timeLeft: 120, isActive: true }\n      });\n\n      render(<WorkoutSession workout={mockWorkout} />);\n\n      expect(screen.getByTestId('rest-timer')).toBeInTheDocument();\n      expect(screen.getByText('2:00')).toBeInTheDocument();\n    });\n\n    it('affiche les conseils de forme et technique', () => {\n      render(<WorkoutSession workout={mockWorkout} />);\n\n      const benchPressCard = screen.getByTestId('exercise-card-ex-1');\n      fireEvent.click(benchPressCard);\n\n      expect(screen.getByTestId('exercise-tips')).toBeInTheDocument();\n      expect(screen.getByText(/technique/i)).toBeInTheDocument();\n    });\n\n    describe('Gestion des erreurs et edge cases', () => {\n      it('gère un workout sans exercices', () => {\n        const emptyWorkout = { ...mockWorkout, exercises: [] };\n        render(<WorkoutSession workout={emptyWorkout} />);\n\n        expect(screen.getByText(/aucun exercice/i)).toBeInTheDocument();\n      });\n\n      it('gère l\\'interruption d\\'une session', async () => {\n        (useWorkout as jest.Mock).mockReturnValue({\n          currentWorkout: mockWorkout,\n          isActive: true,\n          startWorkout: jest.fn(),\n          pauseWorkout: jest.fn(),\n          completeSet: jest.fn(),\n          isLoading: false\n        });\n\n        render(<WorkoutSession workout={mockWorkout} />);\n\n        const pauseButton = screen.getByTestId('pause-workout');\n        fireEvent.click(pauseButton);\n\n        expect(screen.getByTestId('pause-confirmation')).toBeInTheDocument();\n      });\n\n      it('sauvegarde automatiquement la progression', async () => {\n        const mockSaveProgress = jest.fn();\n        (WorkoutService.saveWorkoutProgress as jest.Mock).mockImplementation(mockSaveProgress);\n\n        render(<WorkoutSession workout={mockWorkout} />);\n\n        // Simuler complétion d'une série\n        const completeSetButton = screen.getByTestId('complete-set-ex-1-0');\n        fireEvent.click(completeSetButton);\n\n        await waitFor(() => {\n          expect(mockSaveProgress).toHaveBeenCalled();\n        });\n      });\n    });\n  });\n\n  describe('WorkoutService', () => {\n    it('calcule correctement le volume total d\\'entraînement', () => {\n      const workoutData = {\n        exercises: [\n          { sets: 4, reps: [8, 8, 6, 6], weight: [80, 80, 85, 85] },\n          { sets: 3, reps: [10, 8, 8], weight: [50, 52.5, 52.5] }\n        ]\n      };\n\n      const totalVolume = WorkoutService.calculateTotalVolume(workoutData);\n      \n      // Bench: (8*80 + 8*80 + 6*85 + 6*85) = 2300\n      // OHP: (10*50 + 8*52.5 + 8*52.5) = 1340  \n      // Total: 3640\n      expect(totalVolume).toBe(3640);\n    });\n\n    it('détecte automatiquement la progression de force', () => {\n      const previousSession = {\n        'bench-press': { best_set: { weight: 80, reps: 8 } }\n      };\n\n      const currentSession = {\n        'bench-press': { best_set: { weight: 85, reps: 8 } }\n      };\n\n      const progression = WorkoutService.analyzeProgression(previousSession, currentSession);\n      \n      expect(progression['bench-press'].type).toBe('strength');\n      expect(progression['bench-press'].improvement).toBe(6.25); // +6.25%\n    });\n\n    it('recommande des ajustements de charge basés sur la performance', () => {\n      const performanceData = {\n        exerciseId: 'bench-press',\n        target_reps: 8,\n        completed_reps: [10, 9, 8, 7],\n        rpe_scores: [6, 7, 8, 9], // Rate of Perceived Exertion\n        weight: 80\n      };\n\n      const recommendation = WorkoutService.recommendLoadAdjustment(performanceData);\n      \n      // Si l'utilisateur fait plus de reps que prévu avec RPE faible, augmenter la charge\n      expect(recommendation.action).toBe('increase');\n      expect(recommendation.new_weight).toBeGreaterThan(80);\n    });\n\n    it('calcule le temps de récupération optimal basé sur l\\'intensité', () => {\n      const highIntensitySet = { weight: 100, reps: 3, intensity: 95 }; // 95% 1RM\n      const moderateIntensitySet = { weight: 75, reps: 10, intensity: 75 }; // 75% 1RM\n\n      const highRestTime = WorkoutService.calculateOptimalRest(highIntensitySet);\n      const moderateRestTime = WorkoutService.calculateOptimalRest(moderateIntensitySet);\n\n      expect(highRestTime).toBeGreaterThanOrEqual(180); // 3+ minutes pour haute intensité\n      expect(moderateRestTime).toBeLessThanOrEqual(90); // ≤90s pour intensité modérée\n    });\n  });\n\n  describe('Smart Features', () => {\n    it('détecte automatiquement les plateaux de progression', () => {\n      // Simulation 4 semaines sans progression\n      const workoutHistory = Array(4).fill(null).map((_, week) => ({\n        week: week + 1,\n        bench_press_max: 80, // Pas d'amélioration\n        total_volume: 3500\n      }));\n\n      const plateauAnalysis = WorkoutService.detectPlateau(workoutHistory);\n      \n      expect(plateauAnalysis.detected).toBe(true);\n      expect(plateauAnalysis.exercise).toBe('bench_press');\n      expect(plateauAnalysis.recommendations).toContain('deload');\n    });\n\n    it('génère des workouts personnalisés basés sur l\\'historique', () => {\n      const userProfile = {\n        experience: 'intermediate',\n        goals: ['strength', 'hypertrophy'],\n        available_time: 60,\n        equipment: ['barbell', 'dumbbells', 'rack'],\n        weak_points: ['triceps', 'rear-delts']\n      };\n\n      const previousWorkouts = [\n        { focus: 'chest', frequency: 'twice-weekly', response: 'good' },\n        { focus: 'legs', frequency: 'once-weekly', response: 'poor' }\n      ];\n\n      const generatedWorkout = WorkoutService.generatePersonalizedWorkout(\n        userProfile, \n        previousWorkouts\n      );\n\n      expect(generatedWorkout.exercises).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({ target_muscle: 'triceps' }),\n          expect.objectContaining({ target_muscle: 'rear-delts' })\n        ])\n      );\n      expect(generatedWorkout.estimated_duration).toBeLessThanOrEqual(60);\n    });\n\n    it('ajuste automatiquement la difficulté basée sur la récupération', () => {\n      const recoveryMetrics = {\n        hrv_score: 35, // Faible (fatigue élevée)\n        sleep_quality: 6, // Mauvaise récupération\n        muscle_soreness: 8, // Très douloureux\n        stress_level: 7 // Élevé\n      };\n\n      const adjustment = WorkoutService.adjustWorkoutDifficulty(\n        mockWorkout, \n        recoveryMetrics\n      );\n\n      expect(adjustment.intensity_modifier).toBeLessThan(1.0); // Réduction d'intensité\n      expect(adjustment.recommended_change).toBe('deload');\n      expect(adjustment.volume_reduction).toBeGreaterThan(0.2); // Au moins 20% de réduction\n    });\n  });\n});"],"version":3}