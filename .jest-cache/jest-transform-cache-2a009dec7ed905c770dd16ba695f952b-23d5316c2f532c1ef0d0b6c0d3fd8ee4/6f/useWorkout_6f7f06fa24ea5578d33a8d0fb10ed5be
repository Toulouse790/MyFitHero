c141f67c43c983e8611cd6a5e50b6c34
"use strict";

/* istanbul ignore next */
function cov_1f3x9cs70q() {
  var path = "/workspaces/MyFitHero/src/features/workout/hooks/useWorkout.ts";
  var hash = "60a11bc2ec7bbf5c813cb17204335247f2b75528";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/workout/hooks/useWorkout.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 25
        },
        end: {
          line: 5,
          column: 78
        }
      },
      "4": {
        start: {
          line: 7,
          column: 36
        },
        end: {
          line: 7,
          column: 61
        }
      },
      "5": {
        start: {
          line: 8,
          column: 48
        },
        end: {
          line: 8,
          column: 75
        }
      },
      "6": {
        start: {
          line: 9,
          column: 46
        },
        end: {
          line: 9,
          column: 73
        }
      },
      "7": {
        start: {
          line: 10,
          column: 30
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "8": {
        start: {
          line: 11,
          column: 38
        },
        end: {
          line: 11,
          column: 66
        }
      },
      "9": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "10": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "11": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 31,
          column: 23
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "13": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "14": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 27
        }
      },
      "15": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 23
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "17": {
        start: {
          line: 21,
          column: 33
        },
        end: {
          line: 21,
          column: 97
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "19": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 110
        }
      },
      "20": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 35
        }
      },
      "21": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "22": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 43,
          column: 23
        }
      },
      "23": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "24": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "25": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "26": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 37,
          column: 98
        }
      },
      "27": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 32
        }
      },
      "28": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 78
        }
      },
      "29": {
        start: {
          line: 45,
          column: 26
        },
        end: {
          line: 61,
          column: 23
        }
      },
      "30": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "31": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "32": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 27
        }
      },
      "33": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 23
        }
      },
      "34": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "35": {
        start: {
          line: 51,
          column: 31
        },
        end: {
          line: 51,
          column: 103
        }
      },
      "36": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 55
        }
      },
      "37": {
        start: {
          line: 52,
          column: 32
        },
        end: {
          line: 52,
          column: 53
        }
      },
      "38": {
        start: {
          line: 55,
          column: 33
        },
        end: {
          line: 55,
          column: 109
        }
      },
      "39": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 35
        }
      },
      "40": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 32
        }
      },
      "41": {
        start: {
          line: 63,
          column: 26
        },
        end: {
          line: 77,
          column: 10
        }
      },
      "42": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 27
        }
      },
      "43": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 23
        }
      },
      "44": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "45": {
        start: {
          line: 67,
          column: 35
        },
        end: {
          line: 67,
          column: 96
        }
      },
      "46": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 92
        }
      },
      "47": {
        start: {
          line: 68,
          column: 32
        },
        end: {
          line: 68,
          column: 90
        }
      },
      "48": {
        start: {
          line: 68,
          column: 56
        },
        end: {
          line: 68,
          column: 88
        }
      },
      "49": {
        start: {
          line: 71,
          column: 33
        },
        end: {
          line: 71,
          column: 112
        }
      },
      "50": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 35
        }
      },
      "51": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 32
        }
      },
      "52": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 93,
          column: 10
        }
      },
      "53": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 27
        }
      },
      "54": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 23
        }
      },
      "55": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "56": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 68
        }
      },
      "57": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 63
        }
      },
      "58": {
        start: {
          line: 84,
          column: 32
        },
        end: {
          line: 84,
          column: 61
        }
      },
      "59": {
        start: {
          line: 84,
          column: 49
        },
        end: {
          line: 84,
          column: 60
        }
      },
      "60": {
        start: {
          line: 87,
          column: 33
        },
        end: {
          line: 87,
          column: 112
        }
      },
      "61": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 35
        }
      },
      "62": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 32
        }
      },
      "63": {
        start: {
          line: 95,
          column: 25
        },
        end: {
          line: 113,
          column: 33
        }
      },
      "64": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 97,
          column: 19
        }
      },
      "65": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 19
        }
      },
      "66": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 27
        }
      },
      "67": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 23
        }
      },
      "68": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "69": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 101,
          column: 111
        }
      },
      "70": {
        start: {
          line: 102,
          column: 28
        },
        end: {
          line: 102,
          column: 66
        }
      },
      "71": {
        start: {
          line: 102,
          column: 47
        },
        end: {
          line: 102,
          column: 65
        }
      },
      "72": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 39
        }
      },
      "73": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 46
        }
      },
      "74": {
        start: {
          line: 107,
          column: 33
        },
        end: {
          line: 107,
          column: 107
        }
      },
      "75": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 35
        }
      },
      "76": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 32
        }
      },
      "77": {
        start: {
          line: 115,
          column: 25
        },
        end: {
          line: 126,
          column: 24
        }
      },
      "78": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "79": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "80": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "81": {
        start: {
          line: 119,
          column: 35
        },
        end: {
          line: 119,
          column: 111
        }
      },
      "82": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 46
        }
      },
      "83": {
        start: {
          line: 123,
          column: 33
        },
        end: {
          line: 123,
          column: 103
        }
      },
      "84": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 35
        }
      },
      "85": {
        start: {
          line: 128,
          column: 26
        },
        end: {
          line: 139,
          column: 24
        }
      },
      "86": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 130,
          column: 19
        }
      },
      "87": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 19
        }
      },
      "88": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "89": {
        start: {
          line: 132,
          column: 35
        },
        end: {
          line: 132,
          column: 112
        }
      },
      "90": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 46
        }
      },
      "91": {
        start: {
          line: 136,
          column: 33
        },
        end: {
          line: 136,
          column: 97
        }
      },
      "92": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 35
        }
      },
      "93": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 159,
          column: 35
        }
      },
      "94": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 143,
          column: 19
        }
      },
      "95": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 19
        }
      },
      "96": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 27
        }
      },
      "97": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 23
        }
      },
      "98": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "99": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 92
        }
      },
      "100": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 36
        }
      },
      "101": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 35
        }
      },
      "102": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 30
        }
      },
      "103": {
        start: {
          line: 153,
          column: 33
        },
        end: {
          line: 153,
          column: 102
        }
      },
      "104": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 35
        }
      },
      "105": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 32
        }
      },
      "106": {
        start: {
          line: 161,
          column: 26
        },
        end: {
          line: 173,
          column: 24
        }
      },
      "107": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 163,
          column: 19
        }
      },
      "108": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 19
        }
      },
      "109": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "110": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 90
        }
      },
      "111": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 36
        }
      },
      "112": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 35
        }
      },
      "113": {
        start: {
          line: 170,
          column: 33
        },
        end: {
          line: 170,
          column: 99
        }
      },
      "114": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 35
        }
      },
      "115": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 186,
          column: 24
        }
      },
      "116": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 177,
          column: 19
        }
      },
      "117": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 19
        }
      },
      "118": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "119": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 117
        }
      },
      "120": {
        start: {
          line: 183,
          column: 33
        },
        end: {
          line: 183,
          column: 117
        }
      },
      "121": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 35
        }
      },
      "122": {
        start: {
          line: 188,
          column: 28
        },
        end: {
          line: 190,
          column: 33
        }
      },
      "123": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 57
        }
      },
      "124": {
        start: {
          line: 192,
          column: 31
        },
        end: {
          line: 198,
          column: 24
        }
      },
      "125": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 194,
          column: 21
        }
      },
      "126": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 21
        }
      },
      "127": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 30
        }
      },
      "128": {
        start: {
          line: 196,
          column: 22
        },
        end: {
          line: 196,
          column: 56
        }
      },
      "129": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 68
        }
      },
      "130": {
        start: {
          line: 199,
          column: 34
        },
        end: {
          line: 207,
          column: 23
        }
      },
      "131": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 201,
          column: 22
        }
      },
      "132": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 22
        }
      },
      "133": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "134": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 25
        }
      },
      "135": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 210,
          column: 18
        }
      },
      "136": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 31
        }
      },
      "137": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 214,
          column: 26
        }
      },
      "138": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 26
        }
      },
      "139": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 235,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "useWorkout",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 19
          }
        },
        loc: {
          start: {
            line: 6,
            column: 28
          },
          end: {
            line: 236,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 50
          },
          end: {
            line: 15,
            column: 51
          }
        },
        loc: {
          start: {
            line: 15,
            column: 62
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 47
          },
          end: {
            line: 33,
            column: 48
          }
        },
        loc: {
          start: {
            line: 33,
            column: 59
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 51
          },
          end: {
            line: 45,
            column: 52
          }
        },
        loc: {
          start: {
            line: 45,
            column: 67
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 25
          }
        },
        loc: {
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 52,
            column: 53
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 51
          },
          end: {
            line: 63,
            column: 52
          }
        },
        loc: {
          start: {
            line: 63,
            column: 71
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 68,
            column: 25
          }
        },
        loc: {
          start: {
            line: 68,
            column: 32
          },
          end: {
            line: 68,
            column: 90
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 68,
            column: 41
          },
          end: {
            line: 68,
            column: 42
          }
        },
        loc: {
          start: {
            line: 68,
            column: 56
          },
          end: {
            line: 68,
            column: 88
          }
        },
        line: 68
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 79,
            column: 51
          },
          end: {
            line: 79,
            column: 52
          }
        },
        loc: {
          start: {
            line: 79,
            column: 65
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 79
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 84,
            column: 25
          }
        },
        loc: {
          start: {
            line: 84,
            column: 32
          },
          end: {
            line: 84,
            column: 61
          }
        },
        line: 84
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 84,
            column: 44
          },
          end: {
            line: 84,
            column: 45
          }
        },
        loc: {
          start: {
            line: 84,
            column: 49
          },
          end: {
            line: 84,
            column: 60
          }
        },
        line: 84
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 95,
            column: 50
          },
          end: {
            line: 95,
            column: 51
          }
        },
        loc: {
          start: {
            line: 95,
            column: 71
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 95
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 102,
            column: 42
          },
          end: {
            line: 102,
            column: 43
          }
        },
        loc: {
          start: {
            line: 102,
            column: 47
          },
          end: {
            line: 102,
            column: 65
          }
        },
        line: 102
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 115,
            column: 50
          },
          end: {
            line: 115,
            column: 51
          }
        },
        loc: {
          start: {
            line: 115,
            column: 62
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 115
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 128,
            column: 51
          },
          end: {
            line: 128,
            column: 52
          }
        },
        loc: {
          start: {
            line: 128,
            column: 63
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 128
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 141,
            column: 53
          },
          end: {
            line: 141,
            column: 54
          }
        },
        loc: {
          start: {
            line: 141,
            column: 65
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 141
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 161,
            column: 51
          },
          end: {
            line: 161,
            column: 52
          }
        },
        loc: {
          start: {
            line: 161,
            column: 63
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 161
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 175,
            column: 49
          },
          end: {
            line: 175,
            column: 50
          }
        },
        loc: {
          start: {
            line: 175,
            column: 91
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 175
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 188,
            column: 53
          },
          end: {
            line: 188,
            column: 54
          }
        },
        loc: {
          start: {
            line: 188,
            column: 65
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 188
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 192,
            column: 56
          },
          end: {
            line: 192,
            column: 57
          }
        },
        loc: {
          start: {
            line: 192,
            column: 62
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 192
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 199,
            column: 59
          },
          end: {
            line: 199,
            column: 60
          }
        },
        loc: {
          start: {
            line: 199,
            column: 65
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 199
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 203,
            column: 46
          },
          end: {
            line: 203,
            column: 47
          }
        },
        loc: {
          start: {
            line: 203,
            column: 58
          },
          end: {
            line: 206,
            column: 9
          }
        },
        line: 203
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 208,
            column: 54
          },
          end: {
            line: 208,
            column: 55
          }
        },
        loc: {
          start: {
            line: 208,
            column: 60
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 208
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 212,
            column: 27
          },
          end: {
            line: 212,
            column: 28
          }
        },
        loc: {
          start: {
            line: 212,
            column: 33
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 212
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 32
          }
        }, {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 13,
            column: 50
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 17,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 17,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 25,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 56
          },
          end: {
            line: 25,
            column: 67
          }
        }, {
          start: {
            line: 25,
            column: 70
          },
          end: {
            line: 25,
            column: 110
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 56
          },
          end: {
            line: 55,
            column: 67
          }
        }, {
          start: {
            line: 55,
            column: 70
          },
          end: {
            line: 55,
            column: 109
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 56
          },
          end: {
            line: 68,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 70
          },
          end: {
            line: 68,
            column: 84
          }
        }, {
          start: {
            line: 68,
            column: 87
          },
          end: {
            line: 68,
            column: 88
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 33
          },
          end: {
            line: 71,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 56
          },
          end: {
            line: 71,
            column: 67
          }
        }, {
          start: {
            line: 71,
            column: 70
          },
          end: {
            line: 71,
            column: 112
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 87,
            column: 33
          },
          end: {
            line: 87,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 56
          },
          end: {
            line: 87,
            column: 67
          }
        }, {
          start: {
            line: 87,
            column: 70
          },
          end: {
            line: 87,
            column: 112
          }
        }],
        line: 87
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 97,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 97,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "10": {
        loc: {
          start: {
            line: 104,
            column: 29
          },
          end: {
            line: 104,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 29
          },
          end: {
            line: 104,
            column: 36
          }
        }, {
          start: {
            line: 104,
            column: 40
          },
          end: {
            line: 104,
            column: 44
          }
        }],
        line: 104
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 33
          },
          end: {
            line: 107,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 107,
            column: 67
          }
        }, {
          start: {
            line: 107,
            column: 70
          },
          end: {
            line: 107,
            column: 107
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "13": {
        loc: {
          start: {
            line: 123,
            column: 33
          },
          end: {
            line: 123,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 56
          },
          end: {
            line: 123,
            column: 67
          }
        }, {
          start: {
            line: 123,
            column: 70
          },
          end: {
            line: 123,
            column: 103
          }
        }],
        line: 123
      },
      "14": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 130,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 130,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "15": {
        loc: {
          start: {
            line: 136,
            column: 33
          },
          end: {
            line: 136,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 56
          },
          end: {
            line: 136,
            column: 67
          }
        }, {
          start: {
            line: 136,
            column: 70
          },
          end: {
            line: 136,
            column: 97
          }
        }],
        line: 136
      },
      "16": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 143,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 143,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "17": {
        loc: {
          start: {
            line: 153,
            column: 33
          },
          end: {
            line: 153,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 56
          },
          end: {
            line: 153,
            column: 67
          }
        }, {
          start: {
            line: 153,
            column: 70
          },
          end: {
            line: 153,
            column: 102
          }
        }],
        line: 153
      },
      "18": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 163,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 163,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "19": {
        loc: {
          start: {
            line: 170,
            column: 33
          },
          end: {
            line: 170,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 56
          },
          end: {
            line: 170,
            column: 67
          }
        }, {
          start: {
            line: 170,
            column: 70
          },
          end: {
            line: 170,
            column: 99
          }
        }],
        line: 170
      },
      "20": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 177,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 177,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "21": {
        loc: {
          start: {
            line: 183,
            column: 33
          },
          end: {
            line: 183,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 56
          },
          end: {
            line: 183,
            column: 67
          }
        }, {
          start: {
            line: 183,
            column: 70
          },
          end: {
            line: 183,
            column: 117
          }
        }],
        line: 183
      },
      "22": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 194,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 194,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "23": {
        loc: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 193,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 193,
            column: 27
          }
        }, {
          start: {
            line: 193,
            column: 31
          },
          end: {
            line: 193,
            column: 56
          }
        }],
        line: 193
      },
      "24": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 201,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 201,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/workout/hooks/useWorkout.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/workout/hooks/useWorkout.ts"],
      sourcesContent: ["import React, { useState, useEffect, useCallback } from 'react';\nimport { WorkoutService } from '@/features/workout/services/WorkoutService';\nimport type {\n  Workout,\n  WorkoutSession,\n  Exercise,\n  CreateWorkoutData,\n  UpdateWorkoutData,\n  WorkoutStats,\n} from '@/features/workout/types/WorkoutTypes';\n\nexport interface UseWorkoutReturn {\n  // \xC9tat\n  workouts: Workout[];\n  currentSession: WorkoutSession | undefined;\n  activeWorkout: Workout | undefined;\n  stats: WorkoutStats | undefined;\n  isLoading: boolean;\n  error: string | undefined;\n\n  // Actions\n  createWorkout: (data: CreateWorkoutData) => Promise<void>;\n  updateWorkout: (id: string, data: UpdateWorkoutData) => Promise<void>;\n  deleteWorkout: (id: string) => Promise<void>;\n  startWorkout: (workoutId: string) => Promise<void>;\n  pauseWorkout: () => Promise<void>;\n  resumeWorkout: () => Promise<void>;\n  completeWorkout: () => Promise<void>;\n  cancelWorkout: () => Promise<void>;\n  logExercise: (exerciseId: string, sets: number, reps: number, weight?: number) => Promise<void>;\n  refreshWorkouts: () => Promise<void>;\n\n  // Getters\n  getWorkoutDuration: () => number;\n  getCompletedExercises: () => Exercise[];\n  getTotalWorkouts: () => number;\n}\n\nexport function useWorkout(userId?: string): UseWorkoutReturn {\n  const [workouts, setWorkouts] = useState<Workout[]>([]);\n  const [currentSession, setCurrentSession] = useState<WorkoutSession | null>(null);\n  const [activeWorkout, setActiveWorkout] = useState<Workout | null>(null);\n  const [stats, setStats] = useState<WorkoutStats | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const currentUserId = userId || 'current-user';\n\n  // Chargement des workouts\n  const loadWorkouts = useCallback(async () => {\n    if (!currentUserId) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const workoutsData = await WorkoutService.getWorkouts(currentUserId);\n      setWorkouts(workoutsData);\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : 'Erreur lors du chargement des workouts';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [currentUserId]);\n\n  // Chargement des statistiques\n  const loadStats = useCallback(async () => {\n    if (!currentUserId) return;\n\n    try {\n      const statsData = await WorkoutService.getWorkoutStats(currentUserId);\n      setStats(statsData);\n    } catch (err) {\n      console.error('Erreur lors du chargement des statistiques:', err);\n    }\n  }, [currentUserId]);\n\n  // Cr\xE9ation de workout\n  const createWorkout = useCallback(\n    async (data: CreateWorkoutData) => {\n      if (!currentUserId) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const newWorkout = await WorkoutService.createWorkout(currentUserId, data);\n        setWorkouts(prev => [...prev, newWorkout]);\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error ? err.message : 'Erreur lors de la cr\xE9ation du workout';\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [currentUserId]\n  );\n\n  // Mise \xE0 jour de workout\n  const updateWorkout = useCallback(async (id: string, data: UpdateWorkoutData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const updatedWorkout = await WorkoutService.updateWorkout(id, data);\n      setWorkouts(prev => prev.map((w, index) => (w.id === id ? updatedWorkout : w)));\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : 'Erreur lors de la mise \xE0 jour du workout';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Suppression de workout\n  const deleteWorkout = useCallback(async (id: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      await WorkoutService.deleteWorkout(id);\n      setWorkouts(prev => prev.filter(w => w.id !== id));\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : 'Erreur lors de la suppression du workout';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // D\xE9marrage de workout\n  const startWorkout = useCallback(\n    async (workoutId: string) => {\n      if (!currentUserId) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const session = await WorkoutService.startWorkoutSession(currentUserId, workoutId);\n        const workout = workouts.find(w => w.id === workoutId);\n        setCurrentSession(session);\n        setActiveWorkout(workout || null);\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error ? err.message : 'Erreur lors du d\xE9marrage du workout';\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [currentUserId, workouts]\n  );\n\n  // Pause de workout\n  const pauseWorkout = useCallback(async () => {\n    if (!currentSession) return;\n\n    try {\n      const updatedSession = await WorkoutService.pauseWorkoutSession(currentSession.id);\n      setCurrentSession(updatedSession);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Erreur lors de la mise en pause';\n      setError(errorMessage);\n    }\n  }, [currentSession]);\n\n  // Reprise de workout\n  const resumeWorkout = useCallback(async () => {\n    if (!currentSession) return;\n\n    try {\n      const updatedSession = await WorkoutService.resumeWorkoutSession(currentSession.id);\n      setCurrentSession(updatedSession);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Erreur lors de la reprise';\n      setError(errorMessage);\n    }\n  }, [currentSession]);\n\n  // Finalisation de workout\n  const completeWorkout = useCallback(async () => {\n    if (!currentSession) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      await WorkoutService.completeWorkoutSession(currentSession.id);\n      setCurrentSession(null);\n      setActiveWorkout(null);\n      await loadStats(); // Recharger les stats\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Erreur lors de la finalisation';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [currentSession, loadStats]);\n\n  // Annulation de workout\n  const cancelWorkout = useCallback(async () => {\n    if (!currentSession) return;\n\n    try {\n      await WorkoutService.cancelWorkoutSession(currentSession.id);\n      setCurrentSession(null);\n      setActiveWorkout(null);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : \"Erreur lors de l'annulation\";\n      setError(errorMessage);\n    }\n  }, [currentSession]);\n\n  // Log d'exercice\n  const logExercise = useCallback(\n    async (exerciseId: string, sets: number, reps: number, weight?: number) => {\n      if (!currentSession) return;\n\n      try {\n        await WorkoutService.logExercise(currentSession.id, exerciseId, { sets, reps, weight });\n        // Optionnel: recharger la session pour avoir les donn\xE9es \xE0 jour\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error ? err.message : \"Erreur lors de l'enregistrement de l'exercice\";\n        setError(errorMessage);\n      }\n    },\n    [currentSession]\n  );\n\n  // Rafra\xEEchissement\n  const refreshWorkouts = useCallback(async () => {\n    await Promise.all([loadWorkouts(), loadStats()]);\n  }, [loadWorkouts, loadStats]);\n\n  // Getters\n  const getWorkoutDuration = useCallback((): number => {\n    if (!currentSession || !currentSession.startTime) return 0;\n    const now = new Date();\n    const start = new Date(currentSession.startTime);\n    return Math.floor((now.getTime() - start.getTime()) / 1000); // en secondes\n  }, [currentSession]);\n\n  const getCompletedExercises = useCallback((): Exercise[] => {\n    if (!activeWorkout) return [];\n    // Logique pour d\xE9terminer les exercices compl\xE9t\xE9s\n    return activeWorkout.exercises.filter(exercise => {\n      // Ici, vous devriez v\xE9rifier si l'exercice a \xE9t\xE9 compl\xE9t\xE9 dans la session\n      return false; // Placeholder\n    });\n  }, [activeWorkout]);\n\n  const getTotalWorkouts = useCallback((): number => {\n    return workouts.length;\n  }, [workouts]);\n\n  // Chargement initial\n  useEffect(() => {\n    refreshWorkouts();\n  }, [refreshWorkouts]);\n\n  return {\n    workouts,\n    currentSession,\n    activeWorkout,\n    stats,\n    isLoading,\n    error,\n    createWorkout,\n    updateWorkout,\n    deleteWorkout,\n    startWorkout,\n    pauseWorkout,\n    resumeWorkout,\n    completeWorkout,\n    cancelWorkout,\n    logExercise,\n    refreshWorkouts,\n    getWorkoutDuration,\n    getCompletedExercises,\n    getTotalWorkouts,\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "60a11bc2ec7bbf5c813cb17204335247f2b75528"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1f3x9cs70q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1f3x9cs70q();
cov_1f3x9cs70q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1f3x9cs70q().s[1]++;
exports.useWorkout = useWorkout;
const react_1 =
/* istanbul ignore next */
(cov_1f3x9cs70q().s[2]++, require("react"));
const WorkoutService_1 =
/* istanbul ignore next */
(cov_1f3x9cs70q().s[3]++, require("@/features/workout/services/WorkoutService"));
function useWorkout(userId) {
  /* istanbul ignore next */
  cov_1f3x9cs70q().f[0]++;
  const [workouts, setWorkouts] =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[4]++, (0, react_1.useState)([]));
  const [currentSession, setCurrentSession] =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[5]++, (0, react_1.useState)(null));
  const [activeWorkout, setActiveWorkout] =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[6]++, (0, react_1.useState)(null));
  const [stats, setStats] =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[7]++, (0, react_1.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[8]++, (0, react_1.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[9]++, (0, react_1.useState)(null));
  const currentUserId =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[10]++,
  /* istanbul ignore next */
  (cov_1f3x9cs70q().b[0][0]++, userId) ||
  /* istanbul ignore next */
  (cov_1f3x9cs70q().b[0][1]++, 'current-user'));
  // Chargement des workouts
  const loadWorkouts =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[11]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[1]++;
    cov_1f3x9cs70q().s[12]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[1][0]++;
      cov_1f3x9cs70q().s[13]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[1][1]++;
    }
    cov_1f3x9cs70q().s[14]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[15]++;
    setError(null);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[16]++;
    try {
      const workoutsData =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[17]++, await WorkoutService_1.WorkoutService.getWorkouts(currentUserId));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[18]++;
      setWorkouts(workoutsData);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[19]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[2][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[2][1]++, 'Erreur lors du chargement des workouts'));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[20]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[21]++;
      setIsLoading(false);
    }
  }, [currentUserId]));
  // Chargement des statistiques
  const loadStats =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[22]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[2]++;
    cov_1f3x9cs70q().s[23]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[3][0]++;
      cov_1f3x9cs70q().s[24]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[3][1]++;
    }
    cov_1f3x9cs70q().s[25]++;
    try {
      const statsData =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[26]++, await WorkoutService_1.WorkoutService.getWorkoutStats(currentUserId));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[27]++;
      setStats(statsData);
    } catch (err) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[28]++;
      console.error('Erreur lors du chargement des statistiques:', err);
    }
  }, [currentUserId]));
  // Création de workout
  const createWorkout =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[29]++, (0, react_1.useCallback)(async data => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[3]++;
    cov_1f3x9cs70q().s[30]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[4][0]++;
      cov_1f3x9cs70q().s[31]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[4][1]++;
    }
    cov_1f3x9cs70q().s[32]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[33]++;
    setError(null);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[34]++;
    try {
      const newWorkout =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[35]++, await WorkoutService_1.WorkoutService.createWorkout(currentUserId, data));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[36]++;
      setWorkouts(prev => {
        /* istanbul ignore next */
        cov_1f3x9cs70q().f[4]++;
        cov_1f3x9cs70q().s[37]++;
        return [...prev, newWorkout];
      });
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[38]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[5][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[5][1]++, 'Erreur lors de la création du workout'));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[39]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[40]++;
      setIsLoading(false);
    }
  }, [currentUserId]));
  // Mise à jour de workout
  const updateWorkout =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[41]++, (0, react_1.useCallback)(async (id, data) => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[5]++;
    cov_1f3x9cs70q().s[42]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[43]++;
    setError(null);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[44]++;
    try {
      const updatedWorkout =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[45]++, await WorkoutService_1.WorkoutService.updateWorkout(id, data));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[46]++;
      setWorkouts(prev => {
        /* istanbul ignore next */
        cov_1f3x9cs70q().f[6]++;
        cov_1f3x9cs70q().s[47]++;
        return prev.map((w, index) => {
          /* istanbul ignore next */
          cov_1f3x9cs70q().f[7]++;
          cov_1f3x9cs70q().s[48]++;
          return w.id === id ?
          /* istanbul ignore next */
          (cov_1f3x9cs70q().b[6][0]++, updatedWorkout) :
          /* istanbul ignore next */
          (cov_1f3x9cs70q().b[6][1]++, w);
        });
      });
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[49]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[7][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[7][1]++, 'Erreur lors de la mise à jour du workout'));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[50]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[51]++;
      setIsLoading(false);
    }
  }, []));
  // Suppression de workout
  const deleteWorkout =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[52]++, (0, react_1.useCallback)(async id => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[8]++;
    cov_1f3x9cs70q().s[53]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[54]++;
    setError(null);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[55]++;
    try {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[56]++;
      await WorkoutService_1.WorkoutService.deleteWorkout(id);
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[57]++;
      setWorkouts(prev => {
        /* istanbul ignore next */
        cov_1f3x9cs70q().f[9]++;
        cov_1f3x9cs70q().s[58]++;
        return prev.filter(w => {
          /* istanbul ignore next */
          cov_1f3x9cs70q().f[10]++;
          cov_1f3x9cs70q().s[59]++;
          return w.id !== id;
        });
      });
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[60]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[8][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[8][1]++, 'Erreur lors de la suppression du workout'));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[61]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[62]++;
      setIsLoading(false);
    }
  }, []));
  // Démarrage de workout
  const startWorkout =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[63]++, (0, react_1.useCallback)(async workoutId => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[11]++;
    cov_1f3x9cs70q().s[64]++;
    if (!currentUserId) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[9][0]++;
      cov_1f3x9cs70q().s[65]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[9][1]++;
    }
    cov_1f3x9cs70q().s[66]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[67]++;
    setError(null);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[68]++;
    try {
      const session =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[69]++, await WorkoutService_1.WorkoutService.startWorkoutSession(currentUserId, workoutId));
      const workout =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[70]++, workouts.find(w => {
        /* istanbul ignore next */
        cov_1f3x9cs70q().f[12]++;
        cov_1f3x9cs70q().s[71]++;
        return w.id === workoutId;
      }));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[72]++;
      setCurrentSession(session);
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[73]++;
      setActiveWorkout(
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[10][0]++, workout) ||
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[10][1]++, null));
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[74]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[11][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[11][1]++, 'Erreur lors du démarrage du workout'));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[75]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[76]++;
      setIsLoading(false);
    }
  }, [currentUserId, workouts]));
  // Pause de workout
  const pauseWorkout =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[77]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[13]++;
    cov_1f3x9cs70q().s[78]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[12][0]++;
      cov_1f3x9cs70q().s[79]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[12][1]++;
    }
    cov_1f3x9cs70q().s[80]++;
    try {
      const updatedSession =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[81]++, await WorkoutService_1.WorkoutService.pauseWorkoutSession(currentSession.id));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[82]++;
      setCurrentSession(updatedSession);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[83]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[13][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[13][1]++, 'Erreur lors de la mise en pause'));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[84]++;
      setError(errorMessage);
    }
  }, [currentSession]));
  // Reprise de workout
  const resumeWorkout =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[85]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[14]++;
    cov_1f3x9cs70q().s[86]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[14][0]++;
      cov_1f3x9cs70q().s[87]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[14][1]++;
    }
    cov_1f3x9cs70q().s[88]++;
    try {
      const updatedSession =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[89]++, await WorkoutService_1.WorkoutService.resumeWorkoutSession(currentSession.id));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[90]++;
      setCurrentSession(updatedSession);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[91]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[15][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[15][1]++, 'Erreur lors de la reprise'));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[92]++;
      setError(errorMessage);
    }
  }, [currentSession]));
  // Finalisation de workout
  const completeWorkout =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[93]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[15]++;
    cov_1f3x9cs70q().s[94]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[16][0]++;
      cov_1f3x9cs70q().s[95]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[16][1]++;
    }
    cov_1f3x9cs70q().s[96]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[97]++;
    setError(null);
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[98]++;
    try {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[99]++;
      await WorkoutService_1.WorkoutService.completeWorkoutSession(currentSession.id);
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[100]++;
      setCurrentSession(null);
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[101]++;
      setActiveWorkout(null);
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[102]++;
      await loadStats(); // Recharger les stats
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[103]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[17][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[17][1]++, 'Erreur lors de la finalisation'));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[104]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[105]++;
      setIsLoading(false);
    }
  }, [currentSession, loadStats]));
  // Annulation de workout
  const cancelWorkout =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[106]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[16]++;
    cov_1f3x9cs70q().s[107]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[18][0]++;
      cov_1f3x9cs70q().s[108]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[18][1]++;
    }
    cov_1f3x9cs70q().s[109]++;
    try {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[110]++;
      await WorkoutService_1.WorkoutService.cancelWorkoutSession(currentSession.id);
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[111]++;
      setCurrentSession(null);
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[112]++;
      setActiveWorkout(null);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[113]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[19][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[19][1]++, "Erreur lors de l'annulation"));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[114]++;
      setError(errorMessage);
    }
  }, [currentSession]));
  // Log d'exercice
  const logExercise =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[115]++, (0, react_1.useCallback)(async (exerciseId, sets, reps, weight) => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[17]++;
    cov_1f3x9cs70q().s[116]++;
    if (!currentSession) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[20][0]++;
      cov_1f3x9cs70q().s[117]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[20][1]++;
    }
    cov_1f3x9cs70q().s[118]++;
    try {
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[119]++;
      await WorkoutService_1.WorkoutService.logExercise(currentSession.id, exerciseId, {
        sets,
        reps,
        weight
      });
      // Optionnel: recharger la session pour avoir les données à jour
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1f3x9cs70q().s[120]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[21][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1f3x9cs70q().b[21][1]++, "Erreur lors de l'enregistrement de l'exercice"));
      /* istanbul ignore next */
      cov_1f3x9cs70q().s[121]++;
      setError(errorMessage);
    }
  }, [currentSession]));
  // Rafraîchissement
  const refreshWorkouts =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[122]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[18]++;
    cov_1f3x9cs70q().s[123]++;
    await Promise.all([loadWorkouts(), loadStats()]);
  }, [loadWorkouts, loadStats]));
  // Getters
  const getWorkoutDuration =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[124]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[19]++;
    cov_1f3x9cs70q().s[125]++;
    if (
    /* istanbul ignore next */
    (cov_1f3x9cs70q().b[23][0]++, !currentSession) ||
    /* istanbul ignore next */
    (cov_1f3x9cs70q().b[23][1]++, !currentSession.startTime)) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[22][0]++;
      cov_1f3x9cs70q().s[126]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[22][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1f3x9cs70q().s[127]++, new Date());
    const start =
    /* istanbul ignore next */
    (cov_1f3x9cs70q().s[128]++, new Date(currentSession.startTime));
    /* istanbul ignore next */
    cov_1f3x9cs70q().s[129]++;
    return Math.floor((now.getTime() - start.getTime()) / 1000); // en secondes
  }, [currentSession]));
  const getCompletedExercises =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[130]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[20]++;
    cov_1f3x9cs70q().s[131]++;
    if (!activeWorkout) {
      /* istanbul ignore next */
      cov_1f3x9cs70q().b[24][0]++;
      cov_1f3x9cs70q().s[132]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1f3x9cs70q().b[24][1]++;
    }
    // Logique pour déterminer les exercices complétés
    cov_1f3x9cs70q().s[133]++;
    return activeWorkout.exercises.filter(exercise => {
      /* istanbul ignore next */
      cov_1f3x9cs70q().f[21]++;
      cov_1f3x9cs70q().s[134]++;
      // Ici, vous devriez vérifier si l'exercice a été complété dans la session
      return false; // Placeholder
    });
  }, [activeWorkout]));
  const getTotalWorkouts =
  /* istanbul ignore next */
  (cov_1f3x9cs70q().s[135]++, (0, react_1.useCallback)(() => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[22]++;
    cov_1f3x9cs70q().s[136]++;
    return workouts.length;
  }, [workouts]));
  // Chargement initial
  /* istanbul ignore next */
  cov_1f3x9cs70q().s[137]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_1f3x9cs70q().f[23]++;
    cov_1f3x9cs70q().s[138]++;
    refreshWorkouts();
  }, [refreshWorkouts]);
  /* istanbul ignore next */
  cov_1f3x9cs70q().s[139]++;
  return {
    workouts,
    currentSession,
    activeWorkout,
    stats,
    isLoading,
    error,
    createWorkout,
    updateWorkout,
    deleteWorkout,
    startWorkout,
    pauseWorkout,
    resumeWorkout,
    completeWorkout,
    cancelWorkout,
    logExercise,
    refreshWorkouts,
    getWorkoutDuration,
    getCompletedExercises,
    getTotalWorkouts
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,