ced3515057377d40652816be222f8649
"use strict";

/* istanbul ignore next */
function cov_2c3h79dpe2() {
  var path = "/workspaces/MyFitHero/src/lib/services/api.service.ts";
  var hash = "b78b3d0674e6435f3f4326d77a4ee6caea0c52ec";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/lib/services/api.service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "3": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 13,
          column: 14
        }
      },
      "4": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 19,
          column: 14
        }
      },
      "5": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "6": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "7": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "8": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 24
        }
      },
      "9": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "10": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 38
        }
      },
      "11": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 34
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 30
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 18,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 18,
            column: 61
          }
        }, {
          start: {
            line: 18,
            column: 64
          },
          end: {
            line: 18,
            column: 78
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/lib/services/api.service.ts",
      mappings: ";;;AASA;;GAEG;AACH,MAAM,UAAU;IACd,KAAK,CAAC,MAAM,CAAC,KAAa,EAAE,QAAgB;QAC1C,IAAI,CAAC;YACH,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;aACnC,CAAC;QACJ,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,cAAc;aAC/D,CAAC;QACJ,CAAC;IACH,CAAC;IAED,KAAK,CAAC,OAAO;QACX,IAAI,CAAC;YACH,gCAAgC;QAClC,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,WAAW;QACf,IAAI,CAAC;YACH,OAAO,IAAI,CAAC;QACd,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;CACF;AAEY,QAAA,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AAC3C,kBAAe,kBAAU,CAAC",
      names: [],
      sources: ["/workspaces/MyFitHero/src/lib/services/api.service.ts"],
      sourcesContent: ["import { supabase } from '@/lib/supabase';\n\n// Standard service response type\ninterface ServiceResponse<T = unknown> {\n  success: boolean;\n  data?: T;\n  error?: string;\n}\n\n/**\n * Centralized API service - TODO: Implement with Supabase\n */\nclass ApiService {\n  async signIn(email: string, password: string): Promise<ServiceResponse> {\n    try {\n      return {\n        success: true,\n        data: { user: null, tokens: null }\n      };\n    } catch (error: any) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Login failed',\n      };\n    }\n  }\n\n  async signOut(): Promise<void> {\n    try {\n      // TODO: Implement with Supabase\n    } catch (error: any) {\n      console.warn('Logout error:', error);\n    }\n  }\n\n  async healthCheck(): Promise<boolean> {\n    try {\n      return true;\n    } catch (error: any) {\n      return false;\n    }\n  }\n}\n\nexport const apiService = new ApiService();\nexport default apiService;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b78b3d0674e6435f3f4326d77a4ee6caea0c52ec"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2c3h79dpe2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2c3h79dpe2();
cov_2c3h79dpe2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2c3h79dpe2().s[1]++;
exports.apiService = void 0;
/**
 * Centralized API service - TODO: Implement with Supabase
 */
class ApiService {
  async signIn(email, password) {
    /* istanbul ignore next */
    cov_2c3h79dpe2().f[0]++;
    cov_2c3h79dpe2().s[2]++;
    try {
      /* istanbul ignore next */
      cov_2c3h79dpe2().s[3]++;
      return {
        success: true,
        data: {
          user: null,
          tokens: null
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2c3h79dpe2().s[4]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2c3h79dpe2().b[0][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2c3h79dpe2().b[0][1]++, 'Login failed')
      };
    }
  }
  async signOut() {
    /* istanbul ignore next */
    cov_2c3h79dpe2().f[1]++;
    cov_2c3h79dpe2().s[5]++;
    try {
      // TODO: Implement with Supabase
    } catch (error) {
      /* istanbul ignore next */
      cov_2c3h79dpe2().s[6]++;
      console.warn('Logout error:', error);
    }
  }
  async healthCheck() {
    /* istanbul ignore next */
    cov_2c3h79dpe2().f[2]++;
    cov_2c3h79dpe2().s[7]++;
    try {
      /* istanbul ignore next */
      cov_2c3h79dpe2().s[8]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2c3h79dpe2().s[9]++;
      return false;
    }
  }
}
/* istanbul ignore next */
cov_2c3h79dpe2().s[10]++;
exports.apiService = new ApiService();
/* istanbul ignore next */
cov_2c3h79dpe2().s[11]++;
exports.default = exports.apiService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmMzaDc5ZHBlMiIsImFjdHVhbENvdmVyYWdlIiwicyIsIkFwaVNlcnZpY2UiLCJzaWduSW4iLCJlbWFpbCIsInBhc3N3b3JkIiwiZiIsInN1Y2Nlc3MiLCJkYXRhIiwidXNlciIsInRva2VucyIsImVycm9yIiwiRXJyb3IiLCJiIiwibWVzc2FnZSIsInNpZ25PdXQiLCJjb25zb2xlIiwid2FybiIsImhlYWx0aENoZWNrIiwiZXhwb3J0cyIsImFwaVNlcnZpY2UiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvTXlGaXRIZXJvL3NyYy9saWIvc2VydmljZXMvYXBpLnNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICdAL2xpYi9zdXBhYmFzZSc7XG5cbi8vIFN0YW5kYXJkIHNlcnZpY2UgcmVzcG9uc2UgdHlwZVxuaW50ZXJmYWNlIFNlcnZpY2VSZXNwb25zZTxUID0gdW5rbm93bj4ge1xuICBzdWNjZXNzOiBib29sZWFuO1xuICBkYXRhPzogVDtcbiAgZXJyb3I/OiBzdHJpbmc7XG59XG5cbi8qKlxuICogQ2VudHJhbGl6ZWQgQVBJIHNlcnZpY2UgLSBUT0RPOiBJbXBsZW1lbnQgd2l0aCBTdXBhYmFzZVxuICovXG5jbGFzcyBBcGlTZXJ2aWNlIHtcbiAgYXN5bmMgc2lnbkluKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcpOiBQcm9taXNlPFNlcnZpY2VSZXNwb25zZT4ge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBkYXRhOiB7IHVzZXI6IG51bGwsIHRva2VuczogbnVsbCB9XG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnTG9naW4gZmFpbGVkJyxcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgc2lnbk91dCgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICB0cnkge1xuICAgICAgLy8gVE9ETzogSW1wbGVtZW50IHdpdGggU3VwYWJhc2VcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0xvZ291dCBlcnJvcjonLCBlcnJvcik7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgaGVhbHRoQ2hlY2soKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGFwaVNlcnZpY2UgPSBuZXcgQXBpU2VydmljZSgpO1xuZXhwb3J0IGRlZmF1bHQgYXBpU2VydmljZTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW9CTTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7OztBQVhOOzs7QUFHQSxNQUFNQyxVQUFVO0VBQ2QsTUFBTUMsTUFBTUEsQ0FBQ0MsS0FBYSxFQUFFQyxRQUFnQjtJQUFBO0lBQUFOLGNBQUEsR0FBQU8sQ0FBQTtJQUFBUCxjQUFBLEdBQUFFLENBQUE7SUFDMUMsSUFBSTtNQUFBO01BQUFGLGNBQUEsR0FBQUUsQ0FBQTtNQUNGLE9BQU87UUFDTE0sT0FBTyxFQUFFLElBQUk7UUFDYkMsSUFBSSxFQUFFO1VBQUVDLElBQUksRUFBRSxJQUFJO1VBQUVDLE1BQU0sRUFBRTtRQUFJO09BQ2pDO0lBQ0gsQ0FBQyxDQUFDLE9BQU9DLEtBQVUsRUFBRTtNQUFBO01BQUFaLGNBQUEsR0FBQUUsQ0FBQTtNQUNuQixPQUFPO1FBQ0xNLE9BQU8sRUFBRSxLQUFLO1FBQ2RJLEtBQUssRUFBRUEsS0FBSyxZQUFZQyxLQUFLO1FBQUE7UUFBQSxDQUFBYixjQUFBLEdBQUFjLENBQUEsVUFBR0YsS0FBSyxDQUFDRyxPQUFPO1FBQUE7UUFBQSxDQUFBZixjQUFBLEdBQUFjLENBQUEsVUFBRyxjQUFjO09BQy9EO0lBQ0g7RUFDRjtFQUVBLE1BQU1FLE9BQU9BLENBQUE7SUFBQTtJQUFBaEIsY0FBQSxHQUFBTyxDQUFBO0lBQUFQLGNBQUEsR0FBQUUsQ0FBQTtJQUNYLElBQUk7TUFDRjtJQUFBLENBQ0QsQ0FBQyxPQUFPVSxLQUFVLEVBQUU7TUFBQTtNQUFBWixjQUFBLEdBQUFFLENBQUE7TUFDbkJlLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLGVBQWUsRUFBRU4sS0FBSyxDQUFDO0lBQ3RDO0VBQ0Y7RUFFQSxNQUFNTyxXQUFXQSxDQUFBO0lBQUE7SUFBQW5CLGNBQUEsR0FBQU8sQ0FBQTtJQUFBUCxjQUFBLEdBQUFFLENBQUE7SUFDZixJQUFJO01BQUE7TUFBQUYsY0FBQSxHQUFBRSxDQUFBO01BQ0YsT0FBTyxJQUFJO0lBQ2IsQ0FBQyxDQUFDLE9BQU9VLEtBQVUsRUFBRTtNQUFBO01BQUFaLGNBQUEsR0FBQUUsQ0FBQTtNQUNuQixPQUFPLEtBQUs7SUFDZDtFQUNGOztBQUNEO0FBQUFGLGNBQUEsR0FBQUUsQ0FBQTtBQUVZa0IsT0FBQSxDQUFBQyxVQUFVLEdBQUcsSUFBSWxCLFVBQVUsRUFBRTtBQUFDO0FBQUFILGNBQUEsR0FBQUUsQ0FBQTtBQUMzQ2tCLE9BQUEsQ0FBQUUsT0FBQSxHQUFlRixPQUFBLENBQUFDLFVBQVUiLCJpZ25vcmVMaXN0IjpbXX0=