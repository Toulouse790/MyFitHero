{"version":3,"names":["react_1","cov_13qhs0kg1c","s","__importStar","require","supabase_1","clsx_1","__importDefault","framer_motion_1","lodash_es_1","zustand_1","middleware_1","react_query_1","ai_1","useFavoritesStore","create","persist","set","get","f","favorites","Set","addFavorite","id","state","add","removeFavorite","newSet","delete","toggleFavorite","has","b","name","fetchExercises","page","pageSize","searchTerm","filterCategory","filterDifficulty","filterEquipment","filterMovementType","filterMuscleGroups","filterSport","filterPosition","filterSeasonPhase","query","supabase","from","select","count","order","trim","term","toLowerCase","ilike","length","in","forEach","muscle","contains","range","data","error","exercises","useExercises","params","key","join","useQuery","queryKey","queryFn","placeholderData","staleTime","SearchBar","onSearchChange","value","setValue","default","useState","debounceChange","useMemo","debounce","onChange","e","target","useEffect","jsx_runtime_1","jsxs","className","children","jsx","type","placeholder","AiOutlineSearch","size","categories","difficulties","equipmentOptions","movementTypes","muscleGroups","FilterPanel","filters","renderCheckboxes","field","values","map","item","checked","includes","role","tabIndex","onKeyDown","toggle","xmlns","viewBox","fill","d","useCallback","current","filter","v","ExerciseCard","exercise","isFavorite","onToggleFavorite","motion","article","layout","whileHover","scale","category","difficulty","video_url","src","controls","image_url","alt","description","equipment","onClick","AiFillHeart","AiOutlineHeart","FavoritesList","favoriteIds","setExercises","fetchFavorites","idsArr","Array","_data","_error","ex","PAGE_SIZE","ExercisesPage","setSearchTerm","setFilters","movementType","setPage","isLoading","isError","totalCount","pageCount","Math","ceil","handleFilterChange","handleSearchChange","canNextPage","canPrevPage","_","i","p","disabled","exports"],"sources":["/workspaces/MyFitHero/src/features/workout/pages/ExercisesPage.tsx"],"sourcesContent":["import { X, Heart, Search, Check } from 'lucide-react';\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\n// src/pages/ExercisesPage.tsx\nimport { supabase } from '@/lib/supabase';\nimport clsx from 'clsx';\nimport { motion } from 'framer-motion';\nimport { debounce } from 'lodash-es';\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { useQuery } from '@tanstack/react-query';\nimport { AiOutlineSearch, AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\n\n// ---------------- Typescript Types ----------------\n\n// Exercices principaux\nexport interface ExerciseLibrary {\n  id: string;\n  name: string;\n  description: string | null;\n  category: 'chest' | 'back' | 'shoulders' | 'arms' | 'legs' | 'core' | 'cardio' | 'flexibility';\n  muscle_groups: string[]; // tab de muscles ciblés\n  equipment: 'bodyweight' | 'dumbbells' | 'barbell' | 'resistance_band' | 'machine' | 'other';\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  instructions: string | null;\n  notes: string | null;\n  image_url: string | null;\n  video_url: string | null;\n  movement_type: 'push' | 'pull' | 'legs' | 'core' | 'full_body';\n  exercise_mechanic: 'compound' | 'isolation';\n  force_type: 'push' | 'pull' | 'static';\n  level_of_home_use: 'no_equipment' | 'minimal_equipment' | 'some_equipment';\n  is_outdoor_friendly: boolean;\n}\n\n// Drill sportifs (sport/niveau/poste/... spécifique)\nexport interface SportDrill {\n  id: string;\n  name: string;\n  description: string | null;\n  sport: string;\n  position: string | null;\n  season_phase: 'pre_season' | 'in_season' | 'off_season' | 'recovery' | null;\n  goal: 'speed' | 'power' | 'endurance' | 'skill' | 'agility' | 'technical' | null;\n  difficulty: 'beginner' | 'intermediate' | 'advanced' | null;\n  duration_seconds: number | null;\n  equipment: string | null;\n  instructions: string | null;\n  video_url: string | null;\n}\n\n// Sports catalogue\nexport interface Sport {\n  id: number;\n  name: string;\n  name_en: string | null;\n  category: string | null;\n  country_code: string | null;\n  is_popular: boolean;\n  positions: string[] | null;\n}\n\n// ---------------- Zustand Favorites Store ----------------\n\ninterface FavoritesState {\n  favorites: Set<string>;\n  addFavorite: (id: string) => void;\n  removeFavorite: (id: string) => void;\n  toggleFavorite: (id: string) => void;\n}\n\nconst useFavoritesStore = create<FavoritesState>()(\n  persist(\n    (set, get) => ({\n      favorites: new Set(),\n      addFavorite: id => set(state => ({ favorites: new Set(state.favorites).add(id) })),\n      removeFavorite: id =>\n        set(state => {\n          const newSet = new Set(state.favorites);\n          newSet.delete(id);\n          return { favorites: newSet };\n        }),\n      toggleFavorite: id => {\n        const { favorites, addFavorite, removeFavorite } = get();\n        if (favorites.has(id)) removeFavorite(id);\n        else addFavorite(id);\n      },\n    }),\n    { name: 'myfithero-exercise-favorites' }\n  )\n);\n\n// ---------------- React Query Data Fetch Hook ----------------\n\ninterface FetchExercisesParams {\n  page: number;\n  pageSize: number;\n  searchTerm?: string;\n  filterCategory?: string[];\n  filterDifficulty?: string[];\n  filterEquipment?: string[];\n  filterMovementType?: string[];\n  filterMuscleGroups?: string[];\n  filterSport?: string;\n  filterPosition?: string;\n  filterSeasonPhase?: string;\n}\n\nasync function fetchExercises({\n  page,\n  pageSize,\n  searchTerm,\n  filterCategory,\n  filterDifficulty,\n  filterEquipment,\n  filterMovementType,\n  filterMuscleGroups,\n  filterSport,\n  filterPosition,\n  filterSeasonPhase,\n}: FetchExercisesParams) {\n  let query = supabase\n    .from('exercises_library')\n    .select('*', { count: 'exact' })\n    .order('name');\n\n  if (searchTerm && searchTerm.trim() !== '') {\n    const term = searchTerm.trim().toLowerCase();\n    query = query.ilike('name', `%${term}%`);\n  }\n\n  if (filterCategory && filterCategory.length > 0) {\n    query = query.in('category', filterCategory);\n  }\n  if (filterDifficulty && filterDifficulty.length > 0) {\n    query = query.in('difficulty', filterDifficulty);\n  }\n  if (filterEquipment && filterEquipment.length > 0) {\n    query = query.in('equipment', filterEquipment);\n  }\n  if (filterMovementType && filterMovementType.length > 0) {\n    query = query.in('movement_type', filterMovementType);\n  }\n  if (filterMuscleGroups && filterMuscleGroups.length > 0) {\n    filterMuscleGroups.forEach(muscle => {\n      query = query.contains('muscle_groups', [muscle]);\n    });\n  }\n\n  // Note: filtering on sport, position, seasonPhase (sport_drills_library) should ideally be an RPC or view join.\n\n  query = query.range(page * pageSize, page * pageSize + pageSize - 1);\n\n  const { data, error, count } = await query;\n\n  if (error) throw error;\n\n  return { exercises: data ?? [], count };\n}\n\ninterface ExercisesQueryResult {\n  exercises: ExerciseLibrary[];\n  count: number | null;\n}\n\nfunction useExercises(params: FetchExercisesParams) {\n  const key = [\n    'exercises',\n    params.page,\n    params.pageSize,\n    params.searchTerm,\n    params.filterCategory?.join(','),\n    params.filterDifficulty?.join(','),\n    params.filterEquipment?.join(','),\n    params.filterMovementType?.join(','),\n    params.filterMuscleGroups?.join(','),\n    params.filterSport,\n    params.filterPosition,\n    params.filterSeasonPhase,\n  ];\n  return useQuery<ExercisesQueryResult>({\n    queryKey: key,\n    queryFn: () => fetchExercises(params),\n    placeholderData: { exercises: [], count: null },\n    staleTime: 30000,\n  });\n}\n\n// ---------------- Component SearchBar ----------------\n\ninterface SearchBarProps {\n  searchTerm: string;\n  onSearchChange: (term: string) => void;\n}\n\nconst SearchBar: React.FC<SearchBarProps> = ({ searchTerm, onSearchChange }) => {\n  const [value, setValue] = React.useState(searchTerm);\n\n  const debounceChange = React.useMemo(() => debounce(onSearchChange, 400), [onSearchChange]);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n    debounceChange(e.target.value);\n  };\n\n  React.useEffect(() => {\n    setValue(searchTerm);\n  }, [searchTerm]);\n\n  return (\n    <div className=\"relative w-full max-w-md mx-auto\">\n      <input\n        type=\"search\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Rechercher un exercice...\"\n        className=\"w-full border border-gray-300 rounded-md py-2 pl-10 pr-3 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-800 dark:border-gray-600 dark:text-white\"\n        aria-label=\"Rechercher un exercice\"\n      />\n      <AiOutlineSearch\n        className=\"absolute left-3 top-2.5 text-gray-400 dark:text-gray-500\"\n        size={22}\n      />\n    </div>\n  );\n};\n\n// ---------------- Component FilterPanel ----------------\n\ninterface FilterPanelProps {\n  filters: {\n    category: string[];\n    difficulty: string[];\n    equipment: string[];\n    movementType: string[];\n    muscleGroups: string[];\n  };\n  onChange: (field: keyof FilterPanelProps['filters'], values: string[]) => void;\n}\n\nconst categories = ['chest', 'back', 'shoulders', 'arms', 'legs', 'core', 'cardio', 'flexibility'];\nconst difficulties = ['beginner', 'intermediate', 'advanced'];\nconst equipmentOptions = [\n  'bodyweight',\n  'dumbbells',\n  'barbell',\n  'resistance_band',\n  'machine',\n  'other',\n];\nconst movementTypes = ['push', 'pull', 'legs', 'core', 'full_body'];\nconst muscleGroups = [\n  'pectorals',\n  'triceps',\n  'deltoids',\n  'biceps',\n  'quadriceps',\n  'glutes',\n  'hamstrings',\n  'core',\n  'calves',\n  'back',\n  'abdominals',\n  'obliques',\n  'forearms',\n  'shoulders',\n  'chest',\n  'legs',\n];\n\nconst FilterPanel: React.FC<FilterPanelProps> = ({ filters, onChange }) => {\n  const renderCheckboxes = (field: keyof FilterPanelProps['filters'], values: string[]) => {\n    return values.map(item => {\n      const checked = filters[field].includes(item);\n      return (\n        <label\n          key={item}\n          className=\"inline-flex items-center space-x-2 cursor-pointer\"\n          aria-checked={checked}\n          role=\"checkbox\"\n          tabIndex={0}\n          onKeyDown={e => {\n            if (e.key === 'Enter') {\n              toggle(item, field);\n            }\n          }}\n        >\n          <input\n            type=\"checkbox\"\n            className=\"hidden\"\n            checked={checked}\n            onChange={() => toggle(item, field)}\n            aria-label={item}\n          />\n          <div\n            className={clsx(\n              'w-5 h-5 border rounded-md flex items-center justify-center',\n              checked ? 'bg-blue-600 border-blue-600' : 'border-gray-300',\n              'dark:border-gray-600 dark:bg-gray-800'\n            )}\n          >\n            {checked && (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"w-4 h-4 text-white\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path d=\"M16.707 5.293a1 1 0 00-1.414 0L8 12.586 5.707 10.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l8-8a1 1 0 000-1.414z\" />\n              </svg>\n            )}\n          </div>\n          <span className=\"text-sm dark:text-gray-300\">{item}</span>\n        </label>\n      );\n    });\n  };\n\n  const toggle = useCallback(\n    (item: string, field: keyof FilterPanelProps['filters']) => {\n      const current = filters[field];\n      if (current.includes(item)) {\n        onChange(\n          field,\n          current.filter(v => v !== item)\n        );\n      } else {\n        onChange(field, [...current, item]);\n      }\n    },\n    [filters, onChange]\n  );\n\n  return (\n    <section className=\"p-4 border rounded-md max-w-4xl mx-auto bg-white dark:bg-gray-900 shadow mb-4\">\n      <h3 className=\"font-semibold mb-2 text-lg dark:text-gray-100\">Filtres</h3>\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 text-gray-700 dark:text-gray-300\">\n        <div>\n          <strong>Catégorie</strong>\n          <div className=\"flex flex-wrap gap-2 mt-1\">\n            {renderCheckboxes('category', categories)}\n          </div>\n        </div>\n        <div>\n          <strong>Difficulté</strong>\n          <div className=\"flex flex-wrap gap-2 mt-1\">\n            {renderCheckboxes('difficulty', difficulties)}\n          </div>\n        </div>\n        <div>\n          <strong>Equipement</strong>\n          <div className=\"flex flex-wrap gap-2 mt-1\">\n            {renderCheckboxes('equipment', equipmentOptions)}\n          </div>\n        </div>\n        <div>\n          <strong>Type de mouvement</strong>\n          <div className=\"flex flex-wrap gap-2 mt-1\">\n            {renderCheckboxes('movementType', movementTypes)}\n          </div>\n        </div>\n        <div className=\"md:col-span-2\">\n          <strong>Groupes musculaires</strong>\n          <div className=\"flex flex-wrap gap-2 mt-1\">\n            {renderCheckboxes('muscleGroups', muscleGroups)}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\n// ---------------- ExerciseCard ----------------\n\ninterface ExerciseCardProps {\n  exercise: ExerciseLibrary;\n  isFavorite: boolean;\n  onToggleFavorite: (id: string) => void;\n}\n\nconst ExerciseCard: React.FC<ExerciseCardProps> = ({ exercise, isFavorite, onToggleFavorite }) => {\n  return (\n    <motion.article\n      layout\n      whileHover={{ scale: 1.03 }}\n      className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-3 flex flex-col\"\n      aria-label={`Exercice ${exercise.name}, catégorie ${exercise.category}, difficulté ${exercise.difficulty}`}\n    >\n      <div className=\"relative w-full pt-[56.25%] rounded overflow-hidden mb-2\">\n        {exercise.video_url ? (\n          <video\n            src={exercise.video_url}\n            controls\n            className=\"absolute top-0 left-0 w-full h-full object-cover rounded\"\n            aria-label={`${exercise.name} - vidéo démonstration`}\n          />\n        ) : exercise.image_url ? (\n          <img\n            src={exercise.image_url}\n            alt={`Image exercice ${exercise.name}`}\n            className=\"absolute top-0 left-0 w-full h-full object-cover rounded\"\n          />\n        ) : (\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center rounded\">\n            <p className=\"text-gray-500 dark:text-gray-300\">Aucune image</p>\n          </div>\n        )}\n      </div>\n      <h4 className=\"text-lg font-semibold mb-1 text-gray-900 dark:text-white\">{exercise.name}</h4>\n      <p className=\"flex-grow text-sm text-gray-700 dark:text-gray-300 mb-2 line-clamp-3\">\n        {exercise.description}\n      </p>\n      <div className=\"flex items-center justify-between text-sm text-gray-600 dark:text-gray-400 flex-wrap gap-2\">\n        <span>Équipement: {exercise.equipment}</span>\n        <span>Difficulté: {exercise.difficulty}</span>\n        <button\n          aria-label={isFavorite ? 'Retirer des favoris' : 'Ajouter aux favoris'}\n          onClick={() => onToggleFavorite(exercise.id)}\n          className=\"p-1 text-red-500 hover:text-red-600 focus:outline-none\"\n        >\n          {isFavorite ? <AiFillHeart size={22} /> : <AiOutlineHeart size={22} />}\n        </button>\n      </div>\n    </motion.article>\n  );\n};\n\n// ---------------- FavoritesList ----------------\n\nconst FavoritesList: React.FC<{ favoriteIds: Set<string> }> = ({ favoriteIds }) => {\n  const [exercises, setExercises] = React.useState<ExerciseLibrary[]>([]);\n\n  useEffect(() => {\n    async function fetchFavorites() {\n      if (favoriteIds.size === 0) {\n        setExercises([]);\n        return;\n      }\n      const idsArr = Array.from(favoriteIds);\n      const { data: _data, error: _error } = await supabase\n        .from('exercises_library')\n        .select('*')\n        .in('id', idsArr);\n\n      if (!_error && _data) setExercises(_data);\n    }\n    fetchFavorites();\n  }, [favoriteIds]);\n\n  if (exercises.length === 0) return <p className=\"text-center p-4\">Aucun favori ajouté.</p>;\n\n  return (\n    <section\n      aria-label=\"Liste des exercices favoris\"\n      className=\"max-w-4xl mx-auto p-2 grid grid-cols-1 md:grid-cols-3 gap-4\"\n    >\n      {exercises.map(ex => (\n        <ExerciseCard\n          key={ex.id}\n          exercise={ex}\n          isFavorite={true}\n          onToggleFavorite={() => {}} // NOP ici\n        />\n      ))}\n    </section>\n  );\n};\n\n// ---------------- Main ExercisesPage ----------------\n\nconst PAGE_SIZE = 20;\n\nconst ExercisesPage: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filters, setFilters] = useState({\n    category: [] as string[],\n    difficulty: [] as string[],\n    equipment: [] as string[],\n    movementType: [] as string[],\n    muscleGroups: [] as string[],\n  });\n  const [page, setPage] = useState(0);\n  const { favorites, toggleFavorite } = useFavoritesStore();\n\n  const { data, isLoading, isError } = useExercises({\n    page,\n    pageSize: PAGE_SIZE,\n    searchTerm,\n    filterCategory: filters.category,\n    filterDifficulty: filters.difficulty,\n    filterEquipment: filters.equipment,\n    filterMovementType: filters.movementType,\n    filterMuscleGroups: filters.muscleGroups,\n  });\n\n  const exercises = data?.exercises ?? [];\n  const totalCount = data?.count ?? 0;\n  const pageCount = Math.ceil(totalCount / PAGE_SIZE);\n\n  const handleFilterChange = (field: keyof typeof filters, values: string[]) => {\n    setFilters(f => ({ ...f, [field]: values }));\n    setPage(0);\n  };\n\n  const handleSearchChange = (term: string) => {\n    setSearchTerm(term);\n    setPage(0);\n  };\n\n  const canNextPage = page + 1 < pageCount;\n  const canPrevPage = page > 0;\n\n  return (\n    <main className=\"min-h-screen bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 py-6 px-4\">\n      <h1 className=\"text-3xl font-extrabold text-center mb-6\">Exercices MyFitHero</h1>\n      <SearchBar searchTerm={searchTerm} onSearchChange={handleSearchChange} />\n      <FilterPanel filters={filters} onChange={handleFilterChange} />\n      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {isLoading ? (\n          Array.from({ length: PAGE_SIZE }).map((_, i) => (\n            <div key={i} className=\"h-72 rounded-lg bg-gray-300 dark:bg-gray-700 animate-pulse\" />\n          ))\n        ) : isError ? (\n          <div className=\"col-span-full text-center text-red-600\">Erreur chargement exercices.</div>\n        ) : exercises.length === 0 ? (\n          <div className=\"col-span-full text-center text-gray-600 dark:text-gray-400\">\n            Aucun exercice trouvé.\n          </div>\n        ) : (\n          exercises.map((exercise: ExerciseLibrary) => (\n            <ExerciseCard\n              key={exercise.id}\n              exercise={exercise}\n              isFavorite={favorites.has(exercise.id)}\n              onToggleFavorite={toggleFavorite}\n            />\n          ))\n        )}\n      </div>\n      <nav className=\"flex justify-center items-center mt-8 space-x-4\">\n        <button\n          onClick={() => canPrevPage && setPage(p => p - 1)}\n          disabled={!canPrevPage}\n          className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\n          aria-label=\"Page précédente\"\n        >\n          Précédent\n        </button>\n        <span aria-live=\"polite\" aria-atomic=\"true\" className=\"text-lg\">\n          Page {page + 1} / {pageCount}\n        </span>\n        <button\n          onClick={() => canNextPage && setPage(p => p + 1)}\n          disabled={!canNextPage}\n          className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\n          aria-label=\"Page suivante\"\n        >\n          Suivant\n        </button>\n      </nav>\n      <section aria-label=\"Vos exercices favoris\" className=\"mt-12 max-w-6xl mx-auto\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Vos favoris</h2>\n        <FavoritesList favoriteIds={favorites} />\n      </section>\n    </main>\n  );\n};\n\nexport default ExercisesPage;\n"],"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","ignoreList":[]}