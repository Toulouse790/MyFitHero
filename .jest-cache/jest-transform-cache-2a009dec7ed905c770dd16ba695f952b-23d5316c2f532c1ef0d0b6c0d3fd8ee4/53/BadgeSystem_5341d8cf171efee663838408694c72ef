ee761cb015714e413ec26d2fbd24874a
"use strict";

/* istanbul ignore next */
function cov_2m75rlote8() {
  var path = "/workspaces/MyFitHero/src/features/workout/components/BadgeSystem.tsx";
  var hash = "928cf59918e5adc4ffc9567024498f0b8eb5cb55";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/workout/components/BadgeSystem.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "25": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 50
        }
      },
      "26": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 46
        }
      },
      "27": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "28": {
        start: {
          line: 29,
          column: 19
        },
        end: {
          line: 29,
          column: 46
        }
      },
      "29": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 44
        }
      },
      "30": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 272,
          column: 1
        }
      },
      "31": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 55
        }
      },
      "32": {
        start: {
          line: 33,
          column: 32
        },
        end: {
          line: 33,
          column: 57
        }
      },
      "33": {
        start: {
          line: 34,
          column: 38
        },
        end: {
          line: 34,
          column: 65
        }
      },
      "34": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "35": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 136,
          column: 23
        }
      },
      "36": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 27
        }
      },
      "37": {
        start: {
          line: 137,
          column: 29
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "38": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 139,
          column: 19
        }
      },
      "39": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 19
        }
      },
      "40": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 27
        }
      },
      "41": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "42": {
        start: {
          line: 143,
          column: 41
        },
        end: {
          line: 146,
          column: 47
        }
      },
      "43": {
        start: {
          line: 148,
          column: 36
        },
        end: {
          line: 151,
          column: 47
        }
      },
      "44": {
        start: {
          line: 152,
          column: 35
        },
        end: {
          line: 152,
          column: 75
        }
      },
      "45": {
        start: {
          line: 152,
          column: 58
        },
        end: {
          line: 152,
          column: 68
        }
      },
      "46": {
        start: {
          line: 153,
          column: 34
        },
        end: {
          line: 165,
          column: 14
        }
      },
      "47": {
        start: {
          line: 154,
          column: 33
        },
        end: {
          line: 154,
          column: 66
        }
      },
      "48": {
        start: {
          line: 155,
          column: 33
        },
        end: {
          line: 155,
          column: 73
        }
      },
      "49": {
        start: {
          line: 156,
          column: 39
        },
        end: {
          line: 158,
          column: 31
        }
      },
      "50": {
        start: {
          line: 157,
          column: 46
        },
        end: {
          line: 157,
          column: 69
        }
      },
      "51": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 164,
          column: 18
        }
      },
      "52": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 37
        }
      },
      "53": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 51
        }
      },
      "54": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 74
        }
      },
      "55": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 32
        }
      },
      "56": {
        start: {
          line: 178,
          column: 30
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "57": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "58": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 49
        }
      },
      "59": {
        start: {
          line: 183,
          column: 38
        },
        end: {
          line: 183,
          column: 106
        }
      },
      "60": {
        start: {
          line: 183,
          column: 58
        },
        end: {
          line: 183,
          column: 98
        }
      },
      "61": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 51
        }
      },
      "62": {
        start: {
          line: 187,
          column: 36
        },
        end: {
          line: 187,
          column: 102
        }
      },
      "63": {
        start: {
          line: 187,
          column: 56
        },
        end: {
          line: 187,
          column: 94
        }
      },
      "64": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 49
        }
      },
      "65": {
        start: {
          line: 191,
          column: 34
        },
        end: {
          line: 191,
          column: 98
        }
      },
      "66": {
        start: {
          line: 191,
          column: 54
        },
        end: {
          line: 191,
          column: 90
        }
      },
      "67": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 47
        }
      },
      "68": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 61
        }
      },
      "69": {
        start: {
          line: 197,
          column: 36
        },
        end: {
          line: 197,
          column: 89
        }
      },
      "70": {
        start: {
          line: 197,
          column: 56
        },
        end: {
          line: 197,
          column: 81
        }
      },
      "71": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 48
        }
      },
      "72": {
        start: {
          line: 201,
          column: 38
        },
        end: {
          line: 201,
          column: 106
        }
      },
      "73": {
        start: {
          line: 201,
          column: 58
        },
        end: {
          line: 201,
          column: 98
        }
      },
      "74": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 51
        }
      },
      "75": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 48
        }
      },
      "76": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 25
        }
      },
      "77": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "78": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 67
        }
      },
      "79": {
        start: {
          line: 212,
          column: 35
        },
        end: {
          line: 212,
          column: 58
        }
      },
      "80": {
        start: {
          line: 214,
          column: 30
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "81": {
        start: {
          line: 215,
          column: 28
        },
        end: {
          line: 218,
          column: 43
        }
      },
      "82": {
        start: {
          line: 215,
          column: 51
        },
        end: {
          line: 218,
          column: 42
        }
      },
      "83": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "84": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 36
        }
      },
      "85": {
        start: {
          line: 223,
          column: 23
        },
        end: {
          line: 242,
          column: 5
        }
      },
      "86": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 225,
          column: 19
        }
      },
      "87": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 19
        }
      },
      "88": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "89": {
        start: {
          line: 227,
          column: 38
        },
        end: {
          line: 231,
          column: 14
        }
      },
      "90": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "91": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 121
        }
      },
      "92": {
        start: {
          line: 234,
          column: 34
        },
        end: {
          line: 234,
          column: 119
        }
      },
      "93": {
        start: {
          line: 234,
          column: 49
        },
        end: {
          line: 234,
          column: 117
        }
      },
      "94": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 75
        }
      },
      "95": {
        start: {
          line: 243,
          column: 32
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "96": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "97": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 41
        }
      },
      "98": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 41
        }
      },
      "99": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 43
        }
      },
      "100": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 43
        }
      },
      "101": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 41
        }
      },
      "102": {
        start: {
          line: 257,
          column: 25
        },
        end: {
          line: 257,
          column: 53
        }
      },
      "103": {
        start: {
          line: 257,
          column: 44
        },
        end: {
          line: 257,
          column: 52
        }
      },
      "104": {
        start: {
          line: 258,
          column: 28
        },
        end: {
          line: 258,
          column: 57
        }
      },
      "105": {
        start: {
          line: 258,
          column: 47
        },
        end: {
          line: 258,
          column: 56
        }
      },
      "106": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "107": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 222
        }
      },
      "108": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 271,
          column: 40
        }
      },
      "109": {
        start: {
          line: 263,
          column: 41
        },
        end: {
          line: 263,
          column: 51
        }
      },
      "110": {
        start: {
          line: 264,
          column: 28
        },
        end: {
          line: 264,
          column: 893
        }
      },
      "111": {
        start: {
          line: 266,
          column: 41
        },
        end: {
          line: 266,
          column: 51
        }
      },
      "112": {
        start: {
          line: 267,
          column: 55
        },
        end: {
          line: 269,
          column: 35
        }
      },
      "113": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 270,
          column: 1277
        }
      },
      "114": {
        start: {
          line: 273,
          column: 0
        },
        end: {
          line: 273,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 31,
            column: 21
          }
        },
        loc: {
          start: {
            line: 31,
            column: 66
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 134,
            column: 27
          },
          end: {
            line: 134,
            column: 28
          }
        },
        loc: {
          start: {
            line: 134,
            column: 33
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 134
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 137,
            column: 29
          },
          end: {
            line: 137,
            column: 30
          }
        },
        loc: {
          start: {
            line: 137,
            column: 41
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 137
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 152,
            column: 51
          },
          end: {
            line: 152,
            column: 52
          }
        },
        loc: {
          start: {
            line: 152,
            column: 58
          },
          end: {
            line: 152,
            column: 68
          }
        },
        line: 152
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 153,
            column: 55
          },
          end: {
            line: 153,
            column: 56
          }
        },
        loc: {
          start: {
            line: 153,
            column: 64
          },
          end: {
            line: 165,
            column: 13
          }
        },
        line: 153
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 157,
            column: 39
          },
          end: {
            line: 157,
            column: 40
          }
        },
        loc: {
          start: {
            line: 157,
            column: 46
          },
          end: {
            line: 157,
            column: 69
          }
        },
        line: 157
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 178,
            column: 30
          },
          end: {
            line: 178,
            column: 31
          }
        },
        loc: {
          start: {
            line: 178,
            column: 50
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 178
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 183,
            column: 51
          },
          end: {
            line: 183,
            column: 52
          }
        },
        loc: {
          start: {
            line: 183,
            column: 58
          },
          end: {
            line: 183,
            column: 98
          }
        },
        line: 183
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 187,
            column: 49
          },
          end: {
            line: 187,
            column: 50
          }
        },
        loc: {
          start: {
            line: 187,
            column: 56
          },
          end: {
            line: 187,
            column: 94
          }
        },
        line: 187
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 191,
            column: 47
          },
          end: {
            line: 191,
            column: 48
          }
        },
        loc: {
          start: {
            line: 191,
            column: 54
          },
          end: {
            line: 191,
            column: 90
          }
        },
        line: 191
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 197,
            column: 49
          },
          end: {
            line: 197,
            column: 50
          }
        },
        loc: {
          start: {
            line: 197,
            column: 56
          },
          end: {
            line: 197,
            column: 81
          }
        },
        line: 197
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 201,
            column: 51
          },
          end: {
            line: 201,
            column: 52
          }
        },
        loc: {
          start: {
            line: 201,
            column: 58
          },
          end: {
            line: 201,
            column: 98
          }
        },
        line: 201
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 210,
            column: 28
          },
          end: {
            line: 210,
            column: 29
          }
        },
        loc: {
          start: {
            line: 210,
            column: 39
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 210
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 212,
            column: 28
          },
          end: {
            line: 212,
            column: 29
          }
        },
        loc: {
          start: {
            line: 212,
            column: 35
          },
          end: {
            line: 212,
            column: 58
          }
        },
        line: 212
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 214,
            column: 30
          },
          end: {
            line: 214,
            column: 31
          }
        },
        loc: {
          start: {
            line: 214,
            column: 48
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 214
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 215,
            column: 42
          },
          end: {
            line: 215,
            column: 43
          }
        },
        loc: {
          start: {
            line: 215,
            column: 51
          },
          end: {
            line: 218,
            column: 42
          }
        },
        line: 215
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 223,
            column: 23
          },
          end: {
            line: 223,
            column: 24
          }
        },
        loc: {
          start: {
            line: 223,
            column: 40
          },
          end: {
            line: 242,
            column: 5
          }
        },
        line: 223
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 234,
            column: 26
          },
          end: {
            line: 234,
            column: 27
          }
        },
        loc: {
          start: {
            line: 234,
            column: 34
          },
          end: {
            line: 234,
            column: 119
          }
        },
        line: 234
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 234,
            column: 43
          },
          end: {
            line: 234,
            column: 44
          }
        },
        loc: {
          start: {
            line: 234,
            column: 49
          },
          end: {
            line: 234,
            column: 117
          }
        },
        line: 234
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 243,
            column: 32
          },
          end: {
            line: 243,
            column: 33
          }
        },
        loc: {
          start: {
            line: 243,
            column: 44
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 243
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 257,
            column: 39
          },
          end: {
            line: 257,
            column: 40
          }
        },
        loc: {
          start: {
            line: 257,
            column: 44
          },
          end: {
            line: 257,
            column: 52
          }
        },
        line: 257
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 258,
            column: 42
          },
          end: {
            line: 258,
            column: 43
          }
        },
        loc: {
          start: {
            line: 258,
            column: 47
          },
          end: {
            line: 258,
            column: 56
          }
        },
        line: 258
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 262,
            column: 2279
          },
          end: {
            line: 262,
            column: 2280
          }
        },
        loc: {
          start: {
            line: 262,
            column: 2288
          },
          end: {
            line: 265,
            column: 25
          }
        },
        line: 262
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 265,
            column: 543
          },
          end: {
            line: 265,
            column: 544
          }
        },
        loc: {
          start: {
            line: 265,
            column: 552
          },
          end: {
            line: 271,
            column: 25
          }
        },
        line: 265
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 38
          },
          end: {
            line: 31,
            column: 42
          }
        }],
        line: 31
      },
      "17": {
        loc: {
          start: {
            line: 31,
            column: 44
          },
          end: {
            line: 31,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 54
          },
          end: {
            line: 31,
            column: 59
          }
        }],
        line: 31
      },
      "18": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 139,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 139,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "19": {
        loc: {
          start: {
            line: 152,
            column: 35
          },
          end: {
            line: 152,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 35
          },
          end: {
            line: 152,
            column: 69
          }
        }, {
          start: {
            line: 152,
            column: 73
          },
          end: {
            line: 152,
            column: 75
          }
        }],
        line: 152
      },
      "20": {
        loc: {
          start: {
            line: 155,
            column: 61
          },
          end: {
            line: 155,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 61
          },
          end: {
            line: 155,
            column: 66
          }
        }, {
          start: {
            line: 155,
            column: 70
          },
          end: {
            line: 155,
            column: 72
          }
        }],
        line: 155
      },
      "21": {
        loc: {
          start: {
            line: 156,
            column: 39
          },
          end: {
            line: 158,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 22
          },
          end: {
            line: 157,
            column: 81
          }
        }, {
          start: {
            line: 158,
            column: 22
          },
          end: {
            line: 158,
            column: 31
          }
        }],
        line: 156
      },
      "22": {
        loc: {
          start: {
            line: 163,
            column: 30
          },
          end: {
            line: 163,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 47
          },
          end: {
            line: 163,
            column: 71
          }
        }, {
          start: {
            line: 163,
            column: 74
          },
          end: {
            line: 163,
            column: 83
          }
        }],
        line: 163
      },
      "23": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 181,
            column: 49
          }
        }, {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        }, {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 195,
            column: 61
          }
        }, {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        }, {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        }, {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 205,
            column: 48
          }
        }, {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 207,
            column: 25
          }
        }],
        line: 179
      },
      "24": {
        loc: {
          start: {
            line: 205,
            column: 23
          },
          end: {
            line: 205,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 42
          },
          end: {
            line: 205,
            column: 43
          }
        }, {
          start: {
            line: 205,
            column: 46
          },
          end: {
            line: 205,
            column: 47
          }
        }],
        line: 205
      },
      "25": {
        loc: {
          start: {
            line: 215,
            column: 51
          },
          end: {
            line: 218,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 51
          },
          end: {
            line: 215,
            column: 64
          }
        }, {
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 216,
            column: 40
          }
        }, {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 38
          }
        }, {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 218,
            column: 42
          }
        }],
        line: 215
      },
      "26": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 225,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 225,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "27": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "28": {
        loc: {
          start: {
            line: 234,
            column: 49
          },
          end: {
            line: 234,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 69
          },
          end: {
            line: 234,
            column: 113
          }
        }, {
          start: {
            line: 234,
            column: 116
          },
          end: {
            line: 234,
            column: 117
          }
        }],
        line: 234
      },
      "29": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 246,
            column: 41
          }
        }, {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 248,
            column: 41
          }
        }, {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 250,
            column: 43
          }
        }, {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 252,
            column: 43
          }
        }, {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 254,
            column: 41
          }
        }],
        line: 244
      },
      "30": {
        loc: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "31": {
        loc: {
          start: {
            line: 262,
            column: 117
          },
          end: {
            line: 262,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 127
          },
          end: {
            line: 262,
            column: 132
          }
        }, {
          start: {
            line: 262,
            column: 135
          },
          end: {
            line: 262,
            column: 137
          }
        }],
        line: 262
      },
      "32": {
        loc: {
          start: {
            line: 262,
            column: 1039
          },
          end: {
            line: 262,
            column: 1798
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 1039
          },
          end: {
            line: 262,
            column: 1047
          }
        }, {
          start: {
            line: 262,
            column: 1052
          },
          end: {
            line: 262,
            column: 1797
          }
        }],
        line: 262
      },
      "33": {
        loc: {
          start: {
            line: 262,
            column: 1800
          },
          end: {
            line: 265,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 1800
          },
          end: {
            line: 262,
            column: 1823
          }
        }, {
          start: {
            line: 262,
            column: 1828
          },
          end: {
            line: 265,
            column: 33
          }
        }],
        line: 262
      },
      "34": {
        loc: {
          start: {
            line: 262,
            column: 2188
          },
          end: {
            line: 262,
            column: 2242
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 2198
          },
          end: {
            line: 262,
            column: 2211
          }
        }, {
          start: {
            line: 262,
            column: 2214
          },
          end: {
            line: 262,
            column: 2242
          }
        }],
        line: 262
      },
      "35": {
        loc: {
          start: {
            line: 264,
            column: 425
          },
          end: {
            line: 264,
            column: 716
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 425
          },
          end: {
            line: 264,
            column: 433
          }
        }, {
          start: {
            line: 264,
            column: 438
          },
          end: {
            line: 264,
            column: 715
          }
        }],
        line: 264
      },
      "36": {
        loc: {
          start: {
            line: 264,
            column: 722
          },
          end: {
            line: 264,
            column: 877
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 722
          },
          end: {
            line: 264,
            column: 750
          }
        }, {
          start: {
            line: 264,
            column: 755
          },
          end: {
            line: 264,
            column: 876
          }
        }],
        line: 264
      },
      "37": {
        loc: {
          start: {
            line: 265,
            column: 36
          },
          end: {
            line: 271,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 36
          },
          end: {
            line: 265,
            column: 48
          }
        }, {
          start: {
            line: 265,
            column: 52
          },
          end: {
            line: 265,
            column: 78
          }
        }, {
          start: {
            line: 265,
            column: 83
          },
          end: {
            line: 271,
            column: 33
          }
        }],
        line: 265
      },
      "38": {
        loc: {
          start: {
            line: 265,
            column: 423
          },
          end: {
            line: 265,
            column: 477
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 433
          },
          end: {
            line: 265,
            column: 446
          }
        }, {
          start: {
            line: 265,
            column: 449
          },
          end: {
            line: 265,
            column: 477
          }
        }],
        line: 265
      },
      "39": {
        loc: {
          start: {
            line: 265,
            column: 522
          },
          end: {
            line: 265,
            column: 537
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 532
          },
          end: {
            line: 265,
            column: 533
          }
        }, {
          start: {
            line: 265,
            column: 536
          },
          end: {
            line: 265,
            column: 537
          }
        }],
        line: 265
      },
      "40": {
        loc: {
          start: {
            line: 267,
            column: 55
          },
          end: {
            line: 269,
            column: 35
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 268,
            column: 34
          },
          end: {
            line: 268,
            column: 78
          }
        }, {
          start: {
            line: 269,
            column: 34
          },
          end: {
            line: 269,
            column: 35
          }
        }],
        line: 267
      },
      "41": {
        loc: {
          start: {
            line: 268,
            column: 36
          },
          end: {
            line: 268,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 36
          },
          end: {
            line: 268,
            column: 50
          }
        }, {
          start: {
            line: 268,
            column: 54
          },
          end: {
            line: 268,
            column: 55
          }
        }],
        line: 268
      },
      "42": {
        loc: {
          start: {
            line: 270,
            column: 576
          },
          end: {
            line: 270,
            column: 1254
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 576
          },
          end: {
            line: 270,
            column: 588
          }
        }, {
          start: {
            line: 270,
            column: 593
          },
          end: {
            line: 270,
            column: 1253
          }
        }],
        line: 270
      },
      "43": {
        loc: {
          start: {
            line: 270,
            column: 834
          },
          end: {
            line: 270,
            column: 853
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 834
          },
          end: {
            line: 270,
            column: 848
          }
        }, {
          start: {
            line: 270,
            column: 852
          },
          end: {
            line: 270,
            column: 853
          }
        }],
        line: 270
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/workout/components/BadgeSystem.tsx",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/workout/components/BadgeSystem.tsx"],
      sourcesContent: ["import React, { useState, useEffect } from 'react';\nimport {\n  Trophy,\n  Star,\n  Target,\n  Award,\n  Crown,\n  Zap,\n  Shield,\n  Heart,\n  Calendar,\n  Lock,\n  Unlock,\n  Moon,\n} from 'lucide-react';\nimport { appStore } from '@/store/appStore';\nimport { supabase } from '@/lib/supabase';\n\ninterface Badge {\n  id: string;\n  title: string;\n  description: string;\n  icon: React.ElementType;\n  color: string;\n  bgColor: string;\n  earned: boolean;\n  earnedAt?: Date;\n  progress?: number;\n  target?: number;\n  category: 'fitness' | 'consistency' | 'achievement' | 'milestone';\n  rarity: 'common' | 'rare' | 'epic' | 'legendary';\n}\n\ninterface UserBadge {\n  badge_id: string;\n  earned_at: string;\n  user_id: string;\n}\n\ninterface BadgeSystemProps {\n  showProgress?: boolean;\n  compact?: boolean;\n}\n\nconst BadgeSystem: React.FC<BadgeSystemProps> = ({ showProgress = true, compact = false }) => {\n  const { appStoreUser } = appStore();\n  const [badges, setBadges] = useState<Badge[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const predefinedBadges: Badge[] = [\n    // Badges de consistance\n    {\n      id: 'first_week',\n      title: 'Premi\xE8re Semaine',\n      description: 'Compl\xE9tez 7 jours cons\xE9cutifs',\n      icon: Calendar,\n      color: 'text-green-600',\n      bgColor: 'bg-green-100',\n      earned: false,\n      target: 7,\n      category: 'consistency',\n      rarity: 'common',\n    },\n    {\n      id: 'hydration_master',\n      title: 'Ma\xEEtre Hydratation',\n      description: \"Atteignez votre objectif d'hydratation 30 jours\",\n      icon: Shield,\n      color: 'text-blue-600',\n      bgColor: 'bg-blue-100',\n      earned: false,\n      target: 30,\n      category: 'consistency',\n      rarity: 'rare',\n    },\n    {\n      id: 'workout_warrior',\n      title: 'Guerrier Fitness',\n      description: 'Compl\xE9tez 50 entra\xEEnements',\n      icon: Zap,\n      color: 'text-red-600',\n      bgColor: 'bg-red-100',\n      earned: false,\n      target: 50,\n      category: 'fitness',\n      rarity: 'epic',\n    },\n    {\n      id: 'sleep_champion',\n      title: 'Champion du Sommeil',\n      description: 'Dormez 8h+ pendant 14 jours cons\xE9cutifs',\n      icon: Moon,\n      color: 'text-purple-600',\n      bgColor: 'bg-purple-100',\n      earned: false,\n      target: 14,\n      category: 'consistency',\n      rarity: 'rare',\n    },\n    {\n      id: 'streak_legend',\n      title: 'L\xE9gende de la R\xE9gularit\xE9',\n      description: 'Maintenez une streak de 100 jours',\n      icon: Crown,\n      color: 'text-yellow-600',\n      bgColor: 'bg-yellow-100',\n      earned: false,\n      target: 100,\n      category: 'achievement',\n      rarity: 'legendary',\n    },\n    {\n      id: 'perfect_week',\n      title: 'Semaine Parfaite',\n      description: 'Compl\xE9tez 100% de vos objectifs 7 jours',\n      icon: Star,\n      color: 'text-orange-600',\n      bgColor: 'bg-orange-100',\n      earned: false,\n      target: 7,\n      category: 'achievement',\n      rarity: 'epic',\n    },\n    {\n      id: 'nutrition_guru',\n      title: 'Gourou Nutrition',\n      description: 'Suivez votre nutrition 21 jours',\n      icon: Heart,\n      color: 'text-green-600',\n      bgColor: 'bg-green-100',\n      earned: false,\n      target: 21,\n      category: 'consistency',\n      rarity: 'rare',\n    },\n    {\n      id: 'first_milestone',\n      title: 'Premier Jalon',\n      description: 'Atteignez votre premier objectif',\n      icon: Target,\n      color: 'text-blue-600',\n      bgColor: 'bg-blue-100',\n      earned: false,\n      target: 1,\n      category: 'milestone',\n      rarity: 'common',\n    },\n  ];\n\n  useEffect(() => {\n    initializeBadges();\n  }, [appStoreUser]);\n\n  const initializeBadges = async () => {\n    if (!appStoreUser?.id) return;\n\n    setIsLoading(true);\n    try {\n      // R\xE9cup\xE9rer les badges de l'utilisateur\n      const { data: userBadges } = await (supabase as any)\n        .from('user_badges')\n        .select('*')\n        .eq('user_id', appStoreUser.id) as { data: UserBadge[] | null };\n\n      // R\xE9cup\xE9rer les statistiques pour calculer les progr\xE8s\n      const { data: stats } = await (supabase as any)\n        .from('daily_check_ins')\n        .select('*')\n        .eq('user_id', appStoreUser.id);\n\n      const earnedBadgeIds = userBadges?.map((b: UserBadge) => b.badge_id) || [];\n\n      const updatedBadges = predefinedBadges.map(badge => {\n        const isEarned = earnedBadgeIds.includes(badge.id);\n        const progress = calculateProgress(badge.id, stats || []);\n        const earnedAtString = isEarned\n          ? userBadges?.find((b: UserBadge) => b.badge_id === badge.id)?.earned_at\n          : undefined;\n\n        return {\n          ...badge,\n          earned: isEarned,\n          progress,\n          earnedAt: earnedAtString ? new Date(earnedAtString) : undefined,\n        };\n      });\n\n      setBadges(updatedBadges);\n\n      // V\xE9rifier si des badges peuvent \xEAtre d\xE9bloqu\xE9s\n      await checkForNewBadges(updatedBadges);\n    } catch (error) {\n      // Erreur silencieuse\n      console.error('Erreur lors du chargement des badges:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const calculateProgress = (badgeId: string, stats: any[]): number => {\n    switch (badgeId) {\n      case 'first_week':\n        return Math.min(stats.length, 7);\n      case 'hydration_master': {\n        const hydrationDays = stats.filter((s: any) => s.completed_goals?.includes('hydration')).length;\n        return Math.min(hydrationDays, 30);\n      }\n      case 'workout_warrior': {\n        const workoutDays = stats.filter((s: any) => s.completed_goals?.includes('workout')).length;\n        return Math.min(workoutDays, 50);\n      }\n      case 'sleep_champion': {\n        const sleepDays = stats.filter((s: any) => s.completed_goals?.includes('sleep')).length;\n        return Math.min(sleepDays, 14);\n      }\n      case 'streak_legend':\n        return Math.min(calculateStreak(stats), 100);\n      case 'perfect_week': {\n        const perfectDays = stats.filter((s: any) => s.completion_rate === 100).length;\n        return Math.min(perfectDays, 7);\n      }\n      case 'nutrition_guru': {\n        const nutritionDays = stats.filter((s: any) => s.completed_goals?.includes('nutrition')).length;\n        return Math.min(nutritionDays, 21);\n      }\n      case 'first_milestone':\n        return stats.length > 0 ? 1 : 0;\n      default:\n        return 0;\n    }\n  };\n\n  const calculateStreak = (stats: any[]): number => {\n    // Logique simplifi\xE9e pour calculer la streak\n    return stats.filter((s: any) => s.completion_rate >= 75).length;\n  };\n\n  const checkForNewBadges = async (badges: Badge[]) => {\n    const newlyEarned = badges.filter(\n      badge =>\n        !badge.earned &&\n        badge.progress !== undefined &&\n        badge.target !== undefined &&\n        badge.progress >= badge.target\n    );\n\n    for (const badge of newlyEarned) {\n      await awardBadge(badge);\n    }\n  };\n\n  const awardBadge = async (badge: Badge) => {\n    if (!appStoreUser?.id) return;\n    \n    try {\n      const { error: _error } = await (supabase as any).from('user_badges').insert({\n        user_id: appStoreUser.id,\n        badge_id: badge.id,\n        earned_at: new Date().toISOString(),\n      });\n\n      if (!_error) {\n        // Mise \xE0 jour locale\n        setBadges(prev =>\n          prev.map(b => (b.id === badge.id ? { ...b, earned: true, earnedAt: new Date() } : b))\n        );\n\n        // Notification (si toast disponible)\n      }\n    } catch (error) {\n      // Erreur silencieuse\n      console.error(\"Erreur lors de l'attribution du badge:\", error);\n    }\n  };\n\n  const getBadgeRarityColor = (rarity: string): string => {\n    switch (rarity) {\n      case 'common':\n        return 'border-gray-300';\n      case 'rare':\n        return 'border-blue-400';\n      case 'epic':\n        return 'border-purple-400';\n      case 'legendary':\n        return 'border-yellow-400';\n      default:\n        return 'border-gray-300';\n    }\n  };\n\n  const earnedBadges = badges.filter(b => b.earned);\n  const availableBadges = badges.filter(b => !b.earned);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={`bg-white rounded-2xl p-6 shadow-lg border border-gray-100 ${compact ? 'p-4' : ''}`}\n    >\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center gap-3\">\n          <Trophy className=\"text-yellow-500\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Badges</h2>\n            <p className=\"text-gray-600\">\n              {earnedBadges.length} / {badges.length} d\xE9bloqu\xE9s\n            </p>\n          </div>\n        </div>\n\n        <div className=\"flex items-center gap-2 bg-yellow-50 px-4 py-2 rounded-full\">\n          <Award className=\"text-yellow-600\" size={20} />\n          <span className=\"font-bold text-yellow-700\">{earnedBadges.length}</span>\n        </div>\n      </div>\n\n      {!compact && (\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-gray-700\">Progression globale</span>\n            <span className=\"text-sm font-bold text-gray-900\">\n              {Math.round((earnedBadges.length / badges.length) * 100)}%\n            </span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div\n              className=\"bg-gradient-to-r from-yellow-500 to-orange-500 h-2 rounded-full transition-all duration-500\"\n              style={{ width: `${(earnedBadges.length / badges.length) * 100}%` }}\n            ></div>\n          </div>\n        </div>\n      )}\n\n      {/* Badges d\xE9bloqu\xE9s */}\n      {earnedBadges.length > 0 && (\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2\">\n            <Unlock className=\"text-green-500\" size={20} />\n            Badges D\xE9bloqu\xE9s\n          </h3>\n          <div className={`grid ${compact ? 'grid-cols-4' : 'grid-cols-3 md:grid-cols-4'} gap-3`}>\n            {earnedBadges.map(badge => {\n              const Icon = badge.icon;\n              return (\n                <div\n                  key={badge.id}\n                  className={`relative p-4 rounded-xl border-2 ${getBadgeRarityColor(badge.rarity)} ${badge.bgColor} cursor-pointer hover:shadow-md transition-all duration-300`}\n                  title={badge.description}\n                >\n                  <div className=\"flex flex-col items-center gap-2\">\n                    <Icon size={24} className={badge.color} />\n                    {!compact && (\n                      <div className=\"text-center\">\n                        <h4 className=\"font-semibold text-sm text-gray-800\">{badge.title}</h4>\n                        <p className=\"text-xs text-gray-600\">{badge.description}</p>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Indicateur de raret\xE9 */}\n                  {badge.rarity === 'legendary' && (\n                    <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-pulse\"></div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n\n      {/* Badges disponibles */}\n      {showProgress && availableBadges.length > 0 && (\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2\">\n            <Lock className=\"text-gray-500\" size={20} />\n            Badges \xE0 D\xE9bloquer\n          </h3>\n          <div className={`grid ${compact ? 'grid-cols-2' : 'grid-cols-1 md:grid-cols-2'} gap-3`}>\n            {availableBadges.slice(0, compact ? 4 : 8).map(badge => {\n              const Icon = badge.icon;\n              const progressPercentage = badge.target\n                ? ((badge.progress || 0) / badge.target) * 100\n                : 0;\n\n              return (\n                <div\n                  key={badge.id}\n                  className=\"p-4 rounded-xl border border-gray-200 bg-gray-50 opacity-75\"\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <Icon size={24} className=\"text-gray-400\" />\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-semibold text-sm text-gray-700\">{badge.title}</h4>\n                      <p className=\"text-xs text-gray-500\">{badge.description}</p>\n\n                      {badge.target && (\n                        <div className=\"mt-2\">\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <span className=\"text-xs text-gray-500\">\n                              {badge.progress || 0} / {badge.target}\n                            </span>\n                            <span className=\"text-xs text-gray-500\">\n                              {Math.round(progressPercentage)}%\n                            </span>\n                          </div>\n                          <div className=\"w-full bg-gray-200 rounded-full h-1\">\n                            <div\n                              className=\"bg-gray-400 h-1 rounded-full transition-all duration-500\"\n                              style={{ width: `${progressPercentage}%` }}\n                            ></div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BadgeSystem;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "928cf59918e5adc4ffc9567024498f0b8eb5cb55"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2m75rlote8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2m75rlote8();
var __createBinding =
/* istanbul ignore next */
(cov_2m75rlote8().s[0]++,
/* istanbul ignore next */
(cov_2m75rlote8().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2m75rlote8().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2m75rlote8().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2m75rlote8().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2m75rlote8().f[0]++;
  cov_2m75rlote8().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2m75rlote8().b[2][0]++;
    cov_2m75rlote8().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2m75rlote8().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2m75rlote8().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2m75rlote8().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2m75rlote8().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2m75rlote8().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2m75rlote8().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2m75rlote8().b[5][1]++,
  /* istanbul ignore next */
  (cov_2m75rlote8().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2m75rlote8().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2m75rlote8().b[3][0]++;
    cov_2m75rlote8().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2m75rlote8().f[1]++;
        cov_2m75rlote8().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2m75rlote8().b[3][1]++;
  }
  cov_2m75rlote8().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2m75rlote8().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2m75rlote8().f[2]++;
  cov_2m75rlote8().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2m75rlote8().b[7][0]++;
    cov_2m75rlote8().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2m75rlote8().b[7][1]++;
  }
  cov_2m75rlote8().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2m75rlote8().s[11]++,
/* istanbul ignore next */
(cov_2m75rlote8().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2m75rlote8().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2m75rlote8().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2m75rlote8().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2m75rlote8().f[3]++;
  cov_2m75rlote8().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2m75rlote8().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2m75rlote8().f[4]++;
  cov_2m75rlote8().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2m75rlote8().s[14]++,
/* istanbul ignore next */
(cov_2m75rlote8().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2m75rlote8().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2m75rlote8().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2m75rlote8().f[5]++;
  cov_2m75rlote8().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_2m75rlote8().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2m75rlote8().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_2m75rlote8().b[11][0]++;
    cov_2m75rlote8().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_2m75rlote8().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_2m75rlote8().s[17]++, {});
  /* istanbul ignore next */
  cov_2m75rlote8().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_2m75rlote8().b[13][0]++;
    cov_2m75rlote8().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_2m75rlote8().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_2m75rlote8().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_2m75rlote8().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_2m75rlote8().b[14][0]++;
        cov_2m75rlote8().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_2m75rlote8().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_2m75rlote8().b[13][1]++;
  }
  cov_2m75rlote8().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_2m75rlote8().s[23]++;
  return result;
}));
/* istanbul ignore next */
cov_2m75rlote8().s[24]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_2m75rlote8().s[25]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_2m75rlote8().s[26]++, __importStar(require("react")));
const lucide_react_1 =
/* istanbul ignore next */
(cov_2m75rlote8().s[27]++, require("lucide-react"));
const appStore_1 =
/* istanbul ignore next */
(cov_2m75rlote8().s[28]++, require("@/store/appStore"));
const supabase_1 =
/* istanbul ignore next */
(cov_2m75rlote8().s[29]++, require("@/lib/supabase"));
/* istanbul ignore next */
cov_2m75rlote8().s[30]++;
const BadgeSystem = ({
  showProgress =
  /* istanbul ignore next */
  (cov_2m75rlote8().b[16][0]++, true),
  compact =
  /* istanbul ignore next */
  (cov_2m75rlote8().b[17][0]++, false)
}) => {
  /* istanbul ignore next */
  cov_2m75rlote8().f[6]++;
  const {
    appStoreUser
  } =
  /* istanbul ignore next */
  (cov_2m75rlote8().s[31]++, (0, appStore_1.appStore)());
  const [badges, setBadges] =
  /* istanbul ignore next */
  (cov_2m75rlote8().s[32]++, (0, react_1.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_2m75rlote8().s[33]++, (0, react_1.useState)(true));
  const predefinedBadges =
  /* istanbul ignore next */
  (cov_2m75rlote8().s[34]++, [
  // Badges de consistance
  {
    id: 'first_week',
    title: 'Première Semaine',
    description: 'Complétez 7 jours consécutifs',
    icon: lucide_react_1.Calendar,
    color: 'text-green-600',
    bgColor: 'bg-green-100',
    earned: false,
    target: 7,
    category: 'consistency',
    rarity: 'common'
  }, {
    id: 'hydration_master',
    title: 'Maître Hydratation',
    description: "Atteignez votre objectif d'hydratation 30 jours",
    icon: lucide_react_1.Shield,
    color: 'text-blue-600',
    bgColor: 'bg-blue-100',
    earned: false,
    target: 30,
    category: 'consistency',
    rarity: 'rare'
  }, {
    id: 'workout_warrior',
    title: 'Guerrier Fitness',
    description: 'Complétez 50 entraînements',
    icon: lucide_react_1.Zap,
    color: 'text-red-600',
    bgColor: 'bg-red-100',
    earned: false,
    target: 50,
    category: 'fitness',
    rarity: 'epic'
  }, {
    id: 'sleep_champion',
    title: 'Champion du Sommeil',
    description: 'Dormez 8h+ pendant 14 jours consécutifs',
    icon: lucide_react_1.Moon,
    color: 'text-purple-600',
    bgColor: 'bg-purple-100',
    earned: false,
    target: 14,
    category: 'consistency',
    rarity: 'rare'
  }, {
    id: 'streak_legend',
    title: 'Légende de la Régularité',
    description: 'Maintenez une streak de 100 jours',
    icon: lucide_react_1.Crown,
    color: 'text-yellow-600',
    bgColor: 'bg-yellow-100',
    earned: false,
    target: 100,
    category: 'achievement',
    rarity: 'legendary'
  }, {
    id: 'perfect_week',
    title: 'Semaine Parfaite',
    description: 'Complétez 100% de vos objectifs 7 jours',
    icon: lucide_react_1.Star,
    color: 'text-orange-600',
    bgColor: 'bg-orange-100',
    earned: false,
    target: 7,
    category: 'achievement',
    rarity: 'epic'
  }, {
    id: 'nutrition_guru',
    title: 'Gourou Nutrition',
    description: 'Suivez votre nutrition 21 jours',
    icon: lucide_react_1.Heart,
    color: 'text-green-600',
    bgColor: 'bg-green-100',
    earned: false,
    target: 21,
    category: 'consistency',
    rarity: 'rare'
  }, {
    id: 'first_milestone',
    title: 'Premier Jalon',
    description: 'Atteignez votre premier objectif',
    icon: lucide_react_1.Target,
    color: 'text-blue-600',
    bgColor: 'bg-blue-100',
    earned: false,
    target: 1,
    category: 'milestone',
    rarity: 'common'
  }]);
  /* istanbul ignore next */
  cov_2m75rlote8().s[35]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_2m75rlote8().f[7]++;
    cov_2m75rlote8().s[36]++;
    initializeBadges();
  }, [appStoreUser]);
  /* istanbul ignore next */
  cov_2m75rlote8().s[37]++;
  const initializeBadges = async () => {
    /* istanbul ignore next */
    cov_2m75rlote8().f[8]++;
    cov_2m75rlote8().s[38]++;
    if (!appStoreUser?.id) {
      /* istanbul ignore next */
      cov_2m75rlote8().b[18][0]++;
      cov_2m75rlote8().s[39]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2m75rlote8().b[18][1]++;
    }
    cov_2m75rlote8().s[40]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2m75rlote8().s[41]++;
    try {
      // Récupérer les badges de l'utilisateur
      const {
        data: userBadges
      } =
      /* istanbul ignore next */
      (cov_2m75rlote8().s[42]++, await supabase_1.supabase.from('user_badges').select('*').eq('user_id', appStoreUser.id));
      // Récupérer les statistiques pour calculer les progrès
      const {
        data: stats
      } =
      /* istanbul ignore next */
      (cov_2m75rlote8().s[43]++, await supabase_1.supabase.from('daily_check_ins').select('*').eq('user_id', appStoreUser.id));
      const earnedBadgeIds =
      /* istanbul ignore next */
      (cov_2m75rlote8().s[44]++,
      /* istanbul ignore next */
      (cov_2m75rlote8().b[19][0]++, userBadges?.map(b => {
        /* istanbul ignore next */
        cov_2m75rlote8().f[9]++;
        cov_2m75rlote8().s[45]++;
        return b.badge_id;
      })) ||
      /* istanbul ignore next */
      (cov_2m75rlote8().b[19][1]++, []));
      const updatedBadges =
      /* istanbul ignore next */
      (cov_2m75rlote8().s[46]++, predefinedBadges.map(badge => {
        /* istanbul ignore next */
        cov_2m75rlote8().f[10]++;
        const isEarned =
        /* istanbul ignore next */
        (cov_2m75rlote8().s[47]++, earnedBadgeIds.includes(badge.id));
        const progress =
        /* istanbul ignore next */
        (cov_2m75rlote8().s[48]++, calculateProgress(badge.id,
        /* istanbul ignore next */
        (cov_2m75rlote8().b[20][0]++, stats) ||
        /* istanbul ignore next */
        (cov_2m75rlote8().b[20][1]++, [])));
        const earnedAtString =
        /* istanbul ignore next */
        (cov_2m75rlote8().s[49]++, isEarned ?
        /* istanbul ignore next */
        (cov_2m75rlote8().b[21][0]++, userBadges?.find(b => {
          /* istanbul ignore next */
          cov_2m75rlote8().f[11]++;
          cov_2m75rlote8().s[50]++;
          return b.badge_id === badge.id;
        })?.earned_at) :
        /* istanbul ignore next */
        (cov_2m75rlote8().b[21][1]++, undefined));
        /* istanbul ignore next */
        cov_2m75rlote8().s[51]++;
        return {
          ...badge,
          earned: isEarned,
          progress,
          earnedAt: earnedAtString ?
          /* istanbul ignore next */
          (cov_2m75rlote8().b[22][0]++, new Date(earnedAtString)) :
          /* istanbul ignore next */
          (cov_2m75rlote8().b[22][1]++, undefined)
        };
      }));
      /* istanbul ignore next */
      cov_2m75rlote8().s[52]++;
      setBadges(updatedBadges);
      // Vérifier si des badges peuvent être débloqués
      /* istanbul ignore next */
      cov_2m75rlote8().s[53]++;
      await checkForNewBadges(updatedBadges);
    } catch (error) {
      /* istanbul ignore next */
      cov_2m75rlote8().s[54]++;
      // Erreur silencieuse
      console.error('Erreur lors du chargement des badges:', error);
    } finally {
      /* istanbul ignore next */
      cov_2m75rlote8().s[55]++;
      setIsLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_2m75rlote8().s[56]++;
  const calculateProgress = (badgeId, stats) => {
    /* istanbul ignore next */
    cov_2m75rlote8().f[12]++;
    cov_2m75rlote8().s[57]++;
    switch (badgeId) {
      case 'first_week':
        /* istanbul ignore next */
        cov_2m75rlote8().b[23][0]++;
        cov_2m75rlote8().s[58]++;
        return Math.min(stats.length, 7);
      case 'hydration_master':
        /* istanbul ignore next */
        cov_2m75rlote8().b[23][1]++;
        {
          const hydrationDays =
          /* istanbul ignore next */
          (cov_2m75rlote8().s[59]++, stats.filter(s => {
            /* istanbul ignore next */
            cov_2m75rlote8().f[13]++;
            cov_2m75rlote8().s[60]++;
            return s.completed_goals?.includes('hydration');
          }).length);
          /* istanbul ignore next */
          cov_2m75rlote8().s[61]++;
          return Math.min(hydrationDays, 30);
        }
      case 'workout_warrior':
        /* istanbul ignore next */
        cov_2m75rlote8().b[23][2]++;
        {
          const workoutDays =
          /* istanbul ignore next */
          (cov_2m75rlote8().s[62]++, stats.filter(s => {
            /* istanbul ignore next */
            cov_2m75rlote8().f[14]++;
            cov_2m75rlote8().s[63]++;
            return s.completed_goals?.includes('workout');
          }).length);
          /* istanbul ignore next */
          cov_2m75rlote8().s[64]++;
          return Math.min(workoutDays, 50);
        }
      case 'sleep_champion':
        /* istanbul ignore next */
        cov_2m75rlote8().b[23][3]++;
        {
          const sleepDays =
          /* istanbul ignore next */
          (cov_2m75rlote8().s[65]++, stats.filter(s => {
            /* istanbul ignore next */
            cov_2m75rlote8().f[15]++;
            cov_2m75rlote8().s[66]++;
            return s.completed_goals?.includes('sleep');
          }).length);
          /* istanbul ignore next */
          cov_2m75rlote8().s[67]++;
          return Math.min(sleepDays, 14);
        }
      case 'streak_legend':
        /* istanbul ignore next */
        cov_2m75rlote8().b[23][4]++;
        cov_2m75rlote8().s[68]++;
        return Math.min(calculateStreak(stats), 100);
      case 'perfect_week':
        /* istanbul ignore next */
        cov_2m75rlote8().b[23][5]++;
        {
          const perfectDays =
          /* istanbul ignore next */
          (cov_2m75rlote8().s[69]++, stats.filter(s => {
            /* istanbul ignore next */
            cov_2m75rlote8().f[16]++;
            cov_2m75rlote8().s[70]++;
            return s.completion_rate === 100;
          }).length);
          /* istanbul ignore next */
          cov_2m75rlote8().s[71]++;
          return Math.min(perfectDays, 7);
        }
      case 'nutrition_guru':
        /* istanbul ignore next */
        cov_2m75rlote8().b[23][6]++;
        {
          const nutritionDays =
          /* istanbul ignore next */
          (cov_2m75rlote8().s[72]++, stats.filter(s => {
            /* istanbul ignore next */
            cov_2m75rlote8().f[17]++;
            cov_2m75rlote8().s[73]++;
            return s.completed_goals?.includes('nutrition');
          }).length);
          /* istanbul ignore next */
          cov_2m75rlote8().s[74]++;
          return Math.min(nutritionDays, 21);
        }
      case 'first_milestone':
        /* istanbul ignore next */
        cov_2m75rlote8().b[23][7]++;
        cov_2m75rlote8().s[75]++;
        return stats.length > 0 ?
        /* istanbul ignore next */
        (cov_2m75rlote8().b[24][0]++, 1) :
        /* istanbul ignore next */
        (cov_2m75rlote8().b[24][1]++, 0);
      default:
        /* istanbul ignore next */
        cov_2m75rlote8().b[23][8]++;
        cov_2m75rlote8().s[76]++;
        return 0;
    }
  };
  /* istanbul ignore next */
  cov_2m75rlote8().s[77]++;
  const calculateStreak = stats => {
    /* istanbul ignore next */
    cov_2m75rlote8().f[18]++;
    cov_2m75rlote8().s[78]++;
    // Logique simplifiée pour calculer la streak
    return stats.filter(s => {
      /* istanbul ignore next */
      cov_2m75rlote8().f[19]++;
      cov_2m75rlote8().s[79]++;
      return s.completion_rate >= 75;
    }).length;
  };
  /* istanbul ignore next */
  cov_2m75rlote8().s[80]++;
  const checkForNewBadges = async badges => {
    /* istanbul ignore next */
    cov_2m75rlote8().f[20]++;
    const newlyEarned =
    /* istanbul ignore next */
    (cov_2m75rlote8().s[81]++, badges.filter(badge => {
      /* istanbul ignore next */
      cov_2m75rlote8().f[21]++;
      cov_2m75rlote8().s[82]++;
      return /* istanbul ignore next */(cov_2m75rlote8().b[25][0]++, !badge.earned) &&
      /* istanbul ignore next */
      (cov_2m75rlote8().b[25][1]++, badge.progress !== undefined) &&
      /* istanbul ignore next */
      (cov_2m75rlote8().b[25][2]++, badge.target !== undefined) &&
      /* istanbul ignore next */
      (cov_2m75rlote8().b[25][3]++, badge.progress >= badge.target);
    }));
    /* istanbul ignore next */
    cov_2m75rlote8().s[83]++;
    for (const badge of newlyEarned) {
      /* istanbul ignore next */
      cov_2m75rlote8().s[84]++;
      await awardBadge(badge);
    }
  };
  /* istanbul ignore next */
  cov_2m75rlote8().s[85]++;
  const awardBadge = async badge => {
    /* istanbul ignore next */
    cov_2m75rlote8().f[22]++;
    cov_2m75rlote8().s[86]++;
    if (!appStoreUser?.id) {
      /* istanbul ignore next */
      cov_2m75rlote8().b[26][0]++;
      cov_2m75rlote8().s[87]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2m75rlote8().b[26][1]++;
    }
    cov_2m75rlote8().s[88]++;
    try {
      const {
        error: _error
      } =
      /* istanbul ignore next */
      (cov_2m75rlote8().s[89]++, await supabase_1.supabase.from('user_badges').insert({
        user_id: appStoreUser.id,
        badge_id: badge.id,
        earned_at: new Date().toISOString()
      }));
      /* istanbul ignore next */
      cov_2m75rlote8().s[90]++;
      if (!_error) {
        /* istanbul ignore next */
        cov_2m75rlote8().b[27][0]++;
        cov_2m75rlote8().s[91]++;
        // Mise à jour locale
        setBadges(prev => {
          /* istanbul ignore next */
          cov_2m75rlote8().f[23]++;
          cov_2m75rlote8().s[92]++;
          return prev.map(b => {
            /* istanbul ignore next */
            cov_2m75rlote8().f[24]++;
            cov_2m75rlote8().s[93]++;
            return b.id === badge.id ?
            /* istanbul ignore next */
            (cov_2m75rlote8().b[28][0]++, {
              ...b,
              earned: true,
              earnedAt: new Date()
            }) :
            /* istanbul ignore next */
            (cov_2m75rlote8().b[28][1]++, b);
          });
        });
        // Notification (si toast disponible)
      } else
      /* istanbul ignore next */
      {
        cov_2m75rlote8().b[27][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2m75rlote8().s[94]++;
      // Erreur silencieuse
      console.error("Erreur lors de l'attribution du badge:", error);
    }
  };
  /* istanbul ignore next */
  cov_2m75rlote8().s[95]++;
  const getBadgeRarityColor = rarity => {
    /* istanbul ignore next */
    cov_2m75rlote8().f[25]++;
    cov_2m75rlote8().s[96]++;
    switch (rarity) {
      case 'common':
        /* istanbul ignore next */
        cov_2m75rlote8().b[29][0]++;
        cov_2m75rlote8().s[97]++;
        return 'border-gray-300';
      case 'rare':
        /* istanbul ignore next */
        cov_2m75rlote8().b[29][1]++;
        cov_2m75rlote8().s[98]++;
        return 'border-blue-400';
      case 'epic':
        /* istanbul ignore next */
        cov_2m75rlote8().b[29][2]++;
        cov_2m75rlote8().s[99]++;
        return 'border-purple-400';
      case 'legendary':
        /* istanbul ignore next */
        cov_2m75rlote8().b[29][3]++;
        cov_2m75rlote8().s[100]++;
        return 'border-yellow-400';
      default:
        /* istanbul ignore next */
        cov_2m75rlote8().b[29][4]++;
        cov_2m75rlote8().s[101]++;
        return 'border-gray-300';
    }
  };
  const earnedBadges =
  /* istanbul ignore next */
  (cov_2m75rlote8().s[102]++, badges.filter(b => {
    /* istanbul ignore next */
    cov_2m75rlote8().f[26]++;
    cov_2m75rlote8().s[103]++;
    return b.earned;
  }));
  const availableBadges =
  /* istanbul ignore next */
  (cov_2m75rlote8().s[104]++, badges.filter(b => {
    /* istanbul ignore next */
    cov_2m75rlote8().f[27]++;
    cov_2m75rlote8().s[105]++;
    return !b.earned;
  }));
  /* istanbul ignore next */
  cov_2m75rlote8().s[106]++;
  if (isLoading) {
    /* istanbul ignore next */
    cov_2m75rlote8().b[30][0]++;
    cov_2m75rlote8().s[107]++;
    return (0, jsx_runtime_1.jsx)("div", {
      className: "flex items-center justify-center p-8",
      children: (0, jsx_runtime_1.jsx)("div", {
        className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500"
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_2m75rlote8().b[30][1]++;
  }
  cov_2m75rlote8().s[108]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: `bg-white rounded-2xl p-6 shadow-lg border border-gray-100 ${compact ?
    /* istanbul ignore next */
    (cov_2m75rlote8().b[31][0]++, 'p-4') :
    /* istanbul ignore next */
    (cov_2m75rlote8().b[31][1]++, '')}`,
    children: [(0, jsx_runtime_1.jsxs)("div", {
      className: "flex items-center justify-between mb-6",
      children: [(0, jsx_runtime_1.jsxs)("div", {
        className: "flex items-center gap-3",
        children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Trophy, {
          className: "text-yellow-500",
          size: 28
        }), (0, jsx_runtime_1.jsxs)("div", {
          children: [(0, jsx_runtime_1.jsx)("h2", {
            className: "text-2xl font-bold text-gray-800",
            children: "Badges"
          }), (0, jsx_runtime_1.jsxs)("p", {
            className: "text-gray-600",
            children: [earnedBadges.length, " / ", badges.length, " d\u00E9bloqu\u00E9s"]
          })]
        })]
      }), (0, jsx_runtime_1.jsxs)("div", {
        className: "flex items-center gap-2 bg-yellow-50 px-4 py-2 rounded-full",
        children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Award, {
          className: "text-yellow-600",
          size: 20
        }), (0, jsx_runtime_1.jsx)("span", {
          className: "font-bold text-yellow-700",
          children: earnedBadges.length
        })]
      })]
    }),
    /* istanbul ignore next */
    (cov_2m75rlote8().b[32][0]++, !compact) &&
    /* istanbul ignore next */
    (cov_2m75rlote8().b[32][1]++, (0, jsx_runtime_1.jsxs)("div", {
      className: "mb-6",
      children: [(0, jsx_runtime_1.jsxs)("div", {
        className: "flex items-center justify-between mb-2",
        children: [(0, jsx_runtime_1.jsx)("span", {
          className: "text-sm font-medium text-gray-700",
          children: "Progression globale"
        }), (0, jsx_runtime_1.jsxs)("span", {
          className: "text-sm font-bold text-gray-900",
          children: [Math.round(earnedBadges.length / badges.length * 100), "%"]
        })]
      }), (0, jsx_runtime_1.jsx)("div", {
        className: "w-full bg-gray-200 rounded-full h-2",
        children: (0, jsx_runtime_1.jsx)("div", {
          className: "bg-gradient-to-r from-yellow-500 to-orange-500 h-2 rounded-full transition-all duration-500",
          style: {
            width: `${earnedBadges.length / badges.length * 100}%`
          }
        })
      })]
    })),
    /* istanbul ignore next */
    (cov_2m75rlote8().b[33][0]++, earnedBadges.length > 0) &&
    /* istanbul ignore next */
    (cov_2m75rlote8().b[33][1]++, (0, jsx_runtime_1.jsxs)("div", {
      className: "mb-6",
      children: [(0, jsx_runtime_1.jsxs)("h3", {
        className: "text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2",
        children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Unlock, {
          className: "text-green-500",
          size: 20
        }), "Badges D\u00E9bloqu\u00E9s"]
      }), (0, jsx_runtime_1.jsx)("div", {
        className: `grid ${compact ?
        /* istanbul ignore next */
        (cov_2m75rlote8().b[34][0]++, 'grid-cols-4') :
        /* istanbul ignore next */
        (cov_2m75rlote8().b[34][1]++, 'grid-cols-3 md:grid-cols-4')} gap-3`,
        children: earnedBadges.map(badge => {
          /* istanbul ignore next */
          cov_2m75rlote8().f[28]++;
          const Icon =
          /* istanbul ignore next */
          (cov_2m75rlote8().s[109]++, badge.icon);
          /* istanbul ignore next */
          cov_2m75rlote8().s[110]++;
          return (0, jsx_runtime_1.jsxs)("div", {
            className: `relative p-4 rounded-xl border-2 ${getBadgeRarityColor(badge.rarity)} ${badge.bgColor} cursor-pointer hover:shadow-md transition-all duration-300`,
            title: badge.description,
            children: [(0, jsx_runtime_1.jsxs)("div", {
              className: "flex flex-col items-center gap-2",
              children: [(0, jsx_runtime_1.jsx)(Icon, {
                size: 24,
                className: badge.color
              }),
              /* istanbul ignore next */
              (cov_2m75rlote8().b[35][0]++, !compact) &&
              /* istanbul ignore next */
              (cov_2m75rlote8().b[35][1]++, (0, jsx_runtime_1.jsxs)("div", {
                className: "text-center",
                children: [(0, jsx_runtime_1.jsx)("h4", {
                  className: "font-semibold text-sm text-gray-800",
                  children: badge.title
                }), (0, jsx_runtime_1.jsx)("p", {
                  className: "text-xs text-gray-600",
                  children: badge.description
                })]
              }))]
            }),
            /* istanbul ignore next */
            (cov_2m75rlote8().b[36][0]++, badge.rarity === 'legendary') &&
            /* istanbul ignore next */
            (cov_2m75rlote8().b[36][1]++, (0, jsx_runtime_1.jsx)("div", {
              className: "absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full animate-pulse"
            }))]
          }, badge.id);
        })
      })]
    })),
    /* istanbul ignore next */
    (cov_2m75rlote8().b[37][0]++, showProgress) &&
    /* istanbul ignore next */
    (cov_2m75rlote8().b[37][1]++, availableBadges.length > 0) &&
    /* istanbul ignore next */
    (cov_2m75rlote8().b[37][2]++, (0, jsx_runtime_1.jsxs)("div", {
      children: [(0, jsx_runtime_1.jsxs)("h3", {
        className: "text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2",
        children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Lock, {
          className: "text-gray-500",
          size: 20
        }), "Badges \u00E0 D\u00E9bloquer"]
      }), (0, jsx_runtime_1.jsx)("div", {
        className: `grid ${compact ?
        /* istanbul ignore next */
        (cov_2m75rlote8().b[38][0]++, 'grid-cols-2') :
        /* istanbul ignore next */
        (cov_2m75rlote8().b[38][1]++, 'grid-cols-1 md:grid-cols-2')} gap-3`,
        children: availableBadges.slice(0, compact ?
        /* istanbul ignore next */
        (cov_2m75rlote8().b[39][0]++, 4) :
        /* istanbul ignore next */
        (cov_2m75rlote8().b[39][1]++, 8)).map(badge => {
          /* istanbul ignore next */
          cov_2m75rlote8().f[29]++;
          const Icon =
          /* istanbul ignore next */
          (cov_2m75rlote8().s[111]++, badge.icon);
          const progressPercentage =
          /* istanbul ignore next */
          (cov_2m75rlote8().s[112]++, badge.target ?
          /* istanbul ignore next */
          (cov_2m75rlote8().b[40][0]++, (
          /* istanbul ignore next */
          (cov_2m75rlote8().b[41][0]++, badge.progress) ||
          /* istanbul ignore next */
          (cov_2m75rlote8().b[41][1]++, 0)) / badge.target * 100) :
          /* istanbul ignore next */
          (cov_2m75rlote8().b[40][1]++, 0));
          /* istanbul ignore next */
          cov_2m75rlote8().s[113]++;
          return (0, jsx_runtime_1.jsx)("div", {
            className: "p-4 rounded-xl border border-gray-200 bg-gray-50 opacity-75",
            children: (0, jsx_runtime_1.jsxs)("div", {
              className: "flex items-center gap-3",
              children: [(0, jsx_runtime_1.jsx)(Icon, {
                size: 24,
                className: "text-gray-400"
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: "flex-1",
                children: [(0, jsx_runtime_1.jsx)("h4", {
                  className: "font-semibold text-sm text-gray-700",
                  children: badge.title
                }), (0, jsx_runtime_1.jsx)("p", {
                  className: "text-xs text-gray-500",
                  children: badge.description
                }),
                /* istanbul ignore next */
                (cov_2m75rlote8().b[42][0]++, badge.target) &&
                /* istanbul ignore next */
                (cov_2m75rlote8().b[42][1]++, (0, jsx_runtime_1.jsxs)("div", {
                  className: "mt-2",
                  children: [(0, jsx_runtime_1.jsxs)("div", {
                    className: "flex items-center justify-between mb-1",
                    children: [(0, jsx_runtime_1.jsxs)("span", {
                      className: "text-xs text-gray-500",
                      children: [
                      /* istanbul ignore next */
                      (cov_2m75rlote8().b[43][0]++, badge.progress) ||
                      /* istanbul ignore next */
                      (cov_2m75rlote8().b[43][1]++, 0), " / ", badge.target]
                    }), (0, jsx_runtime_1.jsxs)("span", {
                      className: "text-xs text-gray-500",
                      children: [Math.round(progressPercentage), "%"]
                    })]
                  }), (0, jsx_runtime_1.jsx)("div", {
                    className: "w-full bg-gray-200 rounded-full h-1",
                    children: (0, jsx_runtime_1.jsx)("div", {
                      className: "bg-gray-400 h-1 rounded-full transition-all duration-500",
                      style: {
                        width: `${progressPercentage}%`
                      }
                    })
                  })]
                }))]
              })]
            })
          }, badge.id);
        })
      })]
    }))]
  });
};
/* istanbul ignore next */
cov_2m75rlote8().s[114]++;
exports.default = BadgeSystem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,