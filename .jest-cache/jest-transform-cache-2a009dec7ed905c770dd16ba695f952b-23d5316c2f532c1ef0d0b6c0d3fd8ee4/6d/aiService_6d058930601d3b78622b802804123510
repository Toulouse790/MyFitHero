1a7e58fefba9dd347c4564d1db862d09
"use strict";

/* istanbul ignore next */
function cov_qmm6015a9() {
  var path = "/workspaces/MyFitHero/src/lib/services/aiService.ts";
  var hash = "d0ca988c712a71e1f97e6d8a92866045c16eb22c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/lib/services/aiService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 27
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 12,
          column: 11
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "5": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 24,
          column: 14
        }
      },
      "6": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "7": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "8": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "9": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 60
        }
      },
      "10": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 24
        }
      },
      "11": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "12": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 46,
          column: 14
        }
      },
      "13": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "14": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 67
        }
      },
      "15": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 41
        }
      },
      "16": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 61
        }
      },
      "17": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 24
        }
      },
      "18": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "19": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "20": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "21": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 62
        }
      },
      "22": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 41
        }
      },
      "23": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 61
        }
      },
      "24": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 24
        }
      },
      "25": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "26": {
        start: {
          line: 83,
          column: 29
        },
        end: {
          line: 90,
          column: 14
        }
      },
      "27": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "28": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "29": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 41
        }
      },
      "30": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 55
        }
      },
      "31": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 24
        }
      },
      "32": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "33": {
        start: {
          line: 105,
          column: 29
        },
        end: {
          line: 116,
          column: 14
        }
      },
      "34": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "35": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 76
        }
      },
      "36": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 41
        }
      },
      "37": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 70
        }
      },
      "38": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 24
        }
      },
      "39": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "40": {
        start: {
          line: 132,
          column: 35
        },
        end: {
          line: 137,
          column: 58
        }
      },
      "41": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 139,
          column: 28
        }
      },
      "42": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 28
        }
      },
      "43": {
        start: {
          line: 141,
          column: 29
        },
        end: {
          line: 141,
          column: 60
        }
      },
      "44": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 148,
          column: 14
        }
      },
      "45": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 59
        }
      },
      "46": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 24
        }
      },
      "47": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "48": {
        start: {
          line: 160,
          column: 55
        },
        end: {
          line: 164,
          column: 14
        }
      },
      "49": {
        start: {
          line: 165,
          column: 36
        },
        end: {
          line: 165,
          column: 98
        }
      },
      "50": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 171,
          column: 14
        }
      },
      "51": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 62
        }
      },
      "52": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 24
        }
      },
      "53": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 56
        }
      },
      "54": {
        start: {
          line: 186,
          column: 25
        },
        end: {
          line: 190,
          column: 14
        }
      },
      "55": {
        start: {
          line: 187,
          column: 24
        },
        end: {
          line: 187,
          column: 57
        }
      },
      "56": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 43
        }
      },
      "57": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 23
        }
      },
      "58": {
        start: {
          line: 191,
          column: 26
        },
        end: {
          line: 195,
          column: 14
        }
      },
      "59": {
        start: {
          line: 192,
          column: 25
        },
        end: {
          line: 192,
          column: 60
        }
      },
      "60": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 45
        }
      },
      "61": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 23
        }
      },
      "62": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 206,
          column: 10
        }
      },
      "63": {
        start: {
          line: 198,
          column: 40
        },
        end: {
          line: 198,
          column: 45
        }
      },
      "64": {
        start: {
          line: 201,
          column: 40
        },
        end: {
          line: 201,
          column: 45
        }
      },
      "65": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 214,
          column: 14
        }
      },
      "66": {
        start: {
          line: 211,
          column: 25
        },
        end: {
          line: 211,
          column: 64
        }
      },
      "67": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 45
        }
      },
      "68": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 23
        }
      },
      "69": {
        start: {
          line: 215,
          column: 21
        },
        end: {
          line: 215,
          column: 52
        }
      },
      "70": {
        start: {
          line: 216,
          column: 26
        },
        end: {
          line: 216,
          column: 28
        }
      },
      "71": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 52
        }
      },
      "72": {
        start: {
          line: 221,
          column: 23
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "73": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "74": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 232,
          column: 15
        }
      },
      "75": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "76": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "77": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "78": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 248,
          column: 15
        }
      },
      "79": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 22
        }
      },
      "80": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "81": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 46
        }
      },
      "82": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "83": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 47
        }
      },
      "84": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 53
        }
      },
      "85": {
        start: {
          line: 263,
          column: 0
        },
        end: {
          line: 263,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 18
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 52
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 63
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 46
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 59
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 41
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 81
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 61
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 103
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 44
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 129
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 33
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 157
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 19
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 180
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 31
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 184
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 186,
            column: 37
          },
          end: {
            line: 186,
            column: 38
          }
        },
        loc: {
          start: {
            line: 186,
            column: 51
          },
          end: {
            line: 190,
            column: 9
          }
        },
        line: 186
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 191,
            column: 38
          },
          end: {
            line: 191,
            column: 39
          }
        },
        loc: {
          start: {
            line: 191,
            column: 52
          },
          end: {
            line: 195,
            column: 9
          }
        },
        line: 191
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 198,
            column: 22
          },
          end: {
            line: 198,
            column: 23
          }
        },
        loc: {
          start: {
            line: 198,
            column: 40
          },
          end: {
            line: 198,
            column: 45
          }
        },
        line: 198
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 201,
            column: 22
          },
          end: {
            line: 201,
            column: 23
          }
        },
        loc: {
          start: {
            line: 201,
            column: 40
          },
          end: {
            line: 201,
            column: 45
          }
        },
        line: 201
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 31
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 208
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 210,
            column: 40
          },
          end: {
            line: 210,
            column: 41
          }
        },
        loc: {
          start: {
            line: 210,
            column: 54
          },
          end: {
            line: 214,
            column: 9
          }
        },
        line: 210
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 62
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 219
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 37
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 252
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 15,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 46
          },
          end: {
            line: 15,
            column: 50
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "4": {
        loc: {
          start: {
            line: 81,
            column: 25
          },
          end: {
            line: 81,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 35
          },
          end: {
            line: 81,
            column: 39
          }
        }],
        line: 81
      },
      "5": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "6": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "7": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 139,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 139,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "8": {
        loc: {
          start: {
            line: 182,
            column: 15
          },
          end: {
            line: 182,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 15
          },
          end: {
            line: 182,
            column: 49
          }
        }, {
          start: {
            line: 182,
            column: 53
          },
          end: {
            line: 182,
            column: 55
          }
        }],
        line: 182
      },
      "9": {
        loc: {
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 188,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 188,
            column: 32
          }
        }, {
          start: {
            line: 188,
            column: 36
          },
          end: {
            line: 188,
            column: 37
          }
        }],
        line: 188
      },
      "10": {
        loc: {
          start: {
            line: 193,
            column: 25
          },
          end: {
            line: 193,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 25
          },
          end: {
            line: 193,
            column: 34
          }
        }, {
          start: {
            line: 193,
            column: 38
          },
          end: {
            line: 193,
            column: 39
          }
        }],
        line: 193
      },
      "11": {
        loc: {
          start: {
            line: 212,
            column: 25
          },
          end: {
            line: 212,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 25
          },
          end: {
            line: 212,
            column: 34
          }
        }, {
          start: {
            line: 212,
            column: 38
          },
          end: {
            line: 212,
            column: 39
          }
        }],
        line: 212
      },
      "12": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "13": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "14": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "15": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "16": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/lib/services/aiService.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/lib/services/aiService.ts"],
      sourcesContent: ["import { supabase } from '@/lib/supabase';\n\n// Types pour l'intelligence artificielle\nexport interface AIAnalysis {\n  pillar: string;\n  trend: 'improving' | 'stable' | 'declining';\n  consistency_score: number;\n  predictions?: any;\n  recommendations: string[];\n  confidence: number;\n}\n\nexport interface CoachingResponse {\n  message: string;\n  priority: 'low' | 'medium' | 'high';\n  type: 'motivational' | 'corrective' | 'educational';\n  actions: Array<{\n    title: string;\n    description: string;\n    pillar: string;\n  }>;\n  next_check_in: string;\n}\n\nexport interface Anomaly {\n  type: 'deviation' | 'pattern_break' | 'outlier';\n  pillar: string;\n  severity: 'low' | 'medium' | 'high';\n  message: string;\n  suggestion: string;\n  detected_at: string;\n}\n\nexport interface ContextualRecommendation {\n  type: string;\n  title: string;\n  message: string;\n  actions: string[];\n  priority: 'low' | 'medium' | 'high';\n}\n\nclass AIService {\n  private baseUrl = '/api/ai';\n\n  // Analyse pr\xE9dictive des patterns utilisateur\n  async analyzePatterns(pillar: string, timeframe: string = '7d'): Promise<AIAnalysis> {\n    try {\n      const response = await fetch(`${this.baseUrl}/analyze-patterns`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ pillar, timeframe }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to analyze patterns');\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Pattern analysis error:', error);\n      throw error;\n    }\n  }\n\n  // Coaching adaptatif en temps r\xE9el\n  async getAdaptiveCoaching(\n    userContext: any,\n    currentState: any,\n    goal: string\n  ): Promise<CoachingResponse> {\n    try {\n      const response = await fetch(`${this.baseUrl}/adaptive-coaching`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ user_context: userContext, current_state: currentState, goal }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get adaptive coaching');\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Adaptive coaching error:', error);\n      throw error;\n    }\n  }\n\n  // D\xE9tection intelligente d'anomalies\n  async detectAnomalies(dataPoints: unknown[], pillar?: string): Promise<{ anomalies: Anomaly[] }> {\n    try {\n      const response = await fetch(`${this.baseUrl}/detect-anomalies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ data_points: dataPoints, pillar }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to detect anomalies');\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Anomaly detection error:', error);\n      throw error;\n    }\n  }\n\n  // Pr\xE9dictions personnalis\xE9es\n  async getPredictions(horizon: string = '7d'): Promise<any> {\n    try {\n      const response = await fetch(`${this.baseUrl}/predictions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ horizon }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get predictions');\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Predictions error:', error);\n      throw error;\n    }\n  }\n\n  // Recommandations contextuelles (n8n style)\n  async getContextualRecommendations(\n    context: any,\n    userProfile: any\n  ): Promise<{ recommendations: ContextualRecommendation[] }> {\n    try {\n      const response = await fetch(`${this.baseUrl}/contextual-recommendations`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({\n          context,\n          user_profile: userProfile,\n          current_time: new Date().toISOString(),\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get contextual recommendations');\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Contextual recommendations error:', error);\n      throw error;\n    }\n  }\n\n  // Analyse des habitudes et insights\n  async getHabitsInsights(userId: string, pillar: string): Promise<any> {\n    try {\n      // R\xE9cup\xE9ration des donn\xE9es historiques via Supabase\n      const { data: logs } = await supabase\n        .from(`${pillar}_logs`)\n        .select('*')\n        .eq('user_id', userId)\n        .gte('created_at', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString())\n        .order('created_at', { ascending: false });\n\n      if (!logs) return null;\n\n      // Analyse des patterns localement\n      const insights = this.analyzeHabitsLocally(logs);\n\n      return {\n        pillar,\n        insights,\n        data_points: logs.length,\n        analysis_period: '30d',\n        generated_at: new Date().toISOString(),\n      };\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Habits insights error:', error);\n      throw error;\n    }\n  }\n\n  // Coaching proactif bas\xE9 sur les pr\xE9dictions\n  async getProactiveCoaching(): Promise<any> {\n    try {\n      // Combinaison de plusieurs analyses pour un coaching proactif\n      const [patterns, predictions, anomalies] = await Promise.all([\n        this.analyzePatterns('general'),\n        this.getPredictions('3d'),\n        this.detectAnomalies([]),\n      ]);\n\n      const proactiveAdvice = this.generateProactiveAdvice(patterns, predictions, anomalies);\n\n      return {\n        advice: proactiveAdvice,\n        confidence: 0.85,\n        next_action: this.getNextRecommendedAction(proactiveAdvice),\n        generated_at: new Date().toISOString(),\n      };\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Proactive coaching error:', error);\n      throw error;\n    }\n  }\n\n  // Helpers priv\xE9s\n  private getAuthToken(): string {\n    // R\xE9cup\xE9ration du token d'authentification\n    return localStorage.getItem('auth_token') || '';\n  }\n\n  private analyzeHabitsLocally(logs: any[]): any {\n    // Analyse locale des habitudes pour r\xE9duire les appels API\n    const dayStats = logs.reduce((acc: any, log: any) => {\n      const day = new Date(log.created_at).getDay();\n      acc[day] = (acc[day] || 0) + 1;\n      return acc;\n    }, {});\n\n    const hourStats = logs.reduce((acc: any, log: any) => {\n      const hour = new Date(log.created_at).getHours();\n      acc[hour] = (acc[hour] || 0) + 1;\n      return acc;\n    }, {});\n\n    return {\n      best_days: Object.entries(dayStats)\n        .sort(([, a], [, b]) => (b as number) - (a as number))\n        .slice(0, 3),\n      best_hours: Object.entries(hourStats)\n        .sort(([, a], [, b]) => (b as number) - (a as number))\n        .slice(0, 3),\n      consistency_score: this.calculateConsistency(logs),\n      total_actions: logs.length,\n      avg_per_day: logs.length / 30,\n    };\n  }\n\n  private calculateConsistency(logs: any[]): number {\n    // Calcul du score de consistance bas\xE9 sur la r\xE9gularit\xE9\n    const dailyCounts = logs.reduce((acc: any, log: any) => {\n      const date = new Date(log.created_at).toDateString();\n      acc[date] = (acc[date] || 0) + 1;\n      return acc;\n    }, {});\n\n    const days = Object.keys(dailyCounts).length;\n    const totalDays = 30;\n    return Math.round((days / totalDays) * 100);\n  }\n\n  private generateProactiveAdvice(patterns: any, predictions: any, anomalies: any): any {\n    // G\xE9n\xE9ration de conseils proactifs bas\xE9s sur l'analyse crois\xE9e\n    const advice: {\n      immediate: Array<{ type: string; message: string; action: string }>;\n      short_term: Array<{ type: string; message: string; action: string }>;\n      long_term: Array<{ type: string; message: string; action: string }>;\n    } = {\n      immediate: [],\n      short_term: [],\n      long_term: [],\n    };\n\n    // Conseils imm\xE9diats bas\xE9s sur les anomalies\n    if (anomalies.anomalies?.length > 0) {\n      advice.immediate.push({\n        type: 'correction',\n        message: 'Anomalie d\xE9tect\xE9e dans vos habitudes',\n        action: anomalies.anomalies[0].suggestion,\n      });\n    }\n\n    // Conseils \xE0 court terme bas\xE9s sur les pr\xE9dictions\n    if (predictions.predictions?.performance?.expected_improvement > 10) {\n      advice.short_term.push({\n        type: 'optimization',\n        message: \"Potentiel d'am\xE9lioration \xE9lev\xE9 d\xE9tect\xE9\",\n        action: 'Intensifiez vos efforts cette semaine',\n      });\n    }\n\n    // Conseils \xE0 long terme bas\xE9s sur les patterns\n    if (patterns.analysis?.consistency_score < 70) {\n      advice.long_term.push({\n        type: 'habit_building',\n        message: 'Travaillons sur la consistance',\n        action: '\xC9tablissez une routine quotidienne fixe',\n      });\n    }\n\n    return advice;\n  }\n\n  private getNextRecommendedAction(advice: any): string {\n    // D\xE9termine la prochaine action recommand\xE9e\n    if (advice.immediate?.length > 0) {\n      return advice.immediate[0].action;\n    }\n    if (advice.short_term?.length > 0) {\n      return advice.short_term[0].action;\n    }\n    return 'Continuez votre excellent travail !';\n  }\n}\n\nexport const aiService = new AIService();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d0ca988c712a71e1f97e6d8a92866045c16eb22c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qmm6015a9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qmm6015a9();
cov_qmm6015a9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_qmm6015a9().s[1]++;
exports.aiService = void 0;
const supabase_1 =
/* istanbul ignore next */
(cov_qmm6015a9().s[2]++, require("@/lib/supabase"));
class AIService {
  constructor() {
    /* istanbul ignore next */
    cov_qmm6015a9().f[0]++;
    cov_qmm6015a9().s[3]++;
    Object.defineProperty(this, "baseUrl", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: '/api/ai'
    });
  }
  // Analyse prédictive des patterns utilisateur
  async analyzePatterns(pillar, timeframe =
  /* istanbul ignore next */
  (cov_qmm6015a9().b[0][0]++, '7d')) {
    /* istanbul ignore next */
    cov_qmm6015a9().f[1]++;
    cov_qmm6015a9().s[4]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[5]++, await fetch(`${this.baseUrl}/analyze-patterns`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${this.getAuthToken()}`
        },
        body: JSON.stringify({
          pillar,
          timeframe
        })
      }));
      /* istanbul ignore next */
      cov_qmm6015a9().s[6]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_qmm6015a9().b[1][0]++;
        cov_qmm6015a9().s[7]++;
        throw new Error('Failed to analyze patterns');
      } else
      /* istanbul ignore next */
      {
        cov_qmm6015a9().b[1][1]++;
      }
      cov_qmm6015a9().s[8]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_qmm6015a9().s[9]++;
      // Erreur silencieuse
      console.error('Pattern analysis error:', error);
      /* istanbul ignore next */
      cov_qmm6015a9().s[10]++;
      throw error;
    }
  }
  // Coaching adaptatif en temps réel
  async getAdaptiveCoaching(userContext, currentState, goal) {
    /* istanbul ignore next */
    cov_qmm6015a9().f[2]++;
    cov_qmm6015a9().s[11]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[12]++, await fetch(`${this.baseUrl}/adaptive-coaching`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${this.getAuthToken()}`
        },
        body: JSON.stringify({
          user_context: userContext,
          current_state: currentState,
          goal
        })
      }));
      /* istanbul ignore next */
      cov_qmm6015a9().s[13]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_qmm6015a9().b[2][0]++;
        cov_qmm6015a9().s[14]++;
        throw new Error('Failed to get adaptive coaching');
      } else
      /* istanbul ignore next */
      {
        cov_qmm6015a9().b[2][1]++;
      }
      cov_qmm6015a9().s[15]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_qmm6015a9().s[16]++;
      // Erreur silencieuse
      console.error('Adaptive coaching error:', error);
      /* istanbul ignore next */
      cov_qmm6015a9().s[17]++;
      throw error;
    }
  }
  // Détection intelligente d'anomalies
  async detectAnomalies(dataPoints, pillar) {
    /* istanbul ignore next */
    cov_qmm6015a9().f[3]++;
    cov_qmm6015a9().s[18]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[19]++, await fetch(`${this.baseUrl}/detect-anomalies`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${this.getAuthToken()}`
        },
        body: JSON.stringify({
          data_points: dataPoints,
          pillar
        })
      }));
      /* istanbul ignore next */
      cov_qmm6015a9().s[20]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_qmm6015a9().b[3][0]++;
        cov_qmm6015a9().s[21]++;
        throw new Error('Failed to detect anomalies');
      } else
      /* istanbul ignore next */
      {
        cov_qmm6015a9().b[3][1]++;
      }
      cov_qmm6015a9().s[22]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_qmm6015a9().s[23]++;
      // Erreur silencieuse
      console.error('Anomaly detection error:', error);
      /* istanbul ignore next */
      cov_qmm6015a9().s[24]++;
      throw error;
    }
  }
  // Prédictions personnalisées
  async getPredictions(horizon =
  /* istanbul ignore next */
  (cov_qmm6015a9().b[4][0]++, '7d')) {
    /* istanbul ignore next */
    cov_qmm6015a9().f[4]++;
    cov_qmm6015a9().s[25]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[26]++, await fetch(`${this.baseUrl}/predictions`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${this.getAuthToken()}`
        },
        body: JSON.stringify({
          horizon
        })
      }));
      /* istanbul ignore next */
      cov_qmm6015a9().s[27]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_qmm6015a9().b[5][0]++;
        cov_qmm6015a9().s[28]++;
        throw new Error('Failed to get predictions');
      } else
      /* istanbul ignore next */
      {
        cov_qmm6015a9().b[5][1]++;
      }
      cov_qmm6015a9().s[29]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_qmm6015a9().s[30]++;
      // Erreur silencieuse
      console.error('Predictions error:', error);
      /* istanbul ignore next */
      cov_qmm6015a9().s[31]++;
      throw error;
    }
  }
  // Recommandations contextuelles (n8n style)
  async getContextualRecommendations(context, userProfile) {
    /* istanbul ignore next */
    cov_qmm6015a9().f[5]++;
    cov_qmm6015a9().s[32]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[33]++, await fetch(`${this.baseUrl}/contextual-recommendations`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${this.getAuthToken()}`
        },
        body: JSON.stringify({
          context,
          user_profile: userProfile,
          current_time: new Date().toISOString()
        })
      }));
      /* istanbul ignore next */
      cov_qmm6015a9().s[34]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_qmm6015a9().b[6][0]++;
        cov_qmm6015a9().s[35]++;
        throw new Error('Failed to get contextual recommendations');
      } else
      /* istanbul ignore next */
      {
        cov_qmm6015a9().b[6][1]++;
      }
      cov_qmm6015a9().s[36]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_qmm6015a9().s[37]++;
      // Erreur silencieuse
      console.error('Contextual recommendations error:', error);
      /* istanbul ignore next */
      cov_qmm6015a9().s[38]++;
      throw error;
    }
  }
  // Analyse des habitudes et insights
  async getHabitsInsights(userId, pillar) {
    /* istanbul ignore next */
    cov_qmm6015a9().f[6]++;
    cov_qmm6015a9().s[39]++;
    try {
      // Récupération des données historiques via Supabase
      const {
        data: logs
      } =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[40]++, await supabase_1.supabase.from(`${pillar}_logs`).select('*').eq('user_id', userId).gte('created_at', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()).order('created_at', {
        ascending: false
      }));
      /* istanbul ignore next */
      cov_qmm6015a9().s[41]++;
      if (!logs) {
        /* istanbul ignore next */
        cov_qmm6015a9().b[7][0]++;
        cov_qmm6015a9().s[42]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_qmm6015a9().b[7][1]++;
      }
      // Analyse des patterns localement
      const insights =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[43]++, this.analyzeHabitsLocally(logs));
      /* istanbul ignore next */
      cov_qmm6015a9().s[44]++;
      return {
        pillar,
        insights,
        data_points: logs.length,
        analysis_period: '30d',
        generated_at: new Date().toISOString()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_qmm6015a9().s[45]++;
      // Erreur silencieuse
      console.error('Habits insights error:', error);
      /* istanbul ignore next */
      cov_qmm6015a9().s[46]++;
      throw error;
    }
  }
  // Coaching proactif basé sur les prédictions
  async getProactiveCoaching() {
    /* istanbul ignore next */
    cov_qmm6015a9().f[7]++;
    cov_qmm6015a9().s[47]++;
    try {
      // Combinaison de plusieurs analyses pour un coaching proactif
      const [patterns, predictions, anomalies] =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[48]++, await Promise.all([this.analyzePatterns('general'), this.getPredictions('3d'), this.detectAnomalies([])]));
      const proactiveAdvice =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[49]++, this.generateProactiveAdvice(patterns, predictions, anomalies));
      /* istanbul ignore next */
      cov_qmm6015a9().s[50]++;
      return {
        advice: proactiveAdvice,
        confidence: 0.85,
        next_action: this.getNextRecommendedAction(proactiveAdvice),
        generated_at: new Date().toISOString()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_qmm6015a9().s[51]++;
      // Erreur silencieuse
      console.error('Proactive coaching error:', error);
      /* istanbul ignore next */
      cov_qmm6015a9().s[52]++;
      throw error;
    }
  }
  // Helpers privés
  getAuthToken() {
    /* istanbul ignore next */
    cov_qmm6015a9().f[8]++;
    cov_qmm6015a9().s[53]++;
    // Récupération du token d'authentification
    return /* istanbul ignore next */(cov_qmm6015a9().b[8][0]++, localStorage.getItem('auth_token')) ||
    /* istanbul ignore next */
    (cov_qmm6015a9().b[8][1]++, '');
  }
  analyzeHabitsLocally(logs) {
    /* istanbul ignore next */
    cov_qmm6015a9().f[9]++;
    // Analyse locale des habitudes pour réduire les appels API
    const dayStats =
    /* istanbul ignore next */
    (cov_qmm6015a9().s[54]++, logs.reduce((acc, log) => {
      /* istanbul ignore next */
      cov_qmm6015a9().f[10]++;
      const day =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[55]++, new Date(log.created_at).getDay());
      /* istanbul ignore next */
      cov_qmm6015a9().s[56]++;
      acc[day] = (
      /* istanbul ignore next */
      (cov_qmm6015a9().b[9][0]++, acc[day]) ||
      /* istanbul ignore next */
      (cov_qmm6015a9().b[9][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_qmm6015a9().s[57]++;
      return acc;
    }, {}));
    const hourStats =
    /* istanbul ignore next */
    (cov_qmm6015a9().s[58]++, logs.reduce((acc, log) => {
      /* istanbul ignore next */
      cov_qmm6015a9().f[11]++;
      const hour =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[59]++, new Date(log.created_at).getHours());
      /* istanbul ignore next */
      cov_qmm6015a9().s[60]++;
      acc[hour] = (
      /* istanbul ignore next */
      (cov_qmm6015a9().b[10][0]++, acc[hour]) ||
      /* istanbul ignore next */
      (cov_qmm6015a9().b[10][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_qmm6015a9().s[61]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_qmm6015a9().s[62]++;
    return {
      best_days: Object.entries(dayStats).sort(([, a], [, b]) => {
        /* istanbul ignore next */
        cov_qmm6015a9().f[12]++;
        cov_qmm6015a9().s[63]++;
        return b - a;
      }).slice(0, 3),
      best_hours: Object.entries(hourStats).sort(([, a], [, b]) => {
        /* istanbul ignore next */
        cov_qmm6015a9().f[13]++;
        cov_qmm6015a9().s[64]++;
        return b - a;
      }).slice(0, 3),
      consistency_score: this.calculateConsistency(logs),
      total_actions: logs.length,
      avg_per_day: logs.length / 30
    };
  }
  calculateConsistency(logs) {
    /* istanbul ignore next */
    cov_qmm6015a9().f[14]++;
    // Calcul du score de consistance basé sur la régularité
    const dailyCounts =
    /* istanbul ignore next */
    (cov_qmm6015a9().s[65]++, logs.reduce((acc, log) => {
      /* istanbul ignore next */
      cov_qmm6015a9().f[15]++;
      const date =
      /* istanbul ignore next */
      (cov_qmm6015a9().s[66]++, new Date(log.created_at).toDateString());
      /* istanbul ignore next */
      cov_qmm6015a9().s[67]++;
      acc[date] = (
      /* istanbul ignore next */
      (cov_qmm6015a9().b[11][0]++, acc[date]) ||
      /* istanbul ignore next */
      (cov_qmm6015a9().b[11][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_qmm6015a9().s[68]++;
      return acc;
    }, {}));
    const days =
    /* istanbul ignore next */
    (cov_qmm6015a9().s[69]++, Object.keys(dailyCounts).length);
    const totalDays =
    /* istanbul ignore next */
    (cov_qmm6015a9().s[70]++, 30);
    /* istanbul ignore next */
    cov_qmm6015a9().s[71]++;
    return Math.round(days / totalDays * 100);
  }
  generateProactiveAdvice(patterns, predictions, anomalies) {
    /* istanbul ignore next */
    cov_qmm6015a9().f[16]++;
    // Génération de conseils proactifs basés sur l'analyse croisée
    const advice =
    /* istanbul ignore next */
    (cov_qmm6015a9().s[72]++, {
      immediate: [],
      short_term: [],
      long_term: []
    });
    // Conseils immédiats basés sur les anomalies
    /* istanbul ignore next */
    cov_qmm6015a9().s[73]++;
    if (anomalies.anomalies?.length > 0) {
      /* istanbul ignore next */
      cov_qmm6015a9().b[12][0]++;
      cov_qmm6015a9().s[74]++;
      advice.immediate.push({
        type: 'correction',
        message: 'Anomalie détectée dans vos habitudes',
        action: anomalies.anomalies[0].suggestion
      });
    } else
    /* istanbul ignore next */
    {
      cov_qmm6015a9().b[12][1]++;
    }
    // Conseils à court terme basés sur les prédictions
    cov_qmm6015a9().s[75]++;
    if (predictions.predictions?.performance?.expected_improvement > 10) {
      /* istanbul ignore next */
      cov_qmm6015a9().b[13][0]++;
      cov_qmm6015a9().s[76]++;
      advice.short_term.push({
        type: 'optimization',
        message: "Potentiel d'amélioration élevé détecté",
        action: 'Intensifiez vos efforts cette semaine'
      });
    } else
    /* istanbul ignore next */
    {
      cov_qmm6015a9().b[13][1]++;
    }
    // Conseils à long terme basés sur les patterns
    cov_qmm6015a9().s[77]++;
    if (patterns.analysis?.consistency_score < 70) {
      /* istanbul ignore next */
      cov_qmm6015a9().b[14][0]++;
      cov_qmm6015a9().s[78]++;
      advice.long_term.push({
        type: 'habit_building',
        message: 'Travaillons sur la consistance',
        action: 'Établissez une routine quotidienne fixe'
      });
    } else
    /* istanbul ignore next */
    {
      cov_qmm6015a9().b[14][1]++;
    }
    cov_qmm6015a9().s[79]++;
    return advice;
  }
  getNextRecommendedAction(advice) {
    /* istanbul ignore next */
    cov_qmm6015a9().f[17]++;
    cov_qmm6015a9().s[80]++;
    // Détermine la prochaine action recommandée
    if (advice.immediate?.length > 0) {
      /* istanbul ignore next */
      cov_qmm6015a9().b[15][0]++;
      cov_qmm6015a9().s[81]++;
      return advice.immediate[0].action;
    } else
    /* istanbul ignore next */
    {
      cov_qmm6015a9().b[15][1]++;
    }
    cov_qmm6015a9().s[82]++;
    if (advice.short_term?.length > 0) {
      /* istanbul ignore next */
      cov_qmm6015a9().b[16][0]++;
      cov_qmm6015a9().s[83]++;
      return advice.short_term[0].action;
    } else
    /* istanbul ignore next */
    {
      cov_qmm6015a9().b[16][1]++;
    }
    cov_qmm6015a9().s[84]++;
    return 'Continuez votre excellent travail !';
  }
}
/* istanbul ignore next */
cov_qmm6015a9().s[85]++;
exports.aiService = new AIService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,