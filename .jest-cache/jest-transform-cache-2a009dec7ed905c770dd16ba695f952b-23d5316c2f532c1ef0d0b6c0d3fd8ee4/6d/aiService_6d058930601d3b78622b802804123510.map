{"version":3,"names":["cov_qmm6015a9","actualCoverage","s","supabase_1","require","AIService","constructor","f","Object","defineProperty","analyzePatterns","pillar","timeframe","b","response","fetch","baseUrl","method","headers","Authorization","getAuthToken","body","JSON","stringify","ok","Error","json","error","console","getAdaptiveCoaching","userContext","currentState","goal","user_context","current_state","detectAnomalies","dataPoints","data_points","getPredictions","horizon","getContextualRecommendations","context","userProfile","user_profile","current_time","Date","toISOString","getHabitsInsights","userId","data","logs","supabase","from","select","eq","gte","now","order","ascending","insights","analyzeHabitsLocally","length","analysis_period","generated_at","getProactiveCoaching","patterns","predictions","anomalies","Promise","all","proactiveAdvice","generateProactiveAdvice","advice","confidence","next_action","getNextRecommendedAction","localStorage","getItem","dayStats","reduce","acc","log","day","created_at","getDay","hourStats","hour","getHours","best_days","entries","sort","a","slice","best_hours","consistency_score","calculateConsistency","total_actions","avg_per_day","dailyCounts","date","toDateString","days","keys","totalDays","Math","round","immediate","short_term","long_term","push","type","message","action","suggestion","performance","expected_improvement","analysis","exports","aiService"],"sources":["/workspaces/MyFitHero/src/lib/services/aiService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase';\n\n// Types pour l'intelligence artificielle\nexport interface AIAnalysis {\n  pillar: string;\n  trend: 'improving' | 'stable' | 'declining';\n  consistency_score: number;\n  predictions?: any;\n  recommendations: string[];\n  confidence: number;\n}\n\nexport interface CoachingResponse {\n  message: string;\n  priority: 'low' | 'medium' | 'high';\n  type: 'motivational' | 'corrective' | 'educational';\n  actions: Array<{\n    title: string;\n    description: string;\n    pillar: string;\n  }>;\n  next_check_in: string;\n}\n\nexport interface Anomaly {\n  type: 'deviation' | 'pattern_break' | 'outlier';\n  pillar: string;\n  severity: 'low' | 'medium' | 'high';\n  message: string;\n  suggestion: string;\n  detected_at: string;\n}\n\nexport interface ContextualRecommendation {\n  type: string;\n  title: string;\n  message: string;\n  actions: string[];\n  priority: 'low' | 'medium' | 'high';\n}\n\nclass AIService {\n  private baseUrl = '/api/ai';\n\n  // Analyse prédictive des patterns utilisateur\n  async analyzePatterns(pillar: string, timeframe: string = '7d'): Promise<AIAnalysis> {\n    try {\n      const response = await fetch(`${this.baseUrl}/analyze-patterns`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ pillar, timeframe }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to analyze patterns');\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Pattern analysis error:', error);\n      throw error;\n    }\n  }\n\n  // Coaching adaptatif en temps réel\n  async getAdaptiveCoaching(\n    userContext: any,\n    currentState: any,\n    goal: string\n  ): Promise<CoachingResponse> {\n    try {\n      const response = await fetch(`${this.baseUrl}/adaptive-coaching`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ user_context: userContext, current_state: currentState, goal }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get adaptive coaching');\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Adaptive coaching error:', error);\n      throw error;\n    }\n  }\n\n  // Détection intelligente d'anomalies\n  async detectAnomalies(dataPoints: unknown[], pillar?: string): Promise<{ anomalies: Anomaly[] }> {\n    try {\n      const response = await fetch(`${this.baseUrl}/detect-anomalies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ data_points: dataPoints, pillar }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to detect anomalies');\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Anomaly detection error:', error);\n      throw error;\n    }\n  }\n\n  // Prédictions personnalisées\n  async getPredictions(horizon: string = '7d'): Promise<any> {\n    try {\n      const response = await fetch(`${this.baseUrl}/predictions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ horizon }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get predictions');\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Predictions error:', error);\n      throw error;\n    }\n  }\n\n  // Recommandations contextuelles (n8n style)\n  async getContextualRecommendations(\n    context: any,\n    userProfile: any\n  ): Promise<{ recommendations: ContextualRecommendation[] }> {\n    try {\n      const response = await fetch(`${this.baseUrl}/contextual-recommendations`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({\n          context,\n          user_profile: userProfile,\n          current_time: new Date().toISOString(),\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get contextual recommendations');\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Contextual recommendations error:', error);\n      throw error;\n    }\n  }\n\n  // Analyse des habitudes et insights\n  async getHabitsInsights(userId: string, pillar: string): Promise<any> {\n    try {\n      // Récupération des données historiques via Supabase\n      const { data: logs } = await supabase\n        .from(`${pillar}_logs`)\n        .select('*')\n        .eq('user_id', userId)\n        .gte('created_at', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString())\n        .order('created_at', { ascending: false });\n\n      if (!logs) return null;\n\n      // Analyse des patterns localement\n      const insights = this.analyzeHabitsLocally(logs);\n\n      return {\n        pillar,\n        insights,\n        data_points: logs.length,\n        analysis_period: '30d',\n        generated_at: new Date().toISOString(),\n      };\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Habits insights error:', error);\n      throw error;\n    }\n  }\n\n  // Coaching proactif basé sur les prédictions\n  async getProactiveCoaching(): Promise<any> {\n    try {\n      // Combinaison de plusieurs analyses pour un coaching proactif\n      const [patterns, predictions, anomalies] = await Promise.all([\n        this.analyzePatterns('general'),\n        this.getPredictions('3d'),\n        this.detectAnomalies([]),\n      ]);\n\n      const proactiveAdvice = this.generateProactiveAdvice(patterns, predictions, anomalies);\n\n      return {\n        advice: proactiveAdvice,\n        confidence: 0.85,\n        next_action: this.getNextRecommendedAction(proactiveAdvice),\n        generated_at: new Date().toISOString(),\n      };\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Proactive coaching error:', error);\n      throw error;\n    }\n  }\n\n  // Helpers privés\n  private getAuthToken(): string {\n    // Récupération du token d'authentification\n    return localStorage.getItem('auth_token') || '';\n  }\n\n  private analyzeHabitsLocally(logs: any[]): any {\n    // Analyse locale des habitudes pour réduire les appels API\n    const dayStats = logs.reduce((acc: any, log: any) => {\n      const day = new Date(log.created_at).getDay();\n      acc[day] = (acc[day] || 0) + 1;\n      return acc;\n    }, {});\n\n    const hourStats = logs.reduce((acc: any, log: any) => {\n      const hour = new Date(log.created_at).getHours();\n      acc[hour] = (acc[hour] || 0) + 1;\n      return acc;\n    }, {});\n\n    return {\n      best_days: Object.entries(dayStats)\n        .sort(([, a], [, b]) => (b as number) - (a as number))\n        .slice(0, 3),\n      best_hours: Object.entries(hourStats)\n        .sort(([, a], [, b]) => (b as number) - (a as number))\n        .slice(0, 3),\n      consistency_score: this.calculateConsistency(logs),\n      total_actions: logs.length,\n      avg_per_day: logs.length / 30,\n    };\n  }\n\n  private calculateConsistency(logs: any[]): number {\n    // Calcul du score de consistance basé sur la régularité\n    const dailyCounts = logs.reduce((acc: any, log: any) => {\n      const date = new Date(log.created_at).toDateString();\n      acc[date] = (acc[date] || 0) + 1;\n      return acc;\n    }, {});\n\n    const days = Object.keys(dailyCounts).length;\n    const totalDays = 30;\n    return Math.round((days / totalDays) * 100);\n  }\n\n  private generateProactiveAdvice(patterns: any, predictions: any, anomalies: any): any {\n    // Génération de conseils proactifs basés sur l'analyse croisée\n    const advice: {\n      immediate: Array<{ type: string; message: string; action: string }>;\n      short_term: Array<{ type: string; message: string; action: string }>;\n      long_term: Array<{ type: string; message: string; action: string }>;\n    } = {\n      immediate: [],\n      short_term: [],\n      long_term: [],\n    };\n\n    // Conseils immédiats basés sur les anomalies\n    if (anomalies.anomalies?.length > 0) {\n      advice.immediate.push({\n        type: 'correction',\n        message: 'Anomalie détectée dans vos habitudes',\n        action: anomalies.anomalies[0].suggestion,\n      });\n    }\n\n    // Conseils à court terme basés sur les prédictions\n    if (predictions.predictions?.performance?.expected_improvement > 10) {\n      advice.short_term.push({\n        type: 'optimization',\n        message: \"Potentiel d'amélioration élevé détecté\",\n        action: 'Intensifiez vos efforts cette semaine',\n      });\n    }\n\n    // Conseils à long terme basés sur les patterns\n    if (patterns.analysis?.consistency_score < 70) {\n      advice.long_term.push({\n        type: 'habit_building',\n        message: 'Travaillons sur la consistance',\n        action: 'Établissez une routine quotidienne fixe',\n      });\n    }\n\n    return advice;\n  }\n\n  private getNextRecommendedAction(advice: any): string {\n    // Détermine la prochaine action recommandée\n    if (advice.immediate?.length > 0) {\n      return advice.immediate[0].action;\n    }\n    if (advice.short_term?.length > 0) {\n      return advice.short_term[0].action;\n    }\n    return 'Continuez votre excellent travail !';\n  }\n}\n\nexport const aiService = new AIService();\n"],"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","ignoreList":[]}