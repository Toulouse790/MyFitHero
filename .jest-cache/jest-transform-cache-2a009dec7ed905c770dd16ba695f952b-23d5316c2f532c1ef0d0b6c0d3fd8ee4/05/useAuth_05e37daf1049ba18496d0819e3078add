4a2122e739b893b48897b1e8c1ca4590
"use strict";

/* istanbul ignore next */
function cov_16ltn0dysf() {
  var path = "/workspaces/MyFitHero/src/features/auth/hooks/useAuth.tsx";
  var hash = "37c7ac1e766f551f75171ecd52ed6d52bcbb6fd5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/auth/hooks/useAuth.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 49
        }
      },
      "6": {
        start: {
          line: 9,
          column: 16
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "7": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 44
        }
      },
      "8": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 57
        }
      },
      "9": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "10": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 56
        }
      },
      "11": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 71
        }
      },
      "13": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "14": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "15": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 111,
          column: 1
        }
      },
      "16": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 55
        }
      },
      "17": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 61
        }
      },
      "18": {
        start: {
          line: 23,
          column: 34
        },
        end: {
          line: 23,
          column: 61
        }
      },
      "19": {
        start: {
          line: 24,
          column: 34
        },
        end: {
          line: 24,
          column: 61
        }
      },
      "20": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "21": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "22": {
        start: {
          line: 27,
          column: 36
        },
        end: {
          line: 31,
          column: 25
        }
      },
      "23": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "24": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 68
        }
      },
      "25": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 28
        }
      },
      "26": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 24
        }
      },
      "27": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 62
        }
      },
      "28": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 24
        }
      },
      "29": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "30": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "31": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 59
        }
      },
      "32": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 36
        }
      },
      "33": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "34": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "35": {
        start: {
          line: 51,
          column: 30
        },
        end: {
          line: 51,
          column: 70
        }
      },
      "36": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "37": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 60
        }
      },
      "38": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 67
        }
      },
      "39": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "40": {
        start: {
          line: 62,
          column: 34
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "41": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "42": {
        start: {
          line: 64,
          column: 53
        },
        end: {
          line: 64,
          column: 96
        }
      },
      "43": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "44": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 66,
          column: 73
        }
      },
      "45": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 69,
          column: 40
        }
      },
      "46": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 51
        }
      },
      "47": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 74,
          column: 21
        }
      },
      "48": {
        start: {
          line: 72,
          column: 44
        },
        end: {
          line: 72,
          column: 79
        }
      },
      "49": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 48
        }
      },
      "50": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 67
        }
      },
      "51": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 34
        }
      },
      "52": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 28
        }
      },
      "53": {
        start: {
          line: 86,
          column: 43
        },
        end: {
          line: 99,
          column: 10
        }
      },
      "54": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 32
        }
      },
      "55": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 43
        }
      },
      "56": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "57": {
        start: {
          line: 91,
          column: 36
        },
        end: {
          line: 91,
          column: 71
        }
      },
      "58": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 40
        }
      },
      "59": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 33
        }
      },
      "60": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 30
        }
      },
      "61": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 48
        }
      },
      "62": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 100,
          column: 47
        }
      },
      "63": {
        start: {
          line: 102,
          column: 18
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "64": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 96
        }
      },
      "65": {
        start: {
          line: 112,
          column: 0
        },
        end: {
          line: 112,
          column: 36
        }
      },
      "66": {
        start: {
          line: 114,
          column: 23
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "67": {
        start: {
          line: 115,
          column: 30
        },
        end: {
          line: 115,
          column: 52
        }
      },
      "68": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 48
        }
      },
      "69": {
        start: {
          line: 118,
          column: 0
        },
        end: {
          line: 118,
          column: 40
        }
      },
      "70": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 123,
          column: 1
        }
      },
      "71": {
        start: {
          line: 121,
          column: 40
        },
        end: {
          line: 121,
          column: 62
        }
      },
      "72": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 39
        }
      },
      "73": {
        start: {
          line: 124,
          column: 0
        },
        end: {
          line: 124,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 17
          }
        },
        loc: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 21
          },
          end: {
            line: 20,
            column: 22
          }
        },
        loc: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 26
          }
        },
        loc: {
          start: {
            line: 25,
            column: 43
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 43,
            column: 27
          },
          end: {
            line: 43,
            column: 28
          }
        },
        loc: {
          start: {
            line: 43,
            column: 39
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 43
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 49,
            column: 21
          }
        },
        loc: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 60,
            column: 27
          },
          end: {
            line: 60,
            column: 28
          }
        },
        loc: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 60
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 62,
            column: 34
          },
          end: {
            line: 62,
            column: 35
          }
        },
        loc: {
          start: {
            line: 62,
            column: 46
          },
          end: {
            line: 83,
            column: 9
          }
        },
        line: 62
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 86,
            column: 86
          },
          end: {
            line: 86,
            column: 87
          }
        },
        loc: {
          start: {
            line: 86,
            column: 112
          },
          end: {
            line: 99,
            column: 9
          }
        },
        line: 86
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 16
          }
        },
        loc: {
          start: {
            line: 100,
            column: 21
          },
          end: {
            line: 100,
            column: 47
          }
        },
        line: 100
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 24
          }
        },
        loc: {
          start: {
            line: 114,
            column: 29
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 114
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 120,
            column: 23
          },
          end: {
            line: 120,
            column: 24
          }
        },
        loc: {
          start: {
            line: 120,
            column: 29
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 120
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        }, {
          start: {
            line: 68,
            column: 21
          },
          end: {
            line: 75,
            column: 17
          }
        }],
        line: 65
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 28
          },
          end: {
            line: 70,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 28
          },
          end: {
            line: 70,
            column: 41
          }
        }, {
          start: {
            line: 70,
            column: 45
          },
          end: {
            line: 70,
            column: 49
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 71,
            column: 20
          },
          end: {
            line: 74,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 20
          },
          end: {
            line: 74,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "10": {
        loc: {
          start: {
            line: 88,
            column: 20
          },
          end: {
            line: 88,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 20
          },
          end: {
            line: 88,
            column: 33
          }
        }, {
          start: {
            line: 88,
            column: 37
          },
          end: {
            line: 88,
            column: 41
          }
        }],
        line: 88
      },
      "11": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: 94,
            column: 17
          },
          end: {
            line: 97,
            column: 13
          }
        }],
        line: 89
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/auth/hooks/useAuth.tsx",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/auth/hooks/useAuth.tsx"],
      sourcesContent: ["import React from 'react';\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { User, Session, AuthChangeEvent } from '@supabase/supabase-js';\nimport { supabase } from '@/lib/supabase';\n\ninterface UserProfile {\n  id: string;\n  email: string;\n  first_name: string | undefined;\n  last_name: string | undefined;\n  full_name: string | undefined;\n  avatar_url: string | undefined;\n  age: number | undefined;\n  weight: number | undefined;\n  height: number | undefined;\n  gender: 'male' | 'female' | 'other' | undefined;\n  activity_level: 'sedentary' | 'lightly_active' | 'moderately_active' | 'very_active' | 'extremely_active' | undefined;\n  goals: string[] | undefined;\n  preferred_sports: string[] | undefined;\n  timezone: string | undefined;\n  language: string | undefined;\n  notifications_enabled: boolean | undefined;\n  onboarding_completed: boolean | undefined;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface AuthContextValue {\n  user: User | undefined;\n  profile: UserProfile | undefined;\n  session: Session | undefined;\n  loading: boolean;\n  signOut: () => Promise<void>;\n  refreshProfile: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextValue | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchProfile = async (userId: string): Promise<UserProfile | null> => {\n    try {\n      const { data, error }: any = await supabase\n        .from('user_profiles')\n        .select('*')\n        .eq('id', userId)\n        .single();\n\n      if (error) {\n        console.error('Erreur r\xE9cup\xE9ration profil:', error);\n        return null;\n      }\n\n      return data;\n    } catch (error: any) {\n      console.error('Erreur inattendue profil:', error);\n      return null;\n    }\n  };\n\n  const refreshProfile = async () => {\n    if (user) {\n      const userProfile = await fetchProfile(user.id);\n      setProfile(userProfile);\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) {\n        console.error('Erreur d\xE9connexion:', error);\n      }\n    } catch (error: any) {\n      console.error('Erreur inattendue d\xE9connexion:', error);\n    }\n  };\n\n  useEffect(() => {\n    // R\xE9cup\xE9ration de la session initiale\n    const getInitialSession = async () => {\n      try {\n        const { data: { session }, error } = await supabase.auth.getSession();\n        \n        if (error) {\n          console.error('Erreur r\xE9cup\xE9ration session:', error);\n        } else {\n          setSession(session);\n          setUser(session?.user ?? null);\n          \n          if (session?.user) {\n            const userProfile = await fetchProfile(session.user.id);\n            setProfile(userProfile);\n          }\n        }\n      } catch (error: any) {\n        console.error('Erreur inattendue session:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getInitialSession();\n\n    // \xC9coute des changements d'authentification\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event: AuthChangeEvent, session: Session | null) => {\n        \n        setSession(session);\n        setUser(session?.user ?? null);\n        \n        if (session?.user) {\n          // Utilisateur connect\xE9 - r\xE9cup\xE9rer le profil\n          const userProfile = await fetchProfile(session.user.id);\n          setProfile(userProfile);\n        } else {\n          // Utilisateur d\xE9connect\xE9\n          setProfile(null);\n        }\n        \n        setLoading(false);\n      }\n    );\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const value: AuthContextValue = {\n    user,\n    profile,\n    session,\n    loading,\n    signOut,\n    refreshProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook pour v\xE9rifier si l'utilisateur est authentifi\xE9\nexport const useRequireAuth = () => {\n  const { user, loading } = useAuth();\n  return { isAuthenticated: !!user, loading };\n};\n\n// Hook pour les donn\xE9es du profil utilisateur\nexport const useUserProfile = () => {\n  const { profile, refreshProfile } = useAuth();\n  return { profile, refreshProfile };\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "37c7ac1e766f551f75171ecd52ed6d52bcbb6fd5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16ltn0dysf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16ltn0dysf();
var __importDefault =
/* istanbul ignore next */
(cov_16ltn0dysf().s[0]++,
/* istanbul ignore next */
(cov_16ltn0dysf().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_16ltn0dysf().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_16ltn0dysf().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_16ltn0dysf().f[0]++;
  cov_16ltn0dysf().s[1]++;
  return /* istanbul ignore next */(cov_16ltn0dysf().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_16ltn0dysf().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_16ltn0dysf().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_16ltn0dysf().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_16ltn0dysf().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_16ltn0dysf().s[3]++;
exports.useUserProfile = exports.useRequireAuth = exports.AuthProvider = exports.useAuth = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_16ltn0dysf().s[4]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_16ltn0dysf().s[5]++, __importDefault(require("react")));
const react_2 =
/* istanbul ignore next */
(cov_16ltn0dysf().s[6]++, require("react"));
const supabase_1 =
/* istanbul ignore next */
(cov_16ltn0dysf().s[7]++, require("@/lib/supabase"));
const AuthContext =
/* istanbul ignore next */
(cov_16ltn0dysf().s[8]++, (0, react_2.createContext)(undefined));
/* istanbul ignore next */
cov_16ltn0dysf().s[9]++;
const useAuth = () => {
  /* istanbul ignore next */
  cov_16ltn0dysf().f[1]++;
  const context =
  /* istanbul ignore next */
  (cov_16ltn0dysf().s[10]++, (0, react_2.useContext)(AuthContext));
  /* istanbul ignore next */
  cov_16ltn0dysf().s[11]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_16ltn0dysf().b[3][0]++;
    cov_16ltn0dysf().s[12]++;
    throw new Error('useAuth must be used within an AuthProvider');
  } else
  /* istanbul ignore next */
  {
    cov_16ltn0dysf().b[3][1]++;
  }
  cov_16ltn0dysf().s[13]++;
  return context;
};
/* istanbul ignore next */
cov_16ltn0dysf().s[14]++;
exports.useAuth = useAuth;
/* istanbul ignore next */
cov_16ltn0dysf().s[15]++;
const AuthProvider = ({
  children
}) => {
  /* istanbul ignore next */
  cov_16ltn0dysf().f[2]++;
  const [user, setUser] =
  /* istanbul ignore next */
  (cov_16ltn0dysf().s[16]++, (0, react_2.useState)(null));
  const [profile, setProfile] =
  /* istanbul ignore next */
  (cov_16ltn0dysf().s[17]++, (0, react_2.useState)(null));
  const [session, setSession] =
  /* istanbul ignore next */
  (cov_16ltn0dysf().s[18]++, (0, react_2.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_16ltn0dysf().s[19]++, (0, react_2.useState)(true));
  /* istanbul ignore next */
  cov_16ltn0dysf().s[20]++;
  const fetchProfile = async userId => {
    /* istanbul ignore next */
    cov_16ltn0dysf().f[3]++;
    cov_16ltn0dysf().s[21]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_16ltn0dysf().s[22]++, await supabase_1.supabase.from('user_profiles').select('*').eq('id', userId).single());
      /* istanbul ignore next */
      cov_16ltn0dysf().s[23]++;
      if (error) {
        /* istanbul ignore next */
        cov_16ltn0dysf().b[4][0]++;
        cov_16ltn0dysf().s[24]++;
        console.error('Erreur récupération profil:', error);
        /* istanbul ignore next */
        cov_16ltn0dysf().s[25]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_16ltn0dysf().b[4][1]++;
      }
      cov_16ltn0dysf().s[26]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_16ltn0dysf().s[27]++;
      console.error('Erreur inattendue profil:', error);
      /* istanbul ignore next */
      cov_16ltn0dysf().s[28]++;
      return null;
    }
  };
  /* istanbul ignore next */
  cov_16ltn0dysf().s[29]++;
  const refreshProfile = async () => {
    /* istanbul ignore next */
    cov_16ltn0dysf().f[4]++;
    cov_16ltn0dysf().s[30]++;
    if (user) {
      /* istanbul ignore next */
      cov_16ltn0dysf().b[5][0]++;
      const userProfile =
      /* istanbul ignore next */
      (cov_16ltn0dysf().s[31]++, await fetchProfile(user.id));
      /* istanbul ignore next */
      cov_16ltn0dysf().s[32]++;
      setProfile(userProfile);
    } else
    /* istanbul ignore next */
    {
      cov_16ltn0dysf().b[5][1]++;
    }
  };
  /* istanbul ignore next */
  cov_16ltn0dysf().s[33]++;
  const signOut = async () => {
    /* istanbul ignore next */
    cov_16ltn0dysf().f[5]++;
    cov_16ltn0dysf().s[34]++;
    try {
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_16ltn0dysf().s[35]++, await supabase_1.supabase.auth.signOut());
      /* istanbul ignore next */
      cov_16ltn0dysf().s[36]++;
      if (error) {
        /* istanbul ignore next */
        cov_16ltn0dysf().b[6][0]++;
        cov_16ltn0dysf().s[37]++;
        console.error('Erreur déconnexion:', error);
      } else
      /* istanbul ignore next */
      {
        cov_16ltn0dysf().b[6][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_16ltn0dysf().s[38]++;
      console.error('Erreur inattendue déconnexion:', error);
    }
  };
  /* istanbul ignore next */
  cov_16ltn0dysf().s[39]++;
  (0, react_2.useEffect)(() => {
    /* istanbul ignore next */
    cov_16ltn0dysf().f[6]++;
    cov_16ltn0dysf().s[40]++;
    // Récupération de la session initiale
    const getInitialSession = async () => {
      /* istanbul ignore next */
      cov_16ltn0dysf().f[7]++;
      cov_16ltn0dysf().s[41]++;
      try {
        const {
          data: {
            session
          },
          error
        } =
        /* istanbul ignore next */
        (cov_16ltn0dysf().s[42]++, await supabase_1.supabase.auth.getSession());
        /* istanbul ignore next */
        cov_16ltn0dysf().s[43]++;
        if (error) {
          /* istanbul ignore next */
          cov_16ltn0dysf().b[7][0]++;
          cov_16ltn0dysf().s[44]++;
          console.error('Erreur récupération session:', error);
        } else {
          /* istanbul ignore next */
          cov_16ltn0dysf().b[7][1]++;
          cov_16ltn0dysf().s[45]++;
          setSession(session);
          /* istanbul ignore next */
          cov_16ltn0dysf().s[46]++;
          setUser(
          /* istanbul ignore next */
          (cov_16ltn0dysf().b[8][0]++, session?.user) ??
          /* istanbul ignore next */
          (cov_16ltn0dysf().b[8][1]++, null));
          /* istanbul ignore next */
          cov_16ltn0dysf().s[47]++;
          if (session?.user) {
            /* istanbul ignore next */
            cov_16ltn0dysf().b[9][0]++;
            const userProfile =
            /* istanbul ignore next */
            (cov_16ltn0dysf().s[48]++, await fetchProfile(session.user.id));
            /* istanbul ignore next */
            cov_16ltn0dysf().s[49]++;
            setProfile(userProfile);
          } else
          /* istanbul ignore next */
          {
            cov_16ltn0dysf().b[9][1]++;
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_16ltn0dysf().s[50]++;
        console.error('Erreur inattendue session:', error);
      } finally {
        /* istanbul ignore next */
        cov_16ltn0dysf().s[51]++;
        setLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_16ltn0dysf().s[52]++;
    getInitialSession();
    // Écoute des changements d'authentification
    const {
      data: {
        subscription
      }
    } =
    /* istanbul ignore next */
    (cov_16ltn0dysf().s[53]++, supabase_1.supabase.auth.onAuthStateChange(async (event, session) => {
      /* istanbul ignore next */
      cov_16ltn0dysf().f[8]++;
      cov_16ltn0dysf().s[54]++;
      setSession(session);
      /* istanbul ignore next */
      cov_16ltn0dysf().s[55]++;
      setUser(
      /* istanbul ignore next */
      (cov_16ltn0dysf().b[10][0]++, session?.user) ??
      /* istanbul ignore next */
      (cov_16ltn0dysf().b[10][1]++, null));
      /* istanbul ignore next */
      cov_16ltn0dysf().s[56]++;
      if (session?.user) {
        /* istanbul ignore next */
        cov_16ltn0dysf().b[11][0]++;
        // Utilisateur connecté - récupérer le profil
        const userProfile =
        /* istanbul ignore next */
        (cov_16ltn0dysf().s[57]++, await fetchProfile(session.user.id));
        /* istanbul ignore next */
        cov_16ltn0dysf().s[58]++;
        setProfile(userProfile);
      } else {
        /* istanbul ignore next */
        cov_16ltn0dysf().b[11][1]++;
        cov_16ltn0dysf().s[59]++;
        // Utilisateur déconnecté
        setProfile(null);
      }
      /* istanbul ignore next */
      cov_16ltn0dysf().s[60]++;
      setLoading(false);
    }));
    /* istanbul ignore next */
    cov_16ltn0dysf().s[61]++;
    return () => {
      /* istanbul ignore next */
      cov_16ltn0dysf().f[9]++;
      cov_16ltn0dysf().s[62]++;
      return subscription.unsubscribe();
    };
  }, []);
  const value =
  /* istanbul ignore next */
  (cov_16ltn0dysf().s[63]++, {
    user,
    profile,
    session,
    loading,
    signOut,
    refreshProfile
  });
  /* istanbul ignore next */
  cov_16ltn0dysf().s[64]++;
  return (0, jsx_runtime_1.jsx)(AuthContext.Provider, {
    value: value,
    children: children
  });
};
/* istanbul ignore next */
cov_16ltn0dysf().s[65]++;
exports.AuthProvider = AuthProvider;
// Hook pour vérifier si l'utilisateur est authentifié
/* istanbul ignore next */
cov_16ltn0dysf().s[66]++;
const useRequireAuth = () => {
  /* istanbul ignore next */
  cov_16ltn0dysf().f[10]++;
  const {
    user,
    loading
  } =
  /* istanbul ignore next */
  (cov_16ltn0dysf().s[67]++, (0, exports.useAuth)());
  /* istanbul ignore next */
  cov_16ltn0dysf().s[68]++;
  return {
    isAuthenticated: !!user,
    loading
  };
};
/* istanbul ignore next */
cov_16ltn0dysf().s[69]++;
exports.useRequireAuth = useRequireAuth;
// Hook pour les données du profil utilisateur
/* istanbul ignore next */
cov_16ltn0dysf().s[70]++;
const useUserProfile = () => {
  /* istanbul ignore next */
  cov_16ltn0dysf().f[11]++;
  const {
    profile,
    refreshProfile
  } =
  /* istanbul ignore next */
  (cov_16ltn0dysf().s[71]++, (0, exports.useAuth)());
  /* istanbul ignore next */
  cov_16ltn0dysf().s[72]++;
  return {
    profile,
    refreshProfile
  };
};
/* istanbul ignore next */
cov_16ltn0dysf().s[73]++;
exports.useUserProfile = useUserProfile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTZsdG4wZHlzZiIsImFjdHVhbENvdmVyYWdlIiwicmVhY3RfMSIsInMiLCJfX2ltcG9ydERlZmF1bHQiLCJyZXF1aXJlIiwicmVhY3RfMiIsInN1cGFiYXNlXzEiLCJBdXRoQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJ1bmRlZmluZWQiLCJ1c2VBdXRoIiwiZiIsImNvbnRleHQiLCJ1c2VDb250ZXh0IiwiYiIsIkVycm9yIiwiZXhwb3J0cyIsIkF1dGhQcm92aWRlciIsImNoaWxkcmVuIiwidXNlciIsInNldFVzZXIiLCJ1c2VTdGF0ZSIsInByb2ZpbGUiLCJzZXRQcm9maWxlIiwic2Vzc2lvbiIsInNldFNlc3Npb24iLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImZldGNoUHJvZmlsZSIsInVzZXJJZCIsImRhdGEiLCJlcnJvciIsInN1cGFiYXNlIiwiZnJvbSIsInNlbGVjdCIsImVxIiwic2luZ2xlIiwiY29uc29sZSIsInJlZnJlc2hQcm9maWxlIiwidXNlclByb2ZpbGUiLCJpZCIsInNpZ25PdXQiLCJhdXRoIiwidXNlRWZmZWN0IiwiZ2V0SW5pdGlhbFNlc3Npb24iLCJnZXRTZXNzaW9uIiwic3Vic2NyaXB0aW9uIiwib25BdXRoU3RhdGVDaGFuZ2UiLCJldmVudCIsInVuc3Vic2NyaWJlIiwidmFsdWUiLCJqc3hfcnVudGltZV8xIiwianN4IiwiUHJvdmlkZXIiLCJ1c2VSZXF1aXJlQXV0aCIsImlzQXV0aGVudGljYXRlZCIsInVzZVVzZXJQcm9maWxlIl0sInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvTXlGaXRIZXJvL3NyYy9mZWF0dXJlcy9hdXRoL2hvb2tzL3VzZUF1dGgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVXNlciwgU2Vzc2lvbiwgQXV0aENoYW5nZUV2ZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcbmltcG9ydCB7IHN1cGFiYXNlIH0gZnJvbSAnQC9saWIvc3VwYWJhc2UnO1xuXG5pbnRlcmZhY2UgVXNlclByb2ZpbGUge1xuICBpZDogc3RyaW5nO1xuICBlbWFpbDogc3RyaW5nO1xuICBmaXJzdF9uYW1lOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIGxhc3RfbmFtZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBmdWxsX25hbWU6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgYXZhdGFyX3VybDogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBhZ2U6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgd2VpZ2h0OiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIGhlaWdodDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICBnZW5kZXI6ICdtYWxlJyB8ICdmZW1hbGUnIHwgJ290aGVyJyB8IHVuZGVmaW5lZDtcbiAgYWN0aXZpdHlfbGV2ZWw6ICdzZWRlbnRhcnknIHwgJ2xpZ2h0bHlfYWN0aXZlJyB8ICdtb2RlcmF0ZWx5X2FjdGl2ZScgfCAndmVyeV9hY3RpdmUnIHwgJ2V4dHJlbWVseV9hY3RpdmUnIHwgdW5kZWZpbmVkO1xuICBnb2Fsczogc3RyaW5nW10gfCB1bmRlZmluZWQ7XG4gIHByZWZlcnJlZF9zcG9ydHM6IHN0cmluZ1tdIHwgdW5kZWZpbmVkO1xuICB0aW1lem9uZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBsYW5ndWFnZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBub3RpZmljYXRpb25zX2VuYWJsZWQ6IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gIG9uYm9hcmRpbmdfY29tcGxldGVkOiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICBjcmVhdGVkX2F0OiBzdHJpbmc7XG4gIHVwZGF0ZWRfYXQ6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIEF1dGhDb250ZXh0VmFsdWUge1xuICB1c2VyOiBVc2VyIHwgdW5kZWZpbmVkO1xuICBwcm9maWxlOiBVc2VyUHJvZmlsZSB8IHVuZGVmaW5lZDtcbiAgc2Vzc2lvbjogU2Vzc2lvbiB8IHVuZGVmaW5lZDtcbiAgbG9hZGluZzogYm9vbGVhbjtcbiAgc2lnbk91dDogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbiAgcmVmcmVzaFByb2ZpbGU6ICgpID0+IFByb21pc2U8dm9pZD47XG59XG5cbmNvbnN0IEF1dGhDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxBdXRoQ29udGV4dFZhbHVlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG5leHBvcnQgY29uc3QgdXNlQXV0aCA9ICgpID0+IHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQXV0aENvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VBdXRoIG11c3QgYmUgdXNlZCB3aXRoaW4gYW4gQXV0aFByb3ZpZGVyJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG5pbnRlcmZhY2UgQXV0aFByb3ZpZGVyUHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgY29uc3QgQXV0aFByb3ZpZGVyOiBSZWFjdC5GQzxBdXRoUHJvdmlkZXJQcm9wcz4gPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gIGNvbnN0IFt1c2VyLCBzZXRVc2VyXSA9IHVzZVN0YXRlPFVzZXIgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3Byb2ZpbGUsIHNldFByb2ZpbGVdID0gdXNlU3RhdGU8VXNlclByb2ZpbGUgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3Nlc3Npb24sIHNldFNlc3Npb25dID0gdXNlU3RhdGU8U2Vzc2lvbiB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICBjb25zdCBmZXRjaFByb2ZpbGUgPSBhc3luYyAodXNlcklkOiBzdHJpbmcpOiBQcm9taXNlPFVzZXJQcm9maWxlIHwgbnVsbD4gPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH06IGFueSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCd1c2VyX3Byb2ZpbGVzJylcbiAgICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAgIC5lcSgnaWQnLCB1c2VySWQpXG4gICAgICAgIC5zaW5nbGUoKTtcblxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0VycmV1ciByw6ljdXDDqXJhdGlvbiBwcm9maWw6JywgZXJyb3IpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyZXVyIGluYXR0ZW5kdWUgcHJvZmlsOicsIGVycm9yKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCByZWZyZXNoUHJvZmlsZSA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAodXNlcikge1xuICAgICAgY29uc3QgdXNlclByb2ZpbGUgPSBhd2FpdCBmZXRjaFByb2ZpbGUodXNlci5pZCk7XG4gICAgICBzZXRQcm9maWxlKHVzZXJQcm9maWxlKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3Qgc2lnbk91dCA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5zaWduT3V0KCk7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyZXVyIGTDqWNvbm5leGlvbjonLCBlcnJvcik7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyZXVyIGluYXR0ZW5kdWUgZMOpY29ubmV4aW9uOicsIGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBSw6ljdXDDqXJhdGlvbiBkZSBsYSBzZXNzaW9uIGluaXRpYWxlXG4gICAgY29uc3QgZ2V0SW5pdGlhbFNlc3Npb24gPSBhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCB7IGRhdGE6IHsgc2Vzc2lvbiB9LCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRTZXNzaW9uKCk7XG4gICAgICAgIFxuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJldXIgcsOpY3Vww6lyYXRpb24gc2Vzc2lvbjonLCBlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0U2Vzc2lvbihzZXNzaW9uKTtcbiAgICAgICAgICBzZXRVc2VyKHNlc3Npb24/LnVzZXIgPz8gbnVsbCk7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKHNlc3Npb24/LnVzZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IHVzZXJQcm9maWxlID0gYXdhaXQgZmV0Y2hQcm9maWxlKHNlc3Npb24udXNlci5pZCk7XG4gICAgICAgICAgICBzZXRQcm9maWxlKHVzZXJQcm9maWxlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyZXVyIGluYXR0ZW5kdWUgc2Vzc2lvbjonLCBlcnJvcik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZ2V0SW5pdGlhbFNlc3Npb24oKTtcblxuICAgIC8vIMOJY291dGUgZGVzIGNoYW5nZW1lbnRzIGQnYXV0aGVudGlmaWNhdGlvblxuICAgIGNvbnN0IHsgZGF0YTogeyBzdWJzY3JpcHRpb24gfSB9ID0gc3VwYWJhc2UuYXV0aC5vbkF1dGhTdGF0ZUNoYW5nZShcbiAgICAgIGFzeW5jIChldmVudDogQXV0aENoYW5nZUV2ZW50LCBzZXNzaW9uOiBTZXNzaW9uIHwgbnVsbCkgPT4ge1xuICAgICAgICBcbiAgICAgICAgc2V0U2Vzc2lvbihzZXNzaW9uKTtcbiAgICAgICAgc2V0VXNlcihzZXNzaW9uPy51c2VyID8/IG51bGwpO1xuICAgICAgICBcbiAgICAgICAgaWYgKHNlc3Npb24/LnVzZXIpIHtcbiAgICAgICAgICAvLyBVdGlsaXNhdGV1ciBjb25uZWN0w6kgLSByw6ljdXDDqXJlciBsZSBwcm9maWxcbiAgICAgICAgICBjb25zdCB1c2VyUHJvZmlsZSA9IGF3YWl0IGZldGNoUHJvZmlsZShzZXNzaW9uLnVzZXIuaWQpO1xuICAgICAgICAgIHNldFByb2ZpbGUodXNlclByb2ZpbGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFV0aWxpc2F0ZXVyIGTDqWNvbm5lY3TDqVxuICAgICAgICAgIHNldFByb2ZpbGUobnVsbCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgfVxuICAgICk7XG5cbiAgICByZXR1cm4gKCkgPT4gc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH0sIFtdKTtcblxuICBjb25zdCB2YWx1ZTogQXV0aENvbnRleHRWYWx1ZSA9IHtcbiAgICB1c2VyLFxuICAgIHByb2ZpbGUsXG4gICAgc2Vzc2lvbixcbiAgICBsb2FkaW5nLFxuICAgIHNpZ25PdXQsXG4gICAgcmVmcmVzaFByb2ZpbGVcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxBdXRoQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17dmFsdWV9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQXV0aENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG4vLyBIb29rIHBvdXIgdsOpcmlmaWVyIHNpIGwndXRpbGlzYXRldXIgZXN0IGF1dGhlbnRpZmnDqVxuZXhwb3J0IGNvbnN0IHVzZVJlcXVpcmVBdXRoID0gKCkgPT4ge1xuICBjb25zdCB7IHVzZXIsIGxvYWRpbmcgfSA9IHVzZUF1dGgoKTtcbiAgcmV0dXJuIHsgaXNBdXRoZW50aWNhdGVkOiAhIXVzZXIsIGxvYWRpbmcgfTtcbn07XG5cbi8vIEhvb2sgcG91ciBsZXMgZG9ubsOpZXMgZHUgcHJvZmlsIHV0aWxpc2F0ZXVyXG5leHBvcnQgY29uc3QgdXNlVXNlclByb2ZpbGUgPSAoKSA9PiB7XG4gIGNvbnN0IHsgcHJvZmlsZSwgcmVmcmVzaFByb2ZpbGUgfSA9IHVzZUF1dGgoKTtcbiAgcmV0dXJuIHsgcHJvZmlsZSwgcmVmcmVzaFByb2ZpbGUgfTtcbn07Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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