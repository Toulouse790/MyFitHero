{"version":3,"names":["cov_16ltn0dysf","actualCoverage","react_1","s","__importDefault","require","react_2","supabase_1","AuthContext","createContext","undefined","useAuth","f","context","useContext","b","Error","exports","AuthProvider","children","user","setUser","useState","profile","setProfile","session","setSession","loading","setLoading","fetchProfile","userId","data","error","supabase","from","select","eq","single","console","refreshProfile","userProfile","id","signOut","auth","useEffect","getInitialSession","getSession","subscription","onAuthStateChange","event","unsubscribe","value","jsx_runtime_1","jsx","Provider","useRequireAuth","isAuthenticated","useUserProfile"],"sources":["/workspaces/MyFitHero/src/features/auth/hooks/useAuth.tsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { User, Session, AuthChangeEvent } from '@supabase/supabase-js';\nimport { supabase } from '@/lib/supabase';\n\ninterface UserProfile {\n  id: string;\n  email: string;\n  first_name: string | undefined;\n  last_name: string | undefined;\n  full_name: string | undefined;\n  avatar_url: string | undefined;\n  age: number | undefined;\n  weight: number | undefined;\n  height: number | undefined;\n  gender: 'male' | 'female' | 'other' | undefined;\n  activity_level: 'sedentary' | 'lightly_active' | 'moderately_active' | 'very_active' | 'extremely_active' | undefined;\n  goals: string[] | undefined;\n  preferred_sports: string[] | undefined;\n  timezone: string | undefined;\n  language: string | undefined;\n  notifications_enabled: boolean | undefined;\n  onboarding_completed: boolean | undefined;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface AuthContextValue {\n  user: User | undefined;\n  profile: UserProfile | undefined;\n  session: Session | undefined;\n  loading: boolean;\n  signOut: () => Promise<void>;\n  refreshProfile: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextValue | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchProfile = async (userId: string): Promise<UserProfile | null> => {\n    try {\n      const { data, error }: any = await supabase\n        .from('user_profiles')\n        .select('*')\n        .eq('id', userId)\n        .single();\n\n      if (error) {\n        console.error('Erreur récupération profil:', error);\n        return null;\n      }\n\n      return data;\n    } catch (error: any) {\n      console.error('Erreur inattendue profil:', error);\n      return null;\n    }\n  };\n\n  const refreshProfile = async () => {\n    if (user) {\n      const userProfile = await fetchProfile(user.id);\n      setProfile(userProfile);\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) {\n        console.error('Erreur déconnexion:', error);\n      }\n    } catch (error: any) {\n      console.error('Erreur inattendue déconnexion:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Récupération de la session initiale\n    const getInitialSession = async () => {\n      try {\n        const { data: { session }, error } = await supabase.auth.getSession();\n        \n        if (error) {\n          console.error('Erreur récupération session:', error);\n        } else {\n          setSession(session);\n          setUser(session?.user ?? null);\n          \n          if (session?.user) {\n            const userProfile = await fetchProfile(session.user.id);\n            setProfile(userProfile);\n          }\n        }\n      } catch (error: any) {\n        console.error('Erreur inattendue session:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getInitialSession();\n\n    // Écoute des changements d'authentification\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event: AuthChangeEvent, session: Session | null) => {\n        \n        setSession(session);\n        setUser(session?.user ?? null);\n        \n        if (session?.user) {\n          // Utilisateur connecté - récupérer le profil\n          const userProfile = await fetchProfile(session.user.id);\n          setProfile(userProfile);\n        } else {\n          // Utilisateur déconnecté\n          setProfile(null);\n        }\n        \n        setLoading(false);\n      }\n    );\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const value: AuthContextValue = {\n    user,\n    profile,\n    session,\n    loading,\n    signOut,\n    refreshProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook pour vérifier si l'utilisateur est authentifié\nexport const useRequireAuth = () => {\n  const { user, loading } = useAuth();\n  return { isAuthenticated: !!user, loading };\n};\n\n// Hook pour les données du profil utilisateur\nexport const useUserProfile = () => {\n  const { profile, refreshProfile } = useAuth();\n  return { profile, refreshProfile };\n};"],"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","ignoreList":[]}