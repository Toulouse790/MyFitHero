{"version":3,"names":["cov_1i6ny83ucq","actualCoverage","s","exports","getRecommendedPacks","getQuestionsForPack","shouldAskQuestion","getEstimatedTimeForPack","getPackById","getPacksForSport","getPacksForExperience","getPopularPacks","SMART_PACKS","id","name","title","description","longDescription","icon","color","sports","goals","features","modules","targetAudience","estimatedTime","popularity","difficulty","questions","benefits","examples","userProfile","f","recommendations","pack","score","reasons","missingFeatures","objectives","b","matchingGoals","filter","goal","includes","length","push","sport","experience","age","availability","healthConditions","wantedFeatures","feature","some","toLowerCase","Math","round","undefined","sort","a","slice","packId","find","p","questionId","selectedPack","alwaysAsk","currentStep","completedSteps","remainingQuestions","q","sportId","experienceLevel","limit"],"sources":["/workspaces/MyFitHero/src/features/auth/data/smartPacks.ts"],"sourcesContent":["import { Plus } from 'lucide-react';\n// Packs intelligents pr√©d√©finis selon le profil utilisateur\n\nexport interface SmartPack {\n  id: string;\n  name: string;\n  title: string;\n  description: string;\n  longDescription: string;\n  icon: string;\n  color: string;\n  sports: string[];\n  goals: string[];\n  features: string[];\n  modules: string[];\n  targetAudience: string[];\n  estimatedTime: number; // minutes d'onboarding\n  popularity: number;\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  questions: string[]; // IDs des questions sp√©cifiques √† ce pack\n  benefits: string[];\n  examples: string[];\n}\n\nexport interface PackRecommendation {\n  pack: SmartPack;\n  score: number;\n  reasons: string[];\n  missingFeatures?: string[];\n}\n\nexport const SMART_PACKS: SmartPack[] = [\n  {\n    id: 'athlete',\n    name: 'Athl√®te Performance',\n    title: 'Optimisez vos performances sportives',\n    description: 'Entra√Ænement sp√©cialis√© pour am√©liorer vos performances dans votre sport',\n    longDescription: 'Ce pack est con√ßu pour les athl√®tes qui veulent maximiser leurs performances dans un sport sp√©cifique. Il inclut un coaching personnalis√©, des plans d\\'entra√Ænement adapt√©s √† votre discipline, et un suivi d√©taill√© de vos progr√®s.',\n    icon: 'üèÜ',\n    color: 'bg-gradient-to-r from-yellow-400 to-orange-500',\n    sports: ['football', 'basketball', 'tennis', 'rugby', 'running', 'cycling', 'swimming'],\n    goals: ['performance-sport', 'increase-strength', 'improve-endurance'],\n    features: [\n      'Plans d\\'entra√Ænement sp√©cifiques au sport',\n      'Analyse biom√©canique',\n      'P√©riodisation avanc√©e',\n      'Suivi de performance en temps r√©el',\n      'Conseils tactiques',\n      'R√©cup√©ration optimis√©e',\n      'Nutrition pour la performance'\n    ],\n    modules: ['workout', 'analytics', 'recovery', 'nutrition', 'mental'],\n    targetAudience: ['athl√®tes comp√©titifs', 'sportifs amateurs avanc√©s', '√©quipes'],\n    estimatedTime: 12,\n    popularity: 85,\n    difficulty: 'advanced',\n    questions: ['sport-selection', 'position-selection', 'sport-level', 'season-period', 'training-availability'],\n    benefits: [\n      'Am√©lioration mesurable des performances',\n      'R√©duction du risque de blessures',\n      'Optimisation de la r√©cup√©ration',\n      'D√©veloppement tactique',\n      'Pr√©paration mentale'\n    ],\n    examples: [\n      'Pr√©paration pour une comp√©tition',\n      'Am√©lioration du temps au 10km',\n      'Augmentation de la d√©tente verticale',\n      'Perfectionnement technique'\n    ]\n  },\n\n  {\n    id: 'fitness',\n    name: 'Fitness Complet',\n    title: 'Forme physique optimale',\n    description: 'Programme complet pour d√©velopper force, endurance et esth√©tique',\n    longDescription: 'Le pack id√©al pour ceux qui veulent une condition physique compl√®te. Combine musculation, cardio, et flexibilit√© pour un d√©veloppement harmonieux du corps.',\n    icon: 'üí™',\n    color: 'bg-gradient-to-r from-blue-500 to-purple-600',\n    sports: ['weightlifting', 'crossfit', 'running', 'cycling'],\n    goals: ['gain-muscle', 'lose-weight', 'increase-strength', 'improve-endurance'],\n    features: [\n      'Programs de musculation progressifs',\n      'Entra√Ænements cardiovasculaires vari√©s',\n      'Suivi de la composition corporelle',\n      'Plans nutritionnels personnalis√©s',\n      'Exercices de mobilit√©',\n      'D√©fis motivants',\n      'Communaut√© active'\n    ],\n    modules: ['workout', 'nutrition', 'analytics', 'social', 'hydration'],\n    targetAudience: ['d√©butants en fitness', 'passionn√©s de musculation', 'personnes actives'],\n    estimatedTime: 10,\n    popularity: 92,\n    difficulty: 'intermediate',\n    questions: ['main-objectives', 'fitness-experience', 'equipment-available', 'training-availability'],\n    benefits: [\n      'D√©veloppement musculaire √©quilibr√©',\n      'Am√©lioration de la composition corporelle',\n      'Boost de confiance en soi',\n      '√ânergie au quotidien',\n      'Habitudes saines durables'\n    ],\n    examples: [\n      'Transformation physique en 3 mois',\n      'Premier marathon',\n      'Objectif bikini body',\n      'Retour en forme apr√®s blessure'\n    ]\n  },\n\n  {\n    id: 'wellness',\n    name: 'Bien-√™tre Global',\n    title: '√âquilibre de vie optimal',\n    description: 'Approche holistique pour votre sant√© physique et mentale',\n    longDescription: 'Ce pack privil√©gie une approche douce et globale de la sant√©. Il combine activit√© physique mod√©r√©e, nutrition consciente, gestion du stress et optimisation du sommeil.',\n    icon: 'üßò',\n    color: 'bg-gradient-to-r from-green-400 to-teal-500',\n    sports: ['yoga', 'walking', 'swimming', 'tai-chi'],\n    goals: ['stress-relief', 'health-maintenance', 'improve-flexibility', 'improve-sleep'],\n    features: [\n      'Exercices doux et progressifs',\n      'M√©ditation guid√©e',\n      'Suivi du sommeil',\n      'Gestion du stress',\n      'Nutrition intuitive',\n      'Habitudes de vie saines',\n      'Mindfulness quotidien'\n    ],\n    modules: ['sleep', 'mental', 'hydration', 'recovery', 'nutrition'],\n    targetAudience: ['d√©butants s√©dentaires', 'seniors actifs', 'personnes stress√©es', 'convalescents'],\n    estimatedTime: 8,\n    popularity: 78,\n    difficulty: 'beginner',\n    questions: ['lifestyle-preferences', 'dietary-preferences', 'sleep-habits', 'health-conditions'],\n    benefits: [\n      'R√©duction du stress et de l\\'anxi√©t√©',\n      'Am√©lioration de la qualit√© du sommeil',\n      'Plus d\\'√©nergie au quotidien',\n      'Meilleur √©quilibre vie-travail',\n      'Pr√©vention des maladies'\n    ],\n    examples: [\n      'Routine matinale √©nergisante',\n      'Gestion du stress au travail',\n      'Am√©lioration du sommeil',\n      'Retour √† l\\'activit√© en douceur'\n    ]\n  },\n\n  {\n    id: 'weight-loss',\n    name: 'Perte de Poids',\n    title: 'Transformation corporelle durable',\n    description: 'Programme complet pour perdre du poids sainement et durablement',\n    longDescription: 'Un programme scientifiquement con√ßu pour une perte de poids saine et durable, combinant exercices adapt√©s, nutrition √©quilibr√©e et soutien psychologique.',\n    icon: 'üìâ',\n    color: 'bg-gradient-to-r from-red-400 to-pink-500',\n    sports: ['walking', 'running', 'cycling', 'swimming'],\n    goals: ['lose-weight', 'improve-endurance', 'health-maintenance'],\n    features: [\n      'D√©ficit calorique optimis√©',\n      'Exercices br√ªle-graisses',\n      'Suivi du poids et mensurations',\n      'Coaching nutritionnel',\n      'Support motivationnel',\n      'Recipes minceur',\n      'Gestion des fringales'\n    ],\n    modules: ['nutrition', 'workout', 'analytics', 'mental', 'hydration'],\n    targetAudience: ['personnes en surpoids', 'post-grossesse', 'perte de poids m√©dicale'],\n    estimatedTime: 9,\n    popularity: 88,\n    difficulty: 'beginner',\n    questions: ['main-objectives', 'dietary-preferences', 'training-availability', 'health-conditions'],\n    benefits: [\n      'Perte de poids progressive et durable',\n      'Am√©lioration de la sant√© cardiovasculaire',\n      'Boost de confiance',\n      'Nouvelles habitudes alimentaires',\n      '√ânergie retrouv√©e'\n    ],\n    examples: [\n      'Perdre 10kg en 6 mois',\n      'Retrouver son poids de forme',\n      'Pr√©parer l\\'√©t√©',\n      'Am√©liorer sa sant√©'\n    ]\n  },\n\n  {\n    id: 'muscle-building',\n    name: 'Prise de Masse',\n    title: 'D√©veloppement musculaire optimal',\n    description: 'Programme intensif pour maximiser la croissance musculaire',\n    longDescription: 'Con√ßu pour ceux qui veulent d√©velopper leur masse musculaire de fa√ßon optimale, avec des protocoles d\\'entra√Ænement avanc√©s et une nutrition pr√©cise.',\n    icon: 'üèãÔ∏è',\n    color: 'bg-gradient-to-r from-indigo-500 to-blue-600',\n    sports: ['weightlifting', 'powerlifting', 'bodybuilding'],\n    goals: ['gain-muscle', 'increase-strength'],\n    features: [\n      'Programs de musculation intensifs',\n      'P√©riodisation pour l\\'hypertrophie',\n      'Nutrition hypercalorique optimis√©e',\n      'Suivi des charges et volumes',\n      'Techniques d\\'intensification',\n      'R√©cup√©ration maximis√©e',\n      'Suppl√©mentation cibl√©e'\n    ],\n    modules: ['workout', 'nutrition', 'recovery', 'analytics'],\n    targetAudience: ['bodybuilders', 'powerlifters', 'ectomorphes'],\n    estimatedTime: 11,\n    popularity: 75,\n    difficulty: 'advanced',\n    questions: ['fitness-experience', 'equipment-available', 'training-availability', 'nutrition-objectives'],\n    benefits: [\n      'Croissance musculaire maximis√©e',\n      'Force significativement augment√©e',\n      'Physique impressionnant',\n      'Confiance renforc√©e',\n      'Performance am√©lior√©e'\n    ],\n    examples: [\n      'Gagner 5kg de muscle en 6 mois',\n      'Doubler sa force au d√©velopp√© couch√©',\n      'Transformer son physique',\n      'Pr√©parer une comp√©tition'\n    ]\n  },\n\n  {\n    id: 'senior',\n    name: 'Senior Actif',\n    title: 'Vitalit√© apr√®s 50 ans',\n    description: 'Programme adapt√© pour rester en forme et en sant√© apr√®s 50 ans',\n    longDescription: 'Sp√©cialement con√ßu pour les seniors, ce programme privil√©gie la sant√©, la mobilit√© et l\\'autonomie avec des exercices adapt√©s et s√©curis√©s.',\n    icon: 'üë¥',\n    color: 'bg-gradient-to-r from-amber-400 to-orange-400',\n    sports: ['walking', 'swimming', 'tai-chi', 'golf'],\n    goals: ['health-maintenance', 'improve-flexibility', 'increase-strength'],\n    features: [\n      'Exercices adapt√©s aux seniors',\n      'Pr√©vention des chutes',\n      'Maintien de la densit√© osseuse',\n      'Exercices cognitifs',\n      'Suivi m√©dical int√©gr√©',\n      'Socialisation encourag√©e',\n      'Progression tr√®s douce'\n    ],\n    modules: ['workout', 'health', 'social', 'mental', 'recovery'],\n    targetAudience: ['seniors actifs', 'retrait√©s', 'post-r√©√©ducation'],\n    estimatedTime: 7,\n    popularity: 65,\n    difficulty: 'beginner',\n    questions: ['health-conditions', 'lifestyle-preferences', 'training-availability'],\n    benefits: [\n      'Maintien de l\\'autonomie',\n      'Pr√©vention des maladies',\n      'Am√©lioration de l\\'√©quilibre',\n      'Lien social renforc√©',\n      'Bien-√™tre mental'\n    ],\n    examples: [\n      'Pr√©venir l\\'ost√©oporose',\n      'Maintenir la mobilit√©',\n      'Socialiser en groupe',\n      'Rester ind√©pendant'\n    ]\n  }\n];\n\n/**\n * Calcule les recommandations de packs selon le profil utilisateur\n */\nexport function getRecommendedPacks(userProfile: any): PackRecommendation[] {\n  const recommendations: PackRecommendation[] = [];\n\n  for (const pack of SMART_PACKS) {\n    let score = 0;\n    const reasons: string[] = [];\n    const missingFeatures: string[] = [];\n\n    // Score bas√© sur les objectifs\n    if (userProfile.objectives) {\n      const matchingGoals = pack.goals.filter(goal => \n        userProfile.objectives.includes(goal)\n      );\n      score += matchingGoals.length * 20;\n      if (matchingGoals.length > 0) {\n        reasons.push(`Correspond √† ${matchingGoals.length} de vos objectifs`);\n      }\n    }\n\n    // Score bas√© sur le sport\n    if (userProfile.sport && pack.sports.includes(userProfile.sport)) {\n      score += 25;\n      reasons.push('Adapt√© √† votre sport principal');\n    }\n\n    // Score bas√© sur l'exp√©rience\n    if (userProfile.experience) {\n      if (pack.difficulty === userProfile.experience) {\n        score += 15;\n        reasons.push('Niveau de difficult√© adapt√©');\n      } else if (\n        (pack.difficulty === 'intermediate' && userProfile.experience === 'beginner') ||\n        (pack.difficulty === 'beginner' && userProfile.experience === 'intermediate')\n      ) {\n        score += 10;\n        reasons.push('Niveau proche de votre exp√©rience');\n      }\n    }\n\n    // Score bas√© sur l'√¢ge\n    if (userProfile.age) {\n      if (userProfile.age >= 50 && pack.id === 'senior') {\n        score += 20;\n        reasons.push('Sp√©cialement con√ßu pour votre tranche d\\'√¢ge');\n      } else if (userProfile.age < 30 && ['athlete', 'fitness', 'muscle-building'].includes(pack.id)) {\n        score += 10;\n        reasons.push('Adapt√© aux jeunes adultes actifs');\n      }\n    }\n\n    // Score bas√© sur la disponibilit√©\n    if (userProfile.availability) {\n      if (userProfile.availability === 'daily' && ['athlete', 'muscle-building'].includes(pack.id)) {\n        score += 15;\n        reasons.push('Parfait pour un entra√Ænement quotidien');\n      } else if (userProfile.availability === '1-2-sessions' && ['wellness', 'senior'].includes(pack.id)) {\n        score += 15;\n        reasons.push('Adapt√© √† votre disponibilit√© limit√©e');\n      }\n    }\n\n    // Score bas√© sur les conditions de sant√©\n    if (userProfile.healthConditions) {\n      if (userProfile.healthConditions.includes('none') && ['athlete', 'fitness', 'muscle-building'].includes(pack.id)) {\n        score += 10;\n        reasons.push('Aucune restriction de sant√©');\n      } else if (userProfile.healthConditions.length > 1 && ['wellness', 'senior'].includes(pack.id)) {\n        score += 15;\n        reasons.push('Approche douce adapt√©e √† vos conditions');\n      }\n    }\n\n    // V√©rifier les fonctionnalit√©s manquantes\n    if (userProfile.wantedFeatures) {\n      for (const feature of userProfile.wantedFeatures) {\n        if (!pack.features.some(f => f.toLowerCase().includes(feature.toLowerCase()))) {\n          missingFeatures.push(feature);\n        }\n      }\n    }\n\n    // Bonus popularit√©\n    score += pack.popularity * 0.1;\n\n    recommendations.push({\n      pack,\n      score: Math.round(score),\n      reasons,\n      missingFeatures: missingFeatures.length > 0 ? missingFeatures : undefined\n    });\n  }\n\n  // Trier par score d√©croissant\n  return recommendations\n    .sort((a, b) => b.score - a.score)\n    .slice(0, 3); // Retourner les 3 meilleures recommandations\n}\n\n/**\n * Retourne les questions sp√©cifiques √† un pack\n */\nexport function getQuestionsForPack(packId: string): string[] {\n  const pack = SMART_PACKS.find(p => p.id === packId);\n  return pack?.questions || [];\n}\n\n/**\n * D√©termine si une question doit √™tre pos√©e selon le pack s√©lectionn√©\n */\nexport function shouldAskQuestion(questionId: string, selectedPack: string): boolean {\n  const pack = SMART_PACKS.find(p => p.id === selectedPack);\n  if (!pack) return true; // Par d√©faut, poser la question\n  \n  // Questions toujours pos√©es\n  const alwaysAsk = ['personal-info', 'health-conditions', 'notifications-preferences'];\n  if (alwaysAsk.includes(questionId)) return true;\n  \n  // Questions sp√©cifiques au pack\n  return pack.questions.includes(questionId);\n}\n\n/**\n * Estime le temps restant pour un pack donn√©\n */\nexport function getEstimatedTimeForPack(packId: string, currentStep: string, completedSteps: string[]): number {\n  const pack = SMART_PACKS.find(p => p.id === packId);\n  if (!pack) return 0;\n  \n  const remainingQuestions = pack.questions.filter(q => !completedSteps.includes(q));\n  return remainingQuestions.length * 30; // 30 secondes par question en moyenne\n}\n\n/**\n * Retourne un pack par son ID\n */\nexport function getPackById(packId: string): SmartPack | undefined {\n  return SMART_PACKS.find(pack => pack.id === packId);\n}\n\n/**\n * Retourne les packs recommand√©s pour un sport sp√©cifique\n */\nexport function getPacksForSport(sportId: string): SmartPack[] {\n  return SMART_PACKS.filter(pack => pack.sports.includes(sportId));\n}\n\n/**\n * Retourne les packs adapt√©s √† un niveau d'exp√©rience\n */\nexport function getPacksForExperience(experienceLevel: string): SmartPack[] {\n  return SMART_PACKS.filter(pack => {\n    if (experienceLevel === 'beginner') return pack.difficulty === 'beginner';\n    if (experienceLevel === 'intermediate') return ['beginner', 'intermediate'].includes(pack.difficulty);\n    if (experienceLevel === 'advanced') return ['intermediate', 'advanced'].includes(pack.difficulty);\n    return true;\n  });\n}\n\n/**\n * Retourne les packs les plus populaires\n */\nexport function getPopularPacks(limit: number = 3): SmartPack[] {\n  return SMART_PACKS\n    .sort((a, b) => b.popularity - a.popularity)\n    .slice(0, limit);\n}"],"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","ignoreList":[]}