{"version":3,"names":["ScaleService","connectBluetoothScale","cov_1bpztih51v","f","s","navigator","bluetooth","b","Error","device","requestDevice","filters","namePrefix","optionalServices","gatt","connect","console","error","readScaleData","server","service","getPrimaryService","characteristic","getCharacteristic","value","readValue","weight","getFloat32","Math","round","timestamp","Date","toISOString","deviceId","id","syncWithCloudAPI","provider","accessToken","apiUrl","headers","Authorization","response","fetch","data","json","parseCloudData","saveScaleReading","reading","method","body","JSON","stringify","exports"],"sources":["/workspaces/MyFitHero/src/lib/services/scaleService.ts"],"sourcesContent":["// services/scaleService.ts\nexport interface ScaleReading {\n  weight: number;\n  bodyFat?: number;\n  muscleMass?: number;\n  boneMass?: number;\n  waterPercentage?: number;\n  visceralFat?: number;\n  bmr?: number; // Métabolisme de base\n  timestamp: string;\n  deviceId: string;\n}\n\nexport class ScaleService {\n  // Connexion Bluetooth (Web Bluetooth API)\n  static async connectBluetoothScale(): Promise<BluetoothDevice | null> {\n    try {\n      if (!navigator.bluetooth) {\n        throw new Error('Bluetooth non supporté par ce navigateur');\n      }\n\n      const device = await navigator.bluetooth.requestDevice({\n        filters: [\n          { namePrefix: 'Mi Scale' },\n          { namePrefix: 'XIAOMI' },\n          { namePrefix: 'Withings' },\n          { namePrefix: 'Fitbit' },\n        ],\n        optionalServices: ['battery_service', 'device_information'],\n      });\n\n      await device.gatt?.connect();\n      return device;\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur connexion Bluetooth:', error);\n      return null;\n    }\n  }\n\n  // Lire les données de la balance\n  static async readScaleData(device: BluetoothDevice): Promise<ScaleReading | null> {\n    try {\n      // Implémentation spécifique selon le protocole de la balance\n      // Ceci est un exemple générique\n\n      const server = await device.gatt?.connect();\n      if (!server) return null;\n\n      // Exemple pour Xiaomi Mi Scale\n      const service = await server.getPrimaryService('181b'); // Weight Scale Service\n      const characteristic = await service.getCharacteristic('2a9d'); // Weight Measurement\n\n      const value = await characteristic.readValue();\n      const weight = value.getFloat32(1, true); // Little endian\n\n      return {\n        weight: Math.round(weight * 10) / 10,\n        timestamp: new Date().toISOString(),\n        deviceId: device.id,\n      };\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur lecture données:', error);\n      return null;\n    }\n  }\n\n  // Synchronisation avec API cloud (Xiaomi, Withings, etc.)\n  static async syncWithCloudAPI(\n    provider: 'xiaomi' | 'withings' | 'fitbit',\n    accessToken: string\n  ): Promise<ScaleReading[]> {\n    try {\n      let apiUrl = '';\n      let headers = {};\n\n      switch (provider) {\n        case 'xiaomi':\n          apiUrl = 'https://api.mi-fit.com/v1/data/weight';\n          headers = { Authorization: `Bearer ${accessToken}` };\n          break;\n        case 'withings':\n          apiUrl = 'https://wbsapi.withings.net/measure';\n          headers = { Authorization: `Bearer ${accessToken}` };\n          break;\n        case 'fitbit':\n          apiUrl = 'https://api.fitbit.com/1/user/-/body/log/weight/date/today/1m.json';\n          headers = { Authorization: `Bearer ${accessToken}` };\n          break;\n      }\n\n      const response = await fetch(apiUrl, { headers });\n      const data = await response.json();\n\n      // Parser selon le format de chaque API\n      return this.parseCloudData(provider, data);\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur sync cloud:', error);\n      return [];\n    }\n  }\n\n  private static parseCloudData(provider: string, data: any): ScaleReading[] {\n    // Implémentation du parsing selon chaque provider\n    // Retourner un format unifié\n    return [];\n  }\n\n  // Sauvegarder les données en local\n  static async saveScaleReading(reading: ScaleReading): Promise<void> {\n    try {\n      // Sauvegarder en base de données via ton service\n      await fetch('/api/scale-readings', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(reading),\n      });\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur sauvegarde:', error);\n    }\n  }\n}\n"],"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","ignoreList":[]}