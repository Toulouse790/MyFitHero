{"version":3,"names":["react_1","cov_2bnh38fcac","s","__importStar","require","card_1","button_1","badge_1","lucide_react_1","useSupabaseWorkout_1","workoutFlowReducer","state","event","f","type","b","currentState","startTime","Date","coachingMessage","newTotalSets","totalSets","newVolume","totalVolume","setData","weight","reps","newAverageRPE","rpe","averageRPE","currentSetNumber","estimatedCalories","Math","round","toFixed","targetRestTime","duration","pauseTime","pauseDuration","now","getTime","totalPauseTime","emergencyStopReason","reason","remoteState","lastSyncTime","isOnline","initialState","sessionId","currentExerciseIndex","fatigueLevel","performanceScore","heartRateZone","autoProgressWeight","smartRestTimers","realTimeCoaching","navigator","onLine","pendingChanges","workoutPlan","showAnalytics","showSettings","SophisticatedWorkoutFlowManager","userId","onWorkoutComplete","onEmergencyStop","dispatch","useReducer","session","loading","sessionLoading","error","sessionError","updateSession","createSession","useWorkoutSession","undefined","sets","setsLoading","setsError","addSet","updateSet","useWorkoutSets","useEffect","handleOnline","handleOffline","window","addEventListener","removeEventListener","handleStartWorkout","useCallback","newSession","workoutPlanId","id","name","description","status","console","handleCompleteSet","completeSetData","restTime","calculateSmartRestTime","handlePauseWorkout","handleResumeWorkout","handleCompleteWorkout","updatedSession","completedAt","workoutDurationMinutes","caloriesBurned","baseRestTime","rpeMultiplier","fatigueMultiplier","currentExercise","exercises","jsx_runtime_1","jsxs","className","children","Card","CardHeader","CardTitle","jsx","Activity","Badge","variant","Wifi","WifiOff","Brain","CardContent","Button","onClick","disabled","Play","Pause","includes","Square","AlertTriangle","SetInputCard","exercise","setNumber","onSetComplete","length","map","set","index","exports","setWeight","useState","setReps","setRpe","handleSubmit","exerciseId","completed","value","onChange","e","Number","target","step","min","max","default"],"sources":["/workspaces/MyFitHero/src/features/workout/components/SophisticatedWorkoutFlowManager_v2.tsx"],"sourcesContent":["import React, { useState, useEffect, useReducer, useCallback, useRef } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  Play, \n  Pause, \n  Square, \n  SkipForward, \n  RotateCcw, \n  Settings, \n  Brain,\n  Zap,\n  Activity,\n  Timer,\n  Target,\n  TrendingUp,\n  Wifi,\n  WifiOff,\n  Save,\n  AlertTriangle\n} from 'lucide-react';\n\n// Import des types et hooks compatibles avec la base existante\nimport { \n  WorkoutSet, \n  WorkoutSession, \n  Exercise \n} from '@/shared/types/database-mapping';\nimport { useWorkoutSession, useWorkoutSets } from '@/features/workout/hooks/useSupabaseWorkout';\n\n// Types pour la machine d'état sophistiquée\ntype WorkoutState = \n  | 'idle'\n  | 'warming-up' \n  | 'working'\n  | 'resting'\n  | 'transitioning'\n  | 'paused'\n  | 'completed'\n  | 'emergency-stop';\n\ntype WorkoutEvent = \n  | { type: 'START_WARMUP' }\n  | { type: 'BEGIN_EXERCISE'; exerciseId: string }\n  | { type: 'COMPLETE_SET'; setData: Omit<WorkoutSet, 'id' | 'timestamp'> }\n  | { type: 'START_REST'; duration?: number }\n  | { type: 'SKIP_REST' }\n  | { type: 'PAUSE_WORKOUT' }\n  | { type: 'RESUME_WORKOUT' }\n  | { type: 'COMPLETE_WORKOUT' }\n  | { type: 'EMERGENCY_STOP'; reason: string }\n  | { type: 'SYNC_STATE'; remoteState: Partial<WorkoutFlowState> };\n\n// Interface WorkoutPlan simplifié pour la démo\ninterface WorkoutPlan {\n  id: string;\n  name: string;\n  description?: string;\n  exercises: Exercise[];\n  estimatedDuration: number;\n  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  tags: string[];\n}\n\n// État principal du composant\ninterface WorkoutFlowState {\n  // État de base\n  currentState: WorkoutState;\n  sessionId: string | undefined;\n  currentExerciseIndex: number;\n  currentSetNumber: number;\n  \n  // Données de session\n  startTime: Date | undefined;\n  pauseTime: Date | undefined;\n  totalPauseTime: number; // millisecondes\n  \n  // Métriques en temps réel\n  totalVolume: number;\n  totalSets: number;\n  averageRPE: number;\n  estimatedCalories: number;\n  \n  // Paramètres adaptatifs IA\n  fatigueLevel: number; // 0-1\n  performanceScore: number; // 0-1 \n  heartRateZone: number; // 1-5\n  \n  // Préférences utilisateur\n  autoProgressWeight: boolean;\n  smartRestTimers: boolean;\n  realTimeCoaching: boolean;\n  \n  // Support offline\n  isOnline: boolean;\n  pendingChanges: WorkoutSet[];\n  lastSyncTime: Date | undefined;\n  \n  // Configuration\n  workoutPlan: WorkoutPlan | undefined;\n  targetRestTime: number; // secondes\n  \n  // État UI\n  showAnalytics: boolean;\n  showSettings: boolean;\n  \n  // Alertes et notifications\n  emergencyStopReason: string | undefined;\n  coachingMessage: string | undefined;\n}\n\n// Props du composant principal\ninterface WorkoutFlowManagerProps {\n  userId: string;\n  workoutPlan?: WorkoutPlan;\n  onWorkoutComplete?: (session: WorkoutSession) => void;\n  onEmergencyStop?: (reason: string) => void;\n}\n\n// Reducer pour la machine d'état\nfunction workoutFlowReducer(state: WorkoutFlowState, event: WorkoutEvent): WorkoutFlowState {\n  switch (event.type) {\n    case 'START_WARMUP':\n      return {\n        ...state,\n        currentState: 'warming-up',\n        startTime: new Date(),\n        coachingMessage: 'Échauffement en cours. Préparez-vous mentalement.',\n      };\n\n    case 'BEGIN_EXERCISE':\n      return {\n        ...state,\n        currentState: 'working',\n        coachingMessage: `Exercice en cours. Concentrez-vous sur la forme.`,\n      };\n\n    case 'COMPLETE_SET':\n      const newTotalSets = state.totalSets + 1;\n      const newVolume = state.totalVolume + (event.setData.weight * event.setData.reps);\n      const newAverageRPE = event.setData.rpe \n        ? ((state.averageRPE * state.totalSets) + event.setData.rpe) / newTotalSets\n        : state.averageRPE;\n\n      return {\n        ...state,\n        currentSetNumber: state.currentSetNumber + 1,\n        totalSets: newTotalSets,\n        totalVolume: newVolume,\n        averageRPE: newAverageRPE,\n        estimatedCalories: state.estimatedCalories + Math.round(newVolume * 0.1), // Formule approximative\n        coachingMessage: `Set complété ! Volume: ${newVolume.toFixed(1)}kg`,\n      };\n\n    case 'START_REST':\n      return {\n        ...state,\n        currentState: 'resting',\n        targetRestTime: event.duration || state.targetRestTime,\n        coachingMessage: 'Temps de repos. Hydratez-vous et préparez le prochain set.',\n      };\n\n    case 'SKIP_REST':\n      return {\n        ...state,\n        currentState: 'working',\n        coachingMessage: 'Repos écourté. Assurez-vous d\\'être prêt.',\n      };\n\n    case 'PAUSE_WORKOUT':\n      return {\n        ...state,\n        currentState: 'paused',\n        pauseTime: new Date(),\n        coachingMessage: 'Séance en pause. Prenez votre temps.',\n      };\n\n    case 'RESUME_WORKOUT':\n      const pauseDuration = state.pauseTime ? Date.now() - state.pauseTime.getTime() : 0;\n      return {\n        ...state,\n        currentState: 'working',\n        pauseTime: null,\n        totalPauseTime: state.totalPauseTime + pauseDuration,\n        coachingMessage: 'Reprise de la séance. Concentrez-vous !',\n      };\n\n    case 'COMPLETE_WORKOUT':\n      return {\n        ...state,\n        currentState: 'completed',\n        coachingMessage: 'Félicitations ! Séance terminée avec succès.',\n      };\n\n    case 'EMERGENCY_STOP':\n      return {\n        ...state,\n        currentState: 'emergency-stop',\n        emergencyStopReason: event.reason,\n        coachingMessage: `Arrêt d'urgence: ${event.reason}`,\n      };\n\n    case 'SYNC_STATE':\n      return {\n        ...state,\n        ...event.remoteState,\n        lastSyncTime: new Date(),\n        isOnline: true,\n      };\n\n    default:\n      return state;\n  }\n}\n\n// État initial\nconst initialState: WorkoutFlowState = {\n  currentState: 'idle',\n  sessionId: null,\n  currentExerciseIndex: 0,\n  currentSetNumber: 1,\n  startTime: null,\n  pauseTime: null,\n  totalPauseTime: 0,\n  totalVolume: 0,\n  totalSets: 0,\n  averageRPE: 0,\n  estimatedCalories: 0,\n  fatigueLevel: 0,\n  performanceScore: 1,\n  heartRateZone: 2,\n  autoProgressWeight: true,\n  smartRestTimers: true,\n  realTimeCoaching: true,\n  isOnline: navigator.onLine,\n  pendingChanges: [],\n  lastSyncTime: null,\n  workoutPlan: null,\n  targetRestTime: 90,\n  showAnalytics: false,\n  showSettings: false,\n  emergencyStopReason: null,\n  coachingMessage: null,\n};\n\n/**\n * SophisticatedWorkoutFlowManager - Version Compatible Base Existante\n * \n * Gestionnaire sophistiqué de flux d'entraînement avec :\n * - Machine d'état avancée\n * - Synchronisation temps réel avec Supabase\n * - Support offline avec sync différée\n * - Analytics adaptatifs IA\n * - Interface utilisateur intuitive\n */\nexport const SophisticatedWorkoutFlowManager: React.FC<WorkoutFlowManagerProps> = ({\n  userId,\n  workoutPlan,\n  onWorkoutComplete,\n  onEmergencyStop,\n}) => {\n  // État local avec machine d'état\n  const [state, dispatch] = useReducer(workoutFlowReducer, {\n    ...initialState,\n    workoutPlan: workoutPlan || null,\n  });\n\n  // Hooks Supabase pour la gestion des données\n  const { \n    session, \n    loading: sessionLoading, \n    error: sessionError,\n    updateSession,\n    createSession \n  } = useWorkoutSession(state.sessionId || undefined);\n\n  const { \n    sets, \n    loading: setsLoading, \n    error: setsError,\n    addSet,\n    updateSet \n  } = useWorkoutSets(state.sessionId || undefined);\n\n  // Détection du statut en ligne\n  useEffect(() => {\n    const handleOnline = () => dispatch({ type: 'SYNC_STATE', remoteState: { isOnline: true } });\n    const handleOffline = () => dispatch({ type: 'SYNC_STATE', remoteState: { isOnline: false } });\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  // Gestionnaires d'événements\n  const handleStartWorkout = useCallback(async () => {\n    try {\n      const newSession = await createSession({\n        userId,\n        workoutPlanId: workoutPlan?.id,\n        name: workoutPlan?.name || 'Séance personnalisée',\n        description: workoutPlan?.description,\n        status: 'active',\n        autoProgressWeight: state.autoProgressWeight,\n        smartRestTimers: state.smartRestTimers,\n        realTimeCoaching: state.realTimeCoaching,\n      });\n\n      if (newSession) {\n        dispatch({ \n          type: 'SYNC_STATE', \n          remoteState: { sessionId: newSession.id } \n        });\n        dispatch({ type: 'START_WARMUP' });\n      }\n    } catch (error: any) {\n      console.error('Erreur lors du démarrage:', error);\n    }\n  }, [userId, workoutPlan, state.autoProgressWeight, state.smartRestTimers, state.realTimeCoaching, createSession]);\n\n  const handleCompleteSet = useCallback(async (setData: Omit<WorkoutSet, 'id' | 'timestamp'>) => {\n    if (!state.sessionId) return;\n\n    try {\n      // S'assurer que sessionId est défini\n      const completeSetData: Omit<WorkoutSet, 'id' | 'timestamp'> = {\n        ...setData,\n        sessionId: state.sessionId,\n      };\n\n      await addSet(completeSetData);\n      dispatch({ type: 'COMPLETE_SET', setData: completeSetData });\n      \n      // Démarrer le repos automatiquement\n      if (state.smartRestTimers) {\n        const restTime = calculateSmartRestTime(setData, state.fatigueLevel);\n        dispatch({ type: 'START_REST', duration: restTime });\n      }\n    } catch (error: any) {\n      console.error('Erreur lors de l\\'ajout du set:', error);\n    }\n  }, [state.sessionId, state.smartRestTimers, state.fatigueLevel, addSet]);\n\n  const handlePauseWorkout = useCallback(() => {\n    dispatch({ type: 'PAUSE_WORKOUT' });\n  }, []);\n\n  const handleResumeWorkout = useCallback(() => {\n    dispatch({ type: 'RESUME_WORKOUT' });\n  }, []);\n\n  const handleCompleteWorkout = useCallback(async () => {\n    if (!session) return;\n\n    try {\n      const updatedSession = await updateSession({\n        status: 'completed',\n        completedAt: new Date(),\n        totalVolume: state.totalVolume,\n        workoutDurationMinutes: state.startTime \n          ? Math.round((Date.now() - state.startTime.getTime() - state.totalPauseTime) / 60000)\n          : 0,\n        caloriesBurned: state.estimatedCalories,\n        performanceScore: state.performanceScore,\n        fatigueLevel: state.fatigueLevel,\n      });\n\n      dispatch({ type: 'COMPLETE_WORKOUT' });\n      \n      if (onWorkoutComplete) {\n        // updatedSession might be void, so use session as fallback\n        onWorkoutComplete(session);\n      }\n    } catch (error: any) {\n      console.error('Erreur lors de la finalisation:', error);\n    }\n  }, [session, updateSession, state, onWorkoutComplete]);\n\n  // Calcul du repos intelligent basé sur l'IA\n  const calculateSmartRestTime = (setData: Omit<WorkoutSet, 'id' | 'timestamp'>, fatigueLevel: number): number => {\n    const baseRestTime = 90; // secondes\n    const rpeMultiplier = setData.rpe ? (setData.rpe / 10) : 0.5;\n    const fatigueMultiplier = 1 + fatigueLevel;\n    \n    return Math.round(baseRestTime * rpeMultiplier * fatigueMultiplier);\n  };\n\n  // Exercice actuel\n  const currentExercise = state.workoutPlan?.exercises[state.currentExerciseIndex];\n\n  // Rendu de l'interface\n  return (\n    <div className=\"w-full max-w-4xl mx-auto space-y-6 p-4\">\n      {/* En-tête avec statut */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n          <div>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Activity className=\"h-6 w-6\" />\n              {state.workoutPlan?.name || 'Séance personnalisée'}\n            </CardTitle>\n            <p className=\"text-sm text-muted-foreground\">\n              État: {state.currentState} | Volume: {state.totalVolume.toFixed(1)}kg\n            </p>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <Badge variant={state.isOnline ? 'default' : 'destructive'}>\n              {state.isOnline ? <Wifi className=\"h-4 w-4\" /> : <WifiOff className=\"h-4 w-4\" />}\n              {state.isOnline ? 'En ligne' : 'Hors ligne'}\n            </Badge>\n            \n            {state.realTimeCoaching && (\n              <Badge variant=\"secondary\">\n                <Brain className=\"h-4 w-4 mr-1\" />\n                IA Active\n              </Badge>\n            )}\n          </div>\n        </CardHeader>\n\n        <CardContent>\n          {/* Message de coaching IA */}\n          {state.coachingMessage && (\n            <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n              <p className=\"text-sm text-blue-800 flex items-center gap-2\">\n                <Brain className=\"h-4 w-4\" />\n                {state.coachingMessage}\n              </p>\n            </div>\n          )}\n\n          {/* Contrôles principaux */}\n          <div className=\"flex gap-2 flex-wrap\">\n            {state.currentState === 'idle' && (\n              <Button onClick={handleStartWorkout} disabled={sessionLoading}>\n                <Play className=\"h-4 w-4 mr-2\" />\n                Démarrer\n              </Button>\n            )}\n\n            {state.currentState === 'working' && (\n              <Button onClick={handlePauseWorkout}>\n                <Pause className=\"h-4 w-4 mr-2\" />\n                Pause\n              </Button>\n            )}\n\n            {state.currentState === 'paused' && (\n              <Button onClick={handleResumeWorkout}>\n                <Play className=\"h-4 w-4 mr-2\" />\n                Reprendre\n              </Button>\n            )}\n\n            {['working', 'resting', 'paused'].includes(state.currentState) && (\n              <Button onClick={handleCompleteWorkout} variant=\"outline\">\n                <Square className=\"h-4 w-4 mr-2\" />\n                Terminer\n              </Button>\n            )}\n\n            <Button \n              variant=\"outline\" \n              onClick={() => dispatch({ type: 'EMERGENCY_STOP', reason: 'Arrêt utilisateur' })}\n            >\n              <AlertTriangle className=\"h-4 w-4 mr-2\" />\n              Urgence\n            </Button>\n          </div>\n\n          {/* Informations sur l'exercice actuel */}\n          {currentExercise && (\n            <div className=\"mt-4 p-4 border rounded-lg\">\n              <h3 className=\"font-semibold mb-2\">{currentExercise.name}</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                <div>\n                  <span className=\"text-muted-foreground\">Set:</span>\n                  <span className=\"ml-2 font-medium\">{state.currentSetNumber}</span>\n                </div>\n                <div>\n                  <span className=\"text-muted-foreground\">Repos cible:</span>\n                  <span className=\"ml-2 font-medium\">{state.targetRestTime}s</span>\n                </div>\n                <div>\n                  <span className=\"text-muted-foreground\">Type:</span>\n                  <span className=\"ml-2 font-medium\">{currentExercise.type}</span>\n                </div>\n                <div>\n                  <span className=\"text-muted-foreground\">RPE moy:</span>\n                  <span className=\"ml-2 font-medium\">{state.averageRPE.toFixed(1)}</span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Métriques temps réel */}\n          <div className=\"mt-4 grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{state.totalSets}</div>\n              <div className=\"text-sm text-muted-foreground\">Sets</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{state.totalVolume.toFixed(0)}</div>\n              <div className=\"text-sm text-muted-foreground\">kg</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-orange-600\">{state.estimatedCalories}</div>\n              <div className=\"text-sm text-muted-foreground\">kcal</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">{(state.performanceScore * 100).toFixed(0)}%</div>\n              <div className=\"text-sm text-muted-foreground\">Performance</div>\n            </div>\n          </div>\n\n          {/* Erreurs */}\n          {(sessionError || setsError) && (\n            <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n              <p className=\"text-sm text-red-800\">\n                Erreur: {sessionError || setsError}\n              </p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Interface de saisie des sets */}\n      {state.currentState === 'working' && currentExercise && (\n        <SetInputCard \n          exercise={currentExercise}\n          setNumber={state.currentSetNumber}\n          onSetComplete={handleCompleteSet}\n        />\n      )}\n\n      {/* Historique des sets */}\n      {sets.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Historique des Sets</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              {sets.map((set, index) => (\n                <div key={set.id} className=\"flex justify-between items-center p-2 border rounded\">\n                  <span>Set {index + 1}</span>\n                  <span>{set.weight}kg × {set.reps} reps</span>\n                  {set.rpe && <Badge variant=\"outline\">RPE {set.rpe}</Badge>}\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n\n// Composant pour la saisie des sets\ninterface SetInputCardProps {\n  exercise: Exercise;\n  setNumber: number;\n  onSetComplete: (setData: Omit<WorkoutSet, 'id' | 'timestamp'>) => void;\n}\n\nconst SetInputCard: React.FC<SetInputCardProps> = ({ exercise, setNumber, onSetComplete }) => {\n  const [weight, setWeight] = useState<number>(0);\n  const [reps, setReps] = useState<number>(0);\n  const [rpe, setRpe] = useState<number>(5);\n\n  const handleSubmit = () => {\n    onSetComplete({\n      sessionId: '', // Sera rempli par le parent\n      exerciseId: exercise.id,\n      setNumber,\n      weight,\n      reps,\n      rpe,\n      completed: true,\n    });\n    \n    // Reset pour le prochain set\n    setReps(0);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Set {setNumber} - {exercise.name}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-1\">Poids (kg)</label>\n            <input\n              type=\"number\"\n              value={weight}\n              onChange={(e) => setWeight(Number(e.target.value))}\n              className=\"w-full px-3 py-2 border rounded-md\"\n              step=\"0.5\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium mb-1\">Répétitions</label>\n            <input\n              type=\"number\"\n              value={reps}\n              onChange={(e) => setReps(Number(e.target.value))}\n              className=\"w-full px-3 py-2 border rounded-md\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium mb-1\">RPE (1-10)</label>\n            <input\n              type=\"number\"\n              value={rpe}\n              onChange={(e) => setRpe(Number(e.target.value))}\n              className=\"w-full px-3 py-2 border rounded-md\"\n              min=\"1\"\n              max=\"10\"\n            />\n          </div>\n        </div>\n        \n        <Button \n          onClick={handleSubmit} \n          className=\"w-full mt-4\"\n          disabled={weight === 0 || reps === 0}\n        >\n          Valider le Set\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SophisticatedWorkoutFlowManager;"],"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","ignoreList":[]}