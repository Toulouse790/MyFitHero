c643235b2b526dd2a59e82f23d33d7a6
"use strict";

/* istanbul ignore next */
function cov_4vdny8srm() {
  var path = "/workspaces/MyFitHero/src/core/security/security.framework.ts";
  var hash = "4ded0487bbaa1ec7f383e6641f591dba190ab8e9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/core/security/security.framework.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 137
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 36
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 49
        }
      },
      "6": {
        start: {
          line: 9,
          column: 14
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "7": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "8": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 57
        }
      },
      "9": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 20,
          column: 11
        }
      },
      "10": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 27,
          column: 11
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 54
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 65
        }
      },
      "14": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 42
        }
      },
      "15": {
        start: {
          line: 38,
          column: 74
        },
        end: {
          line: 38,
          column: 81
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "17": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 87
        }
      },
      "18": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "19": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 77
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "21": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "22": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 88
        }
      },
      "23": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 55
        }
      },
      "24": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 64
        }
      },
      "25": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "26": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 65,
          column: 92
        }
      },
      "27": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 64
        }
      },
      "28": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 55
        }
      },
      "29": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 54
        }
      },
      "30": {
        start: {
          line: 75,
          column: 22
        },
        end: {
          line: 75,
          column: 44
        }
      },
      "31": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 45
        }
      },
      "32": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 86
        }
      },
      "33": {
        start: {
          line: 77,
          column: 41
        },
        end: {
          line: 77,
          column: 75
        }
      },
      "34": {
        start: {
          line: 80,
          column: 25
        },
        end: {
          line: 80,
          column: 27
        }
      },
      "35": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 81,
          column: 21
        }
      },
      "36": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "37": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 23
        }
      },
      "38": {
        start: {
          line: 86,
          column: 13
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "39": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 23
        }
      },
      "40": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 73
        }
      },
      "41": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 94,
          column: 23
        }
      },
      "42": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 23
        }
      },
      "43": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 96,
          column: 23
        }
      },
      "44": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 23
        }
      },
      "45": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 98,
          column: 23
        }
      },
      "46": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 23
        }
      },
      "47": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 100,
          column: 23
        }
      },
      "48": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 23
        }
      },
      "49": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "50": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 56
        }
      },
      "51": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 23
        }
      },
      "52": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "53": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 62
        }
      },
      "54": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 23
        }
      },
      "55": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 59
        }
      },
      "56": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 64
        }
      },
      "57": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 123,
          column: 10
        }
      },
      "58": {
        start: {
          line: 126,
          column: 22
        },
        end: {
          line: 126,
          column: 50
        }
      },
      "59": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 140,
          column: 21
        }
      },
      "60": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "61": {
        start: {
          line: 145,
          column: 34
        },
        end: {
          line: 145,
          column: 60
        }
      },
      "62": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 150,
          column: 14
        }
      },
      "63": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "64": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 158,
          column: 18
        }
      },
      "65": {
        start: {
          line: 157,
          column: 59
        },
        end: {
          line: 157,
          column: 94
        }
      },
      "66": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 164,
          column: 14
        }
      },
      "67": {
        start: {
          line: 169,
          column: 25
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "68": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "69": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 52
        }
      },
      "70": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 54
        }
      },
      "71": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "72": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 41
        }
      },
      "73": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 30
        }
      },
      "74": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 45
        }
      },
      "75": {
        start: {
          line: 194,
          column: 24
        },
        end: {
          line: 194,
          column: 52
        }
      },
      "76": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "77": {
        start: {
          line: 197,
          column: 30
        },
        end: {
          line: 197,
          column: 44
        }
      },
      "78": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 66
        }
      },
      "79": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 203,
          column: 14
        }
      },
      "80": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "81": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 210,
          column: 14
        }
      },
      "82": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 24
        }
      },
      "83": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 46
        }
      },
      "84": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 218,
          column: 10
        }
      },
      "85": {
        start: {
          line: 223,
          column: 26
        },
        end: {
          line: 223,
          column: 51
        }
      },
      "86": {
        start: {
          line: 224,
          column: 35
        },
        end: {
          line: 224,
          column: 58
        }
      },
      "87": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 98
        }
      },
      "88": {
        start: {
          line: 225,
          column: 38
        },
        end: {
          line: 225,
          column: 96
        }
      },
      "89": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 83
        }
      },
      "90": {
        start: {
          line: 232,
          column: 32
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "91": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 64
        }
      },
      "92": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 46
        }
      },
      "93": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 81
        }
      },
      "94": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "95": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 253,
          column: 15
        }
      },
      "96": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 67
        }
      },
      "97": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "98": {
        start: {
          line: 261,
          column: 30
        },
        end: {
          line: 261,
          column: 83
        }
      },
      "99": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 37
        }
      },
      "100": {
        start: {
          line: 264,
          column: 31
        },
        end: {
          line: 264,
          column: 52
        }
      },
      "101": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 74
        }
      },
      "102": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 63
        }
      },
      "103": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 24
        }
      },
      "104": {
        start: {
          line: 276,
          column: 32
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "105": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 43
        }
      },
      "106": {
        start: {
          line: 284,
          column: 0
        },
        end: {
          line: 284,
          column: 46
        }
      },
      "107": {
        start: {
          line: 286,
          column: 0
        },
        end: {
          line: 296,
          column: 3
        }
      },
      "108": {
        start: {
          line: 297,
          column: 0
        },
        end: {
          line: 310,
          column: 3
        }
      },
      "109": {
        start: {
          line: 311,
          column: 0
        },
        end: {
          line: 320,
          column: 3
        }
      },
      "110": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 343,
          column: 6
        }
      },
      "111": {
        start: {
          line: 324,
          column: 25
        },
        end: {
          line: 324,
          column: 56
        }
      },
      "112": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "113": {
        start: {
          line: 327,
          column: 27
        },
        end: {
          line: 327,
          column: 44
        }
      },
      "114": {
        start: {
          line: 328,
          column: 34
        },
        end: {
          line: 331,
          column: 14
        }
      },
      "115": {
        start: {
          line: 329,
          column: 43
        },
        end: {
          line: 329,
          column: 64
        }
      },
      "116": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 330,
          column: 78
        }
      },
      "117": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "118": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 338,
          column: 19
        }
      },
      "119": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 28
        }
      },
      "120": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 70
        }
      },
      "121": {
        start: {
          line: 346,
          column: 0
        },
        end: {
          line: 346,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 25
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 39
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 31
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 40
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 37
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 77,
            column: 34
          }
        },
        loc: {
          start: {
            line: 77,
            column: 41
          },
          end: {
            line: 77,
            column: 75
          }
        },
        line: 77
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 31
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 79
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 25
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 114
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 18
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 125
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 48
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 143
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 157,
            column: 45
          },
          end: {
            line: 157,
            column: 46
          }
        },
        loc: {
          start: {
            line: 157,
            column: 59
          },
          end: {
            line: 157,
            column: 94
          }
        },
        line: 157
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 28
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 168
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 69
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 191
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 50
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 221
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 225,
            column: 30
          },
          end: {
            line: 225,
            column: 31
          }
        },
        loc: {
          start: {
            line: 225,
            column: 38
          },
          end: {
            line: 225,
            column: 96
          }
        },
        line: 225
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 24
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 228
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        loc: {
          start: {
            line: 231,
            column: 31
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 231
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        },
        loc: {
          start: {
            line: 238,
            column: 18
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 238
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 19
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 242
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        loc: {
          start: {
            line: 246,
            column: 45
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 246
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 28
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 259
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 25
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 271
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 29
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 275
      },
      "25": {
        name: "withSecurity",
        decl: {
          start: {
            line: 322,
            column: 9
          },
          end: {
            line: 322,
            column: 21
          }
        },
        loc: {
          start: {
            line: 322,
            column: 61
          },
          end: {
            line: 344,
            column: 1
          }
        },
        line: 322
      },
      "26": {
        name: "SecurityWrapper",
        decl: {
          start: {
            line: 323,
            column: 20
          },
          end: {
            line: 323,
            column: 35
          }
        },
        loc: {
          start: {
            line: 323,
            column: 43
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 323
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 328,
            column: 60
          },
          end: {
            line: 328,
            column: 61
          }
        },
        loc: {
          start: {
            line: 328,
            column: 74
          },
          end: {
            line: 331,
            column: 13
          }
        },
        line: 328
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 37,
            column: 37
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 33
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 35
          },
          end: {
            line: 38,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 47
          },
          end: {
            line: 38,
            column: 51
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 53
          },
          end: {
            line: 38,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 67
          },
          end: {
            line: 38,
            column: 69
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 26
          },
          end: {
            line: 49,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 51
          },
          end: {
            line: 49,
            column: 62
          }
        }, {
          start: {
            line: 49,
            column: 65
          },
          end: {
            line: 49,
            column: 91
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 74,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 33
          },
          end: {
            line: 74,
            column: 35
          }
        }],
        line: 74
      },
      "12": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: 86,
            column: 13
          },
          end: {
            line: 91,
            column: 9
          }
        }],
        line: 83
      },
      "13": {
        loc: {
          start: {
            line: 86,
            column: 13
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 13
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: 89,
            column: 13
          },
          end: {
            line: 91,
            column: 9
          }
        }],
        line: 86
      },
      "14": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 94,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 94,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "15": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 96,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 96,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "16": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 98,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 98,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "17": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 100,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 100,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "18": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "19": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "20": {
        loc: {
          start: {
            line: 110,
            column: 24
          },
          end: {
            line: 110,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 24
          },
          end: {
            line: 110,
            column: 34
          }
        }, {
          start: {
            line: 110,
            column: 38
          },
          end: {
            line: 110,
            column: 59
          }
        }],
        line: 110
      },
      "21": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "22": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: 183,
            column: 13
          },
          end: {
            line: 185,
            column: 9
          }
        }],
        line: 180
      },
      "23": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "24": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 41
          }
        }, {
          start: {
            line: 187,
            column: 45
          },
          end: {
            line: 187,
            column: 70
          }
        }],
        line: 187
      },
      "25": {
        loc: {
          start: {
            line: 191,
            column: 31
          },
          end: {
            line: 191,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 191,
            column: 45
          },
          end: {
            line: 191,
            column: 48
          }
        }],
        line: 191
      },
      "26": {
        loc: {
          start: {
            line: 191,
            column: 50
          },
          end: {
            line: 191,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 191,
            column: 61
          },
          end: {
            line: 191,
            column: 67
          }
        }],
        line: 191
      },
      "27": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "28": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 20
          }
        }, {
          start: {
            line: 195,
            column: 24
          },
          end: {
            line: 195,
            column: 47
          }
        }],
        line: 195
      },
      "29": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "30": {
        loc: {
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 229,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 229,
            column: 50
          }
        }, {
          start: {
            line: 229,
            column: 54
          },
          end: {
            line: 229,
            column: 82
          }
        }],
        line: 229
      },
      "31": {
        loc: {
          start: {
            line: 244,
            column: 15
          },
          end: {
            line: 244,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 15
          },
          end: {
            line: 244,
            column: 50
          }
        }, {
          start: {
            line: 244,
            column: 54
          },
          end: {
            line: 244,
            column: 80
          }
        }],
        line: 244
      },
      "32": {
        loc: {
          start: {
            line: 261,
            column: 41
          },
          end: {
            line: 261,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 41
          },
          end: {
            line: 261,
            column: 74
          }
        }, {
          start: {
            line: 261,
            column: 78
          },
          end: {
            line: 261,
            column: 82
          }
        }],
        line: 261
      },
      "33": {
        loc: {
          start: {
            line: 281,
            column: 15
          },
          end: {
            line: 281,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 15
          },
          end: {
            line: 281,
            column: 36
          }
        }, {
          start: {
            line: 281,
            column: 40
          },
          end: {
            line: 281,
            column: 42
          }
        }],
        line: 281
      },
      "34": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "35": {
        loc: {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/core/security/security.framework.ts",
      mappings: ";;;;;;AA4WA,oCA6BC;AAzYD,kDAA0B;AAC1B,6BAAwB;AACxB,0DAAkC;AAClC,0DAAiC;AAEjC,wCAAwC;AACxC,MAAa,iBAAiB;IAI5B;QAFQ;;;;;WAAsB;QA+L9B,mBAAmB;QACX;;;;mBAAiB,IAAI,GAAG,EAAgD;WAAC;QA7L/E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAChD,CAAC;IAEM,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;YAChC,iBAAiB,CAAC,QAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAC;QACvD,CAAC;QACD,OAAO,iBAAiB,CAAC,QAAQ,CAAC;IACpC,CAAC;IAED,qCAAqC;IAC9B,aAAa,CAAC,KAAa,EAAE,UAIhC,EAAE;QACJ,MAAM,EAAE,SAAS,GAAG,KAAK,EAAE,SAAS,GAAG,IAAI,EAAE,WAAW,GAAG,EAAE,EAAE,GAAG,OAAO,CAAC;QAE1E,oBAAoB;QACpB,IAAI,KAAK,CAAC,MAAM,GAAG,SAAS,EAAE,CAAC;YAC7B,MAAM,IAAI,KAAK,CAAC,mCAAmC,SAAS,aAAa,CAAC,CAAC;QAC7E,CAAC;QAED,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,sBAAsB;YACtB,OAAO,mBAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;QACzD,CAAC;QAED,4BAA4B;QAC5B,OAAO,mBAAS,CAAC,QAAQ,CAAC,KAAK,EAAE;YAC/B,YAAY,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC;YAC/E,YAAY,EAAE,CAAC,OAAO,CAAC;SACxB,CAAC,CAAC;IACL,CAAC;IAED,kDAAkD;IAC3C,oBAAoB,CAAC,IAAY;QACtC,IAAI,CAAC;YACH,OAAO,mBAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC;QACnE,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;YAC3C,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACtD,CAAC;IACH,CAAC;IAEM,oBAAoB,CAAC,aAAqB;QAC/C,IAAI,CAAC;YACH,MAAM,KAAK,GAAG,mBAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACtE,OAAO,KAAK,CAAC,QAAQ,CAAC,mBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;YAC3C,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAED,2DAA2D;IACpD,mBAAmB,CAAC,SAAiB,EAAE;QAC5C,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACrC,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChF,CAAC;IAEM,gBAAgB,CAAC,QAAgB;QAKtC,MAAM,QAAQ,GAAa,EAAE,CAAC;QAC9B,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,eAAe;QACf,IAAI,QAAQ,CAAC,MAAM,IAAI,EAAE,EAAE,CAAC;YAC1B,KAAK,IAAI,CAAC,CAAC;QACb,CAAC;aAAM,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;YAChC,KAAK,IAAI,CAAC,CAAC;QACb,CAAC;aAAM,CAAC;YACN,QAAQ,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;QAC/D,CAAC;QAED,oBAAoB;QACpB,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YAAE,KAAK,IAAI,CAAC,CAAC;QACvC,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YAAE,KAAK,IAAI,CAAC,CAAC;QACvC,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YAAE,KAAK,IAAI,CAAC,CAAC;QACvC,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC;YAAE,KAAK,IAAI,CAAC,CAAC;QAE9C,kBAAkB;QAClB,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC/B,QAAQ,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YAC5C,KAAK,IAAI,CAAC,CAAC;QACb,CAAC;QAED,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC;YACpC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;YAClD,KAAK,IAAI,CAAC,CAAC;QACb,CAAC;QAED,MAAM,OAAO,GAAG,KAAK,IAAI,CAAC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC;QAEpD,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,QAAQ,EAAE,CAAC;IAC1D,CAAC;IAED,2CAA2C;IACpC,kBAAkB;QACvB,OAAO;YACL,yBAAyB,EAAE,IAAI,CAAC,WAAW,EAAE;YAC7C,2BAA2B,EAAE,8CAA8C;YAC3E,wBAAwB,EAAE,SAAS;YACnC,iBAAiB,EAAE,MAAM;YACzB,kBAAkB,EAAE,eAAe;YACnC,iBAAiB,EAAE,iCAAiC;YACpD,oBAAoB,EAAE,0CAA0C;SACjE,CAAC;IACJ,CAAC;IAEO,WAAW;QACjB,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;QAE3C,OAAO;YACL,oBAAoB;YACpB,4BAA4B,KAAK,4BAA4B;YAC7D,+DAA+D;YAC/D,2CAA2C;YAC3C,mCAAmC;YACnC,uEAAuE;YACvE,kBAAkB;YAClB,mBAAmB;YACnB,iBAAiB;YACjB,oBAAoB;YACpB,wBAAwB;YACxB,2BAA2B;SAC5B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACf,CAAC;IAED,qDAAqD;IAC9C,qBAAqB,CAAC,IAAS,EAAE,cAA2B;QAKjE,IAAI,CAAC;YACH,MAAM,aAAa,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjD,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE,EAAE;aACX,CAAC;QACJ,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,IAAI,KAAK,YAAY,OAAC,CAAC,QAAQ,EAAE,CAAC;gBAChC,OAAO;oBACL,OAAO,EAAE,KAAK;oBACd,IAAI,EAAE,IAAI;oBACV,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;iBAC5E,CAAC;YACJ,CAAC;YACD,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,CAAC,0BAA0B,CAAC;aACrC,CAAC;QACJ,CAAC;IACH,CAAC;IAED,gDAAgD;IACzC,gBAAgB,CAAC,KAAoB;QAC1C,MAAM,QAAQ,GAAG;YACf,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,SAAS,EAAE,KAAK,CAAC,IAAI;YACrB,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,MAAM,EAAE,KAAK,CAAC,MAAM;YACpB,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE;YAC7B,SAAS,EAAE,SAAS,CAAC,SAAS;YAC9B,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE;SAC/B,CAAC;QAEF,qDAAqD;QACrD,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;QAC5C,CAAC;QAED,0DAA0D;QAC1D,IAAI,KAAK,CAAC,QAAQ,KAAK,UAAU,IAAI,KAAK,CAAC,QAAQ,KAAK,MAAM,EAAE,CAAC;YAC/D,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IAKM,cAAc,CAAC,UAAkB,EAAE,cAAsB,GAAG,EAAE,WAAmB,MAAM;QAK5F,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,MAAM,GAAG,GAAG,aAAa,UAAU,EAAE,CAAC;QACtC,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAE7C,IAAI,CAAC,OAAO,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;YACxC,yBAAyB;YACzB,MAAM,SAAS,GAAG,GAAG,GAAG,QAAQ,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;YACtD,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,SAAS,EAAE,WAAW,GAAG,CAAC;gBAC1B,SAAS;aACV,CAAC;QACJ,CAAC;QAED,IAAI,OAAO,CAAC,KAAK,IAAI,WAAW,EAAE,CAAC;YACjC,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,SAAS,EAAE,CAAC;gBACZ,SAAS,EAAE,OAAO,CAAC,SAAS;aAC7B,CAAC;QACJ,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC;QAChB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAEtC,OAAO;YACL,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,WAAW,GAAG,OAAO,CAAC,KAAK;YACtC,SAAS,EAAE,OAAO,CAAC,SAAS;SAC7B,CAAC;IACJ,CAAC;IAED,sCAAsC;IAC/B,mBAAmB,CAAC,MAAc,EAAE,QAAgB,EAAE,MAAc;QACzE,6CAA6C;QAC7C,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC5C,MAAM,kBAAkB,GAAG,GAAG,QAAQ,IAAI,MAAM,EAAE,CAAC;QAEnD,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAC3D,CAAC;IACJ,CAAC;IAED,iBAAiB;IACT,iBAAiB;QACvB,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;IAC7E,CAAC;IAEO,gBAAgB,CAAC,QAAgB;QACvC,MAAM,eAAe,GAAG;YACtB,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ;YACrD,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ;SACvD,CAAC;QACF,OAAO,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;IAC1D,CAAC;IAEO,WAAW;QACjB,8CAA8C;QAC9C,OAAO,8BAA8B,CAAC;IACxC,CAAC;IAEO,YAAY;QAClB,kCAAkC;QAClC,OAAO,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC3E,CAAC;IAEO,KAAK,CAAC,wBAAwB,CAAC,QAAa;QAClD,IAAI,CAAC;YACH,uDAAuD;YACvD,MAAM,KAAK,CAAC,sBAAsB,EAAE;gBAClC,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;gBAC/C,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;aAC/B,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC;IACH,CAAC;IAEO,aAAa,CAAC,QAAa;QACjC,IAAI,CAAC;YACH,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,CAAC;YACxE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEzB,6BAA6B;YAC7B,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;YACzC,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QAChE,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAEO,YAAY,CAAC,MAAc;QACjC,uCAAuC;QACvC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe;IAClC,CAAC;IAEO,kBAAkB,CAAC,IAAY;QACrC,MAAM,eAAe,GAA6B;YAChD,OAAO,EAAE,CAAC,KAAK,CAAC;YAChB,MAAM,EAAE,CAAC,cAAc,EAAE,gBAAgB,EAAE,YAAY,EAAE,aAAa,CAAC;YACvE,SAAS,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,CAAC;SACpE,CAAC;QAEF,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;CACF;AApTD,8CAoTC;AAUD,8BAA8B;AACjB,QAAA,iBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC;IACxC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;IACrB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;IACzB,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IACrC,UAAU,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IACvC,WAAW,EAAE,OAAC,CAAC,MAAM,CAAC;QACpB,KAAK,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACrC,QAAQ,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9B,aAAa,EAAE,OAAC,CAAC,OAAO,EAAE;KAC3B,CAAC,CAAC,QAAQ,EAAE;CACd,CAAC,CAAC;AAEU,QAAA,aAAa,GAAG,OAAC,CAAC,MAAM,CAAC;IACpC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;IAChC,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;IAC1B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IAChC,IAAI,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;IAC7D,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,cAAc;IAC1D,SAAS,EAAE,OAAC,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,CAAC;QAC1B,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;QAChC,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;QAChC,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE;QAChD,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE;QAClD,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE;KAC/C,CAAC,CAAC;CACJ,CAAC,CAAC;AAEU,QAAA,oBAAoB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC3C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;IAChC,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;IAC1B,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IACrC,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;IACtC,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;IACpC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;IAClC,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;IAChC,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;CAC7C,CAAC,CAAC;AAEH,2CAA2C;AAC3C,SAAgB,YAAY,CAC1B,gBAAwC,EACxC,mBAA8B;IAE9B,OAAO,SAAS,eAAe,CAAC,KAAQ;QACtC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,WAAW,EAAE,CAAC;QAEjD,gCAAgC;QAChC,IAAI,mBAAmB,EAAE,CAAC;YACxB,MAAM,MAAM,GAAG,iBAAiB,CAAC,CAAC,wBAAwB;YAC1D,MAAM,aAAa,GAAG,mBAAmB,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;gBAC3D,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjD,OAAO,QAAQ,CAAC,mBAAmB,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,EAAE,CAAC;gBACnB,QAAQ,CAAC,gBAAgB,CAAC;oBACxB,IAAI,EAAE,uBAAuB;oBAC7B,QAAQ,EAAE,QAAQ;oBAClB,MAAM;oBACN,OAAO,EAAE,EAAE,mBAAmB,EAAE,SAAS,EAAE,gBAAgB,CAAC,IAAI,EAAE;iBACnE,CAAC,CAAC;gBAEH,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QAED,OAAO,eAAK,CAAC,aAAa,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;IACtD,CAAC,CAAC;AACJ,CAAC;AAED,4BAA4B;AACf,QAAA,QAAQ,GAAG,iBAAiB,CAAC,WAAW,EAAE,CAAC",
      names: [],
      sources: ["/workspaces/MyFitHero/src/core/security/security.framework.ts"],
      sourcesContent: ["import React from 'react';\nimport { z } from 'zod';\nimport DOMPurify from 'dompurify';\nimport CryptoJS from 'crypto-js';\n\n// \uD83D\uDEE1\uFE0F OWASP Top 10 Compliance Framework\nexport class SecurityFramework {\n  private static instance: SecurityFramework;\n  private encryptionKey: string;\n  \n  private constructor() {\n    this.encryptionKey = this.generateSecureKey();\n  }\n\n  public static getInstance(): SecurityFramework {\n    if (!SecurityFramework.instance) {\n      SecurityFramework.instance = new SecurityFramework();\n    }\n    return SecurityFramework.instance;\n  }\n\n  // \uD83D\uDD10 A03:2021 - Injection Prevention\n  public sanitizeInput(input: string, options: {\n    allowHtml?: boolean;\n    maxLength?: number;\n    allowedTags?: string[];\n  } = {}): string {\n    const { allowHtml = false, maxLength = 1000, allowedTags = [] } = options;\n\n    // Length validation\n    if (input.length > maxLength) {\n      throw new Error(`Input exceeds maximum length of ${maxLength} characters`);\n    }\n\n    if (!allowHtml) {\n      // Strip all HTML tags\n      return DOMPurify.sanitize(input, { ALLOWED_TAGS: [] });\n    }\n\n    // Allow only safe HTML tags\n    return DOMPurify.sanitize(input, { \n      ALLOWED_TAGS: allowedTags.length > 0 ? allowedTags : ['b', 'i', 'em', 'strong'],\n      ALLOWED_ATTR: ['class']\n    });\n  }\n\n  // \uD83D\uDD12 A02:2021 - Cryptographic Failures Prevention\n  public encryptSensitiveData(data: string): string {\n    try {\n      return CryptoJS.AES.encrypt(data, this.encryptionKey).toString();\n    } catch (error: any) {\n      console.error('Encryption failed:', error);\n      throw new Error('Failed to encrypt sensitive data');\n    }\n  }\n\n  public decryptSensitiveData(encryptedData: string): string {\n    try {\n      const bytes = CryptoJS.AES.decrypt(encryptedData, this.encryptionKey);\n      return bytes.toString(CryptoJS.enc.Utf8);\n    } catch (error: any) {\n      console.error('Decryption failed:', error);\n      throw new Error('Failed to decrypt data');\n    }\n  }\n\n  // \uD83D\uDD11 A07:2021 - Identification and Authentication Failures\n  public generateSecureToken(length: number = 32): string {\n    const array = new Uint8Array(length);\n    window.crypto.getRandomValues(array);\n    return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\n  }\n\n  public validatePassword(password: string): {\n    isValid: boolean;\n    score: number;\n    feedback: string[];\n  } {\n    const feedback: string[] = [];\n    let score = 0;\n\n    // Length check\n    if (password.length >= 12) {\n      score += 2;\n    } else if (password.length >= 8) {\n      score += 1;\n    } else {\n      feedback.push('Password must be at least 8 characters long');\n    }\n\n    // Complexity checks\n    if (/[a-z]/.test(password)) score += 1;\n    if (/[A-Z]/.test(password)) score += 1;\n    if (/[0-9]/.test(password)) score += 1;\n    if (/[^A-Za-z0-9]/.test(password)) score += 2;\n\n    // Common patterns\n    if (/(.)\\1{2,}/.test(password)) {\n      feedback.push('Avoid repeating characters');\n      score -= 1;\n    }\n\n    if (this.isCommonPassword(password)) {\n      feedback.push('This is a commonly used password');\n      score -= 2;\n    }\n\n    const isValid = score >= 5 && feedback.length === 0;\n\n    return { isValid, score: Math.max(0, score), feedback };\n  }\n\n  // \uD83D\uDEE1\uFE0F A05:2021 - Security Misconfiguration\n  public getSecurityHeaders(): Record<string, string> {\n    return {\n      'Content-Security-Policy': this.generateCSP(),\n      'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload',\n      'X-Content-Type-Options': 'nosniff',\n      'X-Frame-Options': 'DENY',\n      'X-XSS-Protection': '1; mode=block',\n      'Referrer-Policy': 'strict-origin-when-cross-origin',\n      'Permissions-Policy': 'geolocation=(), microphone=(), camera=()',\n    };\n  }\n\n  private generateCSP(): string {\n    const nonce = this.generateSecureToken(16);\n    \n    return [\n      \"default-src 'self'\",\n      `script-src 'self' 'nonce-${nonce}' https://cdn.jsdelivr.net`,\n      \"style-src 'self' 'unsafe-inline' https://fonts.googleapis.com\",\n      \"font-src 'self' https://fonts.gstatic.com\",\n      \"img-src 'self' data: https: blob:\",\n      \"connect-src 'self' https://api.supabase.co wss://realtime.supabase.co\",\n      \"media-src 'self'\",\n      \"object-src 'none'\",\n      \"base-uri 'self'\",\n      \"form-action 'self'\",\n      \"frame-ancestors 'none'\",\n      \"upgrade-insecure-requests\"\n    ].join('; ');\n  }\n\n  // \uD83D\uDD0D A08:2021 - Software and Data Integrity Failures\n  public validateDataIntegrity(data: any, expectedSchema: z.ZodSchema): {\n    isValid: boolean;\n    data: any;\n    errors: string[];\n  } {\n    try {\n      const validatedData = expectedSchema.parse(data);\n      return {\n        isValid: true,\n        data: validatedData,\n        errors: []\n      };\n    } catch (error: any) {\n      if (error instanceof z.ZodError) {\n        return {\n          isValid: false,\n          data: null,\n          errors: error.errors.map((e, index) => `${e.path.join('.')}: ${e.message}`)\n        };\n      }\n      return {\n        isValid: false,\n        data: null,\n        errors: ['Unknown validation error']\n      };\n    }\n  }\n\n  // \uD83D\uDEA8 A09:2021 - Security Logging and Monitoring\n  public logSecurityEvent(event: SecurityEvent): void {\n    const logEntry = {\n      timestamp: new Date().toISOString(),\n      eventType: event.type,\n      severity: event.severity,\n      userId: event.userId,\n      ipAddress: this.getClientIP(),\n      userAgent: navigator.userAgent,\n      details: event.details,\n      sessionId: this.getSessionId()\n    };\n\n    // In production, send to security monitoring service\n    if (import.meta.env.PROD) {\n      this.sendToSecurityMonitoring(logEntry);\n    } else {\n      console.warn('Security Event:', logEntry);\n    }\n\n    // Critical events should also be stored locally for audit\n    if (event.severity === 'critical' || event.severity === 'high') {\n      this.storeAuditLog(logEntry);\n    }\n  }\n\n  // \uD83D\uDD10 Rate Limiting\n  private rateLimitStore = new Map<string, { count: number; resetTime: number }>();\n\n  public checkRateLimit(identifier: string, maxRequests: number = 100, windowMs: number = 900000): {\n    allowed: boolean;\n    remaining: number;\n    resetTime: number;\n  } {\n    const now = Date.now();\n    const key = `rateLimit:${identifier}`;\n    const current = this.rateLimitStore.get(key);\n\n    if (!current || now > current.resetTime) {\n      // Reset or first request\n      const resetTime = now + windowMs;\n      this.rateLimitStore.set(key, { count: 1, resetTime });\n      return {\n        allowed: true,\n        remaining: maxRequests - 1,\n        resetTime\n      };\n    }\n\n    if (current.count >= maxRequests) {\n      return {\n        allowed: false,\n        remaining: 0,\n        resetTime: current.resetTime\n      };\n    }\n\n    current.count++;\n    this.rateLimitStore.set(key, current);\n\n    return {\n      allowed: true,\n      remaining: maxRequests - current.count,\n      resetTime: current.resetTime\n    };\n  }\n\n  // \uD83D\uDD0D A01:2021 - Broken Access Control\n  public validatePermissions(userId: string, resource: string, action: string): boolean {\n    // Implement role-based access control (RBAC)\n    const userRoles = this.getUserRoles(userId);\n    const requiredPermission = `${resource}:${action}`;\n    \n    return userRoles.some(role => \n      this.getRolePermissions(role).includes(requiredPermission)\n    );\n  }\n\n  // Helper methods\n  private generateSecureKey(): string {\n    return import.meta.env.VITE_ENCRYPTION_KEY || this.generateSecureToken(64);\n  }\n\n  private isCommonPassword(password: string): boolean {\n    const commonPasswords = [\n      'password', '123456', '123456789', 'qwerty', 'abc123',\n      'password123', 'admin', 'letmein', 'welcome', 'monkey'\n    ];\n    return commonPasswords.includes(password.toLowerCase());\n  }\n\n  private getClientIP(): string {\n    // This would be set by your reverse proxy/CDN\n    return 'client-ip-masked-for-privacy';\n  }\n\n  private getSessionId(): string {\n    // Get from auth store or generate\n    return sessionStorage.getItem('sessionId') || this.generateSecureToken();\n  }\n\n  private async sendToSecurityMonitoring(logEntry: any): Promise<void> {\n    try {\n      // Send to Sentry, DataDog, or other monitoring service\n      await fetch('/api/security/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(logEntry)\n      });\n    } catch (error: any) {\n      console.error('Failed to send security event:', error);\n    }\n  }\n\n  private storeAuditLog(logEntry: any): void {\n    try {\n      const auditLogs = JSON.parse(localStorage.getItem('auditLogs') || '[]');\n      auditLogs.push(logEntry);\n      \n      // Keep only last 100 entries\n      const recentLogs = auditLogs.slice(-100);\n      localStorage.setItem('auditLogs', JSON.stringify(recentLogs));\n    } catch (error: any) {\n      console.error('Failed to store audit log:', error);\n    }\n  }\n\n  private getUserRoles(userId: string): string[] {\n    // In real app, fetch from auth service\n    return ['user']; // Default role\n  }\n\n  private getRolePermissions(role: string): string[] {\n    const rolePermissions: Record<string, string[]> = {\n      'admin': ['*:*'],\n      'user': ['profile:read', 'profile:update', 'workouts:*', 'nutrition:*'],\n      'premium': ['profile:*', 'workouts:*', 'nutrition:*', 'ai-coach:*'],\n    };\n    \n    return rolePermissions[role] || [];\n  }\n}\n\n// Types\nexport interface SecurityEvent {\n  type: 'authentication_failure' | 'authorization_failure' | 'suspicious_activity' | 'data_breach_attempt' | 'rate_limit_exceeded';\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  userId?: string;\n  details: Record<string, any>;\n}\n\n// Schemas for data validation\nexport const UserProfileSchema = z.object({\n  id: z.string().uuid(),\n  email: z.string().email(),\n  full_name: z.string().min(1).max(100),\n  avatar_url: z.string().url().optional(),\n  preferences: z.object({\n    units: z.enum(['metric', 'imperial']),\n    language: z.enum(['en', 'fr']),\n    notifications: z.boolean()\n  }).optional()\n});\n\nexport const WorkoutSchema = z.object({\n  id: z.string().uuid().optional(),\n  user_id: z.string().uuid(),\n  name: z.string().min(1).max(200),\n  type: z.enum(['strength', 'cardio', 'flexibility', 'sports']),\n  duration: z.number().int().min(1).max(480), // 8 hours max\n  exercises: z.array(z.object({\n    id: z.string().uuid().optional(),\n    name: z.string().min(1).max(100),\n    sets: z.number().int().min(1).max(20).optional(),\n    reps: z.number().int().min(1).max(1000).optional(),\n    weight: z.number().min(0).max(1000).optional()\n  }))\n});\n\nexport const NutritionEntrySchema = z.object({\n  id: z.string().uuid().optional(),\n  user_id: z.string().uuid(),\n  food_name: z.string().min(1).max(200),\n  calories: z.number().min(0).max(10000),\n  protein: z.number().min(0).max(1000),\n  carbs: z.number().min(0).max(1000),\n  fat: z.number().min(0).max(1000),\n  serving_size: z.string().max(100).optional()\n});\n\n// Security middleware for React components\nexport function withSecurity<T extends {}>(\n  WrappedComponent: React.ComponentType<T>,\n  requiredPermissions?: string[]\n) {\n  return function SecurityWrapper(props: T) {\n    const security = SecurityFramework.getInstance();\n    \n    // Check permissions if required\n    if (requiredPermissions) {\n      const userId = 'current-user-id'; // Get from auth context\n      const hasPermission = requiredPermissions.every(permission => {\n        const [resource, action] = permission.split(':');\n        return security.validatePermissions(userId, resource, action);\n      });\n\n      if (!hasPermission) {\n        security.logSecurityEvent({\n          type: 'authorization_failure',\n          severity: 'medium',\n          userId,\n          details: { requiredPermissions, component: WrappedComponent.name }\n        });\n        \n        return null;\n      }\n    }\n\n    return React.createElement(WrappedComponent, props);\n  };\n}\n\n// Export singleton instance\nexport const security = SecurityFramework.getInstance();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4ded0487bbaa1ec7f383e6641f591dba190ab8e9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4vdny8srm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4vdny8srm();
var __importDefault =
/* istanbul ignore next */
(cov_4vdny8srm().s[0]++,
/* istanbul ignore next */
(cov_4vdny8srm().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_4vdny8srm().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_4vdny8srm().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_4vdny8srm().f[0]++;
  cov_4vdny8srm().s[1]++;
  return /* istanbul ignore next */(cov_4vdny8srm().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_4vdny8srm().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_4vdny8srm().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_4vdny8srm().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_4vdny8srm().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4vdny8srm().s[3]++;
exports.security = exports.NutritionEntrySchema = exports.WorkoutSchema = exports.UserProfileSchema = exports.SecurityFramework = void 0;
/* istanbul ignore next */
cov_4vdny8srm().s[4]++;
exports.withSecurity = withSecurity;
const react_1 =
/* istanbul ignore next */
(cov_4vdny8srm().s[5]++, __importDefault(require("react")));
const zod_1 =
/* istanbul ignore next */
(cov_4vdny8srm().s[6]++, require("zod"));
const dompurify_1 =
/* istanbul ignore next */
(cov_4vdny8srm().s[7]++, __importDefault(require("dompurify")));
const crypto_js_1 =
/* istanbul ignore next */
(cov_4vdny8srm().s[8]++, __importDefault(require("crypto-js")));
// 🛡️ OWASP Top 10 Compliance Framework
class SecurityFramework {
  constructor() {
    /* istanbul ignore next */
    cov_4vdny8srm().f[1]++;
    cov_4vdny8srm().s[9]++;
    Object.defineProperty(this, "encryptionKey", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    // 🔐 Rate Limiting
    /* istanbul ignore next */
    cov_4vdny8srm().s[10]++;
    Object.defineProperty(this, "rateLimitStore", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: new Map()
    });
    /* istanbul ignore next */
    cov_4vdny8srm().s[11]++;
    this.encryptionKey = this.generateSecureKey();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_4vdny8srm().f[2]++;
    cov_4vdny8srm().s[12]++;
    if (!SecurityFramework.instance) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[3][0]++;
      cov_4vdny8srm().s[13]++;
      SecurityFramework.instance = new SecurityFramework();
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[3][1]++;
    }
    cov_4vdny8srm().s[14]++;
    return SecurityFramework.instance;
  }
  // 🔐 A03:2021 - Injection Prevention
  sanitizeInput(input, options =
  /* istanbul ignore next */
  (cov_4vdny8srm().b[4][0]++, {})) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[3]++;
    const {
      allowHtml =
      /* istanbul ignore next */
      (cov_4vdny8srm().b[5][0]++, false),
      maxLength =
      /* istanbul ignore next */
      (cov_4vdny8srm().b[6][0]++, 1000),
      allowedTags =
      /* istanbul ignore next */
      (cov_4vdny8srm().b[7][0]++, [])
    } =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[15]++, options);
    // Length validation
    /* istanbul ignore next */
    cov_4vdny8srm().s[16]++;
    if (input.length > maxLength) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[8][0]++;
      cov_4vdny8srm().s[17]++;
      throw new Error(`Input exceeds maximum length of ${maxLength} characters`);
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[8][1]++;
    }
    cov_4vdny8srm().s[18]++;
    if (!allowHtml) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[9][0]++;
      cov_4vdny8srm().s[19]++;
      // Strip all HTML tags
      return dompurify_1.default.sanitize(input, {
        ALLOWED_TAGS: []
      });
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[9][1]++;
    }
    // Allow only safe HTML tags
    cov_4vdny8srm().s[20]++;
    return dompurify_1.default.sanitize(input, {
      ALLOWED_TAGS: allowedTags.length > 0 ?
      /* istanbul ignore next */
      (cov_4vdny8srm().b[10][0]++, allowedTags) :
      /* istanbul ignore next */
      (cov_4vdny8srm().b[10][1]++, ['b', 'i', 'em', 'strong']),
      ALLOWED_ATTR: ['class']
    });
  }
  // 🔒 A02:2021 - Cryptographic Failures Prevention
  encryptSensitiveData(data) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[4]++;
    cov_4vdny8srm().s[21]++;
    try {
      /* istanbul ignore next */
      cov_4vdny8srm().s[22]++;
      return crypto_js_1.default.AES.encrypt(data, this.encryptionKey).toString();
    } catch (error) {
      /* istanbul ignore next */
      cov_4vdny8srm().s[23]++;
      console.error('Encryption failed:', error);
      /* istanbul ignore next */
      cov_4vdny8srm().s[24]++;
      throw new Error('Failed to encrypt sensitive data');
    }
  }
  decryptSensitiveData(encryptedData) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[5]++;
    cov_4vdny8srm().s[25]++;
    try {
      const bytes =
      /* istanbul ignore next */
      (cov_4vdny8srm().s[26]++, crypto_js_1.default.AES.decrypt(encryptedData, this.encryptionKey));
      /* istanbul ignore next */
      cov_4vdny8srm().s[27]++;
      return bytes.toString(crypto_js_1.default.enc.Utf8);
    } catch (error) {
      /* istanbul ignore next */
      cov_4vdny8srm().s[28]++;
      console.error('Decryption failed:', error);
      /* istanbul ignore next */
      cov_4vdny8srm().s[29]++;
      throw new Error('Failed to decrypt data');
    }
  }
  // 🔑 A07:2021 - Identification and Authentication Failures
  generateSecureToken(length =
  /* istanbul ignore next */
  (cov_4vdny8srm().b[11][0]++, 32)) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[6]++;
    const array =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[30]++, new Uint8Array(length));
    /* istanbul ignore next */
    cov_4vdny8srm().s[31]++;
    window.crypto.getRandomValues(array);
    /* istanbul ignore next */
    cov_4vdny8srm().s[32]++;
    return Array.from(array, byte => {
      /* istanbul ignore next */
      cov_4vdny8srm().f[7]++;
      cov_4vdny8srm().s[33]++;
      return byte.toString(16).padStart(2, '0');
    }).join('');
  }
  validatePassword(password) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[8]++;
    const feedback =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[34]++, []);
    let score =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[35]++, 0);
    // Length check
    /* istanbul ignore next */
    cov_4vdny8srm().s[36]++;
    if (password.length >= 12) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[12][0]++;
      cov_4vdny8srm().s[37]++;
      score += 2;
    } else {
      /* istanbul ignore next */
      cov_4vdny8srm().b[12][1]++;
      cov_4vdny8srm().s[38]++;
      if (password.length >= 8) {
        /* istanbul ignore next */
        cov_4vdny8srm().b[13][0]++;
        cov_4vdny8srm().s[39]++;
        score += 1;
      } else {
        /* istanbul ignore next */
        cov_4vdny8srm().b[13][1]++;
        cov_4vdny8srm().s[40]++;
        feedback.push('Password must be at least 8 characters long');
      }
    }
    // Complexity checks
    /* istanbul ignore next */
    cov_4vdny8srm().s[41]++;
    if (/[a-z]/.test(password)) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[14][0]++;
      cov_4vdny8srm().s[42]++;
      score += 1;
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[14][1]++;
    }
    cov_4vdny8srm().s[43]++;
    if (/[A-Z]/.test(password)) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[15][0]++;
      cov_4vdny8srm().s[44]++;
      score += 1;
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[15][1]++;
    }
    cov_4vdny8srm().s[45]++;
    if (/[0-9]/.test(password)) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[16][0]++;
      cov_4vdny8srm().s[46]++;
      score += 1;
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[16][1]++;
    }
    cov_4vdny8srm().s[47]++;
    if (/[^A-Za-z0-9]/.test(password)) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[17][0]++;
      cov_4vdny8srm().s[48]++;
      score += 2;
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[17][1]++;
    }
    // Common patterns
    cov_4vdny8srm().s[49]++;
    if (/(.)\1{2,}/.test(password)) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[18][0]++;
      cov_4vdny8srm().s[50]++;
      feedback.push('Avoid repeating characters');
      /* istanbul ignore next */
      cov_4vdny8srm().s[51]++;
      score -= 1;
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[18][1]++;
    }
    cov_4vdny8srm().s[52]++;
    if (this.isCommonPassword(password)) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[19][0]++;
      cov_4vdny8srm().s[53]++;
      feedback.push('This is a commonly used password');
      /* istanbul ignore next */
      cov_4vdny8srm().s[54]++;
      score -= 2;
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[19][1]++;
    }
    const isValid =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[55]++,
    /* istanbul ignore next */
    (cov_4vdny8srm().b[20][0]++, score >= 5) &&
    /* istanbul ignore next */
    (cov_4vdny8srm().b[20][1]++, feedback.length === 0));
    /* istanbul ignore next */
    cov_4vdny8srm().s[56]++;
    return {
      isValid,
      score: Math.max(0, score),
      feedback
    };
  }
  // 🛡️ A05:2021 - Security Misconfiguration
  getSecurityHeaders() {
    /* istanbul ignore next */
    cov_4vdny8srm().f[9]++;
    cov_4vdny8srm().s[57]++;
    return {
      'Content-Security-Policy': this.generateCSP(),
      'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload',
      'X-Content-Type-Options': 'nosniff',
      'X-Frame-Options': 'DENY',
      'X-XSS-Protection': '1; mode=block',
      'Referrer-Policy': 'strict-origin-when-cross-origin',
      'Permissions-Policy': 'geolocation=(), microphone=(), camera=()'
    };
  }
  generateCSP() {
    /* istanbul ignore next */
    cov_4vdny8srm().f[10]++;
    const nonce =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[58]++, this.generateSecureToken(16));
    /* istanbul ignore next */
    cov_4vdny8srm().s[59]++;
    return ["default-src 'self'", `script-src 'self' 'nonce-${nonce}' https://cdn.jsdelivr.net`, "style-src 'self' 'unsafe-inline' https://fonts.googleapis.com", "font-src 'self' https://fonts.gstatic.com", "img-src 'self' data: https: blob:", "connect-src 'self' https://api.supabase.co wss://realtime.supabase.co", "media-src 'self'", "object-src 'none'", "base-uri 'self'", "form-action 'self'", "frame-ancestors 'none'", "upgrade-insecure-requests"].join('; ');
  }
  // 🔍 A08:2021 - Software and Data Integrity Failures
  validateDataIntegrity(data, expectedSchema) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[11]++;
    cov_4vdny8srm().s[60]++;
    try {
      const validatedData =
      /* istanbul ignore next */
      (cov_4vdny8srm().s[61]++, expectedSchema.parse(data));
      /* istanbul ignore next */
      cov_4vdny8srm().s[62]++;
      return {
        isValid: true,
        data: validatedData,
        errors: []
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_4vdny8srm().s[63]++;
      if (error instanceof zod_1.z.ZodError) {
        /* istanbul ignore next */
        cov_4vdny8srm().b[21][0]++;
        cov_4vdny8srm().s[64]++;
        return {
          isValid: false,
          data: null,
          errors: error.errors.map((e, index) => {
            /* istanbul ignore next */
            cov_4vdny8srm().f[12]++;
            cov_4vdny8srm().s[65]++;
            return `${e.path.join('.')}: ${e.message}`;
          })
        };
      } else
      /* istanbul ignore next */
      {
        cov_4vdny8srm().b[21][1]++;
      }
      cov_4vdny8srm().s[66]++;
      return {
        isValid: false,
        data: null,
        errors: ['Unknown validation error']
      };
    }
  }
  // 🚨 A09:2021 - Security Logging and Monitoring
  logSecurityEvent(event) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[13]++;
    const logEntry =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[67]++, {
      timestamp: new Date().toISOString(),
      eventType: event.type,
      severity: event.severity,
      userId: event.userId,
      ipAddress: this.getClientIP(),
      userAgent: navigator.userAgent,
      details: event.details,
      sessionId: this.getSessionId()
    });
    // In production, send to security monitoring service
    /* istanbul ignore next */
    cov_4vdny8srm().s[68]++;
    if (import.meta.env.PROD) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[22][0]++;
      cov_4vdny8srm().s[69]++;
      this.sendToSecurityMonitoring(logEntry);
    } else {
      /* istanbul ignore next */
      cov_4vdny8srm().b[22][1]++;
      cov_4vdny8srm().s[70]++;
      console.warn('Security Event:', logEntry);
    }
    // Critical events should also be stored locally for audit
    /* istanbul ignore next */
    cov_4vdny8srm().s[71]++;
    if (
    /* istanbul ignore next */
    (cov_4vdny8srm().b[24][0]++, event.severity === 'critical') ||
    /* istanbul ignore next */
    (cov_4vdny8srm().b[24][1]++, event.severity === 'high')) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[23][0]++;
      cov_4vdny8srm().s[72]++;
      this.storeAuditLog(logEntry);
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[23][1]++;
    }
  }
  checkRateLimit(identifier, maxRequests =
  /* istanbul ignore next */
  (cov_4vdny8srm().b[25][0]++, 100), windowMs =
  /* istanbul ignore next */
  (cov_4vdny8srm().b[26][0]++, 900000)) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[14]++;
    const now =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[73]++, Date.now());
    const key =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[74]++, `rateLimit:${identifier}`);
    const current =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[75]++, this.rateLimitStore.get(key));
    /* istanbul ignore next */
    cov_4vdny8srm().s[76]++;
    if (
    /* istanbul ignore next */
    (cov_4vdny8srm().b[28][0]++, !current) ||
    /* istanbul ignore next */
    (cov_4vdny8srm().b[28][1]++, now > current.resetTime)) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[27][0]++;
      // Reset or first request
      const resetTime =
      /* istanbul ignore next */
      (cov_4vdny8srm().s[77]++, now + windowMs);
      /* istanbul ignore next */
      cov_4vdny8srm().s[78]++;
      this.rateLimitStore.set(key, {
        count: 1,
        resetTime
      });
      /* istanbul ignore next */
      cov_4vdny8srm().s[79]++;
      return {
        allowed: true,
        remaining: maxRequests - 1,
        resetTime
      };
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[27][1]++;
    }
    cov_4vdny8srm().s[80]++;
    if (current.count >= maxRequests) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[29][0]++;
      cov_4vdny8srm().s[81]++;
      return {
        allowed: false,
        remaining: 0,
        resetTime: current.resetTime
      };
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[29][1]++;
    }
    cov_4vdny8srm().s[82]++;
    current.count++;
    /* istanbul ignore next */
    cov_4vdny8srm().s[83]++;
    this.rateLimitStore.set(key, current);
    /* istanbul ignore next */
    cov_4vdny8srm().s[84]++;
    return {
      allowed: true,
      remaining: maxRequests - current.count,
      resetTime: current.resetTime
    };
  }
  // 🔍 A01:2021 - Broken Access Control
  validatePermissions(userId, resource, action) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[15]++;
    // Implement role-based access control (RBAC)
    const userRoles =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[85]++, this.getUserRoles(userId));
    const requiredPermission =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[86]++, `${resource}:${action}`);
    /* istanbul ignore next */
    cov_4vdny8srm().s[87]++;
    return userRoles.some(role => {
      /* istanbul ignore next */
      cov_4vdny8srm().f[16]++;
      cov_4vdny8srm().s[88]++;
      return this.getRolePermissions(role).includes(requiredPermission);
    });
  }
  // Helper methods
  generateSecureKey() {
    /* istanbul ignore next */
    cov_4vdny8srm().f[17]++;
    cov_4vdny8srm().s[89]++;
    return /* istanbul ignore next */(cov_4vdny8srm().b[30][0]++, import.meta.env.VITE_ENCRYPTION_KEY) ||
    /* istanbul ignore next */
    (cov_4vdny8srm().b[30][1]++, this.generateSecureToken(64));
  }
  isCommonPassword(password) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[18]++;
    const commonPasswords =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[90]++, ['password', '123456', '123456789', 'qwerty', 'abc123', 'password123', 'admin', 'letmein', 'welcome', 'monkey']);
    /* istanbul ignore next */
    cov_4vdny8srm().s[91]++;
    return commonPasswords.includes(password.toLowerCase());
  }
  getClientIP() {
    /* istanbul ignore next */
    cov_4vdny8srm().f[19]++;
    cov_4vdny8srm().s[92]++;
    // This would be set by your reverse proxy/CDN
    return 'client-ip-masked-for-privacy';
  }
  getSessionId() {
    /* istanbul ignore next */
    cov_4vdny8srm().f[20]++;
    cov_4vdny8srm().s[93]++;
    // Get from auth store or generate
    return /* istanbul ignore next */(cov_4vdny8srm().b[31][0]++, sessionStorage.getItem('sessionId')) ||
    /* istanbul ignore next */
    (cov_4vdny8srm().b[31][1]++, this.generateSecureToken());
  }
  async sendToSecurityMonitoring(logEntry) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[21]++;
    cov_4vdny8srm().s[94]++;
    try {
      /* istanbul ignore next */
      cov_4vdny8srm().s[95]++;
      // Send to Sentry, DataDog, or other monitoring service
      await fetch('/api/security/events', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(logEntry)
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_4vdny8srm().s[96]++;
      console.error('Failed to send security event:', error);
    }
  }
  storeAuditLog(logEntry) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[22]++;
    cov_4vdny8srm().s[97]++;
    try {
      const auditLogs =
      /* istanbul ignore next */
      (cov_4vdny8srm().s[98]++, JSON.parse(
      /* istanbul ignore next */
      (cov_4vdny8srm().b[32][0]++, localStorage.getItem('auditLogs')) ||
      /* istanbul ignore next */
      (cov_4vdny8srm().b[32][1]++, '[]')));
      /* istanbul ignore next */
      cov_4vdny8srm().s[99]++;
      auditLogs.push(logEntry);
      // Keep only last 100 entries
      const recentLogs =
      /* istanbul ignore next */
      (cov_4vdny8srm().s[100]++, auditLogs.slice(-100));
      /* istanbul ignore next */
      cov_4vdny8srm().s[101]++;
      localStorage.setItem('auditLogs', JSON.stringify(recentLogs));
    } catch (error) {
      /* istanbul ignore next */
      cov_4vdny8srm().s[102]++;
      console.error('Failed to store audit log:', error);
    }
  }
  getUserRoles(userId) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[23]++;
    cov_4vdny8srm().s[103]++;
    // In real app, fetch from auth service
    return ['user']; // Default role
  }
  getRolePermissions(role) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[24]++;
    const rolePermissions =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[104]++, {
      'admin': ['*:*'],
      'user': ['profile:read', 'profile:update', 'workouts:*', 'nutrition:*'],
      'premium': ['profile:*', 'workouts:*', 'nutrition:*', 'ai-coach:*']
    });
    /* istanbul ignore next */
    cov_4vdny8srm().s[105]++;
    return /* istanbul ignore next */(cov_4vdny8srm().b[33][0]++, rolePermissions[role]) ||
    /* istanbul ignore next */
    (cov_4vdny8srm().b[33][1]++, []);
  }
}
/* istanbul ignore next */
cov_4vdny8srm().s[106]++;
exports.SecurityFramework = SecurityFramework;
// Schemas for data validation
/* istanbul ignore next */
cov_4vdny8srm().s[107]++;
exports.UserProfileSchema = zod_1.z.object({
  id: zod_1.z.string().uuid(),
  email: zod_1.z.string().email(),
  full_name: zod_1.z.string().min(1).max(100),
  avatar_url: zod_1.z.string().url().optional(),
  preferences: zod_1.z.object({
    units: zod_1.z.enum(['metric', 'imperial']),
    language: zod_1.z.enum(['en', 'fr']),
    notifications: zod_1.z.boolean()
  }).optional()
});
/* istanbul ignore next */
cov_4vdny8srm().s[108]++;
exports.WorkoutSchema = zod_1.z.object({
  id: zod_1.z.string().uuid().optional(),
  user_id: zod_1.z.string().uuid(),
  name: zod_1.z.string().min(1).max(200),
  type: zod_1.z.enum(['strength', 'cardio', 'flexibility', 'sports']),
  duration: zod_1.z.number().int().min(1).max(480),
  // 8 hours max
  exercises: zod_1.z.array(zod_1.z.object({
    id: zod_1.z.string().uuid().optional(),
    name: zod_1.z.string().min(1).max(100),
    sets: zod_1.z.number().int().min(1).max(20).optional(),
    reps: zod_1.z.number().int().min(1).max(1000).optional(),
    weight: zod_1.z.number().min(0).max(1000).optional()
  }))
});
/* istanbul ignore next */
cov_4vdny8srm().s[109]++;
exports.NutritionEntrySchema = zod_1.z.object({
  id: zod_1.z.string().uuid().optional(),
  user_id: zod_1.z.string().uuid(),
  food_name: zod_1.z.string().min(1).max(200),
  calories: zod_1.z.number().min(0).max(10000),
  protein: zod_1.z.number().min(0).max(1000),
  carbs: zod_1.z.number().min(0).max(1000),
  fat: zod_1.z.number().min(0).max(1000),
  serving_size: zod_1.z.string().max(100).optional()
});
// Security middleware for React components
function withSecurity(WrappedComponent, requiredPermissions) {
  /* istanbul ignore next */
  cov_4vdny8srm().f[25]++;
  cov_4vdny8srm().s[110]++;
  return function SecurityWrapper(props) {
    /* istanbul ignore next */
    cov_4vdny8srm().f[26]++;
    const security =
    /* istanbul ignore next */
    (cov_4vdny8srm().s[111]++, SecurityFramework.getInstance());
    // Check permissions if required
    /* istanbul ignore next */
    cov_4vdny8srm().s[112]++;
    if (requiredPermissions) {
      /* istanbul ignore next */
      cov_4vdny8srm().b[34][0]++;
      const userId =
      /* istanbul ignore next */
      (cov_4vdny8srm().s[113]++, 'current-user-id'); // Get from auth context
      const hasPermission =
      /* istanbul ignore next */
      (cov_4vdny8srm().s[114]++, requiredPermissions.every(permission => {
        /* istanbul ignore next */
        cov_4vdny8srm().f[27]++;
        const [resource, action] =
        /* istanbul ignore next */
        (cov_4vdny8srm().s[115]++, permission.split(':'));
        /* istanbul ignore next */
        cov_4vdny8srm().s[116]++;
        return security.validatePermissions(userId, resource, action);
      }));
      /* istanbul ignore next */
      cov_4vdny8srm().s[117]++;
      if (!hasPermission) {
        /* istanbul ignore next */
        cov_4vdny8srm().b[35][0]++;
        cov_4vdny8srm().s[118]++;
        security.logSecurityEvent({
          type: 'authorization_failure',
          severity: 'medium',
          userId,
          details: {
            requiredPermissions,
            component: WrappedComponent.name
          }
        });
        /* istanbul ignore next */
        cov_4vdny8srm().s[119]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_4vdny8srm().b[35][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_4vdny8srm().b[34][1]++;
    }
    cov_4vdny8srm().s[120]++;
    return react_1.default.createElement(WrappedComponent, props);
  };
}
// Export singleton instance
/* istanbul ignore next */
cov_4vdny8srm().s[121]++;
exports.security = SecurityFramework.getInstance();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,