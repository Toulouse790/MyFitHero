021022f6cc157a0e3777ae5c63e5cf27
"use strict";

/* istanbul ignore next */
function cov_1wcocwp1q5() {
  var path = "/workspaces/MyFitHero/src/shared/utils/positionsService.ts";
  var hash = "99670787b89cd13cc1b5435b7e2b5398b8e2302d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/shared/utils/positionsService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 44
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 27
        }
      },
      "4": {
        start: {
          line: 7,
          column: 19
        },
        end: {
          line: 7,
          column: 39
        }
      },
      "5": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "6": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "7": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "8": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "9": {
        start: {
          line: 15,
          column: 47
        },
        end: {
          line: 19,
          column: 21
        }
      },
      "10": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "11": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "12": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 22
        }
      },
      "13": {
        start: {
          line: 24,
          column: 26
        },
        end: {
          line: 24,
          column: 46
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 83
        }
      },
      "15": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 25
        }
      },
      "16": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 30,
          column: 56
        }
      },
      "17": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "18": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "19": {
        start: {
          line: 33,
          column: 47
        },
        end: {
          line: 37,
          column: 34
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "21": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 60
        }
      },
      "22": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "23": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 42,
          column: 88
        }
      },
      "24": {
        start: {
          line: 42,
          column: 59
        },
        end: {
          line: 42,
          column: 69
        }
      },
      "25": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 97
        }
      },
      "26": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 25
        }
      },
      "27": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 25
        }
      },
      "28": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 50,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 50
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 54
          },
          end: {
            line: 42,
            column: 55
          }
        },
        loc: {
          start: {
            line: 42,
            column: 59
          },
          end: {
            line: 42,
            column: 69
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 14,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 14,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 17
          }
        }, {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 13,
            column: 46
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 20,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 12
          },
          end: {
            line: 20,
            column: 17
          }
        }, {
          start: {
            line: 20,
            column: 21
          },
          end: {
            line: 20,
            column: 26
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 40
          }
        }, {
          start: {
            line: 24,
            column: 44
          },
          end: {
            line: 24,
            column: 46
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 32,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 32,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 17
          }
        }, {
          start: {
            line: 31,
            column: 21
          },
          end: {
            line: 31,
            column: 46
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 17
          }
        }, {
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 38,
            column: 26
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/shared/utils/positionsService.ts",
      mappings: ";;;AAAA,yCAAyC;AACzC,6CAA0C;AAE1C,MAAM,SAAS,GAAG,CAAC,GAAG,KAAM,CAAC;AAC7B,MAAM,UAAU,GAAG,oBAAoB,CAAC;AACxC,IAAI,WAAW,GAA8D,EAAE,CAAC;AAEhF,MAAa,eAAe;IAC1B,iEAAiE;IACjE,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,OAAe;QAClD,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE;YAAE,OAAO,KAAK,CAAC,IAAI,CAAC;QAE1D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,mBAAQ;aAClD,IAAI,CAAC,gBAAgB,CAAC;aACtB,MAAM,CAAC,WAAW,CAAC;aACnB,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC;aACjB,MAAM,EAAE,CAAC;QAEZ,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;YACjD,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QACvC,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,EAAE,CAAC;QAC3E,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,qEAAqE;IACrE,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,SAAiB;QACnD,MAAM,KAAK,GAAG,WAAW,CAAC,UAAU,SAAS,EAAE,CAAC,CAAC;QACjD,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE;YAAE,OAAO,KAAK,CAAC,IAAI,CAAC;QAE1D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,mBAAQ;aAClD,IAAI,CAAC,sBAAsB,CAAC;aAC5B,MAAM,CAAC,UAAU,CAAC;aAClB,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC;aACtB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAEzB,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAChD,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAS,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClF,WAAW,CAAC,UAAU,SAAS,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,EAAE,CAAC;QACzF,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,MAAM,CAAC,UAAU;QACf,WAAW,GAAG,EAAE,CAAC;IACnB,CAAC;CACF;AA5CD,0CA4CC",
      names: [],
      sources: ["/workspaces/MyFitHero/src/shared/utils/positionsService.ts"],
      sourcesContent: ["// client/src/services/positionService.ts\nimport { supabase } from '@/lib/supabase';\n\nconst CACHE_TTL = 5 * 60_000;\nconst __MEMO_KEY = 'positions-cache-v1';\nlet memoryCache: { [sportId: string]: { data: string[]; expiry: number } } = {};\n\nexport class PositionService {\n  // R\xE9cup\xE8re les positions depuis le champ ARRAY de sports_library\n  static async getPositionsFromLibrary(sportId: number): Promise<string[]> {\n    const cache = memoryCache[sportId];\n    if (cache && cache.expiry > Date.now()) return cache.data;\n\n    const { data: _data, error: _error } = await supabase\n      .from('sports_library')\n      .select('positions')\n      .eq('id', sportId)\n      .single();\n\n    if (error || !data) {\n      console.error('getPositionsFromLibrary:', error);\n      return [];\n    }\n    const positions = data.positions ?? [];\n    memoryCache[sportId] = { data: positions, expiry: Date.now() + CACHE_TTL };\n    return positions;\n  }\n\n  // Bonus : extraire les positions uniques depuis sport_drills_library\n  static async getPositionsFromDrills(sportName: string): Promise<string[]> {\n    const cache = memoryCache[`drills_${sportName}`];\n    if (cache && cache.expiry > Date.now()) return cache.data;\n\n    const { data: _data, error: _error } = await supabase\n      .from('sport_drills_library')\n      .select('position')\n      .eq('sport', sportName)\n      .neq('position', null);\n\n    if (error || !data) {\n      console.error('getPositionsFromDrills:', error);\n      return [];\n    }\n    const positions = Array.from(new Set(data.map(r => r.position!).filter(Boolean)));\n    memoryCache[`drills_${sportName}`] = { data: positions, expiry: Date.now() + CACHE_TTL };\n    return positions;\n  }\n\n  static clearCache() {\n    memoryCache = {};\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "99670787b89cd13cc1b5435b7e2b5398b8e2302d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wcocwp1q5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wcocwp1q5();
cov_1wcocwp1q5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1wcocwp1q5().s[1]++;
exports.PositionService = void 0;
// client/src/services/positionService.ts
const supabase_1 =
/* istanbul ignore next */
(cov_1wcocwp1q5().s[2]++, require("@/lib/supabase"));
const CACHE_TTL =
/* istanbul ignore next */
(cov_1wcocwp1q5().s[3]++, 5 * 60000);
const __MEMO_KEY =
/* istanbul ignore next */
(cov_1wcocwp1q5().s[4]++, 'positions-cache-v1');
let memoryCache =
/* istanbul ignore next */
(cov_1wcocwp1q5().s[5]++, {});
class PositionService {
  // Récupère les positions depuis le champ ARRAY de sports_library
  static async getPositionsFromLibrary(sportId) {
    /* istanbul ignore next */
    cov_1wcocwp1q5().f[0]++;
    const cache =
    /* istanbul ignore next */
    (cov_1wcocwp1q5().s[6]++, memoryCache[sportId]);
    /* istanbul ignore next */
    cov_1wcocwp1q5().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_1wcocwp1q5().b[1][0]++, cache) &&
    /* istanbul ignore next */
    (cov_1wcocwp1q5().b[1][1]++, cache.expiry > Date.now())) {
      /* istanbul ignore next */
      cov_1wcocwp1q5().b[0][0]++;
      cov_1wcocwp1q5().s[8]++;
      return cache.data;
    } else
    /* istanbul ignore next */
    {
      cov_1wcocwp1q5().b[0][1]++;
    }
    const {
      data: _data,
      error: _error
    } =
    /* istanbul ignore next */
    (cov_1wcocwp1q5().s[9]++, await supabase_1.supabase.from('sports_library').select('positions').eq('id', sportId).single());
    /* istanbul ignore next */
    cov_1wcocwp1q5().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_1wcocwp1q5().b[3][0]++, error) ||
    /* istanbul ignore next */
    (cov_1wcocwp1q5().b[3][1]++, !data)) {
      /* istanbul ignore next */
      cov_1wcocwp1q5().b[2][0]++;
      cov_1wcocwp1q5().s[11]++;
      console.error('getPositionsFromLibrary:', error);
      /* istanbul ignore next */
      cov_1wcocwp1q5().s[12]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1wcocwp1q5().b[2][1]++;
    }
    const positions =
    /* istanbul ignore next */
    (cov_1wcocwp1q5().s[13]++,
    /* istanbul ignore next */
    (cov_1wcocwp1q5().b[4][0]++, data.positions) ??
    /* istanbul ignore next */
    (cov_1wcocwp1q5().b[4][1]++, []));
    /* istanbul ignore next */
    cov_1wcocwp1q5().s[14]++;
    memoryCache[sportId] = {
      data: positions,
      expiry: Date.now() + CACHE_TTL
    };
    /* istanbul ignore next */
    cov_1wcocwp1q5().s[15]++;
    return positions;
  }
  // Bonus : extraire les positions uniques depuis sport_drills_library
  static async getPositionsFromDrills(sportName) {
    /* istanbul ignore next */
    cov_1wcocwp1q5().f[1]++;
    const cache =
    /* istanbul ignore next */
    (cov_1wcocwp1q5().s[16]++, memoryCache[`drills_${sportName}`]);
    /* istanbul ignore next */
    cov_1wcocwp1q5().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_1wcocwp1q5().b[6][0]++, cache) &&
    /* istanbul ignore next */
    (cov_1wcocwp1q5().b[6][1]++, cache.expiry > Date.now())) {
      /* istanbul ignore next */
      cov_1wcocwp1q5().b[5][0]++;
      cov_1wcocwp1q5().s[18]++;
      return cache.data;
    } else
    /* istanbul ignore next */
    {
      cov_1wcocwp1q5().b[5][1]++;
    }
    const {
      data: _data,
      error: _error
    } =
    /* istanbul ignore next */
    (cov_1wcocwp1q5().s[19]++, await supabase_1.supabase.from('sport_drills_library').select('position').eq('sport', sportName).neq('position', null));
    /* istanbul ignore next */
    cov_1wcocwp1q5().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_1wcocwp1q5().b[8][0]++, error) ||
    /* istanbul ignore next */
    (cov_1wcocwp1q5().b[8][1]++, !data)) {
      /* istanbul ignore next */
      cov_1wcocwp1q5().b[7][0]++;
      cov_1wcocwp1q5().s[21]++;
      console.error('getPositionsFromDrills:', error);
      /* istanbul ignore next */
      cov_1wcocwp1q5().s[22]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1wcocwp1q5().b[7][1]++;
    }
    const positions =
    /* istanbul ignore next */
    (cov_1wcocwp1q5().s[23]++, Array.from(new Set(data.map(r => {
      /* istanbul ignore next */
      cov_1wcocwp1q5().f[2]++;
      cov_1wcocwp1q5().s[24]++;
      return r.position;
    }).filter(Boolean))));
    /* istanbul ignore next */
    cov_1wcocwp1q5().s[25]++;
    memoryCache[`drills_${sportName}`] = {
      data: positions,
      expiry: Date.now() + CACHE_TTL
    };
    /* istanbul ignore next */
    cov_1wcocwp1q5().s[26]++;
    return positions;
  }
  static clearCache() {
    /* istanbul ignore next */
    cov_1wcocwp1q5().f[3]++;
    cov_1wcocwp1q5().s[27]++;
    memoryCache = {};
  }
}
/* istanbul ignore next */
cov_1wcocwp1q5().s[28]++;
exports.PositionService = PositionService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,