{"version":3,"names":["exports","withSecurity","react_1","cov_4vdny8srm","s","__importDefault","require","zod_1","dompurify_1","crypto_js_1","SecurityFramework","constructor","f","Object","defineProperty","Map","encryptionKey","generateSecureKey","getInstance","instance","b","sanitizeInput","input","options","allowHtml","maxLength","allowedTags","length","Error","default","sanitize","ALLOWED_TAGS","ALLOWED_ATTR","encryptSensitiveData","data","AES","encrypt","toString","error","console","decryptSensitiveData","encryptedData","bytes","decrypt","enc","Utf8","generateSecureToken","array","Uint8Array","window","crypto","getRandomValues","Array","from","byte","padStart","join","validatePassword","password","feedback","score","push","test","isCommonPassword","isValid","Math","max","getSecurityHeaders","generateCSP","nonce","validateDataIntegrity","expectedSchema","validatedData","parse","errors","z","ZodError","map","e","index","path","message","logSecurityEvent","event","logEntry","timestamp","Date","toISOString","eventType","type","severity","userId","ipAddress","getClientIP","userAgent","navigator","details","sessionId","getSessionId","import","meta","env","PROD","sendToSecurityMonitoring","warn","storeAuditLog","checkRateLimit","identifier","maxRequests","windowMs","now","key","current","rateLimitStore","get","resetTime","set","count","allowed","remaining","validatePermissions","resource","action","userRoles","getUserRoles","requiredPermission","some","role","getRolePermissions","includes","VITE_ENCRYPTION_KEY","commonPasswords","toLowerCase","sessionStorage","getItem","fetch","method","headers","body","JSON","stringify","auditLogs","localStorage","recentLogs","slice","setItem","rolePermissions","UserProfileSchema","object","id","string","uuid","email","full_name","min","avatar_url","url","optional","preferences","units","enum","language","notifications","boolean","WorkoutSchema","user_id","name","duration","number","int","exercises","sets","reps","weight","NutritionEntrySchema","food_name","calories","protein","carbs","fat","serving_size","WrappedComponent","requiredPermissions","SecurityWrapper","props","security","hasPermission","every","permission","split","component","createElement"],"sources":["/workspaces/MyFitHero/src/core/security/security.framework.ts"],"sourcesContent":["import React from 'react';\nimport { z } from 'zod';\nimport DOMPurify from 'dompurify';\nimport CryptoJS from 'crypto-js';\n\n// üõ°Ô∏è OWASP Top 10 Compliance Framework\nexport class SecurityFramework {\n  private static instance: SecurityFramework;\n  private encryptionKey: string;\n  \n  private constructor() {\n    this.encryptionKey = this.generateSecureKey();\n  }\n\n  public static getInstance(): SecurityFramework {\n    if (!SecurityFramework.instance) {\n      SecurityFramework.instance = new SecurityFramework();\n    }\n    return SecurityFramework.instance;\n  }\n\n  // üîê A03:2021 - Injection Prevention\n  public sanitizeInput(input: string, options: {\n    allowHtml?: boolean;\n    maxLength?: number;\n    allowedTags?: string[];\n  } = {}): string {\n    const { allowHtml = false, maxLength = 1000, allowedTags = [] } = options;\n\n    // Length validation\n    if (input.length > maxLength) {\n      throw new Error(`Input exceeds maximum length of ${maxLength} characters`);\n    }\n\n    if (!allowHtml) {\n      // Strip all HTML tags\n      return DOMPurify.sanitize(input, { ALLOWED_TAGS: [] });\n    }\n\n    // Allow only safe HTML tags\n    return DOMPurify.sanitize(input, { \n      ALLOWED_TAGS: allowedTags.length > 0 ? allowedTags : ['b', 'i', 'em', 'strong'],\n      ALLOWED_ATTR: ['class']\n    });\n  }\n\n  // üîí A02:2021 - Cryptographic Failures Prevention\n  public encryptSensitiveData(data: string): string {\n    try {\n      return CryptoJS.AES.encrypt(data, this.encryptionKey).toString();\n    } catch (error: any) {\n      console.error('Encryption failed:', error);\n      throw new Error('Failed to encrypt sensitive data');\n    }\n  }\n\n  public decryptSensitiveData(encryptedData: string): string {\n    try {\n      const bytes = CryptoJS.AES.decrypt(encryptedData, this.encryptionKey);\n      return bytes.toString(CryptoJS.enc.Utf8);\n    } catch (error: any) {\n      console.error('Decryption failed:', error);\n      throw new Error('Failed to decrypt data');\n    }\n  }\n\n  // üîë A07:2021 - Identification and Authentication Failures\n  public generateSecureToken(length: number = 32): string {\n    const array = new Uint8Array(length);\n    window.crypto.getRandomValues(array);\n    return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\n  }\n\n  public validatePassword(password: string): {\n    isValid: boolean;\n    score: number;\n    feedback: string[];\n  } {\n    const feedback: string[] = [];\n    let score = 0;\n\n    // Length check\n    if (password.length >= 12) {\n      score += 2;\n    } else if (password.length >= 8) {\n      score += 1;\n    } else {\n      feedback.push('Password must be at least 8 characters long');\n    }\n\n    // Complexity checks\n    if (/[a-z]/.test(password)) score += 1;\n    if (/[A-Z]/.test(password)) score += 1;\n    if (/[0-9]/.test(password)) score += 1;\n    if (/[^A-Za-z0-9]/.test(password)) score += 2;\n\n    // Common patterns\n    if (/(.)\\1{2,}/.test(password)) {\n      feedback.push('Avoid repeating characters');\n      score -= 1;\n    }\n\n    if (this.isCommonPassword(password)) {\n      feedback.push('This is a commonly used password');\n      score -= 2;\n    }\n\n    const isValid = score >= 5 && feedback.length === 0;\n\n    return { isValid, score: Math.max(0, score), feedback };\n  }\n\n  // üõ°Ô∏è A05:2021 - Security Misconfiguration\n  public getSecurityHeaders(): Record<string, string> {\n    return {\n      'Content-Security-Policy': this.generateCSP(),\n      'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload',\n      'X-Content-Type-Options': 'nosniff',\n      'X-Frame-Options': 'DENY',\n      'X-XSS-Protection': '1; mode=block',\n      'Referrer-Policy': 'strict-origin-when-cross-origin',\n      'Permissions-Policy': 'geolocation=(), microphone=(), camera=()',\n    };\n  }\n\n  private generateCSP(): string {\n    const nonce = this.generateSecureToken(16);\n    \n    return [\n      \"default-src 'self'\",\n      `script-src 'self' 'nonce-${nonce}' https://cdn.jsdelivr.net`,\n      \"style-src 'self' 'unsafe-inline' https://fonts.googleapis.com\",\n      \"font-src 'self' https://fonts.gstatic.com\",\n      \"img-src 'self' data: https: blob:\",\n      \"connect-src 'self' https://api.supabase.co wss://realtime.supabase.co\",\n      \"media-src 'self'\",\n      \"object-src 'none'\",\n      \"base-uri 'self'\",\n      \"form-action 'self'\",\n      \"frame-ancestors 'none'\",\n      \"upgrade-insecure-requests\"\n    ].join('; ');\n  }\n\n  // üîç A08:2021 - Software and Data Integrity Failures\n  public validateDataIntegrity(data: any, expectedSchema: z.ZodSchema): {\n    isValid: boolean;\n    data: any;\n    errors: string[];\n  } {\n    try {\n      const validatedData = expectedSchema.parse(data);\n      return {\n        isValid: true,\n        data: validatedData,\n        errors: []\n      };\n    } catch (error: any) {\n      if (error instanceof z.ZodError) {\n        return {\n          isValid: false,\n          data: null,\n          errors: error.errors.map((e, index) => `${e.path.join('.')}: ${e.message}`)\n        };\n      }\n      return {\n        isValid: false,\n        data: null,\n        errors: ['Unknown validation error']\n      };\n    }\n  }\n\n  // üö® A09:2021 - Security Logging and Monitoring\n  public logSecurityEvent(event: SecurityEvent): void {\n    const logEntry = {\n      timestamp: new Date().toISOString(),\n      eventType: event.type,\n      severity: event.severity,\n      userId: event.userId,\n      ipAddress: this.getClientIP(),\n      userAgent: navigator.userAgent,\n      details: event.details,\n      sessionId: this.getSessionId()\n    };\n\n    // In production, send to security monitoring service\n    if (import.meta.env.PROD) {\n      this.sendToSecurityMonitoring(logEntry);\n    } else {\n      console.warn('Security Event:', logEntry);\n    }\n\n    // Critical events should also be stored locally for audit\n    if (event.severity === 'critical' || event.severity === 'high') {\n      this.storeAuditLog(logEntry);\n    }\n  }\n\n  // üîê Rate Limiting\n  private rateLimitStore = new Map<string, { count: number; resetTime: number }>();\n\n  public checkRateLimit(identifier: string, maxRequests: number = 100, windowMs: number = 900000): {\n    allowed: boolean;\n    remaining: number;\n    resetTime: number;\n  } {\n    const now = Date.now();\n    const key = `rateLimit:${identifier}`;\n    const current = this.rateLimitStore.get(key);\n\n    if (!current || now > current.resetTime) {\n      // Reset or first request\n      const resetTime = now + windowMs;\n      this.rateLimitStore.set(key, { count: 1, resetTime });\n      return {\n        allowed: true,\n        remaining: maxRequests - 1,\n        resetTime\n      };\n    }\n\n    if (current.count >= maxRequests) {\n      return {\n        allowed: false,\n        remaining: 0,\n        resetTime: current.resetTime\n      };\n    }\n\n    current.count++;\n    this.rateLimitStore.set(key, current);\n\n    return {\n      allowed: true,\n      remaining: maxRequests - current.count,\n      resetTime: current.resetTime\n    };\n  }\n\n  // üîç A01:2021 - Broken Access Control\n  public validatePermissions(userId: string, resource: string, action: string): boolean {\n    // Implement role-based access control (RBAC)\n    const userRoles = this.getUserRoles(userId);\n    const requiredPermission = `${resource}:${action}`;\n    \n    return userRoles.some(role => \n      this.getRolePermissions(role).includes(requiredPermission)\n    );\n  }\n\n  // Helper methods\n  private generateSecureKey(): string {\n    return import.meta.env.VITE_ENCRYPTION_KEY || this.generateSecureToken(64);\n  }\n\n  private isCommonPassword(password: string): boolean {\n    const commonPasswords = [\n      'password', '123456', '123456789', 'qwerty', 'abc123',\n      'password123', 'admin', 'letmein', 'welcome', 'monkey'\n    ];\n    return commonPasswords.includes(password.toLowerCase());\n  }\n\n  private getClientIP(): string {\n    // This would be set by your reverse proxy/CDN\n    return 'client-ip-masked-for-privacy';\n  }\n\n  private getSessionId(): string {\n    // Get from auth store or generate\n    return sessionStorage.getItem('sessionId') || this.generateSecureToken();\n  }\n\n  private async sendToSecurityMonitoring(logEntry: any): Promise<void> {\n    try {\n      // Send to Sentry, DataDog, or other monitoring service\n      await fetch('/api/security/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(logEntry)\n      });\n    } catch (error: any) {\n      console.error('Failed to send security event:', error);\n    }\n  }\n\n  private storeAuditLog(logEntry: any): void {\n    try {\n      const auditLogs = JSON.parse(localStorage.getItem('auditLogs') || '[]');\n      auditLogs.push(logEntry);\n      \n      // Keep only last 100 entries\n      const recentLogs = auditLogs.slice(-100);\n      localStorage.setItem('auditLogs', JSON.stringify(recentLogs));\n    } catch (error: any) {\n      console.error('Failed to store audit log:', error);\n    }\n  }\n\n  private getUserRoles(userId: string): string[] {\n    // In real app, fetch from auth service\n    return ['user']; // Default role\n  }\n\n  private getRolePermissions(role: string): string[] {\n    const rolePermissions: Record<string, string[]> = {\n      'admin': ['*:*'],\n      'user': ['profile:read', 'profile:update', 'workouts:*', 'nutrition:*'],\n      'premium': ['profile:*', 'workouts:*', 'nutrition:*', 'ai-coach:*'],\n    };\n    \n    return rolePermissions[role] || [];\n  }\n}\n\n// Types\nexport interface SecurityEvent {\n  type: 'authentication_failure' | 'authorization_failure' | 'suspicious_activity' | 'data_breach_attempt' | 'rate_limit_exceeded';\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  userId?: string;\n  details: Record<string, any>;\n}\n\n// Schemas for data validation\nexport const UserProfileSchema = z.object({\n  id: z.string().uuid(),\n  email: z.string().email(),\n  full_name: z.string().min(1).max(100),\n  avatar_url: z.string().url().optional(),\n  preferences: z.object({\n    units: z.enum(['metric', 'imperial']),\n    language: z.enum(['en', 'fr']),\n    notifications: z.boolean()\n  }).optional()\n});\n\nexport const WorkoutSchema = z.object({\n  id: z.string().uuid().optional(),\n  user_id: z.string().uuid(),\n  name: z.string().min(1).max(200),\n  type: z.enum(['strength', 'cardio', 'flexibility', 'sports']),\n  duration: z.number().int().min(1).max(480), // 8 hours max\n  exercises: z.array(z.object({\n    id: z.string().uuid().optional(),\n    name: z.string().min(1).max(100),\n    sets: z.number().int().min(1).max(20).optional(),\n    reps: z.number().int().min(1).max(1000).optional(),\n    weight: z.number().min(0).max(1000).optional()\n  }))\n});\n\nexport const NutritionEntrySchema = z.object({\n  id: z.string().uuid().optional(),\n  user_id: z.string().uuid(),\n  food_name: z.string().min(1).max(200),\n  calories: z.number().min(0).max(10000),\n  protein: z.number().min(0).max(1000),\n  carbs: z.number().min(0).max(1000),\n  fat: z.number().min(0).max(1000),\n  serving_size: z.string().max(100).optional()\n});\n\n// Security middleware for React components\nexport function withSecurity<T extends {}>(\n  WrappedComponent: React.ComponentType<T>,\n  requiredPermissions?: string[]\n) {\n  return function SecurityWrapper(props: T) {\n    const security = SecurityFramework.getInstance();\n    \n    // Check permissions if required\n    if (requiredPermissions) {\n      const userId = 'current-user-id'; // Get from auth context\n      const hasPermission = requiredPermissions.every(permission => {\n        const [resource, action] = permission.split(':');\n        return security.validatePermissions(userId, resource, action);\n      });\n\n      if (!hasPermission) {\n        security.logSecurityEvent({\n          type: 'authorization_failure',\n          severity: 'medium',\n          userId,\n          details: { requiredPermissions, component: WrappedComponent.name }\n        });\n        \n        return null;\n      }\n    }\n\n    return React.createElement(WrappedComponent, props);\n  };\n}\n\n// Export singleton instance\nexport const security = SecurityFramework.getInstance();"],"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","ignoreList":[]}