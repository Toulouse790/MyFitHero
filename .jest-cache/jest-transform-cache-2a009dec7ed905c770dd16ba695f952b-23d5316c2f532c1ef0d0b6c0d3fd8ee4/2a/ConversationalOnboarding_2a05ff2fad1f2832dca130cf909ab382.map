{"version":3,"names":["exports","default","ConversationalOnboarding","react_1","cov_22mkhkkep5","s","__importStar","require","card_1","button_1","input_1","progress_1","lucide_react_1","use_toast_1","conversationalFlow_1","onboardingData_1","sportsService_1","__importDefault","cn","classes","f","filter","Boolean","join","onComplete","onSkip","initialData","b","debug","toast","useToast","sportsService","dynamicSports","AVAILABLE_SPORTS","sportsLoading","state","setState","useState","currentStepId","data","progress","currentStep","completedSteps","skippedSteps","totalSteps","CONVERSATIONAL_ONBOARDING_FLOW","length","estimatedTimeLeft","timeSpent","startedAt","Date","lastActivity","averageTimePerStep","skipCount","backCount","errorCount","helpViewCount","moduleSpecificSteps","sport","steps","completed","skipped","strength","nutrition","hydration","sleep","wellness","userPreferences","preferredInputTypes","skipsTendency","detailLevel","pace","completionQuality","validationScore","consistencyScore","version","lastUpdated","selectedPack","undefined","selectedModules","firstName","age","gender","lifestyle","mainObjective","sportPosition","sportLevel","seasonPeriod","trainingFrequency","equipmentLevel","strengthObjective","strengthExperience","dietaryPreference","foodAllergies","nutritionObjective","dietaryRestrictions","averageSleepHours","sleepDifficulties","hydrationGoal","hydrationReminders","motivation","availableTimePerDay","privacyConsent","marketingConsent","healthConditions","fitnessGoals","currentWeight","targetWeight","height","currentResponse","validationErrors","isLoading","showTips","selectedSport","stepHistory","completedModuleSteps","startTime","availableSteps","jsx_runtime_1","jsx","className","children","jsxs","Card","CardHeader","CardTitle","User","CardContent","Progress","value","Input","placeholder","Button","variant","ChevronLeft","ChevronRight"],"sources":["/workspaces/MyFitHero/src/features/auth/components/ConversationalOnboarding.tsx"],"sourcesContent":["// client/src/components/ConversationalOnboarding.tsx\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Slider } from '@/components/ui/slider';\nimport { Switch } from '@/components/ui/switch';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  ChevronRight,\n  ChevronLeft,\n  Clock,\n  Star,\n  Check,\n  AlertCircle,\n  User,\n  Target,\n  Zap,\n  Heart,\n  Shield,\n  Settings,\n  BookOpen,\n  Award,\n  Coffee,\n  Moon,\n  Droplets,\n  Brain,\n  Package,\n} from 'lucide-react';\nimport { supabase } from '@/lib/supabase';\nimport { useToast } from '@/shared/hooks/use-toast';\nimport {\n  ConversationalStep,\n  OnboardingData,\n  ValidationRule,\n  QuestionOption,\n} from '@/features/auth/types/conversationalOnboarding';\nimport {\n  CONVERSATIONAL_ONBOARDING_FLOW,\n  getConditionalNextStep,\n  calculateEstimatedTime,\n} from '@/features/auth/data/conversationalFlow';\nimport {\n  AVAILABLE_SPORTS,\n  MAIN_OBJECTIVES,\n  AVAILABLE_MODULES,\n  LIFESTYLE_OPTIONS,\n  DIETARY_PREFERENCES,\n  STRENGTH_OBJECTIVES,\n  NUTRITION_OBJECTIVES,\n  FITNESS_EXPERIENCE_LEVELS,\n  EQUIPMENT_LEVELS,\n  SPORT_LEVELS,\n  SEASON_PERIODS,\n  TRAINING_AVAILABILITY,\n  HEALTH_CONDITIONS,\n} from '@/features/auth/data/onboardingData';\nimport { SMART_PACKS } from '@/features/auth/data/smartPacks';\nimport SportSelector from '@/features/auth/components/SportSelector';\nimport PositionSelector from '@/features/auth/components/PositionSelector';\nimport SportsService, { type SportOption } from '@/features/auth/services/sportsService';\n\n// Utility function to combine classNames\nconst cn = (...classes: (string | boolean | undefined)[]) => {\n  return classes.filter(Boolean).join(' ');\n};\n\ninterface ConversationalOnboardingProps {\n  onComplete: (data: OnboardingData) => void;\n  onSkip?: () => void;\n  initialData?: Partial<OnboardingData>;\n  debug?: boolean;\n}\n\ninterface OnboardingState {\n  currentStepId: string;\n  data: OnboardingData;\n  currentResponse: any;\n  validationErrors: string[];\n  isLoading: boolean;\n  showTips: boolean;\n  selectedSport: SportOption | undefined;\n  stepHistory: string[];\n  completedModuleSteps: Record<string, string[]>;\n  skipCount: number;\n  startTime: Date;\n  availableSteps: string[]; // Étapes disponibles selon le pack\n}\n\nexport default function ConversationalOnboarding({\n  onComplete,\n  onSkip,\n  initialData = {},\n  debug = false,\n}: ConversationalOnboardingProps) {\n  const { toast } = useToast();\n  const sportsService = new SportsService();\n  const dynamicSports = AVAILABLE_SPORTS;\n  const sportsLoading = false;\n\n  // État principal consolidé\n  const [state, setState] = useState<OnboardingState>(() => ({\n    currentStepId: 'welcome', // Premier step du flow\n    data: {\n      ...initialData,\n      progress: {\n        currentStep: 'welcome',\n        completedSteps: [],\n        skippedSteps: [],\n        totalSteps: CONVERSATIONAL_ONBOARDING_FLOW.length,\n        estimatedTimeLeft: 15,\n        timeSpent: 0,\n        startedAt: new Date(),\n        lastActivity: new Date(),\n        averageTimePerStep: 0,\n        skipCount: 0,\n        backCount: 0,\n        errorCount: 0,\n        helpViewCount: 0,\n        moduleSpecificSteps: {\n          sport: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n          strength: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n          nutrition: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n          hydration: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n          sleep: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n          wellness: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n        },\n        userPreferences: {\n          preferredInputTypes: [],\n          skipsTendency: 0,\n          detailLevel: 'standard',\n          pace: 'normal',\n        },\n        completionQuality: 0,\n        validationScore: 100,\n        consistencyScore: 100,\n      },\n      version: '1.0',\n      startedAt: new Date(),\n      lastUpdated: new Date(),\n      // Valeurs par défaut\n      selectedPack: initialData.selectedPack || undefined,\n      selectedModules: initialData.selectedModules || [],\n      firstName: initialData.firstName || '',\n      age: initialData.age ?? undefined,\n      gender: initialData.gender,\n      lifestyle: initialData.lifestyle,\n      mainObjective: initialData.mainObjective,\n      sport: initialData.sport || '',\n      sportPosition: initialData.sportPosition || '',\n      sportLevel: initialData.sportLevel,\n      seasonPeriod: initialData.seasonPeriod,\n      trainingFrequency: initialData.trainingFrequency || '',\n      equipmentLevel: initialData.equipmentLevel,\n      strengthObjective: initialData.strengthObjective,\n      strengthExperience: initialData.strengthExperience,\n      dietaryPreference: initialData.dietaryPreference,\n      foodAllergies: initialData.foodAllergies || [],\n      nutritionObjective: initialData.nutritionObjective,\n      dietaryRestrictions: initialData.dietaryRestrictions || [],\n      averageSleepHours: initialData.averageSleepHours || 8,\n      sleepDifficulties: initialData.sleepDifficulties || [],\n      hydrationGoal: initialData.hydrationGoal || 2.5,\n      hydrationReminders: initialData.hydrationReminders !== undefined ? initialData.hydrationReminders : true,\n      motivation: initialData.motivation || '',\n      availableTimePerDay: initialData.availableTimePerDay || 60,\n      privacyConsent: initialData.privacyConsent || false,\n      marketingConsent: initialData.marketingConsent || false,\n      healthConditions: initialData.healthConditions || [],\n      fitnessGoals: initialData.fitnessGoals || [],\n      currentWeight: initialData.currentWeight ?? undefined,\n      targetWeight: initialData.targetWeight ?? undefined,\n      height: initialData.height ?? undefined,\n    },\n    currentResponse: null,\n    validationErrors: [],\n    isLoading: false,\n    showTips: false,\n    selectedSport: null,\n    stepHistory: [],\n    completedModuleSteps: {},\n    skipCount: 0,\n    startTime: new Date(),\n    availableSteps: [], // Sera mis à jour selon le pack\n  }));\n\n  // Simple render for now - can be extended later\n  return (\n    <div className=\"max-w-2xl mx-auto p-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <User className=\"w-5 h-5\" />\n            Bienvenue sur MyFitHero !\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-600\">\n              Commençons par configurer votre profil pour une expérience personnalisée.\n            </p>\n            \n            {/* Progress bar */}\n            <Progress value={33} className=\"w-full\" />\n            \n            <Input \n              placeholder=\"Votre prénom...\"\n              className=\"w-full\"\n            />\n            \n            <div className=\"flex gap-2\">\n              <Button variant=\"outline\" className=\"flex-1\">\n                <ChevronLeft className=\"w-4 h-4 mr-2\" />\n                Précédent\n              </Button>\n              <Button className=\"flex-1\">\n                Suivant\n                <ChevronRight className=\"w-4 h-4 ml-2\" />\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"mappingswBAAA;;;;AA3FA;AACA,MAAAC,OAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,QAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,MAAA;AAAA;AAAA,CAAAJ,cAAA,GAAAC,CAAA,QAAAE,OAAA;AACA,MAAAE,QAAA;AAAA;AAAA,CAAAL,cAAA,GAAAC,CAAA,QAAAE,OAAA;AACA,MAAAG,OAAA;AAAA;AAAA,CAAAN,cAAA,GAAAC,CAAA,QAAAE,OAAA;AAIA,MAAAI,UAAA;AAAA;AAAA,CAAAP,cAAA,GAAAC,CAAA,QAAAE,OAAA;AAEA,MAAAK,cAAA;AAAA;AAAA,CAAAR,cAAA,GAAAC,CAAA,QAAAE,OAAA;AAsBA,MAAAM,WAAA;AAAA;AAAA,CAAAT,cAAA,GAAAC,CAAA,QAAAE,OAAA;AAOA,MAAAO,oBAAA;AAAA;AAAA,CAAAV,cAAA,GAAAC,CAAA,QAAAE,OAAA;AAKA,MAAAQ,gBAAA;AAAA;AAAA,CAAAX,cAAA,GAAAC,CAAA,QAAAE,OAAA;AAkBA,MAAAS,eAAA;AAAA;AAAA,CAAAZ,cAAA,GAAAC,CAAA,QAAAY,eAAA,CAAAV,OAAA;AAEA;AAAA;AAAAH,cAAA,GAAAC,CAAA;AACA,MAAMa,EAAE,GAAGA,CAAC,GAAGC,OAAyC,KAAI;EAAA;EAAAf,cAAA,GAAAgB,CAAA;EAAAhB,cAAA,GAAAC,CAAA;EAC1D,OAAOc,OAAO,CAACE,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAC1C,CAAC;AAwBD,SAAwBrB,wBAAwBA,CAAC;EAC/CsB,UAAU;EACVC,MAAM;EACNC,WAAW;EAAA;EAAA,CAAAtB,cAAA,GAAAuB,CAAA,WAAG,EAAE;EAChBC,KAAK;EAAA;EAAA,CAAAxB,cAAA,GAAAuB,CAAA,WAAG,KAAK;AAAA,CACiB;EAAA;EAAAvB,cAAA,GAAAgB,CAAA;EAC9B,MAAM;IAAES;EAAK,CAAE;EAAA;EAAA,CAAAzB,cAAA,GAAAC,CAAA,QAAG,IAAAQ,WAAA,CAAAiB,QAAQ,GAAE;EAC5B,MAAMC,aAAa;EAAA;EAAA,CAAA3B,cAAA,GAAAC,CAAA,QAAG,IAAIW,eAAA,CAAAf,OAAa,EAAE;EACzC,MAAM+B,aAAa;EAAA;EAAA,CAAA5B,cAAA,GAAAC,CAAA,QAAGU,gBAAA,CAAAkB,gBAAgB;EACtC,MAAMC,aAAa;EAAA;EAAA,CAAA9B,cAAA,GAAAC,CAAA,QAAG,KAAK;EAE3B;EACA,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC;EAAA;EAAA,CAAAhC,cAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAAkC,QAAQ,EAAkB,MAAO;IAAA;IAAAjC,cAAA,GAAAgB,CAAA;IAAAhB,cAAA,GAAAC,CAAA;IAAA;MACzDiC,aAAa,EAAE,SAAS;MAAE;MAC1BC,IAAI,EAAE;QACJ,GAAGb,WAAW;QACdc,QAAQ,EAAE;UACRC,WAAW,EAAE,SAAS;UACtBC,cAAc,EAAE,EAAE;UAClBC,YAAY,EAAE,EAAE;UAChBC,UAAU,EAAE9B,oBAAA,CAAA+B,8BAA8B,CAACC,MAAM;UACjDC,iBAAiB,EAAE,EAAE;UACrBC,SAAS,EAAE,CAAC;UACZC,SAAS,EAAE,IAAIC,IAAI,EAAE;UACrBC,YAAY,EAAE,IAAID,IAAI,EAAE;UACxBE,kBAAkB,EAAE,CAAC;UACrBC,SAAS,EAAE,CAAC;UACZC,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE,CAAC;UACbC,aAAa,EAAE,CAAC;UAChBC,mBAAmB,EAAE;YACnBC,KAAK,EAAE;cAAEC,KAAK,EAAE,EAAE;cAAEC,SAAS,EAAE,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEb,SAAS,EAAE;YAAC,CAAE;YAC9Dc,QAAQ,EAAE;cAAEH,KAAK,EAAE,EAAE;cAAEC,SAAS,EAAE,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEb,SAAS,EAAE;YAAC,CAAE;YACjEe,SAAS,EAAE;cAAEJ,KAAK,EAAE,EAAE;cAAEC,SAAS,EAAE,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEb,SAAS,EAAE;YAAC,CAAE;YAClEgB,SAAS,EAAE;cAAEL,KAAK,EAAE,EAAE;cAAEC,SAAS,EAAE,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEb,SAAS,EAAE;YAAC,CAAE;YAClEiB,KAAK,EAAE;cAAEN,KAAK,EAAE,EAAE;cAAEC,SAAS,EAAE,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEb,SAAS,EAAE;YAAC,CAAE;YAC9DkB,QAAQ,EAAE;cAAEP,KAAK,EAAE,EAAE;cAAEC,SAAS,EAAE,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEb,SAAS,EAAE;YAAC;WAChE;UACDmB,eAAe,EAAE;YACfC,mBAAmB,EAAE,EAAE;YACvBC,aAAa,EAAE,CAAC;YAChBC,WAAW,EAAE,UAAU;YACvBC,IAAI,EAAE;WACP;UACDC,iBAAiB,EAAE,CAAC;UACpBC,eAAe,EAAE,GAAG;UACpBC,gBAAgB,EAAE;SACnB;QACDC,OAAO,EAAE,KAAK;QACd1B,SAAS,EAAE,IAAIC,IAAI,EAAE;QACrB0B,WAAW,EAAE,IAAI1B,IAAI,EAAE;QACvB;QACA2B,YAAY;QAAE;QAAA,CAAAzE,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACmD,YAAY;QAAA;QAAA,CAAAzE,cAAA,GAAAuB,CAAA,WAAImD,SAAS;QACnDC,eAAe;QAAE;QAAA,CAAA3E,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACqD,eAAe;QAAA;QAAA,CAAA3E,cAAA,GAAAuB,CAAA,WAAI,EAAE;QAClDqD,SAAS;QAAE;QAAA,CAAA5E,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACsD,SAAS;QAAA;QAAA,CAAA5E,cAAA,GAAAuB,CAAA,WAAI,EAAE;QACtCsD,GAAG;QAAE;QAAA,CAAA7E,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACuD,GAAG;QAAA;QAAA,CAAA7E,cAAA,GAAAuB,CAAA,WAAImD,SAAS;QACjCI,MAAM,EAAExD,WAAW,CAACwD,MAAM;QAC1BC,SAAS,EAAEzD,WAAW,CAACyD,SAAS;QAChCC,aAAa,EAAE1D,WAAW,CAAC0D,aAAa;QACxC1B,KAAK;QAAE;QAAA,CAAAtD,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACgC,KAAK;QAAA;QAAA,CAAAtD,cAAA,GAAAuB,CAAA,WAAI,EAAE;QAC9B0D,aAAa;QAAE;QAAA,CAAAjF,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAAC2D,aAAa;QAAA;QAAA,CAAAjF,cAAA,GAAAuB,CAAA,WAAI,EAAE;QAC9C2D,UAAU,EAAE5D,WAAW,CAAC4D,UAAU;QAClCC,YAAY,EAAE7D,WAAW,CAAC6D,YAAY;QACtCC,iBAAiB;QAAE;QAAA,CAAApF,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAAC8D,iBAAiB;QAAA;QAAA,CAAApF,cAAA,GAAAuB,CAAA,WAAI,EAAE;QACtD8D,cAAc,EAAE/D,WAAW,CAAC+D,cAAc;QAC1CC,iBAAiB,EAAEhE,WAAW,CAACgE,iBAAiB;QAChDC,kBAAkB,EAAEjE,WAAW,CAACiE,kBAAkB;QAClDC,iBAAiB,EAAElE,WAAW,CAACkE,iBAAiB;QAChDC,aAAa;QAAE;QAAA,CAAAzF,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACmE,aAAa;QAAA;QAAA,CAAAzF,cAAA,GAAAuB,CAAA,WAAI,EAAE;QAC9CmE,kBAAkB,EAAEpE,WAAW,CAACoE,kBAAkB;QAClDC,mBAAmB;QAAE;QAAA,CAAA3F,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACqE,mBAAmB;QAAA;QAAA,CAAA3F,cAAA,GAAAuB,CAAA,WAAI,EAAE;QAC1DqE,iBAAiB;QAAE;QAAA,CAAA5F,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACsE,iBAAiB;QAAA;QAAA,CAAA5F,cAAA,GAAAuB,CAAA,WAAI,CAAC;QACrDsE,iBAAiB;QAAE;QAAA,CAAA7F,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACuE,iBAAiB;QAAA;QAAA,CAAA7F,cAAA,GAAAuB,CAAA,WAAI,EAAE;QACtDuE,aAAa;QAAE;QAAA,CAAA9F,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACwE,aAAa;QAAA;QAAA,CAAA9F,cAAA,GAAAuB,CAAA,WAAI,GAAG;QAC/CwE,kBAAkB,EAAEzE,WAAW,CAACyE,kBAAkB,KAAKrB,SAAS;QAAA;QAAA,CAAA1E,cAAA,GAAAuB,CAAA,WAAGD,WAAW,CAACyE,kBAAkB;QAAA;QAAA,CAAA/F,cAAA,GAAAuB,CAAA,WAAG,IAAI;QACxGyE,UAAU;QAAE;QAAA,CAAAhG,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAAC0E,UAAU;QAAA;QAAA,CAAAhG,cAAA,GAAAuB,CAAA,WAAI,EAAE;QACxC0E,mBAAmB;QAAE;QAAA,CAAAjG,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAAC2E,mBAAmB;QAAA;QAAA,CAAAjG,cAAA,GAAAuB,CAAA,WAAI,EAAE;QAC1D2E,cAAc;QAAE;QAAA,CAAAlG,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAAC4E,cAAc;QAAA;QAAA,CAAAlG,cAAA,GAAAuB,CAAA,WAAI,KAAK;QACnD4E,gBAAgB;QAAE;QAAA,CAAAnG,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAAC6E,gBAAgB;QAAA;QAAA,CAAAnG,cAAA,GAAAuB,CAAA,WAAI,KAAK;QACvD6E,gBAAgB;QAAE;QAAA,CAAApG,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAAC8E,gBAAgB;QAAA;QAAA,CAAApG,cAAA,GAAAuB,CAAA,WAAI,EAAE;QACpD8E,YAAY;QAAE;QAAA,CAAArG,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAAC+E,YAAY;QAAA;QAAA,CAAArG,cAAA,GAAAuB,CAAA,WAAI,EAAE;QAC5C+E,aAAa;QAAE;QAAA,CAAAtG,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACgF,aAAa;QAAA;QAAA,CAAAtG,cAAA,GAAAuB,CAAA,WAAImD,SAAS;QACrD6B,YAAY;QAAE;QAAA,CAAAvG,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACiF,YAAY;QAAA;QAAA,CAAAvG,cAAA,GAAAuB,CAAA,WAAImD,SAAS;QACnD8B,MAAM;QAAE;QAAA,CAAAxG,cAAA,GAAAuB,CAAA,WAAAD,WAAW,CAACkF,MAAM;QAAA;QAAA,CAAAxG,cAAA,GAAAuB,CAAA,WAAImD,SAAS;OACxC;MACD+B,eAAe,EAAE,IAAI;MACrBC,gBAAgB,EAAE,EAAE;MACpBC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE,KAAK;MACfC,aAAa,EAAE,IAAI;MACnBC,WAAW,EAAE,EAAE;MACfC,oBAAoB,EAAE,EAAE;MACxB9D,SAAS,EAAE,CAAC;MACZ+D,SAAS,EAAE,IAAIlE,IAAI,EAAE;MACrBmE,cAAc,EAAE,EAAE,CAAE;KACrB;GAAC,CAAC;EAEH;EAAA;EAAAjH,cAAA,GAAAC,CAAA;EACA,OACE,IAAAiH,aAAA,CAAAC,GAAA;IAAKC,SAAS,EAAC,uBAAuB;IAAAC,QAAA,EACpC,IAAAH,aAAA,CAAAI,IAAA,EAAClH,MAAA,CAAAmH,IAAI;MAAAF,QAAA,GACH,IAAAH,aAAA,CAAAC,GAAA,EAAC/G,MAAA,CAAAoH,UAAU;QAAAH,QAAA,EACT,IAAAH,aAAA,CAAAI,IAAA,EAAClH,MAAA,CAAAqH,SAAS;UAACL,SAAS,EAAC,yBAAyB;UAAAC,QAAA,GAC5C,IAAAH,aAAA,CAAAC,GAAA,EAAC3G,cAAA,CAAAkH,IAAI;YAACN,SAAS,EAAC;UAAS,EAAG;QAAA;MAElB,EACD,EACb,IAAAF,aAAA,CAAAC,GAAA,EAAC/G,MAAA,CAAAuH,WAAW;QAAAN,QAAA,EACV,IAAAH,aAAA,CAAAI,IAAA;UAAKF,SAAS,EAAC,WAAW;UAAAC,QAAA,GACxB,IAAAH,aAAA,CAAAC,GAAA;YAAGC,SAAS,EAAC,eAAe;YAAAC,QAAA;UAAA,EAExB,EAGJ,IAAAH,aAAA,CAAAC,GAAA,EAAC5G,UAAA,CAAAqH,QAAQ;YAACC,KAAK,EAAE,EAAE;YAAET,SAAS,EAAC;UAAQ,EAAG,EAE1C,IAAAF,aAAA,CAAAC,GAAA,EAAC7G,OAAA,CAAAwH,KAAK;YACJC,WAAW,EAAC,sBAAiB;YAC7BX,SAAS,EAAC;UAAQ,EAClB,EAEF,IAAAF,aAAA,CAAAI,IAAA;YAAKF,SAAS,EAAC,YAAY;YAAAC,QAAA,GACzB,IAAAH,aAAA,CAAAI,IAAA,EAACjH,QAAA,CAAA2H,MAAM;cAACC,OAAO,EAAC,SAAS;cAACb,SAAS,EAAC,QAAQ;cAAAC,QAAA,GAC1C,IAAAH,aAAA,CAAAC,GAAA,EAAC3G,cAAA,CAAA0H,WAAW;gBAACd,SAAS,EAAC;cAAc,EAAG;YAAA,EAEjC,EACT,IAAAF,aAAA,CAAAI,IAAA,EAACjH,QAAA,CAAA2H,MAAM;cAACZ,SAAS,EAAC,QAAQ;cAAAC,QAAA,cAExB,IAAAH,aAAA,CAAAC,GAAA,EAAC3G,cAAA,CAAA2H,YAAY;gBAACf,SAAS,EAAC;cAAc,EAAG;YAAA,EAClC;UAAA,EACL;QAAA;MACF,EACM;IAAA;EACT,EACH;AAEV","ignoreList":[]}