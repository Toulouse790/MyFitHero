{"version":3,"names":["react_1","cov_ylif6311y","s","__importStar","require","ThemeContext","createContext","undefined","lightColors","primary","secondary","accent","background","surface","text","textSecondary","border","success","warning","error","info","darkColors","ThemeProvider","children","f","theme","setTheme","default","useState","getEffectiveTheme","b","window","matchMedia","matches","effectiveTheme","adaptiveColors","contextValue","jsx_runtime_1","jsx","Provider","value","className","exports","useAdaptiveColors","context","useContext","useTheme","Error","generateAdaptiveColor","baseColor","themeClasses","lightClass","darkClass"],"sources":["/workspaces/MyFitHero/src/shared/components/ThemeProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\n\n// Types pour les couleurs adaptatives\ninterface AdaptiveColors {\n  primary: string;\n  secondary: string;\n  accent: string;\n  background: string;\n  surface: string;\n  text: string;\n  textSecondary: string;\n  border: string;\n  success: string;\n  warning: string;\n  error: string;\n  info: string;\n}\n\n// Context pour le thème\ninterface ThemeContextValue {\n  theme: 'light' | 'dark' | 'auto';\n  adaptiveColors: AdaptiveColors;\n  setTheme: (theme: 'light' | 'dark' | 'auto') => void;\n}\n\nconst ThemeContext = createContext<ThemeContextValue | undefined>(undefined);\n\n// Couleurs pour thème clair\nconst lightColors: AdaptiveColors = {\n  primary: '#3B82F6',\n  secondary: '#64748B',\n  accent: '#8B5CF6',\n  background: '#FFFFFF',\n  surface: '#F8FAFC',\n  text: '#1E293B',\n  textSecondary: '#64748B',\n  border: '#E2E8F0',\n  success: '#10B981',\n  warning: '#F59E0B',\n  error: '#EF4444',\n  info: '#3B82F6',\n};\n\n// Couleurs pour thème sombre\nconst darkColors: AdaptiveColors = {\n  primary: '#60A5FA',\n  secondary: '#94A3B8',\n  accent: '#A78BFA',\n  background: '#0F172A',\n  surface: '#1E293B',\n  text: '#F1F5F9',\n  textSecondary: '#94A3B8',\n  border: '#334155',\n  success: '#34D399',\n  warning: '#FBBF24',\n  error: '#F87171',\n  info: '#60A5FA',\n};\n\n// Provider pour le thème\nexport const ThemeProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [theme, setTheme] = React.useState<'light' | 'dark' | 'auto'>('auto');\n\n  // Déterminer le thème actuel\n  const getEffectiveTheme = () => {\n    if (theme === 'auto') {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    return theme;\n  };\n\n  const effectiveTheme = getEffectiveTheme();\n  const adaptiveColors = effectiveTheme === 'dark' ? darkColors : lightColors;\n\n  const contextValue: ThemeContextValue = {\n    theme,\n    adaptiveColors,\n    setTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      <div className={effectiveTheme === 'dark' ? 'dark' : 'light'}>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\n// Hook pour utiliser les couleurs adaptatives\nexport const useAdaptiveColors = (): AdaptiveColors => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    // Retourner les couleurs par défaut si pas de provider\n    return lightColors;\n  }\n  return context.adaptiveColors;\n};\n\n// Hook pour le thème complet\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\n// Helper pour générer des couleurs personnalisées\nexport const generateAdaptiveColor = (baseColor: string, theme: 'light' | 'dark') => {\n  // Simple logic pour adapter les couleurs selon le thème\n  if (theme === 'dark') {\n    // Rendre les couleurs plus claires en mode sombre\n    return `color-mix(in srgb, ${baseColor} 80%, white 20%)`;\n  } else {\n    // Garder les couleurs originales en mode clair\n    return baseColor;\n  }\n};\n\n// Utilitaire pour les classes CSS conditionnelles selon le thème\nexport const themeClasses = (lightClass: string, darkClass: string) => {\n  return `${lightClass} dark:${darkClass}`;\n};"],"mappingsaAAA,GAAAC,CAAA,QAAAC,YAAA,CAAAC,OAAA;AAyBA,MAAMC,YAAY;AAAA;AAAA,CAAAJ,aAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAAM,aAAa,EAAgCC,SAAS,CAAC;AAE5E;AACA,MAAMC,WAAW;AAAA;AAAA,CAAAP,aAAA,GAAAC,CAAA,QAAmB;EAClCO,OAAO,EAAE,SAAS;EAClBC,SAAS,EAAE,SAAS;EACpBC,MAAM,EAAE,SAAS;EACjBC,UAAU,EAAE,SAAS;EACrBC,OAAO,EAAE,SAAS;EAClBC,IAAI,EAAE,SAAS;EACfC,aAAa,EAAE,SAAS;EACxBC,MAAM,EAAE,SAAS;EACjBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE;CACP;AAED;AACA,MAAMC,UAAU;AAAA;AAAA,CAAApB,aAAA,GAAAC,CAAA,QAAmB;EACjCO,OAAO,EAAE,SAAS;EAClBC,SAAS,EAAE,SAAS;EACpBC,MAAM,EAAE,SAAS;EACjBC,UAAU,EAAE,SAAS;EACrBC,OAAO,EAAE,SAAS;EAClBC,IAAI,EAAE,SAAS;EACfC,aAAa,EAAE,SAAS;EACxBC,MAAM,EAAE,SAAS;EACjBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAE;CACP;AAED;AAAA;AAAAnB,aAAA,GAAAC,CAAA;AACO,MAAMoB,aAAa,GAAsCA,CAAC;EAAEC;AAAQ,CAAE,KAAI;EAAA;EAAAtB,aAAA,GAAAuB,CAAA;EAC/E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC;EAAA;EAAA,CAAAzB,aAAA,GAAAC,CAAA,QAAGF,OAAA,CAAA2B,OAAK,CAACC,QAAQ,CAA4B,MAAM,CAAC;EAE3E;EAAA;EAAA3B,aAAA,GAAAC,CAAA;EACA,MAAM2B,iBAAiB,GAAGA,CAAA,KAAK;IAAA;IAAA5B,aAAA,GAAAuB,CAAA;IAAAvB,aAAA,GAAAC,CAAA;IAC7B,IAAIuB,KAAK,KAAK,MAAM,EAAE;MAAA;MAAAxB,aAAA,GAAA6B,CAAA;MAAA7B,aAAA,GAAAC,CAAA;MACpB,OAAO6B,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;MAAA;MAAA,CAAAhC,aAAA,GAAA6B,CAAA,WAAG,MAAM;MAAA;MAAA,CAAA7B,aAAA,GAAA6B,CAAA,WAAG,OAAO;IACrF,CAAC;IAAA;IAAA;MAAA7B,aAAA,GAAA6B,CAAA;IAAA;IAAA7B,aAAA,GAAAC,CAAA;IACD,OAAOuB,KAAK;EACd,CAAC;EAED,MAAMS,cAAc;EAAA;EAAA,CAAAjC,aAAA,GAAAC,CAAA,QAAG2B,iBAAiB,EAAE;EAC1C,MAAMM,cAAc;EAAA;EAAA,CAAAlC,aAAA,GAAAC,CAAA,QAAGgC,cAAc,KAAK,MAAM;EAAA;EAAA,CAAAjC,aAAA,GAAA6B,CAAA,WAAGT,UAAU;EAAA;EAAA,CAAApB,aAAA,GAAA6B,CAAA,WAAGtB,WAAW;EAE3E,MAAM4B,YAAY;EAAA;EAAA,CAAAnC,aAAA,GAAAC,CAAA,QAAsB;IACtCuB,KAAK;IACLU,cAAc;IACdT;GACD;EAAC;EAAAzB,aAAA,GAAAC,CAAA;EAEF,OACE,IAAAmC,aAAA,CAAAC,GAAA,EAACjC,YAAY,CAACkC,QAAQ;IAACC,KAAK,EAAEJ,YAAY;IAAAb,QAAA,EACxC,IAAAc,aAAA,CAAAC,GAAA;MAAKG,SAAS,EAAEP,cAAc,KAAK,MAAM;MAAA;MAAA,CAAAjC,aAAA,GAAA6B,CAAA,WAAG,MAAM;MAAA;MAAA,CAAA7B,aAAA,GAAA6B,CAAA,WAAG,OAAO;MAAAP,QAAA,EACzDA;IAAQ;EACL,EACgB;AAE5B,CAAC;AAAC;AAAAtB,aAAA,GAAAC,CAAA;AA3BWwC,OAAA,CAAApB,aAAa,GAAAA,aAAA;AA6B1B;AAAA;AAAArB,aAAA,GAAAC,CAAA;AACO,MAAMyC,iBAAiB,GAAGA,CAAA,KAAqB;EAAA;EAAA1C,aAAA,GAAAuB,CAAA;EACpD,MAAMoB,OAAO;EAAA;EAAA,CAAA3C,aAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAA6C,UAAU,EAACxC,YAAY,CAAC;EAAC;EAAAJ,aAAA,GAAAC,CAAA;EACzC,IAAI,CAAC0C,OAAO,EAAE;IAAA;IAAA3C,aAAA,GAAA6B,CAAA;IAAA7B,aAAA,GAAAC,CAAA;IACZ;IACA,OAAOM,WAAW;EACpB,CAAC;EAAA;EAAA;IAAAP,aAAA,GAAA6B,CAAA;EAAA;EAAA7B,aAAA,GAAAC,CAAA;EACD,OAAO0C,OAAO,CAACT,cAAc;AAC/B,CAAC;AAAC;AAAAlC,aAAA,GAAAC,CAAA;AAPWwC,OAAA,CAAAC,iBAAiB,GAAAA,iBAAA;AAS9B;AAAA;AAAA1C,aAAA,GAAAC,CAAA;AACO,MAAM4C,QAAQ,GAAGA,CAAA,KAAK;EAAA;EAAA7C,aAAA,GAAAuB,CAAA;EAC3B,MAAMoB,OAAO;EAAA;EAAA,CAAA3C,aAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAA6C,UAAU,EAACxC,YAAY,CAAC;EAAC;EAAAJ,aAAA,GAAAC,CAAA;EACzC,IAAI,CAAC0C,OAAO,EAAE;IAAA;IAAA3C,aAAA,GAAA6B,CAAA;IAAA7B,aAAA,GAAAC,CAAA;IACZ,MAAM,IAAI6C,KAAK,CAAC,8CAA8C,CAAC;EACjE,CAAC;EAAA;EAAA;IAAA9C,aAAA,GAAA6B,CAAA;EAAA;EAAA7B,aAAA,GAAAC,CAAA;EACD,OAAO0C,OAAO;AAChB,CAAC;AAAC;AAAA3C,aAAA,GAAAC,CAAA;AANWwC,OAAA,CAAAI,QAAQ,GAAAA,QAAA;AAQrB;AAAA;AAAA7C,aAAA,GAAAC,CAAA;AACO,MAAM8C,qBAAqB,GAAGA,CAACC,SAAiB,EAAExB,KAAuB,KAAI;EAAA;EAAAxB,aAAA,GAAAuB,CAAA;EAAAvB,aAAA,GAAAC,CAAA;EAClF;EACA,IAAIuB,KAAK,KAAK,MAAM,EAAE;IAAA;IAAAxB,aAAA,GAAA6B,CAAA;IAAA7B,aAAA,GAAAC,CAAA;IACpB;IACA,OAAO,sBAAsB+C,SAAS,kBAAkB;EAC1D,CAAC,MAAM;IAAA;IAAAhD,aAAA,GAAA6B,CAAA;IAAA7B,aAAA,GAAAC,CAAA;IACL;IACA,OAAO+C,SAAS;EAClB;AACF,CAAC;AAAC;AAAAhD,aAAA,GAAAC,CAAA;AATWwC,OAAA,CAAAM,qBAAqB,GAAAA,qBAAA;AAWlC;AAAA;AAAA/C,aAAA,GAAAC,CAAA;AACO,MAAMgD,YAAY,GAAGA,CAACC,UAAkB,EAAEC,SAAiB,KAAI;EAAA;EAAAnD,aAAA,GAAAuB,CAAA;EAAAvB,aAAA,GAAAC,CAAA;EACpE,OAAO,GAAGiD,UAAU,SAASC,SAAS,EAAE;AAC1C,CAAC;AAAC;AAAAnD,aAAA,GAAAC,CAAA;AAFWwC,OAAA,CAAAQ,YAAY,GAAAA,YAAA","ignoreList":[]}