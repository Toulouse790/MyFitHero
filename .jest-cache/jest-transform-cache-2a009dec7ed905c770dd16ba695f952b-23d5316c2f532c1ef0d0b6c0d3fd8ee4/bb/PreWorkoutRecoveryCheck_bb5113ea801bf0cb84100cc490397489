546b50c12ed1efc58b178b167b36b3db
"use strict";

/* istanbul ignore next */
function cov_1epn62j0gh() {
  var path = "/workspaces/MyFitHero/src/features/workout/components/PreWorkoutRecoveryCheck.tsx";
  var hash = "03d0684ff3c014fccdf4ca211c3c83149e9a6f64";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/workout/components/PreWorkoutRecoveryCheck.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 41
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 49
        }
      },
      "6": {
        start: {
          line: 10,
          column: 28
        },
        end: {
          line: 10,
          column: 81
        }
      },
      "7": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "8": {
        start: {
          line: 12,
          column: 51
        },
        end: {
          line: 12,
          column: 95
        }
      },
      "9": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 53
        }
      },
      "10": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 507
        }
      },
      "11": {
        start: {
          line: 14,
          column: 400
        },
        end: {
          line: 14,
          column: 495
        }
      },
      "12": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 32
          },
          end: {
            line: 11,
            column: 33
          }
        },
        loc: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 387
          },
          end: {
            line: 14,
            column: 388
          }
        },
        loc: {
          start: {
            line: 14,
            column: 400
          },
          end: {
            line: 14,
            column: 495
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 74
          },
          end: {
            line: 14,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 84
          },
          end: {
            line: 14,
            column: 97
          }
        }, {
          start: {
            line: 14,
            column: 100
          },
          end: {
            line: 14,
            column: 114
          }
        }],
        line: 14
      },
      "4": {
        loc: {
          start: {
            line: 14,
            column: 203
          },
          end: {
            line: 14,
            column: 271
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 213
          },
          end: {
            line: 14,
            column: 241
          }
        }, {
          start: {
            line: 14,
            column: 244
          },
          end: {
            line: 14,
            column: 271
          }
        }],
        line: 14
      },
      "5": {
        loc: {
          start: {
            line: 14,
            column: 276
          },
          end: {
            line: 14,
            column: 501
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 276
          },
          end: {
            line: 14,
            column: 284
          }
        }, {
          start: {
            line: 14,
            column: 289
          },
          end: {
            line: 14,
            column: 500
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/workout/components/PreWorkoutRecoveryCheck.tsx",
      mappings: ";;;;;;;AAAA,kDAA0B;AAE1B,yCAAyC;AACzC,kFAA+E;AAOxE,MAAM,uBAAuB,GAAG,CAAC,EAAE,cAAc,EAAgC,EAAE,EAAE;IAC1F,MAAM,EAAE,iBAAiB,EAAE,eAAe,EAAE,GAAG,IAAA,qCAAiB,GAAE,CAAC;IAEnE,MAAM,OAAO,GAAG,iBAAiB,CAAC,cAAqB,CAAC,CAAC;IAEzD,OAAO,CACL,iCAAK,SAAS,EAAE,kBAAkB,OAAO,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,cAAc,EAAE,aAC1E,+BAAI,SAAS,EAAC,oBAAoB,YAC/B,OAAO,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,2BAA2B,GAClE,EACJ,CAAC,OAAO,IAAI,CACX,gCAAK,SAAS,EAAC,WAAW,YACvB,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAiC,EAAE,CAAS,EAAE,EAAE,CAAC,CACjF,8BAAW,SAAS,EAAC,yBAAyB,YAC3C,GAAG,CAAC,OAAO,IADN,CAAC,CAEL,CACL,CAAC,GACE,CACP,IACG,CACP,CAAC;AACJ,CAAC,CAAC;AArBW,QAAA,uBAAuB,2BAqBlC",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/workout/components/PreWorkoutRecoveryCheck.tsx"],
      sourcesContent: ["import React from 'react';\nimport { Check } from 'lucide-react';\n// components/PreWorkoutRecoveryCheck.tsx\nimport { useMuscleRecovery } from '@/features/workout/hooks/useMuscleRecovery';\n\ninterface MuscleRecoveryRecommendation {\n  message: string;\n  // autres propri\xE9t\xE9s selon le type r\xE9el\n}\n\nexport const PreWorkoutRecoveryCheck = ({ plannedMuscles }: { plannedMuscles: string[] }) => {\n  const { isReadyForWorkout, recommendations } = useMuscleRecovery();\n\n  const isReady = isReadyForWorkout(plannedMuscles as any);\n\n  return (\n    <div className={`p-4 rounded-lg ${isReady ? 'bg-green-50' : 'bg-orange-50'}`}>\n      <h3 className=\"font-semibold mb-2\">\n        {isReady ? \"\u2705 Pr\xEAt pour l'entra\xEEnement\" : '\u26A0\uFE0F Attention r\xE9cup\xE9ration'}\n      </h3>\n      {!isReady && (\n        <div className=\"space-y-2\">\n          {recommendations.slice(0, 2).map((rec: MuscleRecoveryRecommendation, i: number) => (\n            <p key={i} className=\"text-sm text-orange-700\">\n              {rec.message}\n            </p>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "03d0684ff3c014fccdf4ca211c3c83149e9a6f64"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1epn62j0gh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1epn62j0gh();
var __importDefault =
/* istanbul ignore next */
(cov_1epn62j0gh().s[0]++,
/* istanbul ignore next */
(cov_1epn62j0gh().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1epn62j0gh().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1epn62j0gh().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1epn62j0gh().f[0]++;
  cov_1epn62j0gh().s[1]++;
  return /* istanbul ignore next */(cov_1epn62j0gh().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1epn62j0gh().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1epn62j0gh().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1epn62j0gh().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1epn62j0gh().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1epn62j0gh().s[3]++;
exports.PreWorkoutRecoveryCheck = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_1epn62j0gh().s[4]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_1epn62j0gh().s[5]++, __importDefault(require("react")));
// components/PreWorkoutRecoveryCheck.tsx
const useMuscleRecovery_1 =
/* istanbul ignore next */
(cov_1epn62j0gh().s[6]++, require("@/features/workout/hooks/useMuscleRecovery"));
/* istanbul ignore next */
cov_1epn62j0gh().s[7]++;
const PreWorkoutRecoveryCheck = ({
  plannedMuscles
}) => {
  /* istanbul ignore next */
  cov_1epn62j0gh().f[1]++;
  const {
    isReadyForWorkout,
    recommendations
  } =
  /* istanbul ignore next */
  (cov_1epn62j0gh().s[8]++, (0, useMuscleRecovery_1.useMuscleRecovery)());
  const isReady =
  /* istanbul ignore next */
  (cov_1epn62j0gh().s[9]++, isReadyForWorkout(plannedMuscles));
  /* istanbul ignore next */
  cov_1epn62j0gh().s[10]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: `p-4 rounded-lg ${isReady ?
    /* istanbul ignore next */
    (cov_1epn62j0gh().b[3][0]++, 'bg-green-50') :
    /* istanbul ignore next */
    (cov_1epn62j0gh().b[3][1]++, 'bg-orange-50')}`,
    children: [(0, jsx_runtime_1.jsx)("h3", {
      className: "font-semibold mb-2",
      children: isReady ?
      /* istanbul ignore next */
      (cov_1epn62j0gh().b[4][0]++, "✅ Prêt pour l'entraînement") :
      /* istanbul ignore next */
      (cov_1epn62j0gh().b[4][1]++, '⚠️ Attention récupération')
    }),
    /* istanbul ignore next */
    (cov_1epn62j0gh().b[5][0]++, !isReady) &&
    /* istanbul ignore next */
    (cov_1epn62j0gh().b[5][1]++, (0, jsx_runtime_1.jsx)("div", {
      className: "space-y-2",
      children: recommendations.slice(0, 2).map((rec, i) => {
        /* istanbul ignore next */
        cov_1epn62j0gh().f[2]++;
        cov_1epn62j0gh().s[11]++;
        return (0, jsx_runtime_1.jsx)("p", {
          className: "text-sm text-orange-700",
          children: rec.message
        }, i);
      })
    }))]
  });
};
/* istanbul ignore next */
cov_1epn62j0gh().s[12]++;
exports.PreWorkoutRecoveryCheck = PreWorkoutRecoveryCheck;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWVwbjYyajBnaCIsImFjdHVhbENvdmVyYWdlIiwicmVhY3RfMSIsInMiLCJfX2ltcG9ydERlZmF1bHQiLCJyZXF1aXJlIiwidXNlTXVzY2xlUmVjb3ZlcnlfMSIsIlByZVdvcmtvdXRSZWNvdmVyeUNoZWNrIiwicGxhbm5lZE11c2NsZXMiLCJmIiwiaXNSZWFkeUZvcldvcmtvdXQiLCJyZWNvbW1lbmRhdGlvbnMiLCJ1c2VNdXNjbGVSZWNvdmVyeSIsImlzUmVhZHkiLCJqc3hfcnVudGltZV8xIiwianN4cyIsImNsYXNzTmFtZSIsImIiLCJjaGlsZHJlbiIsImpzeCIsInNsaWNlIiwibWFwIiwicmVjIiwiaSIsIm1lc3NhZ2UiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvTXlGaXRIZXJvL3NyYy9mZWF0dXJlcy93b3Jrb3V0L2NvbXBvbmVudHMvUHJlV29ya291dFJlY292ZXJ5Q2hlY2sudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDaGVjayB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG4vLyBjb21wb25lbnRzL1ByZVdvcmtvdXRSZWNvdmVyeUNoZWNrLnRzeFxuaW1wb3J0IHsgdXNlTXVzY2xlUmVjb3ZlcnkgfSBmcm9tICdAL2ZlYXR1cmVzL3dvcmtvdXQvaG9va3MvdXNlTXVzY2xlUmVjb3ZlcnknO1xuXG5pbnRlcmZhY2UgTXVzY2xlUmVjb3ZlcnlSZWNvbW1lbmRhdGlvbiB7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgLy8gYXV0cmVzIHByb3ByacOpdMOpcyBzZWxvbiBsZSB0eXBlIHLDqWVsXG59XG5cbmV4cG9ydCBjb25zdCBQcmVXb3Jrb3V0UmVjb3ZlcnlDaGVjayA9ICh7IHBsYW5uZWRNdXNjbGVzIH06IHsgcGxhbm5lZE11c2NsZXM6IHN0cmluZ1tdIH0pID0+IHtcbiAgY29uc3QgeyBpc1JlYWR5Rm9yV29ya291dCwgcmVjb21tZW5kYXRpb25zIH0gPSB1c2VNdXNjbGVSZWNvdmVyeSgpO1xuXG4gIGNvbnN0IGlzUmVhZHkgPSBpc1JlYWR5Rm9yV29ya291dChwbGFubmVkTXVzY2xlcyBhcyBhbnkpO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2BwLTQgcm91bmRlZC1sZyAke2lzUmVhZHkgPyAnYmctZ3JlZW4tNTAnIDogJ2JnLW9yYW5nZS01MCd9YH0+XG4gICAgICA8aDMgY2xhc3NOYW1lPVwiZm9udC1zZW1pYm9sZCBtYi0yXCI+XG4gICAgICAgIHtpc1JlYWR5ID8gXCLinIUgUHLDqnQgcG91ciBsJ2VudHJhw65uZW1lbnRcIiA6ICfimqDvuI8gQXR0ZW50aW9uIHLDqWN1cMOpcmF0aW9uJ31cbiAgICAgIDwvaDM+XG4gICAgICB7IWlzUmVhZHkgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktMlwiPlxuICAgICAgICAgIHtyZWNvbW1lbmRhdGlvbnMuc2xpY2UoMCwgMikubWFwKChyZWM6IE11c2NsZVJlY292ZXJ5UmVjb21tZW5kYXRpb24sIGk6IG51bWJlcikgPT4gKFxuICAgICAgICAgICAgPHAga2V5PXtpfSBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtb3JhbmdlLTcwMFwiPlxuICAgICAgICAgICAgICB7cmVjLm1lc3NhZ2V9XG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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