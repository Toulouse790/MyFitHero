{"version":3,"names":["react_1","cov_108w7gew2o","s","require","useIntelligentPreloading","f","useEffect","currentPath","window","location","pathname","preloadTargets","b","push","preload","forEach","route","Promise","resolve","then","__importStar","error","requestIdleCallback","timeout","setTimeout","exports","useNetworkAdaptation","navigator","connection","updatePerformanceMode","isSlowConnection","effectiveType","isLowData","saveData","document","documentElement","style","setProperty","classList","add","remove","addEventListener","removeEventListener","undefined"],"sources":["/workspaces/MyFitHero/src/features/workout/hooks/useIntelligentPreloading.ts"],"sourcesContent":["import { Target } from 'lucide-react';\nimport React, { useEffect } from 'react';\n\n// Preloading intelligent des routes probables\nexport const useIntelligentPreloading = () => {\n  useEffect(() => {\n    const currentPath = window.location.pathname;\n    const preloadTargets: string[] = [];\n\n    // Logique de preloading basée sur la route actuelle\n    switch (currentPath) {\n      case '/':\n        // Depuis l'accueil, l'utilisateur va probablement vers workout ou nutrition\n        preloadTargets.push('/workout', '/nutrition');\n        break;\n      case '/workout':\n        // Depuis workout, probable vers profile ou nutrition\n        preloadTargets.push('/profile', '/nutrition');\n        break;\n      case '/nutrition':\n        // Depuis nutrition, probable vers hydration\n        preloadTargets.push('/hydration', '/sleep');\n        break;\n      case '/profile':\n        // Depuis profil, probable retour accueil\n        preloadTargets.push('/');\n        break;\n    }\n\n    // Preload des imports avec requestIdleCallback si disponible\n    const preload = () => {\n      preloadTargets.forEach(async route => {\n        try {\n          switch (route) {\n            case '/workout':\n              await import('@/features/workout/pages/WorkoutPage'); // ✅ Corrigé: chemin relatif correct\n              break;\n            case '/nutrition':\n              await import('@/features/nutrition/pages/NutritionPage'); // ✅ Chemin relatif correct\n              break;\n            case '/hydration':\n              await import('@/features/hydration/pages/HydrationPage'); // ✅ Chemin relatif correct\n              break;\n            case '/sleep':\n              await import('@/features/sleep/pages/SleepPage'); // ✅ Chemin relatif correct\n              break;\n            case '/profile':\n              await import('@/features/auth/pages/ProfileComplete'); // ✅ Chemin relatif correct\n              break;\n            case '/':\n              await import('@/pages/index'); // ✅ Corrigé: chemin relatif correct\n              break;\n          }\n        } catch (error: any) {\n      // Erreur silencieuse\n        }\n      });\n    };\n\n    if ('requestIdleCallback' in window) {\n      requestIdleCallback(preload, { timeout: 2000 });\n    } else {\n      setTimeout(preload, 1000);\n    }\n  }, []);\n};\n\n// Détection du type de connexion pour ajuster les performances\nexport const useNetworkAdaptation = (): void => {\n  useEffect(() => {\n    if ('connection' in navigator) {\n      const connection = (navigator as any).connection;\n\n      const updatePerformanceMode = () => {\n        const isSlowConnection =\n          connection.effectiveType === '2g' || connection.effectiveType === 'slow-2g';\n        const isLowData = connection.saveData;\n\n        // Configuration du mode performance\n        document.documentElement.style.setProperty(\n          '--performance-mode',\n          isSlowConnection || isLowData ? 'low' : 'high'\n        );\n\n        // Désactiver les animations coûteuses en mode dégradé\n        if (isSlowConnection || isLowData) {\n          document.documentElement.classList.add('reduce-motion');\n        } else {\n          document.documentElement.classList.remove('reduce-motion');\n        }\n      };\n\n      updatePerformanceMode();\n      connection.addEventListener('change', updatePerformanceMode);\n\n      return () => connection.removeEventListener('change', updatePerformanceMode);\n    }\n    // Aucun cleanup nécessaire si connection n'est pas supportée\n    return undefined;\n  }, []);\n};\n"],"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","ignoreList":[]}