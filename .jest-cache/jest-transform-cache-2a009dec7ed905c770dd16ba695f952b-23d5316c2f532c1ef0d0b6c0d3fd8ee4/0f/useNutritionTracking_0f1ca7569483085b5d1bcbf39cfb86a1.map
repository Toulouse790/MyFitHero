{"version":3,"names":["cov_2dusjetctj","actualCoverage","s","exports","useNutritionTracking","react_1","require","supabase_1","useAuth_1","use_toast_1","f","user","useAuth","showToast","useToast","entries","setEntries","useState","goals","setGoals","loading","setLoading","fetchEntries","useCallback","b","today","Date","toISOString","split","data","_data","error","_error","supabase","from","select","eq","id","gte","lte","order","ascending","fetchGoals","single","useEffect","addEntry","entry","insert","user_id","deleteEntry","delete","dailyTotals","useMemo","reduce","acc","e","calories","protein","carbs","fat","default"],"sources":["/workspaces/MyFitHero/src/features/nutrition/hooks/useNutritionTracking.ts"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from './useAuth';\nimport { useToast } from '@/shared/hooks/use-toast';\n\nexport interface NutritionEntry {\n  id: string;\n  user_id: string;\n  food_name: string;\n  quantity: number;\n  unit: string;\n  calories: number;\n  protein: number;\n  carbs: number;\n  fat: number;\n  meal_type: 'breakfast' | 'lunch' | 'dinner' | 'snack';\n  consumed_at: string;\n}\n\nexport interface NutritionGoals {\n  daily_calories: number;\n  protein_g: number;\n  carbs_g: number;\n  fat_g: number;\n}\n\nexport function useNutritionTracking() {\n  const { user } = useAuth();\n  const { showToast } = useToast();\n  const [entries, setEntries] = useState<NutritionEntry[]>([]);\n  const [goals, setGoals] = useState<NutritionGoals | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  // Charger les entrées du jour\n  const fetchEntries = useCallback(async () => {\n    if (!user) return;\n    setLoading(true);\n    const today = new Date().toISOString().split('T')[0];\n    const { data: _data, error: _error } = await supabase\n      .from('nutrition_entries')\n      .select('*')\n      .eq('user_id', user.id)\n      .gte('consumed_at', `${today}T00:00:00.000Z`)\n      .lte('consumed_at', `${today}T23:59:59.999Z`)\n      .order('consumed_at', { ascending: true });\n    if (!error && data) setEntries(data);\n    setLoading(false);\n  }, [user]);\n\n  // Charger les objectifs\n  const fetchGoals = useCallback(async () => {\n    if (!user) return;\n    const { data: _data } = await supabase\n      .from('user_nutrition_goals')\n      .select('*')\n      .eq('user_id', user.id)\n      .single();\n    if (data) setGoals(data);\n  }, [user]);\n\n  useEffect(() => {\n    fetchEntries();\n    fetchGoals();\n  }, [fetchEntries, fetchGoals]);\n\n  // Ajouter une entrée\n  const addEntry = useCallback(\n    async (entry: Omit<NutritionEntry, 'id' | 'user_id'>) => {\n      if (!user) return;\n      setLoading(true);\n      const { error: _error } = await supabase\n        .from('nutrition_entries')\n        .insert({ ...entry, user_id: user.id });\n      if (!error) {\n        showToast('Aliment ajouté !', 'success');\n        fetchEntries();\n      } else {\n        showToast(\"Erreur lors de l'ajout\", 'error');\n      }\n      setLoading(false);\n    },\n    [user, fetchEntries, showToast]\n  );\n\n  // Supprimer une entrée\n  const deleteEntry = useCallback(\n    async (id: string) => {\n      setLoading(true);\n      const { error: _error } = await supabase.from('nutrition_entries').delete().eq('id', id);\n      if (!error) {\n        showToast('Entrée supprimée', 'success');\n        fetchEntries();\n      } else {\n        showToast('Erreur lors de la suppression', 'error');\n      }\n      setLoading(false);\n    },\n    [fetchEntries, showToast]\n  );\n\n  // Calcul des totaux du jour\n  const dailyTotals = useMemo(() => {\n    return entries.reduce(\n      (acc, e) => ({\n        calories: acc.calories + e.calories,\n        protein: acc.protein + e.protein,\n        carbs: acc.carbs + e.carbs,\n        fat: acc.fat + e.fat,\n      }),\n      { calories: 0, protein: 0, carbs: 0, fat: 0 }\n    );\n  }, [entries]);\n\n  return {\n    entries,\n    goals,\n    loading,\n    addEntry,\n    deleteEntry,\n    dailyTotals,\n    fetchEntries,\n    fetchGoals,\n  };\n}\n\nexport default useNutritionTracking;\n"],"mappingsmCQ;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;AATRC,OAAA,CAAAC,oBAAA,GAAAA,oBAAA;AA1BA,MAAAC,OAAA;AAAA;AAAA,CAAAL,cAAA,GAAAE,CAAA,OAAAI,OAAA;AACA,MAAAC,UAAA;AAAA;AAAA,CAAAP,cAAA,GAAAE,CAAA,OAAAI,OAAA;AACA,MAAAE,SAAA;AAAA;AAAA,CAAAR,cAAA,GAAAE,CAAA,OAAAI,OAAA;AACA,MAAAG,WAAA;AAAA;AAAA,CAAAT,cAAA,GAAAE,CAAA,OAAAI,OAAA;AAuBA,SAAgBF,oBAAoBA,CAAA;EAAA;EAAAJ,cAAA,GAAAU,CAAA;EAClC,MAAM;IAAEC;EAAI,CAAE;EAAA;EAAA,CAAAX,cAAA,GAAAE,CAAA,OAAG,IAAAM,SAAA,CAAAI,OAAO,GAAE;EAC1B,MAAM;IAAEC;EAAS,CAAE;EAAA;EAAA,CAAAb,cAAA,GAAAE,CAAA,OAAG,IAAAO,WAAA,CAAAK,QAAQ,GAAE;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC;EAAA;EAAA,CAAAhB,cAAA,GAAAE,CAAA,OAAG,IAAAG,OAAA,CAAAY,QAAQ,EAAmB,EAAE,CAAC;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC;EAAA;EAAA,CAAAnB,cAAA,GAAAE,CAAA,OAAG,IAAAG,OAAA,CAAAY,QAAQ,EAAwB,IAAI,CAAC;EAC/D,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC;EAAA;EAAA,CAAArB,cAAA,GAAAE,CAAA,QAAG,IAAAG,OAAA,CAAAY,QAAQ,EAAC,KAAK,CAAC;EAE7C;EACA,MAAMK,YAAY;EAAA;EAAA,CAAAtB,cAAA,GAAAE,CAAA,QAAG,IAAAG,OAAA,CAAAkB,WAAW,EAAC,YAAW;IAAA;IAAAvB,cAAA,GAAAU,CAAA;IAAAV,cAAA,GAAAE,CAAA;IAC1C,IAAI,CAACS,IAAI,EAAE;MAAA;MAAAX,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAE,CAAA;MAAA;IAAA,CAAO;IAAA;IAAA;MAAAF,cAAA,GAAAwB,CAAA;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IAClBmB,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMI,KAAK;IAAA;IAAA,CAAAzB,cAAA,GAAAE,CAAA,QAAG,IAAIwB,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,MAAM;MAAEC,IAAI,EAAEC,KAAK;MAAEC,KAAK,EAAEC;IAAM,CAAE;IAAA;IAAA,CAAAhC,cAAA,GAAAE,CAAA,QAAG,MAAMK,UAAA,CAAA0B,QAAQ,CAClDC,IAAI,CAAC,mBAAmB,CAAC,CACzBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,EAAEzB,IAAI,CAAC0B,EAAE,CAAC,CACtBC,GAAG,CAAC,aAAa,EAAE,GAAGb,KAAK,gBAAgB,CAAC,CAC5Cc,GAAG,CAAC,aAAa,EAAE,GAAGd,KAAK,gBAAgB,CAAC,CAC5Ce,KAAK,CAAC,aAAa,EAAE;MAAEC,SAAS,EAAE;IAAI,CAAE,CAAC;IAAC;IAAAzC,cAAA,GAAAE,CAAA;IAC7C;IAAI;IAAA,CAAAF,cAAA,GAAAwB,CAAA,WAACO,KAAK;IAAA;IAAA,CAAA/B,cAAA,GAAAwB,CAAA,UAAIK,IAAI,GAAE;MAAA;MAAA7B,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAE,CAAA;MAAAc,UAAU,CAACa,IAAI,CAAC;IAAA,CAAC;IAAA;IAAA;MAAA7B,cAAA,GAAAwB,CAAA;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IACrCmB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEV;EACA,MAAM+B,UAAU;EAAA;EAAA,CAAA1C,cAAA,GAAAE,CAAA,QAAG,IAAAG,OAAA,CAAAkB,WAAW,EAAC,YAAW;IAAA;IAAAvB,cAAA,GAAAU,CAAA;IAAAV,cAAA,GAAAE,CAAA;IACxC,IAAI,CAACS,IAAI,EAAE;MAAA;MAAAX,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAE,CAAA;MAAA;IAAA,CAAO;IAAA;IAAA;MAAAF,cAAA,GAAAwB,CAAA;IAAA;IAClB,MAAM;MAAEK,IAAI,EAAEC;IAAK,CAAE;IAAA;IAAA,CAAA9B,cAAA,GAAAE,CAAA,QAAG,MAAMK,UAAA,CAAA0B,QAAQ,CACnCC,IAAI,CAAC,sBAAsB,CAAC,CAC5BC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,EAAEzB,IAAI,CAAC0B,EAAE,CAAC,CACtBM,MAAM,EAAE;IAAC;IAAA3C,cAAA,GAAAE,CAAA;IACZ,IAAI2B,IAAI,EAAE;MAAA;MAAA7B,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAE,CAAA;MAAAiB,QAAQ,CAACU,IAAI,CAAC;IAAA,CAAC;IAAA;IAAA;MAAA7B,cAAA,GAAAwB,CAAA;IAAA;EAC3B,CAAC,EAAE,CAACb,IAAI,CAAC,CAAC;EAAC;EAAAX,cAAA,GAAAE,CAAA;EAEX,IAAAG,OAAA,CAAAuC,SAAS,EAAC,MAAK;IAAA;IAAA5C,cAAA,GAAAU,CAAA;IAAAV,cAAA,GAAAE,CAAA;IACboB,YAAY,EAAE;IAAC;IAAAtB,cAAA,GAAAE,CAAA;IACfwC,UAAU,EAAE;EACd,CAAC,EAAE,CAACpB,YAAY,EAAEoB,UAAU,CAAC,CAAC;EAE9B;EACA,MAAMG,QAAQ;EAAA;EAAA,CAAA7C,cAAA,GAAAE,CAAA,QAAG,IAAAG,OAAA,CAAAkB,WAAW,EAC1B,MAAOuB,KAA6C,IAAI;IAAA;IAAA9C,cAAA,GAAAU,CAAA;IAAAV,cAAA,GAAAE,CAAA;IACtD,IAAI,CAACS,IAAI,EAAE;MAAA;MAAAX,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAE,CAAA;MAAA;IAAA,CAAO;IAAA;IAAA;MAAAF,cAAA,GAAAwB,CAAA;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IAClBmB,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM;MAAEU,KAAK,EAAEC;IAAM,CAAE;IAAA;IAAA,CAAAhC,cAAA,GAAAE,CAAA,QAAG,MAAMK,UAAA,CAAA0B,QAAQ,CACrCC,IAAI,CAAC,mBAAmB,CAAC,CACzBa,MAAM,CAAC;MAAE,GAAGD,KAAK;MAAEE,OAAO,EAAErC,IAAI,CAAC0B;IAAE,CAAE,CAAC;IAAC;IAAArC,cAAA,GAAAE,CAAA;IAC1C,IAAI,CAAC6B,KAAK,EAAE;MAAA;MAAA/B,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAE,CAAA;MACVW,SAAS,CAAC,kBAAkB,EAAE,SAAS,CAAC;MAAC;MAAAb,cAAA,GAAAE,CAAA;MACzCoB,YAAY,EAAE;IAChB,CAAC,MAAM;MAAA;MAAAtB,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAE,CAAA;MACLW,SAAS,CAAC,wBAAwB,EAAE,OAAO,CAAC;IAC9C;IAAC;IAAAb,cAAA,GAAAE,CAAA;IACDmB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EACD,CAACV,IAAI,EAAEW,YAAY,EAAET,SAAS,CAAC,CAChC;EAED;EACA,MAAMoC,WAAW;EAAA;EAAA,CAAAjD,cAAA,GAAAE,CAAA,QAAG,IAAAG,OAAA,CAAAkB,WAAW,EAC7B,MAAOc,EAAU,IAAI;IAAA;IAAArC,cAAA,GAAAU,CAAA;IAAAV,cAAA,GAAAE,CAAA;IACnBmB,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM;MAAEU,KAAK,EAAEC;IAAM,CAAE;IAAA;IAAA,CAAAhC,cAAA,GAAAE,CAAA,QAAG,MAAMK,UAAA,CAAA0B,QAAQ,CAACC,IAAI,CAAC,mBAAmB,CAAC,CAACgB,MAAM,EAAE,CAACd,EAAE,CAAC,IAAI,EAAEC,EAAE,CAAC;IAAC;IAAArC,cAAA,GAAAE,CAAA;IACzF,IAAI,CAAC6B,KAAK,EAAE;MAAA;MAAA/B,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAE,CAAA;MACVW,SAAS,CAAC,kBAAkB,EAAE,SAAS,CAAC;MAAC;MAAAb,cAAA,GAAAE,CAAA;MACzCoB,YAAY,EAAE;IAChB,CAAC,MAAM;MAAA;MAAAtB,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAE,CAAA;MACLW,SAAS,CAAC,+BAA+B,EAAE,OAAO,CAAC;IACrD;IAAC;IAAAb,cAAA,GAAAE,CAAA;IACDmB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EACD,CAACC,YAAY,EAAET,SAAS,CAAC,CAC1B;EAED;EACA,MAAMsC,WAAW;EAAA;EAAA,CAAAnD,cAAA,GAAAE,CAAA,QAAG,IAAAG,OAAA,CAAA+C,OAAO,EAAC,MAAK;IAAA;IAAApD,cAAA,GAAAU,CAAA;IAAAV,cAAA,GAAAE,CAAA;IAC/B,OAAOa,OAAO,CAACsC,MAAM,CACnB,CAACC,GAAG,EAAEC,CAAC,KAAM;MAAA;MAAAvD,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAE,CAAA;MAAA;QACXsD,QAAQ,EAAEF,GAAG,CAACE,QAAQ,GAAGD,CAAC,CAACC,QAAQ;QACnCC,OAAO,EAAEH,GAAG,CAACG,OAAO,GAAGF,CAAC,CAACE,OAAO;QAChCC,KAAK,EAAEJ,GAAG,CAACI,KAAK,GAAGH,CAAC,CAACG,KAAK;QAC1BC,GAAG,EAAEL,GAAG,CAACK,GAAG,GAAGJ,CAAC,CAACI;OAClB;KAAC,EACF;MAAEH,QAAQ,EAAE,CAAC;MAAEC,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAC,CAAE,CAC9C;EACH,CAAC,EAAE,CAAC5C,OAAO,CAAC,CAAC;EAAC;EAAAf,cAAA,GAAAE,CAAA;EAEd,OAAO;IACLa,OAAO;IACPG,KAAK;IACLE,OAAO;IACPyB,QAAQ;IACRI,WAAW;IACXE,WAAW;IACX7B,YAAY;IACZoB;GACD;AACH;AAAC;AAAA1C,cAAA,GAAAE,CAAA;AAEDC,OAAA,CAAAyD,OAAA,GAAexD,oBAAoB","ignoreList":[]}