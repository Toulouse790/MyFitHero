a3eab657ddb71a636d697607fcb04235
"use strict";

/* istanbul ignore next */
function cov_2dusjetctj() {
  var path = "/workspaces/MyFitHero/src/features/nutrition/hooks/useNutritionTracking.ts";
  var hash = "2367d06ca7e93e2b5f03fd8a1b1a83132ec608c6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/nutrition/hooks/useNutritionTracking.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 52
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 44
        }
      },
      "4": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 38
        }
      },
      "5": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 55
        }
      },
      "6": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 45
        }
      },
      "7": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 53
        }
      },
      "8": {
        start: {
          line: 11,
          column: 34
        },
        end: {
          line: 11,
          column: 59
        }
      },
      "9": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "10": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "11": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 30,
          column: 14
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "13": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "14": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 25
        }
      },
      "15": {
        start: {
          line: 19,
          column: 22
        },
        end: {
          line: 19,
          column: 60
        }
      },
      "16": {
        start: {
          line: 20,
          column: 47
        },
        end: {
          line: 26,
          column: 54
        }
      },
      "17": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "18": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "19": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "20": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 42,
          column: 14
        }
      },
      "21": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "22": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "23": {
        start: {
          line: 35,
          column: 32
        },
        end: {
          line: 39,
          column: 21
        }
      },
      "24": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 41,
          column: 27
        }
      },
      "25": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 27
        }
      },
      "26": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "27": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 23
        }
      },
      "28": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 21
        }
      },
      "29": {
        start: {
          line: 48,
          column: 21
        },
        end: {
          line: 63,
          column: 39
        }
      },
      "30": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 50,
          column: 19
        }
      },
      "31": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 19
        }
      },
      "32": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "33": {
        start: {
          line: 52,
          column: 34
        },
        end: {
          line: 54,
          column: 51
        }
      },
      "34": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "35": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 53
        }
      },
      "36": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 27
        }
      },
      "37": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 57
        }
      },
      "38": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 26
        }
      },
      "39": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 76,
          column: 33
        }
      },
      "40": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 25
        }
      },
      "41": {
        start: {
          line: 67,
          column: 34
        },
        end: {
          line: 67,
          column: 107
        }
      },
      "42": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "43": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 53
        }
      },
      "44": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 27
        }
      },
      "45": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 64
        }
      },
      "46": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 26
        }
      },
      "47": {
        start: {
          line: 78,
          column: 24
        },
        end: {
          line: 85,
          column: 17
        }
      },
      "48": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 84,
          column: 59
        }
      },
      "49": {
        start: {
          line: 79,
          column: 43
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "50": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "51": {
        start: {
          line: 97,
          column: 0
        },
        end: {
          line: 97,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "useNutritionTracking",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 29
          }
        },
        loc: {
          start: {
            line: 8,
            column: 32
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 50
          },
          end: {
            line: 15,
            column: 51
          }
        },
        loc: {
          start: {
            line: 15,
            column: 62
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 49
          }
        },
        loc: {
          start: {
            line: 32,
            column: 60
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 27
          },
          end: {
            line: 43,
            column: 28
          }
        },
        loc: {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 48,
            column: 46
          },
          end: {
            line: 48,
            column: 47
          }
        },
        loc: {
          start: {
            line: 48,
            column: 63
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 48
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 49
          },
          end: {
            line: 65,
            column: 50
          }
        },
        loc: {
          start: {
            line: 65,
            column: 63
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 78,
            column: 45
          },
          end: {
            line: 78,
            column: 46
          }
        },
        loc: {
          start: {
            line: 78,
            column: 51
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 78
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 31
          }
        },
        loc: {
          start: {
            line: 79,
            column: 43
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 79
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 17,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 17,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 28,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 28,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 18
          }
        }, {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 26
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 34,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 34,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: 59,
            column: 13
          },
          end: {
            line: 61,
            column: 9
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: 72,
            column: 13
          },
          end: {
            line: 74,
            column: 9
          }
        }],
        line: 68
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/nutrition/hooks/useNutritionTracking.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/nutrition/hooks/useNutritionTracking.ts"],
      sourcesContent: ["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { useAuth } from './useAuth';\nimport { useToast } from '@/shared/hooks/use-toast';\n\nexport interface NutritionEntry {\n  id: string;\n  user_id: string;\n  food_name: string;\n  quantity: number;\n  unit: string;\n  calories: number;\n  protein: number;\n  carbs: number;\n  fat: number;\n  meal_type: 'breakfast' | 'lunch' | 'dinner' | 'snack';\n  consumed_at: string;\n}\n\nexport interface NutritionGoals {\n  daily_calories: number;\n  protein_g: number;\n  carbs_g: number;\n  fat_g: number;\n}\n\nexport function useNutritionTracking() {\n  const { user } = useAuth();\n  const { showToast } = useToast();\n  const [entries, setEntries] = useState<NutritionEntry[]>([]);\n  const [goals, setGoals] = useState<NutritionGoals | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  // Charger les entr\xE9es du jour\n  const fetchEntries = useCallback(async () => {\n    if (!user) return;\n    setLoading(true);\n    const today = new Date().toISOString().split('T')[0];\n    const { data: _data, error: _error } = await supabase\n      .from('nutrition_entries')\n      .select('*')\n      .eq('user_id', user.id)\n      .gte('consumed_at', `${today}T00:00:00.000Z`)\n      .lte('consumed_at', `${today}T23:59:59.999Z`)\n      .order('consumed_at', { ascending: true });\n    if (!error && data) setEntries(data);\n    setLoading(false);\n  }, [user]);\n\n  // Charger les objectifs\n  const fetchGoals = useCallback(async () => {\n    if (!user) return;\n    const { data: _data } = await supabase\n      .from('user_nutrition_goals')\n      .select('*')\n      .eq('user_id', user.id)\n      .single();\n    if (data) setGoals(data);\n  }, [user]);\n\n  useEffect(() => {\n    fetchEntries();\n    fetchGoals();\n  }, [fetchEntries, fetchGoals]);\n\n  // Ajouter une entr\xE9e\n  const addEntry = useCallback(\n    async (entry: Omit<NutritionEntry, 'id' | 'user_id'>) => {\n      if (!user) return;\n      setLoading(true);\n      const { error: _error } = await supabase\n        .from('nutrition_entries')\n        .insert({ ...entry, user_id: user.id });\n      if (!error) {\n        showToast('Aliment ajout\xE9 !', 'success');\n        fetchEntries();\n      } else {\n        showToast(\"Erreur lors de l'ajout\", 'error');\n      }\n      setLoading(false);\n    },\n    [user, fetchEntries, showToast]\n  );\n\n  // Supprimer une entr\xE9e\n  const deleteEntry = useCallback(\n    async (id: string) => {\n      setLoading(true);\n      const { error: _error } = await supabase.from('nutrition_entries').delete().eq('id', id);\n      if (!error) {\n        showToast('Entr\xE9e supprim\xE9e', 'success');\n        fetchEntries();\n      } else {\n        showToast('Erreur lors de la suppression', 'error');\n      }\n      setLoading(false);\n    },\n    [fetchEntries, showToast]\n  );\n\n  // Calcul des totaux du jour\n  const dailyTotals = useMemo(() => {\n    return entries.reduce(\n      (acc, e) => ({\n        calories: acc.calories + e.calories,\n        protein: acc.protein + e.protein,\n        carbs: acc.carbs + e.carbs,\n        fat: acc.fat + e.fat,\n      }),\n      { calories: 0, protein: 0, carbs: 0, fat: 0 }\n    );\n  }, [entries]);\n\n  return {\n    entries,\n    goals,\n    loading,\n    addEntry,\n    deleteEntry,\n    dailyTotals,\n    fetchEntries,\n    fetchGoals,\n  };\n}\n\nexport default useNutritionTracking;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2367d06ca7e93e2b5f03fd8a1b1a83132ec608c6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2dusjetctj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2dusjetctj();
cov_2dusjetctj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2dusjetctj().s[1]++;
exports.useNutritionTracking = useNutritionTracking;
const react_1 =
/* istanbul ignore next */
(cov_2dusjetctj().s[2]++, require("react"));
const supabase_1 =
/* istanbul ignore next */
(cov_2dusjetctj().s[3]++, require("@/lib/supabase"));
const useAuth_1 =
/* istanbul ignore next */
(cov_2dusjetctj().s[4]++, require("./useAuth"));
const use_toast_1 =
/* istanbul ignore next */
(cov_2dusjetctj().s[5]++, require("@/shared/hooks/use-toast"));
function useNutritionTracking() {
  /* istanbul ignore next */
  cov_2dusjetctj().f[0]++;
  const {
    user
  } =
  /* istanbul ignore next */
  (cov_2dusjetctj().s[6]++, (0, useAuth_1.useAuth)());
  const {
    showToast
  } =
  /* istanbul ignore next */
  (cov_2dusjetctj().s[7]++, (0, use_toast_1.useToast)());
  const [entries, setEntries] =
  /* istanbul ignore next */
  (cov_2dusjetctj().s[8]++, (0, react_1.useState)([]));
  const [goals, setGoals] =
  /* istanbul ignore next */
  (cov_2dusjetctj().s[9]++, (0, react_1.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_2dusjetctj().s[10]++, (0, react_1.useState)(false));
  // Charger les entrées du jour
  const fetchEntries =
  /* istanbul ignore next */
  (cov_2dusjetctj().s[11]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2dusjetctj().f[1]++;
    cov_2dusjetctj().s[12]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2dusjetctj().b[0][0]++;
      cov_2dusjetctj().s[13]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2dusjetctj().b[0][1]++;
    }
    cov_2dusjetctj().s[14]++;
    setLoading(true);
    const today =
    /* istanbul ignore next */
    (cov_2dusjetctj().s[15]++, new Date().toISOString().split('T')[0]);
    const {
      data: _data,
      error: _error
    } =
    /* istanbul ignore next */
    (cov_2dusjetctj().s[16]++, await supabase_1.supabase.from('nutrition_entries').select('*').eq('user_id', user.id).gte('consumed_at', `${today}T00:00:00.000Z`).lte('consumed_at', `${today}T23:59:59.999Z`).order('consumed_at', {
      ascending: true
    }));
    /* istanbul ignore next */
    cov_2dusjetctj().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_2dusjetctj().b[2][0]++, !error) &&
    /* istanbul ignore next */
    (cov_2dusjetctj().b[2][1]++, data)) {
      /* istanbul ignore next */
      cov_2dusjetctj().b[1][0]++;
      cov_2dusjetctj().s[18]++;
      setEntries(data);
    } else
    /* istanbul ignore next */
    {
      cov_2dusjetctj().b[1][1]++;
    }
    cov_2dusjetctj().s[19]++;
    setLoading(false);
  }, [user]));
  // Charger les objectifs
  const fetchGoals =
  /* istanbul ignore next */
  (cov_2dusjetctj().s[20]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2dusjetctj().f[2]++;
    cov_2dusjetctj().s[21]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2dusjetctj().b[3][0]++;
      cov_2dusjetctj().s[22]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2dusjetctj().b[3][1]++;
    }
    const {
      data: _data
    } =
    /* istanbul ignore next */
    (cov_2dusjetctj().s[23]++, await supabase_1.supabase.from('user_nutrition_goals').select('*').eq('user_id', user.id).single());
    /* istanbul ignore next */
    cov_2dusjetctj().s[24]++;
    if (data) {
      /* istanbul ignore next */
      cov_2dusjetctj().b[4][0]++;
      cov_2dusjetctj().s[25]++;
      setGoals(data);
    } else
    /* istanbul ignore next */
    {
      cov_2dusjetctj().b[4][1]++;
    }
  }, [user]));
  /* istanbul ignore next */
  cov_2dusjetctj().s[26]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_2dusjetctj().f[3]++;
    cov_2dusjetctj().s[27]++;
    fetchEntries();
    /* istanbul ignore next */
    cov_2dusjetctj().s[28]++;
    fetchGoals();
  }, [fetchEntries, fetchGoals]);
  // Ajouter une entrée
  const addEntry =
  /* istanbul ignore next */
  (cov_2dusjetctj().s[29]++, (0, react_1.useCallback)(async entry => {
    /* istanbul ignore next */
    cov_2dusjetctj().f[4]++;
    cov_2dusjetctj().s[30]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2dusjetctj().b[5][0]++;
      cov_2dusjetctj().s[31]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2dusjetctj().b[5][1]++;
    }
    cov_2dusjetctj().s[32]++;
    setLoading(true);
    const {
      error: _error
    } =
    /* istanbul ignore next */
    (cov_2dusjetctj().s[33]++, await supabase_1.supabase.from('nutrition_entries').insert({
      ...entry,
      user_id: user.id
    }));
    /* istanbul ignore next */
    cov_2dusjetctj().s[34]++;
    if (!error) {
      /* istanbul ignore next */
      cov_2dusjetctj().b[6][0]++;
      cov_2dusjetctj().s[35]++;
      showToast('Aliment ajouté !', 'success');
      /* istanbul ignore next */
      cov_2dusjetctj().s[36]++;
      fetchEntries();
    } else {
      /* istanbul ignore next */
      cov_2dusjetctj().b[6][1]++;
      cov_2dusjetctj().s[37]++;
      showToast("Erreur lors de l'ajout", 'error');
    }
    /* istanbul ignore next */
    cov_2dusjetctj().s[38]++;
    setLoading(false);
  }, [user, fetchEntries, showToast]));
  // Supprimer une entrée
  const deleteEntry =
  /* istanbul ignore next */
  (cov_2dusjetctj().s[39]++, (0, react_1.useCallback)(async id => {
    /* istanbul ignore next */
    cov_2dusjetctj().f[5]++;
    cov_2dusjetctj().s[40]++;
    setLoading(true);
    const {
      error: _error
    } =
    /* istanbul ignore next */
    (cov_2dusjetctj().s[41]++, await supabase_1.supabase.from('nutrition_entries').delete().eq('id', id));
    /* istanbul ignore next */
    cov_2dusjetctj().s[42]++;
    if (!error) {
      /* istanbul ignore next */
      cov_2dusjetctj().b[7][0]++;
      cov_2dusjetctj().s[43]++;
      showToast('Entrée supprimée', 'success');
      /* istanbul ignore next */
      cov_2dusjetctj().s[44]++;
      fetchEntries();
    } else {
      /* istanbul ignore next */
      cov_2dusjetctj().b[7][1]++;
      cov_2dusjetctj().s[45]++;
      showToast('Erreur lors de la suppression', 'error');
    }
    /* istanbul ignore next */
    cov_2dusjetctj().s[46]++;
    setLoading(false);
  }, [fetchEntries, showToast]));
  // Calcul des totaux du jour
  const dailyTotals =
  /* istanbul ignore next */
  (cov_2dusjetctj().s[47]++, (0, react_1.useMemo)(() => {
    /* istanbul ignore next */
    cov_2dusjetctj().f[6]++;
    cov_2dusjetctj().s[48]++;
    return entries.reduce((acc, e) => {
      /* istanbul ignore next */
      cov_2dusjetctj().f[7]++;
      cov_2dusjetctj().s[49]++;
      return {
        calories: acc.calories + e.calories,
        protein: acc.protein + e.protein,
        carbs: acc.carbs + e.carbs,
        fat: acc.fat + e.fat
      };
    }, {
      calories: 0,
      protein: 0,
      carbs: 0,
      fat: 0
    });
  }, [entries]));
  /* istanbul ignore next */
  cov_2dusjetctj().s[50]++;
  return {
    entries,
    goals,
    loading,
    addEntry,
    deleteEntry,
    dailyTotals,
    fetchEntries,
    fetchGoals
  };
}
/* istanbul ignore next */
cov_2dusjetctj().s[51]++;
exports.default = useNutritionTracking;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,