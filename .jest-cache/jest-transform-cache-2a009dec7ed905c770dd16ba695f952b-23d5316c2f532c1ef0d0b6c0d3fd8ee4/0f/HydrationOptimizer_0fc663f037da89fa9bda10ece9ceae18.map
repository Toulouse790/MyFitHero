{"version":3,"names":["react_1","cov_t8noq4mkq","s","__importStar","require","framer_motion_1","supabase_1","card_1","button_1","badge_1","dialog_1","lucide_react_1","hydration_mapping_1","initialHydrationState","currentState","hydrationData","hydrationAnalysis","weeklySummary","hydrationGoals","recentDays","todayIntakes","isLoading","error","showInsights","selectedDate","Date","toISOString","split","hydrationScore","efficiencyScore","dehydrationRisk","currentProgress","dailyGoal","hydrationReducer","state","action","f","type","b","payload","hydration","efficiency","risk","current","goal","HydrationOptimizer","dispatch","useReducer","userId","setUserId","useState","useEffect","getUser","data","user","supabase","auth","id","loadHydrationData","userIdParam","recentHydrationData","hydrationError","from","select","eq","order","ascending","limit","map","dbToHydrationData","todayData","find","day","hydrationDate","totalIntake","hydrationTimestamps","ts","index","timestamp","time","amount","fluidType","temperature","context","analyzeHydrationData","createTodayHydrationData","goalsData","single","console","now","waterIntake","otherFluids","coffee","tea","juice","alcohol","sportsDrinks","sodas","physicalActivity","exerciseDuration","exerciseIntensity","sweatRate","environmentalTemp","humidity","bodyMetrics","weight","urineColor","urineFrequency","symptoms","thirst","headache","fatigue","dizziness","drymouth","darkUrine","constipation","mood","energyLevel","concentration","overallMood","createdAt","updatedAt","hydrationScores","calculateHydrationScores","aiInsights","generateHydrationAIInsights","calculateDehydrationRisk","analysis","hydrationDataId","analysisDate","fluidBalance","optimalIntake","calculateOptimalIntake","actualIntake","deficit","Math","max","surplus","absorptionRate","calculateAbsorptionRate","retentionScore","calculateRetentionScore","performanceImpact","cognitiveFunction","calculateCognitiveImpact","physicalPerformance","calculatePhysicalImpact","recoveryRate","calculateRecoveryImpact","metabolicEfficiency","calculateMetabolicImpact","predictiveMetrics","nextHourNeed","calculateNextHourNeed","endOfDayProjection","calculateEndOfDayProjection","performanceImpactTomorrow","overallHydration","optimalNextIntake","calculateOptimalNextIntake","environmentalFactors","temperatureImpact","calculateTemperatureImpact","humidityImpact","calculateHumidityImpact","altitudeAdjustment","seasonalFactors","getSeasonalFactors","personalizedTargets","baselineNeed","exerciseAdjustment","calculateExerciseAdjustment","environmentalAdjustment","calculateEnvironmentalAdjustment","finalTarget","hydrationEfficiency","currentLevel","saveHydrationAnalysis","upsert","user_id","hydration_data_id","analysis_date","overall_hydration_score","hydration_efficiency_score","quality_score","qualityScore","timing_optimization_score","timingOptimization","recovery_hydration_score","recoveryHydration","balance_score","balanceScore","dehydration_risk_level","hydration_ai_analysis","addFluidIntake","timeString","toTimeString","slice","newIntake","newTimestamp","updatedHydrationData","dbData","hydrationDataToDb","progressPercentage","min","jsx_runtime_1","jsx","className","children","jsxs","motion","div","initial","opacity","y","animate","Droplets","scale","toFixed","width","transition","duration","ease","whileHover","delay","Zap","AlertTriangle","Badge","x","Card","CardHeader","CardTitle","Plus","CardContent","Button","onClick","disabled","Coffee","Milk","Dialog","DialogTrigger","asChild","variant","Settings","DialogContent","DialogHeader","DialogTitle","CustomIntakeForm","onSubmit","length","Clock","reverse","intake","fluidIcons","water","Wine","sports","soda","Icon","toLocaleTimeString","hour","minute","BarChart3","toLocaleDateString","Object","entries","fluid","percentage","colors","filter","Boolean","style","Brain","improvementSuggestions","Lightbulb","suggestion","CheckCircle","fluidRecommendations","recommendation","Timer","Target","AnimatePresence","exit","size","exports","formData","setFormData","handleSubmit","e","preventDefault","step","value","onChange","Number","target","label","icon","waterRatio","round","alcoholRatio","caffeineRatio","hydrationLevel","exerciseBonus","qualityBonus","currentHour","getHours","baseNeed","hoursLeft","averageHourlyNeed","nextIntake","getTime","temp","month","getMonth","intensityMultiplier","low","moderate","high","extreme","adjustment","default"],"sources":["/workspaces/MyFitHero/src/features/hydration/components/HydrationOptimizer.tsx"],"sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { \n  Droplets, \n  Target, \n  Clock, \n  Brain, \n  Heart, \n  Zap, \n  TrendingUp, \n  AlertTriangle,\n  CheckCircle,\n  Activity,\n  Calendar,\n  BarChart3,\n  Thermometer,\n  Timer,\n  Lightbulb,\n  Settings,\n  Plus,\n  Minus,\n  Coffee,\n  Wine,\n  Milk\n} from 'lucide-react';\nimport { \n  HydrationData, \n  HydrationAnalysis, \n  HydrationTrackingState, \n  WeeklyHydrationSummary,\n  HydrationGoals,\n  FluidIntakeEvent\n} from '@/features/hydration/types';\nimport { \n  dbToHydrationData, \n  hydrationDataToDb, \n  calculateHydrationScores, \n  generateHydrationAIInsights,\n  calculateDehydrationRisk\n} from '@/features/hydration/utils/hydration-mapping';\n\n// Types pour le state machine React\ninterface HydrationState {\n  currentState: HydrationTrackingState;\n  hydrationData: HydrationData | undefined;\n  hydrationAnalysis: HydrationAnalysis | undefined;\n  weeklySummary: WeeklyHydrationSummary | undefined;\n  hydrationGoals: HydrationGoals | undefined;\n  recentDays: HydrationData[];\n  todayIntakes: FluidIntakeEvent[];\n  isLoading: boolean;\n  error: string | undefined;\n  showInsights: boolean;\n  selectedDate: string;\n  hydrationScore: number;\n  efficiencyScore: number;\n  dehydrationRisk: string;\n  currentProgress: number;\n  dailyGoal: number;\n}\n\ntype HydrationAction =\n  | { type: 'SET_STATE'; payload: HydrationTrackingState }\n  | { type: 'SET_HYDRATION_DATA'; payload: HydrationData }\n  | { type: 'SET_ANALYSIS'; payload: HydrationAnalysis }\n  | { type: 'SET_WEEKLY_SUMMARY'; payload: WeeklyHydrationSummary }\n  | { type: 'SET_GOALS'; payload: HydrationGoals }\n  | { type: 'SET_RECENT_DAYS'; payload: HydrationData[] }\n  | { type: 'SET_TODAY_INTAKES'; payload: FluidIntakeEvent[] }\n  | { type: 'ADD_INTAKE'; payload: FluidIntakeEvent }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | undefined }\n  | { type: 'TOGGLE_INSIGHTS' }\n  | { type: 'SET_SELECTED_DATE'; payload: string }\n  | { type: 'UPDATE_SCORES'; payload: { hydration: number; efficiency: number; risk: string } }\n  | { type: 'UPDATE_PROGRESS'; payload: { current: number; goal: number } }\n  | { type: 'RESET_STATE' };\n\nconst initialHydrationState: HydrationState = {\n  currentState: 'idle',\n  hydrationData: null,\n  hydrationAnalysis: null,\n  weeklySummary: null,\n  hydrationGoals: null,\n  recentDays: [],\n  todayIntakes: [],\n  isLoading: false,\n  error: null,\n  showInsights: false,\n  selectedDate: new Date().toISOString().split('T')[0],\n  hydrationScore: 0,\n  efficiencyScore: 0,\n  dehydrationRisk: 'optimal',\n  currentProgress: 0,\n  dailyGoal: 2500,\n};\n\nfunction hydrationReducer(state: HydrationState, action: HydrationAction): HydrationState {\n  switch (action.type) {\n    case 'SET_STATE':\n      return { ...state, currentState: action.payload };\n    case 'SET_HYDRATION_DATA':\n      return { ...state, hydrationData: action.payload };\n    case 'SET_ANALYSIS':\n      return { ...state, hydrationAnalysis: action.payload };\n    case 'SET_WEEKLY_SUMMARY':\n      return { ...state, weeklySummary: action.payload };\n    case 'SET_GOALS':\n      return { ...state, hydrationGoals: action.payload };\n    case 'SET_RECENT_DAYS':\n      return { ...state, recentDays: action.payload };\n    case 'SET_TODAY_INTAKES':\n      return { ...state, todayIntakes: action.payload };\n    case 'ADD_INTAKE':\n      return { ...state, todayIntakes: [...state.todayIntakes, action.payload] };\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    case 'TOGGLE_INSIGHTS':\n      return { ...state, showInsights: !state.showInsights };\n    case 'SET_SELECTED_DATE':\n      return { ...state, selectedDate: action.payload };\n    case 'UPDATE_SCORES':\n      return { \n        ...state, \n        hydrationScore: action.payload.hydration,\n        efficiencyScore: action.payload.efficiency,\n        dehydrationRisk: action.payload.risk \n      };\n    case 'UPDATE_PROGRESS':\n      return { \n        ...state, \n        currentProgress: action.payload.current,\n        dailyGoal: action.payload.goal \n      };\n    case 'RESET_STATE':\n      return initialHydrationState;\n    default:\n      return state;\n  }\n}\n\nexport const HydrationOptimizer: React.FC = () => {\n  const [state, dispatch] = useReducer(hydrationReducer, initialHydrationState);\n  const [userId, setUserId] = useState<string | null>(null);\n\n  // Gestion de l'authentification\n  useEffect(() => {\n    const getUser = async () => {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        setUserId(user.id);\n        await loadHydrationData(user.id);\n      }\n    };\n    getUser();\n  }, []);\n\n  // Chargement des donnÃ©es d'hydratation\n  const loadHydrationData = async (userIdParam: string) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_STATE', payload: 'syncing_data' });\n\n    try {\n      // Chargement des donnÃ©es rÃ©centes\n      const { data: recentHydrationData, error: hydrationError } = await supabase\n        .from('hydration_data')\n        .select('*')\n        .eq('user_id', userIdParam)\n        .order('hydration_date', { ascending: false })\n        .limit(7);\n\n      if (hydrationError) throw hydrationError;\n\n      const recentDays = recentHydrationData?.map(dbToHydrationData) || [];\n      dispatch({ type: 'SET_RECENT_DAYS', payload: recentDays });\n\n      // DonnÃ©es du jour sÃ©lectionnÃ©\n      const todayData = recentDays.find(day => \n        day.hydrationDate === state.selectedDate\n      );\n\n      if (todayData) {\n        dispatch({ type: 'SET_HYDRATION_DATA', payload: todayData });\n        dispatch({ type: 'UPDATE_PROGRESS', payload: { \n          current: todayData.totalIntake, \n          goal: todayData.dailyGoal \n        }});\n        \n        // Conversion des timestamps en events\n        const todayIntakes: FluidIntakeEvent[] = todayData.hydrationTimestamps.map((ts, index) => ({\n          id: `intake_${index}`,\n          timestamp: new Date(`${todayData.hydrationDate}T${ts.time}`),\n          amount: ts.amount,\n          fluidType: ts.fluidType,\n          temperature: ts.temperature,\n          context: 'habit',\n        }));\n        dispatch({ type: 'SET_TODAY_INTAKES', payload: todayIntakes });\n        \n        await analyzeHydrationData(todayData);\n      } else {\n        // CrÃ©er donnÃ©es par dÃ©faut pour aujourd'hui\n        await createTodayHydrationData(userIdParam);\n      }\n\n      // Chargement des objectifs\n      const { data: goalsData } = await supabase\n        .from('hydration_goals')\n        .select('*')\n        .eq('user_id', userIdParam)\n        .single();\n\n      if (goalsData) {\n        dispatch({ type: 'SET_GOALS', payload: goalsData });\n      }\n\n      dispatch({ type: 'SET_STATE', payload: 'idle' });\n    } catch (error: any) {\n      console.error('Erreur chargement donnÃ©es hydratation:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Erreur lors du chargement des donnÃ©es' });\n      dispatch({ type: 'SET_STATE', payload: 'error' });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  // CrÃ©ation donnÃ©es par dÃ©faut aujourd'hui\n  const createTodayHydrationData = async (userIdParam: string) => {\n    const todayData: HydrationData = {\n      id: `hydration_${Date.now()}`,\n      userId: userIdParam,\n      hydrationDate: state.selectedDate,\n      dailyGoal: 2500,\n      totalIntake: 0,\n      waterIntake: 0,\n      otherFluids: {\n        coffee: 0,\n        tea: 0,\n        juice: 0,\n        alcohol: 0,\n        sportsDrinks: 0,\n        sodas: 0,\n      },\n      hydrationTimestamps: [],\n      physicalActivity: {\n        exerciseDuration: 0,\n        exerciseIntensity: 'low',\n        sweatRate: 500,\n        environmentalTemp: 20,\n        humidity: 50,\n      },\n      bodyMetrics: {\n        weight: 70,\n        urineColor: 3,\n        urineFrequency: 6,\n      },\n      symptoms: {\n        thirst: 'none',\n        headache: false,\n        fatigue: false,\n        dizziness: false,\n        drymouth: false,\n        darkUrine: false,\n        constipation: false,\n      },\n      mood: {\n        energyLevel: 7,\n        concentration: 7,\n        overallMood: 'good',\n      },\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    dispatch({ type: 'SET_HYDRATION_DATA', payload: todayData });\n    dispatch({ type: 'UPDATE_PROGRESS', payload: { current: 0, goal: 2500 }});\n  };\n\n  // Analyse IA de l'hydratation\n  const analyzeHydrationData = async (hydrationData: HydrationData) => {\n    dispatch({ type: 'SET_STATE', payload: 'analyzing_hydration' });\n\n    try {\n      // Calcul des scores\n      const hydrationScores = calculateHydrationScores(hydrationData);\n      const aiInsights = generateHydrationAIInsights(hydrationData, hydrationScores);\n      const dehydrationRisk = calculateDehydrationRisk(hydrationData);\n\n      // CrÃ©ation de l'analyse complÃ¨te\n      const analysis: HydrationAnalysis = {\n        id: `analysis_${hydrationData.id}`,\n        userId: hydrationData.userId,\n        hydrationDataId: hydrationData.id,\n        analysisDate: new Date(),\n        hydrationScores,\n        fluidBalance: {\n          optimalIntake: calculateOptimalIntake(hydrationData),\n          actualIntake: hydrationData.totalIntake,\n          deficit: Math.max(0, hydrationData.dailyGoal - hydrationData.totalIntake),\n          surplus: Math.max(0, hydrationData.totalIntake - hydrationData.dailyGoal),\n          absorptionRate: calculateAbsorptionRate(hydrationData),\n          retentionScore: calculateRetentionScore(hydrationData),\n        },\n        performanceImpact: {\n          cognitiveFunction: calculateCognitiveImpact(hydrationData),\n          physicalPerformance: calculatePhysicalImpact(hydrationData),\n          recoveryRate: calculateRecoveryImpact(hydrationData),\n          metabolicEfficiency: calculateMetabolicImpact(hydrationData),\n        },\n        dehydrationRisk,\n        aiInsights,\n        predictiveMetrics: {\n          nextHourNeed: calculateNextHourNeed(hydrationData),\n          endOfDayProjection: calculateEndOfDayProjection(hydrationData),\n          performanceImpactTomorrow: hydrationScores.overallHydration > 75 ? 'positive' : \n                                      hydrationScores.overallHydration > 50 ? 'neutral' : 'negative',\n          optimalNextIntake: calculateOptimalNextIntake(),\n        },\n        environmentalFactors: {\n          temperatureImpact: calculateTemperatureImpact(hydrationData),\n          humidityImpact: calculateHumidityImpact(hydrationData),\n          altitudeAdjustment: 0, // SimplifiÃ©e\n          seasonalFactors: getSeasonalFactors(),\n        },\n        personalizedTargets: {\n          baselineNeed: 2000,\n          exerciseAdjustment: calculateExerciseAdjustment(hydrationData),\n          environmentalAdjustment: calculateEnvironmentalAdjustment(hydrationData),\n          finalTarget: hydrationData.dailyGoal,\n        },\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n\n      dispatch({ type: 'SET_ANALYSIS', payload: analysis });\n      dispatch({ type: 'UPDATE_SCORES', payload: { \n        hydration: hydrationScores.overallHydration,\n        efficiency: hydrationScores.hydrationEfficiency,\n        risk: dehydrationRisk.currentLevel \n      }});\n\n      // Sauvegarde en base\n      await saveHydrationAnalysis(analysis);\n      \n    } catch (error: any) {\n      console.error('Erreur analyse hydratation:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Erreur lors de l\\'analyse' });\n    }\n  };\n\n  // Sauvegarde de l'analyse\n  const saveHydrationAnalysis = async (analysis: HydrationAnalysis) => {\n    try {\n      const { error } = await supabase\n        .from('hydration_analysis')\n        .upsert({\n          id: analysis.id,\n          user_id: analysis.userId,\n          hydration_data_id: analysis.hydrationDataId,\n          analysis_date: analysis.analysisDate.toISOString(),\n          overall_hydration_score: analysis.hydrationScores.overallHydration,\n          hydration_efficiency_score: analysis.hydrationScores.hydrationEfficiency,\n          quality_score: analysis.hydrationScores.qualityScore,\n          timing_optimization_score: analysis.hydrationScores.timingOptimization,\n          recovery_hydration_score: analysis.hydrationScores.recoveryHydration,\n          balance_score: analysis.hydrationScores.balanceScore,\n          dehydration_risk_level: analysis.dehydrationRisk.currentLevel,\n          hydration_ai_analysis: {\n            fluidBalance: analysis.fluidBalance,\n            performanceImpact: analysis.performanceImpact,\n            dehydrationRisk: analysis.dehydrationRisk,\n            aiInsights: analysis.aiInsights,\n            predictiveMetrics: analysis.predictiveMetrics,\n            environmentalFactors: analysis.environmentalFactors,\n            personalizedTargets: analysis.personalizedTargets,\n          }\n        });\n\n      if (error) throw error;\n    } catch (error: any) {\n      console.error('Erreur sauvegarde analyse:', error);\n    }\n  };\n\n  // Ajout d'une nouvelle prise\n  const addFluidIntake = async (amount: number, fluidType: HydrationData['hydrationTimestamps'][0]['fluidType'], temperature: HydrationData['hydrationTimestamps'][0]['temperature'] = 'room') => {\n    if (!userId || !state.hydrationData) return;\n\n    dispatch({ type: 'SET_STATE', payload: 'logging_intake' });\n    dispatch({ type: 'SET_LOADING', payload: true });\n\n    try {\n      const now = new Date();\n      const timeString = now.toTimeString().slice(0, 5);\n      \n      // Nouvel event d'intake\n      const newIntake: FluidIntakeEvent = {\n        id: `intake_${Date.now()}`,\n        timestamp: now,\n        amount,\n        fluidType,\n        temperature,\n        context: 'habit',\n      };\n\n      // Nouveau timestamp pour les donnÃ©es\n      const newTimestamp = {\n        time: timeString,\n        amount,\n        fluidType,\n        temperature,\n      };\n\n      // Mise Ã  jour des donnÃ©es d'hydratation\n      const updatedHydrationData: HydrationData = {\n        ...state.hydrationData,\n        totalIntake: state.hydrationData.totalIntake + amount,\n        waterIntake: fluidType === 'water' ? state.hydrationData.waterIntake + amount : state.hydrationData.waterIntake,\n        otherFluids: {\n          ...state.hydrationData.otherFluids,\n          [fluidType === 'coffee' ? 'coffee' :\n           fluidType === 'tea' ? 'tea' :\n           fluidType === 'juice' ? 'juice' :\n           fluidType === 'alcohol' ? 'alcohol' :\n           fluidType === 'sports' ? 'sportsDrinks' :\n           fluidType === 'soda' ? 'sodas' : 'coffee']: \n           state.hydrationData.otherFluids[\n             fluidType === 'coffee' ? 'coffee' :\n             fluidType === 'tea' ? 'tea' :\n             fluidType === 'juice' ? 'juice' :\n             fluidType === 'alcohol' ? 'alcohol' :\n             fluidType === 'sports' ? 'sportsDrinks' :\n             fluidType === 'soda' ? 'sodas' : 'coffee'\n           ] + (fluidType !== 'water' ? amount : 0)\n        },\n        hydrationTimestamps: [...state.hydrationData.hydrationTimestamps, newTimestamp],\n        updatedAt: new Date(),\n      };\n\n      // Sauvegarde en base\n      const dbData = hydrationDataToDb(updatedHydrationData);\n      const { error } = await supabase\n        .from('hydration_data')\n        .upsert(dbData);\n\n      if (error) throw error;\n\n      // Mise Ã  jour du state\n      dispatch({ type: 'SET_HYDRATION_DATA', payload: updatedHydrationData });\n      dispatch({ type: 'ADD_INTAKE', payload: newIntake });\n      dispatch({ type: 'UPDATE_PROGRESS', payload: { \n        current: updatedHydrationData.totalIntake, \n        goal: updatedHydrationData.dailyGoal \n      }});\n\n      // Re-analyse\n      await analyzeHydrationData(updatedHydrationData);\n\n      dispatch({ type: 'SET_STATE', payload: 'idle' });\n    } catch (error: any) {\n      console.error('Erreur ajout prise fluide:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Erreur lors de l\\'ajout' });\n      dispatch({ type: 'SET_STATE', payload: 'error' });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  // Calcul du pourcentage de progression\n  const progressPercentage = state.dailyGoal > 0 ? Math.min(100, (state.currentProgress / state.dailyGoal) * 100) : 0;\n\n  // Rendu du composant principal\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-cyan-900 to-blue-900 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        \n        {/* Header avec progression principale */}\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"text-center space-y-4\"\n        >\n          <div className=\"flex items-center justify-center gap-3 mb-6\">\n            <div className=\"p-3 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full\">\n              <Droplets className=\"w-8 h-8 text-white\" />\n            </div>\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent\">\n              Hydration Optimizer\n            </h1>\n          </div>\n\n          {/* Progression principale */}\n          <div className=\"max-w-2xl mx-auto\">\n            <motion.div\n              initial={{ scale: 0.9 }}\n              animate={{ scale: 1 }}\n              className=\"bg-white/10 backdrop-blur-sm rounded-xl p-8 border border-white/20\"\n            >\n              <div className=\"text-center mb-6\">\n                <div className=\"text-6xl font-bold text-white mb-2\">\n                  {state.currentProgress}ml\n                </div>\n                <div className=\"text-xl text-white/80\">\n                  sur {state.dailyGoal}ml ({progressPercentage.toFixed(0)}%)\n                </div>\n              </div>\n              \n              {/* Barre de progression liquide */}\n              <div className=\"relative w-full h-4 bg-white/20 rounded-full overflow-hidden\">\n                <motion.div\n                  initial={{ width: 0 }}\n                  animate={{ width: `${progressPercentage}%` }}\n                  transition={{ duration: 1, ease: \"easeOut\" }}\n                  className=\"h-full bg-gradient-to-r from-blue-400 via-cyan-400 to-blue-500 rounded-full relative\"\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-pulse\" />\n                </motion.div>\n              </div>\n              \n              {/* Indicateur de reste */}\n              {state.currentProgress < state.dailyGoal && (\n                <div className=\"text-center mt-4 text-white/70\">\n                  Plus que {state.dailyGoal - state.currentProgress}ml pour atteindre votre objectif\n                </div>\n              )}\n            </motion.div>\n          </div>\n\n          {/* Scores principaux */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 max-w-4xl mx-auto\">\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              className=\"bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20\"\n            >\n              <div className=\"flex items-center gap-3 mb-2\">\n                <Droplets className=\"w-6 h-6 text-blue-400\" />\n                <span className=\"text-white/80 font-medium\">Hydratation</span>\n              </div>\n              <div className=\"text-3xl font-bold text-white mb-1\">\n                {state.hydrationScore}/100\n              </div>\n              <div className=\"w-full bg-white/20 rounded-full h-2\">\n                <motion.div\n                  initial={{ width: 0 }}\n                  animate={{ width: `${state.hydrationScore}%` }}\n                  transition={{ duration: 1, delay: 0.2 }}\n                  className=\"bg-gradient-to-r from-blue-500 to-cyan-500 h-2 rounded-full\"\n                />\n              </div>\n            </motion.div>\n\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              className=\"bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20\"\n            >\n              <div className=\"flex items-center gap-3 mb-2\">\n                <Zap className=\"w-6 h-6 text-yellow-400\" />\n                <span className=\"text-white/80 font-medium\">EfficacitÃ©</span>\n              </div>\n              <div className=\"text-3xl font-bold text-white mb-1\">\n                {state.efficiencyScore}/100\n              </div>\n              <div className=\"w-full bg-white/20 rounded-full h-2\">\n                <motion.div\n                  initial={{ width: 0 }}\n                  animate={{ width: `${state.efficiencyScore}%` }}\n                  transition={{ duration: 1, delay: 0.4 }}\n                  className=\"bg-gradient-to-r from-yellow-500 to-orange-500 h-2 rounded-full\"\n                />\n              </div>\n            </motion.div>\n\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              className=\"bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20\"\n            >\n              <div className=\"flex items-center gap-3 mb-2\">\n                <AlertTriangle className=\"w-6 h-6 text-red-400\" />\n                <span className=\"text-white/80 font-medium\">Risque</span>\n              </div>\n              <div className=\"text-lg font-bold text-white mb-1\">\n                {state.dehydrationRisk === 'optimal' ? 'Optimal' :\n                 state.dehydrationRisk === 'mild' ? 'LÃ©ger' :\n                 state.dehydrationRisk === 'moderate' ? 'ModÃ©rÃ©' : 'SÃ©vÃ¨re'}\n              </div>\n              <Badge \n                className={`${\n                  state.dehydrationRisk === 'optimal' ? 'bg-green-500' :\n                  state.dehydrationRisk === 'mild' ? 'bg-yellow-500' :\n                  state.dehydrationRisk === 'moderate' ? 'bg-orange-500' : 'bg-red-500'\n                } text-white`}\n              >\n                {state.dehydrationRisk}\n              </Badge>\n            </motion.div>\n          </div>\n        </motion.div>\n\n        {/* Interface principale */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          \n          {/* Colonne gauche - Prises rapides */}\n          <div className=\"space-y-6\">\n            \n            {/* Actions de prise rapide */}\n            <motion.div\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n            >\n              <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                <CardHeader>\n                  <CardTitle className=\"text-white flex items-center gap-2\">\n                    <Plus className=\"w-5 h-5\" />\n                    Ajouter une prise\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  \n                  {/* Boutons prises rapides */}\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    <Button \n                      onClick={() => addFluidIntake(250, 'water')}\n                      className=\"bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white h-16 flex flex-col items-center justify-center\"\n                      disabled={state.isLoading}\n                    >\n                      <Droplets className=\"w-5 h-5 mb-1\" />\n                      Eau 250ml\n                    </Button>\n                    \n                    <Button \n                      onClick={() => addFluidIntake(500, 'water')}\n                      className=\"bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white h-16 flex flex-col items-center justify-center\"\n                      disabled={state.isLoading}\n                    >\n                      <Droplets className=\"w-5 h-5 mb-1\" />\n                      Eau 500ml\n                    </Button>\n                    \n                    <Button \n                      onClick={() => addFluidIntake(200, 'coffee', 'hot')}\n                      className=\"bg-gradient-to-r from-amber-600 to-orange-600 hover:from-amber-700 hover:to-orange-700 text-white h-16 flex flex-col items-center justify-center\"\n                      disabled={state.isLoading}\n                    >\n                      <Coffee className=\"w-5 h-5 mb-1\" />\n                      CafÃ© 200ml\n                    </Button>\n                    \n                    <Button \n                      onClick={() => addFluidIntake(250, 'tea', 'hot')}\n                      className=\"bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white h-16 flex flex-col items-center justify-center\"\n                      disabled={state.isLoading}\n                    >\n                      <Milk className=\"w-5 h-5 mb-1\" />\n                      ThÃ© 250ml\n                    </Button>\n                  </div>\n\n                  {/* Prise personnalisÃ©e */}\n                  <Dialog>\n                    <DialogTrigger asChild>\n                      <Button \n                        variant=\"outline\"\n                        className=\"w-full border-white/20 text-white hover:bg-white/10\"\n                      >\n                        <Settings className=\"w-4 h-4 mr-2\" />\n                        Prise personnalisÃ©e\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"bg-slate-900 border-slate-700 text-white\">\n                      <DialogHeader>\n                        <DialogTitle>Ajouter une prise personnalisÃ©e</DialogTitle>\n                      </DialogHeader>\n                      <CustomIntakeForm onSubmit={addFluidIntake} />\n                    </DialogContent>\n                  </Dialog>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            {/* Historique aujourd'hui */}\n            {state.todayIntakes.length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.4 }}\n              >\n                <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                  <CardHeader>\n                    <CardTitle className=\"text-white flex items-center gap-2\">\n                      <Clock className=\"w-5 h-5\" />\n                      Prises d'aujourd'hui\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3 max-h-64 overflow-y-auto\">\n                    {state.todayIntakes.slice().reverse().map((intake, index) => {\n                      const fluidIcons = {\n                        water: Droplets,\n                        coffee: Coffee,\n                        tea: Milk,\n                        juice: Milk,\n                        alcohol: Wine,\n                        sports: Zap,\n                        soda: Milk\n                      };\n                      const Icon = fluidIcons[intake.fluidType];\n                      \n                      return (\n                        <motion.div\n                          key={intake.id}\n                          initial={{ opacity: 0, x: -10 }}\n                          animate={{ opacity: 1, x: 0 }}\n                          transition={{ delay: index * 0.1 }}\n                          className=\"flex items-center justify-between p-3 bg-white/5 rounded-lg\"\n                        >\n                          <div className=\"flex items-center gap-3\">\n                            <Icon className=\"w-5 h-5 text-blue-400\" />\n                            <div>\n                              <div className=\"text-sm text-white font-medium\">\n                                {intake.amount}ml\n                              </div>\n                              <div className=\"text-xs text-white/70\">\n                                {intake.timestamp.toLocaleTimeString('fr-FR', { \n                                  hour: '2-digit', \n                                  minute: '2-digit' \n                                })}\n                              </div>\n                            </div>\n                          </div>\n                          <Badge \n                            className=\"bg-blue-500/20 text-blue-300 border-blue-400/30\"\n                          >\n                            {intake.fluidType}\n                          </Badge>\n                        </motion.div>\n                      );\n                    })}\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n          </div>\n\n          {/* Colonne centrale - Analyse et insights */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            \n            {/* DonnÃ©es d'hydratation */}\n            {state.hydrationData && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.3 }}\n              >\n                <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                  <CardHeader>\n                    <CardTitle className=\"text-white flex items-center gap-2\">\n                      <BarChart3 className=\"w-5 h-5\" />\n                      Analyse dÃ©taillÃ©e - {new Date(state.hydrationData.hydrationDate).toLocaleDateString('fr-FR')}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    \n                    {/* RÃ©partition des fluides */}\n                    <div className=\"space-y-3\">\n                      <h4 className=\"text-white font-medium\">RÃ©partition des fluides</h4>\n                      <div className=\"space-y-2\">\n                        {Object.entries({\n                          'Eau': state.hydrationData.waterIntake,\n                          'CafÃ©': state.hydrationData.otherFluids.coffee,\n                          'ThÃ©': state.hydrationData.otherFluids.tea,\n                          'Jus': state.hydrationData.otherFluids.juice,\n                          'Sports': state.hydrationData.otherFluids.sportsDrinks,\n                          'Sodas': state.hydrationData.otherFluids.sodas,\n                          'Alcool': state.hydrationData.otherFluids.alcohol,\n                        }).map(([fluid, amount]) => {\n                          if (amount === 0) return null;\n                          const percentage = (amount / state.hydrationData!.totalIntake) * 100;\n                          const colors = {\n                            'Eau': 'bg-blue-500',\n                            'CafÃ©': 'bg-amber-600',\n                            'ThÃ©': 'bg-green-500',\n                            'Jus': 'bg-orange-500',\n                            'Sports': 'bg-purple-500',\n                            'Sodas': 'bg-red-500',\n                            'Alcool': 'bg-red-600'\n                          };\n                          \n                          return (\n                            <div key={fluid} className=\"flex items-center gap-3\">\n                              <div className=\"w-20 text-sm text-white/70\">{fluid}</div>\n                              <div className=\"flex-1 bg-white/10 rounded-full h-4\">\n                                <motion.div\n                                  initial={{ width: 0 }}\n                                  animate={{ width: `${percentage}%` }}\n                                  transition={{ duration: 1, delay: 0.5 }}\n                                  className={`${colors[fluid as keyof typeof colors]} h-4 rounded-full relative overflow-hidden`}\n                                >\n                                  <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent animate-pulse\" />\n                                </motion.div>\n                              </div>\n                              <div className=\"w-24 text-sm text-white text-right\">\n                                {amount}ml ({percentage.toFixed(1)}%)\n                              </div>\n                            </div>\n                          );\n                        }).filter(Boolean)}\n                      </div>\n                    </div>\n\n                    {/* MÃ©triques corporelles */}\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">Couleur urine</div>\n                        <div className=\"text-lg font-bold text-white\">\n                          {state.hydrationData.bodyMetrics.urineColor}/8\n                        </div>\n                        <div className={`w-4 h-4 mx-auto mt-1 rounded-full ${\n                          state.hydrationData.bodyMetrics.urineColor <= 3 ? 'bg-yellow-200' :\n                          state.hydrationData.bodyMetrics.urineColor <= 5 ? 'bg-yellow-400' :\n                          state.hydrationData.bodyMetrics.urineColor <= 7 ? 'bg-orange-500' : 'bg-red-600'\n                        }`} />\n                      </div>\n                      \n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">FrÃ©quence</div>\n                        <div className=\"text-lg font-bold text-white\">\n                          {state.hydrationData.bodyMetrics.urineFrequency}/jour\n                        </div>\n                        <Badge className={`mt-1 ${\n                          state.hydrationData.bodyMetrics.urineFrequency >= 6 && \n                          state.hydrationData.bodyMetrics.urineFrequency <= 8 ? \n                          'bg-green-500' : 'bg-orange-500'\n                        } text-white`}>\n                          {state.hydrationData.bodyMetrics.urineFrequency >= 6 && \n                           state.hydrationData.bodyMetrics.urineFrequency <= 8 ? 'Normal' : 'Attention'}\n                        </Badge>\n                      </div>\n                      \n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">Ãnergie</div>\n                        <div className=\"text-lg font-bold text-white\">\n                          {state.hydrationData.mood.energyLevel}/10\n                        </div>\n                        <div className=\"w-full bg-white/20 rounded-full h-2 mt-1\">\n                          <div \n                            className=\"bg-gradient-to-r from-red-500 via-yellow-500 to-green-500 h-2 rounded-full\"\n                            style={{ width: `${state.hydrationData.mood.energyLevel * 10}%` }}\n                          />\n                        </div>\n                      </div>\n                      \n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">Concentration</div>\n                        <div className=\"text-lg font-bold text-white\">\n                          {state.hydrationData.mood.concentration}/10\n                        </div>\n                        <div className=\"w-full bg-white/20 rounded-full h-2 mt-1\">\n                          <div \n                            className=\"bg-gradient-to-r from-red-500 via-yellow-500 to-green-500 h-2 rounded-full\"\n                            style={{ width: `${state.hydrationData.mood.concentration * 10}%` }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n\n            {/* Insights IA */}\n            {state.hydrationAnalysis && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.5 }}\n              >\n                <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                  <CardHeader>\n                    <CardTitle className=\"text-white flex items-center gap-2\">\n                      <Brain className=\"w-5 h-5\" />\n                      Analyse IA de l'hydratation\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    \n                    {/* Suggestions d'amÃ©lioration */}\n                    {state.hydrationAnalysis.aiInsights.improvementSuggestions.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <h5 className=\"text-blue-300 font-medium flex items-center gap-2\">\n                          <Lightbulb className=\"w-4 h-4\" />\n                          Suggestions d'amÃ©lioration\n                        </h5>\n                        <div className=\"space-y-1\">\n                          {state.hydrationAnalysis.aiInsights.improvementSuggestions.map((suggestion, index) => (\n                            <div key={index} className=\"flex items-center gap-2 text-sm text-white/80\">\n                              <CheckCircle className=\"w-3 h-3 text-blue-400\" />\n                              {suggestion}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Recommandations de fluides */}\n                    {state.hydrationAnalysis.aiInsights.fluidRecommendations.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <h5 className=\"text-green-300 font-medium flex items-center gap-2\">\n                          <Droplets className=\"w-4 h-4\" />\n                          Recommandations de fluides\n                        </h5>\n                        <div className=\"space-y-1\">\n                          {state.hydrationAnalysis.aiInsights.fluidRecommendations.map((recommendation, index) => (\n                            <div key={index} className=\"flex items-center gap-2 text-sm text-white/80\">\n                              <div className=\"w-1 h-1 bg-green-400 rounded-full\" />\n                              {recommendation}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* PrÃ©dictions */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 pt-4 border-t border-white/10\">\n                      <div className=\"space-y-2\">\n                        <div className=\"text-sm text-white/70\">Besoin prochaine heure</div>\n                        <div className=\"flex items-center gap-2\">\n                          <Timer className=\"w-4 h-4 text-cyan-400\" />\n                          <span className=\"text-white font-medium\">\n                            {state.hydrationAnalysis.predictiveMetrics.nextHourNeed}ml\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <div className=\"text-sm text-white/70\">Projection fin de journÃ©e</div>\n                        <div className=\"flex items-center gap-2\">\n                          <Target className=\"w-4 h-4 text-purple-400\" />\n                          <span className=\"text-white font-medium\">\n                            {state.hydrationAnalysis.predictiveMetrics.endOfDayProjection}ml\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n          </div>\n        </div>\n\n        {/* Ãtat de chargement */}\n        <AnimatePresence>\n          {state.isLoading && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\"\n            >\n              <div className=\"bg-white/10 backdrop-blur-sm rounded-xl p-8 text-center\">\n                <div className=\"animate-spin w-8 h-8 border-2 border-white/30 border-t-white rounded-full mx-auto mb-4\" />\n                <div className=\"text-white font-medium\">\n                  {state.currentState === 'analyzing_hydration' && 'Analyse IA en cours...'}\n                  {state.currentState === 'logging_intake' && 'Enregistrement...'}\n                  {state.currentState === 'syncing_data' && 'Synchronisation...'}\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Erreurs */}\n        <AnimatePresence>\n          {state.error && (\n            <motion.div\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: 50 }}\n              className=\"fixed bottom-4 right-4 bg-red-500 text-white p-4 rounded-lg shadow-lg max-w-md\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Erreur</span>\n              </div>\n              <div className=\"text-sm mt-1\">{state.error}</div>\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/10 mt-2\"\n                onClick={() => dispatch({ type: 'SET_ERROR', payload: null })}\n              >\n                Fermer\n              </Button>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\n// Composant formulaire de prise personnalisÃ©e\nconst CustomIntakeForm: React.FC<{ onSubmit: (amount: number, fluidType: any, temperature: any) => void }> = ({ onSubmit }) => {\n  const [formData, setFormData] = useState({\n    amount: 250,\n    fluidType: 'water' as HydrationData['hydrationTimestamps'][0]['fluidType'],\n    temperature: 'room' as HydrationData['hydrationTimestamps'][0]['temperature']\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(formData.amount, formData.fluidType, formData.temperature);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      \n      {/* QuantitÃ© */}\n      <div>\n        <label className=\"block text-sm font-medium text-white/80 mb-2\">\n          QuantitÃ©: {formData.amount}ml\n        </label>\n        <input\n          type=\"range\"\n          min=\"50\"\n          max=\"1000\"\n          step=\"50\"\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: Number(e.target.value) })}\n          className=\"w-full\"\n        />\n        <div className=\"flex justify-between text-xs text-white/60 mt-1\">\n          <span>50ml</span>\n          <span>1000ml</span>\n        </div>\n      </div>\n\n      {/* Type de fluide */}\n      <div>\n        <label className=\"block text-sm font-medium text-white/80 mb-2\">Type de fluide</label>\n        <select\n          value={formData.fluidType}\n          onChange={(e) => setFormData({ ...formData, fluidType: e.target.value as any })}\n          className=\"w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white\"\n        >\n          <option value=\"water\">Eau</option>\n          <option value=\"coffee\">CafÃ©</option>\n          <option value=\"tea\">ThÃ©</option>\n          <option value=\"juice\">Jus</option>\n          <option value=\"sports\">Boisson sportive</option>\n          <option value=\"soda\">Soda</option>\n          <option value=\"alcohol\">Alcool</option>\n        </select>\n      </div>\n\n      {/* TempÃ©rature */}\n      <div>\n        <label className=\"block text-sm font-medium text-white/80 mb-2\">TempÃ©rature</label>\n        <div className=\"grid grid-cols-4 gap-2\">\n          {[\n            { value: 'cold', label: 'Froid', icon: 'ð§' },\n            { value: 'room', label: 'Ambient', icon: 'ð¡ï¸' },\n            { value: 'warm', label: 'TiÃ¨de', icon: 'â' },\n            { value: 'hot', label: 'Chaud', icon: 'ð¥' }\n          ].map(({ value, label, icon }) => (\n            <button\n              key={value}\n              type=\"button\"\n              onClick={() => setFormData({ ...formData, temperature: value as any })}\n              className={`p-2 rounded-lg text-xs transition-colors ${\n                formData.temperature === value \n                  ? 'bg-blue-500 text-white' \n                  : 'bg-white/10 text-white/70 hover:bg-white/20'\n              }`}\n            >\n              <div className=\"text-lg\">{icon}</div>\n              <div>{label}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <Button \n        type=\"submit\"\n        className=\"w-full bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white\"\n      >\n        <Plus className=\"w-4 h-4 mr-2\" />\n        Ajouter {formData.amount}ml\n      </Button>\n    </form>\n  );\n};\n\n// Fonctions utilitaires\nfunction calculateOptimalIntake(hydrationData: HydrationData): number {\n  return hydrationData.dailyGoal + calculateExerciseAdjustment(hydrationData) + calculateEnvironmentalAdjustment(hydrationData);\n}\n\nfunction calculateAbsorptionRate(hydrationData: HydrationData): number {\n  // Calcul simplifiÃ© basÃ© sur le type de fluides et la rÃ©partition\n  const waterRatio = hydrationData.waterIntake / hydrationData.totalIntake;\n  return Math.round(80 + (waterRatio * 20));\n}\n\nfunction calculateRetentionScore(hydrationData: HydrationData): number {\n  let retentionScore = 85;\n  \n  // Facteurs qui rÃ©duisent la rÃ©tention\n  const alcoholRatio = hydrationData.otherFluids.alcohol / hydrationData.totalIntake;\n  const caffeineRatio = hydrationData.otherFluids.coffee / hydrationData.totalIntake;\n  \n  retentionScore -= alcoholRatio * 40;\n  retentionScore -= caffeineRatio * 15;\n  \n  return Math.max(0, Math.round(retentionScore));\n}\n\nfunction calculateCognitiveImpact(hydrationData: HydrationData): number {\n  const hydrationLevel = hydrationData.totalIntake / hydrationData.dailyGoal;\n  return Math.min(100, Math.round(hydrationLevel * 100));\n}\n\nfunction calculatePhysicalImpact(hydrationData: HydrationData): number {\n  const hydrationLevel = hydrationData.totalIntake / hydrationData.dailyGoal;\n  const exerciseBonus = hydrationData.physicalActivity.exerciseDuration > 0 ? 10 : 0;\n  return Math.min(100, Math.round(hydrationLevel * 90 + exerciseBonus));\n}\n\nfunction calculateRecoveryImpact(hydrationData: HydrationData): number {\n  const hydrationLevel = hydrationData.totalIntake / hydrationData.dailyGoal;\n  const qualityBonus = (hydrationData.waterIntake / hydrationData.totalIntake) * 10;\n  return Math.min(100, Math.round(hydrationLevel * 85 + qualityBonus));\n}\n\nfunction calculateMetabolicImpact(hydrationData: HydrationData): number {\n  const hydrationLevel = hydrationData.totalIntake / hydrationData.dailyGoal;\n  return Math.min(100, Math.round(hydrationLevel * 95));\n}\n\nfunction calculateNextHourNeed(hydrationData: HydrationData): number {\n  const currentHour = new Date().getHours();\n  const baseNeed = 150; // ml/heure base\n  \n  // Ajustement selon l'heure\n  if (currentHour >= 6 && currentHour <= 10) return baseNeed + 100; // Matin\n  if (currentHour >= 14 && currentHour <= 18) return baseNeed + 50; // AprÃ¨s-midi\n  if (currentHour >= 20) return baseNeed - 50; // Soir\n  \n  return baseNeed;\n}\n\nfunction calculateEndOfDayProjection(hydrationData: HydrationData): number {\n  const currentHour = new Date().getHours();\n  const hoursLeft = 24 - currentHour;\n  const averageHourlyNeed = 120; // ml\n  \n  return hydrationData.totalIntake + (hoursLeft * averageHourlyNeed);\n}\n\nfunction calculateOptimalNextIntake(): string {\n  const now = new Date();\n  const nextIntake = new Date(now.getTime() + 60 * 60 * 1000); // +1 heure\n  return nextIntake.toTimeString().slice(0, 5);\n}\n\nfunction calculateTemperatureImpact(hydrationData: HydrationData): number {\n  const temp = hydrationData.physicalActivity.environmentalTemp;\n  if (temp <= 20) return 30;\n  if (temp <= 25) return 50;\n  if (temp <= 30) return 70;\n  return 90;\n}\n\nfunction calculateHumidityImpact(hydrationData: HydrationData): number {\n  const humidity = hydrationData.physicalActivity.humidity;\n  if (humidity <= 30) return 80; // Air sec = plus de perte\n  if (humidity <= 50) return 50;\n  if (humidity <= 70) return 30;\n  return 20; // HumiditÃ© Ã©levÃ©e = moins de perte\n}\n\nfunction getSeasonalFactors(): string[] {\n  const month = new Date().getMonth();\n  if (month >= 5 && month <= 8) return ['ÃtÃ©: besoins accrus', 'Transpiration Ã©levÃ©e'];\n  if (month >= 11 || month <= 2) return ['Hiver: air sec', 'Chauffage dÃ©shydratant'];\n  return ['Saison tempÃ©rÃ©e'];\n}\n\nfunction calculateExerciseAdjustment(hydrationData: HydrationData): number {\n  const duration = hydrationData.physicalActivity.exerciseDuration;\n  const intensityMultiplier = {\n    low: 1.2,\n    moderate: 1.5,\n    high: 2.0,\n    extreme: 2.5\n  };\n  \n  return Math.round(duration * 8 * intensityMultiplier[hydrationData.physicalActivity.exerciseIntensity]);\n}\n\nfunction calculateEnvironmentalAdjustment(hydrationData: HydrationData): number {\n  const temp = hydrationData.physicalActivity.environmentalTemp;\n  const humidity = hydrationData.physicalActivity.humidity;\n  \n  let adjustment = 0;\n  if (temp > 25) adjustment += (temp - 25) * 20;\n  if (humidity < 40) adjustment += (40 - humidity) * 5;\n  \n  return Math.round(adjustment);\n}\n\nexport default HydrationOptimizer;"],"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","ignoreList":[]}