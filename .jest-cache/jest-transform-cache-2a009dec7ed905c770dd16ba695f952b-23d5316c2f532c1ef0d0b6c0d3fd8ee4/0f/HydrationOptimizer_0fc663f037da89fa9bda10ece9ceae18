f4c4a91e2b6965ebbcc0336e2276ab12
"use strict";

/* istanbul ignore next */
function cov_t8noq4mkq() {
  var path = "/workspaces/MyFitHero/src/features/hydration/components/HydrationOptimizer.tsx";
  var hash = "9167585bf0652bc5c9d2235373e888730d564400";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/hydration/components/HydrationOptimizer.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "25": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 36
        }
      },
      "26": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 50
        }
      },
      "27": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "28": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "29": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 44
        }
      },
      "30": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 31,
          column: 46
        }
      },
      "31": {
        start: {
          line: 32,
          column: 17
        },
        end: {
          line: 32,
          column: 50
        }
      },
      "32": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 48
        }
      },
      "33": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 50
        }
      },
      "34": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "35": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 83
        }
      },
      "36": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 54,
          column: 1
        }
      },
      "37": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "38": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 62
        }
      },
      "39": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 63
        }
      },
      "40": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 67
        }
      },
      "41": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 63
        }
      },
      "42": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 64
        }
      },
      "43": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 60
        }
      },
      "44": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 62
        }
      },
      "45": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 87
        }
      },
      "46": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 59
        }
      },
      "47": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 55
        }
      },
      "48": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 67
        }
      },
      "49": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 62
        }
      },
      "50": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 87,
          column: 14
        }
      },
      "51": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 93,
          column: 14
        }
      },
      "52": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 41
        }
      },
      "53": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 25
        }
      },
      "54": {
        start: {
          line: 100,
          column: 27
        },
        end: {
          line: 449,
          column: 1
        }
      },
      "55": {
        start: {
          line: 101,
          column: 30
        },
        end: {
          line: 101,
          column: 94
        }
      },
      "56": {
        start: {
          line: 102,
          column: 32
        },
        end: {
          line: 102,
          column: 59
        }
      },
      "57": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 113,
          column: 11
        }
      },
      "58": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "59": {
        start: {
          line: 106,
          column: 39
        },
        end: {
          line: 106,
          column: 79
        }
      },
      "60": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "61": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 35
        }
      },
      "62": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 49
        }
      },
      "63": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 18
        }
      },
      "64": {
        start: {
          line: 115,
          column: 30
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "65": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 57
        }
      },
      "66": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 65
        }
      },
      "67": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "68": {
        start: {
          line: 120,
          column: 73
        },
        end: {
          line: 125,
          column: 25
        }
      },
      "69": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 127,
          column: 37
        }
      },
      "70": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 37
        }
      },
      "71": {
        start: {
          line: 128,
          column: 31
        },
        end: {
          line: 128,
          column: 100
        }
      },
      "72": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 71
        }
      },
      "73": {
        start: {
          line: 131,
          column: 30
        },
        end: {
          line: 131,
          column: 94
        }
      },
      "74": {
        start: {
          line: 131,
          column: 53
        },
        end: {
          line: 131,
          column: 93
        }
      },
      "75": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "76": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 77
        }
      },
      "77": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 137,
          column: 25
        }
      },
      "78": {
        start: {
          line: 139,
          column: 37
        },
        end: {
          line: 146,
          column: 19
        }
      },
      "79": {
        start: {
          line: 139,
          column: 87
        },
        end: {
          line: 146,
          column: 17
        }
      },
      "80": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 79
        }
      },
      "81": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 54
        }
      },
      "82": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 60
        }
      },
      "83": {
        start: {
          line: 155,
          column: 40
        },
        end: {
          line: 159,
          column: 25
        }
      },
      "84": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "85": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 68
        }
      },
      "86": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 61
        }
      },
      "87": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 75
        }
      },
      "88": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 94
        }
      },
      "89": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 62
        }
      },
      "90": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 62
        }
      },
      "91": {
        start: {
          line: 175,
          column: 37
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "92": {
        start: {
          line: 176,
          column: 26
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "93": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 69
        }
      },
      "94": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 83
        }
      },
      "95": {
        start: {
          line: 225,
          column: 33
        },
        end: {
          line: 290,
          column: 5
        }
      },
      "96": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 72
        }
      },
      "97": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "98": {
        start: {
          line: 229,
          column: 36
        },
        end: {
          line: 229,
          column: 100
        }
      },
      "99": {
        start: {
          line: 230,
          column: 31
        },
        end: {
          line: 230,
          column: 115
        }
      },
      "100": {
        start: {
          line: 231,
          column: 36
        },
        end: {
          line: 231,
          column: 100
        }
      },
      "101": {
        start: {
          line: 233,
          column: 29
        },
        end: {
          line: 276,
          column: 13
        }
      },
      "102": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 66
        }
      },
      "103": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 282,
          column: 21
        }
      },
      "104": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 50
        }
      },
      "105": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 64
        }
      },
      "106": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 82
        }
      },
      "107": {
        start: {
          line: 292,
          column: 34
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "108": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "109": {
        start: {
          line: 294,
          column: 30
        },
        end: {
          line: 317,
          column: 14
        }
      },
      "110": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 319,
          column: 28
        }
      },
      "111": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 319,
          column: 28
        }
      },
      "112": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 63
        }
      },
      "113": {
        start: {
          line: 326,
          column: 27
        },
        end: {
          line: 398,
          column: 5
        }
      },
      "114": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 328,
          column: 19
        }
      },
      "115": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 19
        }
      },
      "116": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 67
        }
      },
      "117": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 57
        }
      },
      "118": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 397,
          column: 9
        }
      },
      "119": {
        start: {
          line: 332,
          column: 24
        },
        end: {
          line: 332,
          column: 34
        }
      },
      "120": {
        start: {
          line: 333,
          column: 31
        },
        end: {
          line: 333,
          column: 61
        }
      },
      "121": {
        start: {
          line: 335,
          column: 30
        },
        end: {
          line: 342,
          column: 13
        }
      },
      "122": {
        start: {
          line: 344,
          column: 33
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "123": {
        start: {
          line: 351,
          column: 41
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "124": {
        start: {
          line: 373,
          column: 27
        },
        end: {
          line: 373,
          column: 91
        }
      },
      "125": {
        start: {
          line: 374,
          column: 30
        },
        end: {
          line: 376,
          column: 31
        }
      },
      "126": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 378,
          column: 28
        }
      },
      "127": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 378,
          column: 28
        }
      },
      "128": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 84
        }
      },
      "129": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 65
        }
      },
      "130": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 385,
          column: 21
        }
      },
      "131": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 61
        }
      },
      "132": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 388,
          column: 61
        }
      },
      "133": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 391,
          column: 63
        }
      },
      "134": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 80
        }
      },
      "135": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 62
        }
      },
      "136": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 62
        }
      },
      "137": {
        start: {
          line: 400,
          column: 31
        },
        end: {
          line: 400,
          column: 119
        }
      },
      "138": {
        start: {
          line: 402,
          column: 4
        },
        end: {
          line: 448,
          column: 6476
        }
      },
      "139": {
        start: {
          line: 406,
          column: 1089
        },
        end: {
          line: 406,
          column: 1117
        }
      },
      "140": {
        start: {
          line: 406,
          column: 1465
        },
        end: {
          line: 406,
          column: 1493
        }
      },
      "141": {
        start: {
          line: 406,
          column: 1841
        },
        end: {
          line: 406,
          column: 1877
        }
      },
      "142": {
        start: {
          line: 406,
          column: 2235
        },
        end: {
          line: 406,
          column: 2268
        }
      },
      "143": {
        start: {
          line: 407,
          column: 71
        },
        end: {
          line: 415,
          column: 53
        }
      },
      "144": {
        start: {
          line: 416,
          column: 65
        },
        end: {
          line: 416,
          column: 93
        }
      },
      "145": {
        start: {
          line: 417,
          column: 52
        },
        end: {
          line: 420,
          column: 243
        }
      },
      "146": {
        start: {
          line: 430,
          column: 68
        },
        end: {
          line: 431,
          column: 84
        }
      },
      "147": {
        start: {
          line: 431,
          column: 72
        },
        end: {
          line: 431,
          column: 84
        }
      },
      "148": {
        start: {
          line: 432,
          column: 87
        },
        end: {
          line: 432,
          column: 135
        }
      },
      "149": {
        start: {
          line: 433,
          column: 83
        },
        end: {
          line: 441,
          column: 69
        }
      },
      "150": {
        start: {
          line: 442,
          column: 68
        },
        end: {
          line: 442,
          column: 882
        }
      },
      "151": {
        start: {
          line: 448,
          column: 2595
        },
        end: {
          line: 448,
          column: 2812
        }
      },
      "152": {
        start: {
          line: 448,
          column: 3334
        },
        end: {
          line: 448,
          column: 3546
        }
      },
      "153": {
        start: {
          line: 448,
          column: 6390
        },
        end: {
          line: 448,
          column: 6436
        }
      },
      "154": {
        start: {
          line: 450,
          column: 0
        },
        end: {
          line: 450,
          column: 48
        }
      },
      "155": {
        start: {
          line: 452,
          column: 25
        },
        end: {
          line: 470,
          column: 1
        }
      },
      "156": {
        start: {
          line: 453,
          column: 36
        },
        end: {
          line: 457,
          column: 6
        }
      },
      "157": {
        start: {
          line: 458,
          column: 25
        },
        end: {
          line: 461,
          column: 5
        }
      },
      "158": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 27
        }
      },
      "159": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 76
        }
      },
      "160": {
        start: {
          line: 462,
          column: 4
        },
        end: {
          line: 469,
          column: 541
        }
      },
      "161": {
        start: {
          line: 462,
          column: 426
        },
        end: {
          line: 462,
          column: 486
        }
      },
      "162": {
        start: {
          line: 462,
          column: 984
        },
        end: {
          line: 462,
          column: 1039
        }
      },
      "163": {
        start: {
          line: 467,
          column: 59
        },
        end: {
          line: 469,
          column: 228
        }
      },
      "164": {
        start: {
          line: 467,
          column: 126
        },
        end: {
          line: 467,
          column: 174
        }
      },
      "165": {
        start: {
          line: 473,
          column: 4
        },
        end: {
          line: 473,
          column: 130
        }
      },
      "166": {
        start: {
          line: 477,
          column: 23
        },
        end: {
          line: 477,
          column: 76
        }
      },
      "167": {
        start: {
          line: 478,
          column: 4
        },
        end: {
          line: 478,
          column: 46
        }
      },
      "168": {
        start: {
          line: 481,
          column: 25
        },
        end: {
          line: 481,
          column: 27
        }
      },
      "169": {
        start: {
          line: 483,
          column: 25
        },
        end: {
          line: 483,
          column: 86
        }
      },
      "170": {
        start: {
          line: 484,
          column: 26
        },
        end: {
          line: 484,
          column: 86
        }
      },
      "171": {
        start: {
          line: 485,
          column: 4
        },
        end: {
          line: 485,
          column: 40
        }
      },
      "172": {
        start: {
          line: 486,
          column: 4
        },
        end: {
          line: 486,
          column: 41
        }
      },
      "173": {
        start: {
          line: 487,
          column: 4
        },
        end: {
          line: 487,
          column: 51
        }
      },
      "174": {
        start: {
          line: 490,
          column: 27
        },
        end: {
          line: 490,
          column: 78
        }
      },
      "175": {
        start: {
          line: 491,
          column: 4
        },
        end: {
          line: 491,
          column: 59
        }
      },
      "176": {
        start: {
          line: 494,
          column: 27
        },
        end: {
          line: 494,
          column: 78
        }
      },
      "177": {
        start: {
          line: 495,
          column: 26
        },
        end: {
          line: 495,
          column: 86
        }
      },
      "178": {
        start: {
          line: 496,
          column: 4
        },
        end: {
          line: 496,
          column: 74
        }
      },
      "179": {
        start: {
          line: 499,
          column: 27
        },
        end: {
          line: 499,
          column: 78
        }
      },
      "180": {
        start: {
          line: 500,
          column: 25
        },
        end: {
          line: 500,
          column: 85
        }
      },
      "181": {
        start: {
          line: 501,
          column: 4
        },
        end: {
          line: 501,
          column: 73
        }
      },
      "182": {
        start: {
          line: 504,
          column: 27
        },
        end: {
          line: 504,
          column: 78
        }
      },
      "183": {
        start: {
          line: 505,
          column: 4
        },
        end: {
          line: 505,
          column: 58
        }
      },
      "184": {
        start: {
          line: 508,
          column: 24
        },
        end: {
          line: 508,
          column: 45
        }
      },
      "185": {
        start: {
          line: 509,
          column: 21
        },
        end: {
          line: 509,
          column: 24
        }
      },
      "186": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 512,
          column: 30
        }
      },
      "187": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 30
        }
      },
      "188": {
        start: {
          line: 513,
          column: 4
        },
        end: {
          line: 514,
          column: 29
        }
      },
      "189": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 514,
          column: 29
        }
      },
      "190": {
        start: {
          line: 515,
          column: 4
        },
        end: {
          line: 516,
          column: 29
        }
      },
      "191": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 516,
          column: 29
        }
      },
      "192": {
        start: {
          line: 517,
          column: 4
        },
        end: {
          line: 517,
          column: 20
        }
      },
      "193": {
        start: {
          line: 520,
          column: 24
        },
        end: {
          line: 520,
          column: 45
        }
      },
      "194": {
        start: {
          line: 521,
          column: 22
        },
        end: {
          line: 521,
          column: 38
        }
      },
      "195": {
        start: {
          line: 522,
          column: 30
        },
        end: {
          line: 522,
          column: 33
        }
      },
      "196": {
        start: {
          line: 523,
          column: 4
        },
        end: {
          line: 523,
          column: 71
        }
      },
      "197": {
        start: {
          line: 526,
          column: 16
        },
        end: {
          line: 526,
          column: 26
        }
      },
      "198": {
        start: {
          line: 527,
          column: 23
        },
        end: {
          line: 527,
          column: 63
        }
      },
      "199": {
        start: {
          line: 528,
          column: 4
        },
        end: {
          line: 528,
          column: 49
        }
      },
      "200": {
        start: {
          line: 531,
          column: 17
        },
        end: {
          line: 531,
          column: 65
        }
      },
      "201": {
        start: {
          line: 532,
          column: 4
        },
        end: {
          line: 533,
          column: 18
        }
      },
      "202": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 18
        }
      },
      "203": {
        start: {
          line: 534,
          column: 4
        },
        end: {
          line: 535,
          column: 18
        }
      },
      "204": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 535,
          column: 18
        }
      },
      "205": {
        start: {
          line: 536,
          column: 4
        },
        end: {
          line: 537,
          column: 18
        }
      },
      "206": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 537,
          column: 18
        }
      },
      "207": {
        start: {
          line: 538,
          column: 4
        },
        end: {
          line: 538,
          column: 14
        }
      },
      "208": {
        start: {
          line: 541,
          column: 21
        },
        end: {
          line: 541,
          column: 60
        }
      },
      "209": {
        start: {
          line: 542,
          column: 4
        },
        end: {
          line: 543,
          column: 18
        }
      },
      "210": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 543,
          column: 18
        }
      },
      "211": {
        start: {
          line: 544,
          column: 4
        },
        end: {
          line: 545,
          column: 18
        }
      },
      "212": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 18
        }
      },
      "213": {
        start: {
          line: 546,
          column: 4
        },
        end: {
          line: 547,
          column: 18
        }
      },
      "214": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 547,
          column: 18
        }
      },
      "215": {
        start: {
          line: 548,
          column: 4
        },
        end: {
          line: 548,
          column: 14
        }
      },
      "216": {
        start: {
          line: 551,
          column: 18
        },
        end: {
          line: 551,
          column: 39
        }
      },
      "217": {
        start: {
          line: 552,
          column: 4
        },
        end: {
          line: 553,
          column: 63
        }
      },
      "218": {
        start: {
          line: 553,
          column: 8
        },
        end: {
          line: 553,
          column: 63
        }
      },
      "219": {
        start: {
          line: 554,
          column: 4
        },
        end: {
          line: 555,
          column: 60
        }
      },
      "220": {
        start: {
          line: 555,
          column: 8
        },
        end: {
          line: 555,
          column: 60
        }
      },
      "221": {
        start: {
          line: 556,
          column: 4
        },
        end: {
          line: 556,
          column: 31
        }
      },
      "222": {
        start: {
          line: 559,
          column: 21
        },
        end: {
          line: 559,
          column: 68
        }
      },
      "223": {
        start: {
          line: 560,
          column: 32
        },
        end: {
          line: 565,
          column: 5
        }
      },
      "224": {
        start: {
          line: 566,
          column: 4
        },
        end: {
          line: 566,
          column: 108
        }
      },
      "225": {
        start: {
          line: 569,
          column: 17
        },
        end: {
          line: 569,
          column: 65
        }
      },
      "226": {
        start: {
          line: 570,
          column: 21
        },
        end: {
          line: 570,
          column: 60
        }
      },
      "227": {
        start: {
          line: 571,
          column: 21
        },
        end: {
          line: 571,
          column: 22
        }
      },
      "228": {
        start: {
          line: 572,
          column: 4
        },
        end: {
          line: 573,
          column: 39
        }
      },
      "229": {
        start: {
          line: 573,
          column: 8
        },
        end: {
          line: 573,
          column: 39
        }
      },
      "230": {
        start: {
          line: 574,
          column: 4
        },
        end: {
          line: 575,
          column: 42
        }
      },
      "231": {
        start: {
          line: 575,
          column: 8
        },
        end: {
          line: 575,
          column: 42
        }
      },
      "232": {
        start: {
          line: 576,
          column: 4
        },
        end: {
          line: 576,
          column: 34
        }
      },
      "233": {
        start: {
          line: 578,
          column: 0
        },
        end: {
          line: 578,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "hydrationReducer",
        decl: {
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 55,
            column: 25
          }
        },
        loc: {
          start: {
            line: 55,
            column: 41
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 55
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 100,
            column: 27
          },
          end: {
            line: 100,
            column: 28
          }
        },
        loc: {
          start: {
            line: 100,
            column: 33
          },
          end: {
            line: 449,
            column: 1
          }
        },
        line: 100
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 27
          },
          end: {
            line: 104,
            column: 28
          }
        },
        loc: {
          start: {
            line: 104,
            column: 33
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 105,
            column: 24
          },
          end: {
            line: 105,
            column: 25
          }
        },
        loc: {
          start: {
            line: 105,
            column: 36
          },
          end: {
            line: 111,
            column: 9
          }
        },
        line: 105
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 115,
            column: 30
          },
          end: {
            line: 115,
            column: 31
          }
        },
        loc: {
          start: {
            line: 115,
            column: 53
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 115
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 131,
            column: 46
          },
          end: {
            line: 131,
            column: 47
          }
        },
        loc: {
          start: {
            line: 131,
            column: 53
          },
          end: {
            line: 131,
            column: 93
          }
        },
        line: 131
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 139,
            column: 71
          },
          end: {
            line: 139,
            column: 72
          }
        },
        loc: {
          start: {
            line: 139,
            column: 87
          },
          end: {
            line: 146,
            column: 17
          }
        },
        line: 139
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 175,
            column: 37
          },
          end: {
            line: 175,
            column: 38
          }
        },
        loc: {
          start: {
            line: 175,
            column: 60
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 175
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 225,
            column: 33
          },
          end: {
            line: 225,
            column: 34
          }
        },
        loc: {
          start: {
            line: 225,
            column: 58
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 225
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 292,
            column: 34
          },
          end: {
            line: 292,
            column: 35
          }
        },
        loc: {
          start: {
            line: 292,
            column: 54
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 292
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 326,
            column: 27
          },
          end: {
            line: 326,
            column: 28
          }
        },
        loc: {
          start: {
            line: 326,
            column: 78
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 326
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 406,
            column: 1083
          },
          end: {
            line: 406,
            column: 1084
          }
        },
        loc: {
          start: {
            line: 406,
            column: 1089
          },
          end: {
            line: 406,
            column: 1117
          }
        },
        line: 406
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 406,
            column: 1459
          },
          end: {
            line: 406,
            column: 1460
          }
        },
        loc: {
          start: {
            line: 406,
            column: 1465
          },
          end: {
            line: 406,
            column: 1493
          }
        },
        line: 406
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 406,
            column: 1835
          },
          end: {
            line: 406,
            column: 1836
          }
        },
        loc: {
          start: {
            line: 406,
            column: 1841
          },
          end: {
            line: 406,
            column: 1877
          }
        },
        line: 406
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 406,
            column: 2229
          },
          end: {
            line: 406,
            column: 2230
          }
        },
        loc: {
          start: {
            line: 406,
            column: 2235
          },
          end: {
            line: 406,
            column: 2268
          }
        },
        line: 406
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 406,
            column: 4026
          },
          end: {
            line: 406,
            column: 4027
          }
        },
        loc: {
          start: {
            line: 406,
            column: 4045
          },
          end: {
            line: 421,
            column: 49
          }
        },
        line: 406
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 429,
            column: 71
          },
          end: {
            line: 429,
            column: 72
          }
        },
        loc: {
          start: {
            line: 429,
            column: 92
          },
          end: {
            line: 443,
            column: 65
          }
        },
        line: 429
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 448,
            column: 2571
          },
          end: {
            line: 448,
            column: 2572
          }
        },
        loc: {
          start: {
            line: 448,
            column: 2595
          },
          end: {
            line: 448,
            column: 2812
          }
        },
        line: 448
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 448,
            column: 3306
          },
          end: {
            line: 448,
            column: 3307
          }
        },
        loc: {
          start: {
            line: 448,
            column: 3334
          },
          end: {
            line: 448,
            column: 3546
          }
        },
        line: 448
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 448,
            column: 6384
          },
          end: {
            line: 448,
            column: 6385
          }
        },
        loc: {
          start: {
            line: 448,
            column: 6390
          },
          end: {
            line: 448,
            column: 6436
          }
        },
        line: 448
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 452,
            column: 25
          },
          end: {
            line: 452,
            column: 26
          }
        },
        loc: {
          start: {
            line: 452,
            column: 43
          },
          end: {
            line: 470,
            column: 1
          }
        },
        line: 452
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 458,
            column: 25
          },
          end: {
            line: 458,
            column: 26
          }
        },
        loc: {
          start: {
            line: 458,
            column: 32
          },
          end: {
            line: 461,
            column: 5
          }
        },
        line: 458
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 462,
            column: 419
          },
          end: {
            line: 462,
            column: 420
          }
        },
        loc: {
          start: {
            line: 462,
            column: 426
          },
          end: {
            line: 462,
            column: 486
          }
        },
        line: 462
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 462,
            column: 977
          },
          end: {
            line: 462,
            column: 978
          }
        },
        loc: {
          start: {
            line: 462,
            column: 984
          },
          end: {
            line: 462,
            column: 1039
          }
        },
        line: 462
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 467,
            column: 30
          },
          end: {
            line: 467,
            column: 31
          }
        },
        loc: {
          start: {
            line: 467,
            column: 59
          },
          end: {
            line: 469,
            column: 228
          }
        },
        line: 467
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 467,
            column: 120
          },
          end: {
            line: 467,
            column: 121
          }
        },
        loc: {
          start: {
            line: 467,
            column: 126
          },
          end: {
            line: 467,
            column: 174
          }
        },
        line: 467
      },
      "32": {
        name: "calculateOptimalIntake",
        decl: {
          start: {
            line: 472,
            column: 9
          },
          end: {
            line: 472,
            column: 31
          }
        },
        loc: {
          start: {
            line: 472,
            column: 47
          },
          end: {
            line: 474,
            column: 1
          }
        },
        line: 472
      },
      "33": {
        name: "calculateAbsorptionRate",
        decl: {
          start: {
            line: 475,
            column: 9
          },
          end: {
            line: 475,
            column: 32
          }
        },
        loc: {
          start: {
            line: 475,
            column: 48
          },
          end: {
            line: 479,
            column: 1
          }
        },
        line: 475
      },
      "34": {
        name: "calculateRetentionScore",
        decl: {
          start: {
            line: 480,
            column: 9
          },
          end: {
            line: 480,
            column: 32
          }
        },
        loc: {
          start: {
            line: 480,
            column: 48
          },
          end: {
            line: 488,
            column: 1
          }
        },
        line: 480
      },
      "35": {
        name: "calculateCognitiveImpact",
        decl: {
          start: {
            line: 489,
            column: 9
          },
          end: {
            line: 489,
            column: 33
          }
        },
        loc: {
          start: {
            line: 489,
            column: 49
          },
          end: {
            line: 492,
            column: 1
          }
        },
        line: 489
      },
      "36": {
        name: "calculatePhysicalImpact",
        decl: {
          start: {
            line: 493,
            column: 9
          },
          end: {
            line: 493,
            column: 32
          }
        },
        loc: {
          start: {
            line: 493,
            column: 48
          },
          end: {
            line: 497,
            column: 1
          }
        },
        line: 493
      },
      "37": {
        name: "calculateRecoveryImpact",
        decl: {
          start: {
            line: 498,
            column: 9
          },
          end: {
            line: 498,
            column: 32
          }
        },
        loc: {
          start: {
            line: 498,
            column: 48
          },
          end: {
            line: 502,
            column: 1
          }
        },
        line: 498
      },
      "38": {
        name: "calculateMetabolicImpact",
        decl: {
          start: {
            line: 503,
            column: 9
          },
          end: {
            line: 503,
            column: 33
          }
        },
        loc: {
          start: {
            line: 503,
            column: 49
          },
          end: {
            line: 506,
            column: 1
          }
        },
        line: 503
      },
      "39": {
        name: "calculateNextHourNeed",
        decl: {
          start: {
            line: 507,
            column: 9
          },
          end: {
            line: 507,
            column: 30
          }
        },
        loc: {
          start: {
            line: 507,
            column: 46
          },
          end: {
            line: 518,
            column: 1
          }
        },
        line: 507
      },
      "40": {
        name: "calculateEndOfDayProjection",
        decl: {
          start: {
            line: 519,
            column: 9
          },
          end: {
            line: 519,
            column: 36
          }
        },
        loc: {
          start: {
            line: 519,
            column: 52
          },
          end: {
            line: 524,
            column: 1
          }
        },
        line: 519
      },
      "41": {
        name: "calculateOptimalNextIntake",
        decl: {
          start: {
            line: 525,
            column: 9
          },
          end: {
            line: 525,
            column: 35
          }
        },
        loc: {
          start: {
            line: 525,
            column: 38
          },
          end: {
            line: 529,
            column: 1
          }
        },
        line: 525
      },
      "42": {
        name: "calculateTemperatureImpact",
        decl: {
          start: {
            line: 530,
            column: 9
          },
          end: {
            line: 530,
            column: 35
          }
        },
        loc: {
          start: {
            line: 530,
            column: 51
          },
          end: {
            line: 539,
            column: 1
          }
        },
        line: 530
      },
      "43": {
        name: "calculateHumidityImpact",
        decl: {
          start: {
            line: 540,
            column: 9
          },
          end: {
            line: 540,
            column: 32
          }
        },
        loc: {
          start: {
            line: 540,
            column: 48
          },
          end: {
            line: 549,
            column: 1
          }
        },
        line: 540
      },
      "44": {
        name: "getSeasonalFactors",
        decl: {
          start: {
            line: 550,
            column: 9
          },
          end: {
            line: 550,
            column: 27
          }
        },
        loc: {
          start: {
            line: 550,
            column: 30
          },
          end: {
            line: 557,
            column: 1
          }
        },
        line: 550
      },
      "45": {
        name: "calculateExerciseAdjustment",
        decl: {
          start: {
            line: 558,
            column: 9
          },
          end: {
            line: 558,
            column: 36
          }
        },
        loc: {
          start: {
            line: 558,
            column: 52
          },
          end: {
            line: 567,
            column: 1
          }
        },
        line: 558
      },
      "46": {
        name: "calculateEnvironmentalAdjustment",
        decl: {
          start: {
            line: 568,
            column: 9
          },
          end: {
            line: 568,
            column: 41
          }
        },
        loc: {
          start: {
            line: 568,
            column: 57
          },
          end: {
            line: 577,
            column: 1
          }
        },
        line: 568
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 58,
            column: 62
          }
        }, {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 60,
            column: 63
          }
        }, {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 62,
            column: 67
          }
        }, {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 64,
            column: 63
          }
        }, {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 66,
            column: 64
          }
        }, {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 68,
            column: 60
          }
        }, {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 70,
            column: 62
          }
        }, {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 72,
            column: 87
          }
        }, {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 74,
            column: 59
          }
        }, {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 76,
            column: 55
          }
        }, {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 78,
            column: 67
          }
        }, {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 80,
            column: 62
          }
        }, {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 87,
            column: 14
          }
        }, {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 93,
            column: 14
          }
        }, {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 95,
            column: 41
          }
        }, {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 97,
            column: 25
          }
        }],
        line: 56
      },
      "17": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "18": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 127,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 127,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "19": {
        loc: {
          start: {
            line: 128,
            column: 31
          },
          end: {
            line: 128,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 31
          },
          end: {
            line: 128,
            column: 94
          }
        }, {
          start: {
            line: 128,
            column: 98
          },
          end: {
            line: 128,
            column: 100
          }
        }],
        line: 128
      },
      "20": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        }, {
          start: {
            line: 150,
            column: 17
          },
          end: {
            line: 153,
            column: 13
          }
        }],
        line: 132
      },
      "21": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "22": {
        loc: {
          start: {
            line: 258,
            column: 47
          },
          end: {
            line: 259,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 87
          },
          end: {
            line: 258,
            column: 97
          }
        }, {
          start: {
            line: 259,
            column: 24
          },
          end: {
            line: 259,
            column: 86
          }
        }],
        line: 258
      },
      "23": {
        loc: {
          start: {
            line: 259,
            column: 24
          },
          end: {
            line: 259,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 64
          },
          end: {
            line: 259,
            column: 73
          }
        }, {
          start: {
            line: 259,
            column: 76
          },
          end: {
            line: 259,
            column: 86
          }
        }],
        line: 259
      },
      "24": {
        loc: {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 319,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 319,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "25": {
        loc: {
          start: {
            line: 326,
            column: 53
          },
          end: {
            line: 326,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 326,
            column: 67
          },
          end: {
            line: 326,
            column: 73
          }
        }],
        line: 326
      },
      "26": {
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 328,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 328,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "27": {
        loc: {
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 327,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 327,
            column: 19
          }
        }, {
          start: {
            line: 327,
            column: 23
          },
          end: {
            line: 327,
            column: 43
          }
        }],
        line: 327
      },
      "28": {
        loc: {
          start: {
            line: 354,
            column: 29
          },
          end: {
            line: 354,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 354,
            column: 53
          },
          end: {
            line: 354,
            column: 93
          }
        }, {
          start: {
            line: 354,
            column: 96
          },
          end: {
            line: 354,
            column: 127
          }
        }],
        line: 354
      },
      "29": {
        loc: {
          start: {
            line: 357,
            column: 21
          },
          end: {
            line: 362,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 357,
            column: 46
          },
          end: {
            line: 357,
            column: 54
          }
        }, {
          start: {
            line: 358,
            column: 24
          },
          end: {
            line: 362,
            column: 81
          }
        }],
        line: 357
      },
      "30": {
        loc: {
          start: {
            line: 358,
            column: 24
          },
          end: {
            line: 362,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 358,
            column: 46
          },
          end: {
            line: 358,
            column: 51
          }
        }, {
          start: {
            line: 359,
            column: 28
          },
          end: {
            line: 362,
            column: 81
          }
        }],
        line: 358
      },
      "31": {
        loc: {
          start: {
            line: 359,
            column: 28
          },
          end: {
            line: 362,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 359,
            column: 52
          },
          end: {
            line: 359,
            column: 59
          }
        }, {
          start: {
            line: 360,
            column: 32
          },
          end: {
            line: 362,
            column: 81
          }
        }],
        line: 359
      },
      "32": {
        loc: {
          start: {
            line: 360,
            column: 32
          },
          end: {
            line: 362,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 360,
            column: 58
          },
          end: {
            line: 360,
            column: 67
          }
        }, {
          start: {
            line: 361,
            column: 36
          },
          end: {
            line: 362,
            column: 81
          }
        }],
        line: 360
      },
      "33": {
        loc: {
          start: {
            line: 361,
            column: 36
          },
          end: {
            line: 362,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 361,
            column: 61
          },
          end: {
            line: 361,
            column: 75
          }
        }, {
          start: {
            line: 362,
            column: 40
          },
          end: {
            line: 362,
            column: 81
          }
        }],
        line: 361
      },
      "34": {
        loc: {
          start: {
            line: 362,
            column: 40
          },
          end: {
            line: 362,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 362,
            column: 63
          },
          end: {
            line: 362,
            column: 70
          }
        }, {
          start: {
            line: 362,
            column: 73
          },
          end: {
            line: 362,
            column: 81
          }
        }],
        line: 362
      },
      "35": {
        loc: {
          start: {
            line: 362,
            column: 116
          },
          end: {
            line: 367,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 362,
            column: 141
          },
          end: {
            line: 362,
            column: 149
          }
        }, {
          start: {
            line: 363,
            column: 24
          },
          end: {
            line: 367,
            column: 81
          }
        }],
        line: 362
      },
      "36": {
        loc: {
          start: {
            line: 363,
            column: 24
          },
          end: {
            line: 367,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 363,
            column: 46
          },
          end: {
            line: 363,
            column: 51
          }
        }, {
          start: {
            line: 364,
            column: 28
          },
          end: {
            line: 367,
            column: 81
          }
        }],
        line: 363
      },
      "37": {
        loc: {
          start: {
            line: 364,
            column: 28
          },
          end: {
            line: 367,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 364,
            column: 52
          },
          end: {
            line: 364,
            column: 59
          }
        }, {
          start: {
            line: 365,
            column: 32
          },
          end: {
            line: 367,
            column: 81
          }
        }],
        line: 364
      },
      "38": {
        loc: {
          start: {
            line: 365,
            column: 32
          },
          end: {
            line: 367,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 58
          },
          end: {
            line: 365,
            column: 67
          }
        }, {
          start: {
            line: 366,
            column: 36
          },
          end: {
            line: 367,
            column: 81
          }
        }],
        line: 365
      },
      "39": {
        loc: {
          start: {
            line: 366,
            column: 36
          },
          end: {
            line: 367,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 366,
            column: 61
          },
          end: {
            line: 366,
            column: 75
          }
        }, {
          start: {
            line: 367,
            column: 40
          },
          end: {
            line: 367,
            column: 81
          }
        }],
        line: 366
      },
      "40": {
        loc: {
          start: {
            line: 367,
            column: 40
          },
          end: {
            line: 367,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 367,
            column: 63
          },
          end: {
            line: 367,
            column: 70
          }
        }, {
          start: {
            line: 367,
            column: 73
          },
          end: {
            line: 367,
            column: 81
          }
        }],
        line: 367
      },
      "41": {
        loc: {
          start: {
            line: 367,
            column: 86
          },
          end: {
            line: 367,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 367,
            column: 110
          },
          end: {
            line: 367,
            column: 116
          }
        }, {
          start: {
            line: 367,
            column: 119
          },
          end: {
            line: 367,
            column: 120
          }
        }],
        line: 367
      },
      "42": {
        loc: {
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 378,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 378,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "43": {
        loc: {
          start: {
            line: 400,
            column: 31
          },
          end: {
            line: 400,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 400,
            column: 53
          },
          end: {
            line: 400,
            column: 115
          }
        }, {
          start: {
            line: 400,
            column: 118
          },
          end: {
            line: 400,
            column: 119
          }
        }],
        line: 400
      },
      "44": {
        loc: {
          start: {
            line: 402,
            column: 2046
          },
          end: {
            line: 402,
            column: 2272
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 402,
            column: 2046
          },
          end: {
            line: 402,
            column: 2085
          }
        }, {
          start: {
            line: 402,
            column: 2090
          },
          end: {
            line: 402,
            column: 2271
          }
        }],
        line: 402
      },
      "45": {
        loc: {
          start: {
            line: 402,
            column: 4795
          },
          end: {
            line: 404,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 402,
            column: 4833
          },
          end: {
            line: 402,
            column: 4842
          }
        }, {
          start: {
            line: 403,
            column: 48
          },
          end: {
            line: 404,
            column: 110
          }
        }],
        line: 402
      },
      "46": {
        loc: {
          start: {
            line: 403,
            column: 48
          },
          end: {
            line: 404,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 403,
            column: 83
          },
          end: {
            line: 403,
            column: 90
          }
        }, {
          start: {
            line: 404,
            column: 52
          },
          end: {
            line: 404,
            column: 110
          }
        }],
        line: 403
      },
      "47": {
        loc: {
          start: {
            line: 404,
            column: 52
          },
          end: {
            line: 404,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 91
          },
          end: {
            line: 404,
            column: 99
          }
        }, {
          start: {
            line: 404,
            column: 102
          },
          end: {
            line: 404,
            column: 110
          }
        }],
        line: 404
      },
      "48": {
        loc: {
          start: {
            line: 404,
            column: 169
          },
          end: {
            line: 406,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 207
          },
          end: {
            line: 404,
            column: 221
          }
        }, {
          start: {
            line: 405,
            column: 48
          },
          end: {
            line: 406,
            column: 121
          }
        }],
        line: 404
      },
      "49": {
        loc: {
          start: {
            line: 405,
            column: 48
          },
          end: {
            line: 406,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 405,
            column: 83
          },
          end: {
            line: 405,
            column: 98
          }
        }, {
          start: {
            line: 406,
            column: 52
          },
          end: {
            line: 406,
            column: 121
          }
        }],
        line: 405
      },
      "50": {
        loc: {
          start: {
            line: 406,
            column: 52
          },
          end: {
            line: 406,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 406,
            column: 91
          },
          end: {
            line: 406,
            column: 106
          }
        }, {
          start: {
            line: 406,
            column: 109
          },
          end: {
            line: 406,
            column: 121
          }
        }],
        line: 406
      },
      "51": {
        loc: {
          start: {
            line: 406,
            column: 3322
          },
          end: {
            line: 421,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 3322
          },
          end: {
            line: 406,
            column: 3351
          }
        }, {
          start: {
            line: 406,
            column: 3356
          },
          end: {
            line: 421,
            column: 60
          }
        }],
        line: 406
      },
      "52": {
        loc: {
          start: {
            line: 421,
            column: 149
          },
          end: {
            line: 448,
            column: 1438
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 421,
            column: 149
          },
          end: {
            line: 421,
            column: 168
          }
        }, {
          start: {
            line: 421,
            column: 173
          },
          end: {
            line: 448,
            column: 1437
          }
        }],
        line: 421
      },
      "53": {
        loc: {
          start: {
            line: 430,
            column: 68
          },
          end: {
            line: 431,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 68
          },
          end: {
            line: 431,
            column: 84
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "54": {
        loc: {
          start: {
            line: 443,
            column: 607
          },
          end: {
            line: 445,
            column: 160
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 443,
            column: 657
          },
          end: {
            line: 443,
            column: 672
          }
        }, {
          start: {
            line: 444,
            column: 76
          },
          end: {
            line: 445,
            column: 160
          }
        }],
        line: 443
      },
      "55": {
        loc: {
          start: {
            line: 444,
            column: 76
          },
          end: {
            line: 445,
            column: 160
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 444,
            column: 126
          },
          end: {
            line: 444,
            column: 141
          }
        }, {
          start: {
            line: 445,
            column: 80
          },
          end: {
            line: 445,
            column: 160
          }
        }],
        line: 444
      },
      "56": {
        loc: {
          start: {
            line: 445,
            column: 80
          },
          end: {
            line: 445,
            column: 160
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 445,
            column: 130
          },
          end: {
            line: 445,
            column: 145
          }
        }, {
          start: {
            line: 445,
            column: 148
          },
          end: {
            line: 445,
            column: 160
          }
        }],
        line: 445
      },
      "57": {
        loc: {
          start: {
            line: 445,
            column: 578
          },
          end: {
            line: 447,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 447,
            column: 76
          },
          end: {
            line: 447,
            column: 90
          }
        }, {
          start: {
            line: 447,
            column: 93
          },
          end: {
            line: 447,
            column: 108
          }
        }],
        line: 445
      },
      "58": {
        loc: {
          start: {
            line: 445,
            column: 578
          },
          end: {
            line: 446,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 445,
            column: 578
          },
          end: {
            line: 445,
            column: 629
          }
        }, {
          start: {
            line: 446,
            column: 76
          },
          end: {
            line: 446,
            column: 127
          }
        }],
        line: 445
      },
      "59": {
        loc: {
          start: {
            line: 447,
            column: 133
          },
          end: {
            line: 448,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 448,
            column: 130
          },
          end: {
            line: 448,
            column: 138
          }
        }, {
          start: {
            line: 448,
            column: 141
          },
          end: {
            line: 448,
            column: 152
          }
        }],
        line: 447
      },
      "60": {
        loc: {
          start: {
            line: 447,
            column: 133
          },
          end: {
            line: 448,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 447,
            column: 133
          },
          end: {
            line: 447,
            column: 184
          }
        }, {
          start: {
            line: 448,
            column: 76
          },
          end: {
            line: 448,
            column: 127
          }
        }],
        line: 447
      },
      "61": {
        loc: {
          start: {
            line: 448,
            column: 1440
          },
          end: {
            line: 448,
            column: 4713
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 1440
          },
          end: {
            line: 448,
            column: 1463
          }
        }, {
          start: {
            line: 448,
            column: 1468
          },
          end: {
            line: 448,
            column: 4712
          }
        }],
        line: 448
      },
      "62": {
        loc: {
          start: {
            line: 448,
            column: 2080
          },
          end: {
            line: 448,
            column: 2822
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 2080
          },
          end: {
            line: 448,
            column: 2148
          }
        }, {
          start: {
            line: 448,
            column: 2153
          },
          end: {
            line: 448,
            column: 2821
          }
        }],
        line: 448
      },
      "63": {
        loc: {
          start: {
            line: 448,
            column: 2824
          },
          end: {
            line: 448,
            column: 3556
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 2824
          },
          end: {
            line: 448,
            column: 2890
          }
        }, {
          start: {
            line: 448,
            column: 2895
          },
          end: {
            line: 448,
            column: 3555
          }
        }],
        line: 448
      },
      "64": {
        loc: {
          start: {
            line: 448,
            column: 4791
          },
          end: {
            line: 448,
            column: 5583
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 4791
          },
          end: {
            line: 448,
            column: 4806
          }
        }, {
          start: {
            line: 448,
            column: 4811
          },
          end: {
            line: 448,
            column: 5582
          }
        }],
        line: 448
      },
      "65": {
        loc: {
          start: {
            line: 448,
            column: 5372
          },
          end: {
            line: 448,
            column: 5444
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 5372
          },
          end: {
            line: 448,
            column: 5416
          }
        }, {
          start: {
            line: 448,
            column: 5420
          },
          end: {
            line: 448,
            column: 5444
          }
        }],
        line: 448
      },
      "66": {
        loc: {
          start: {
            line: 448,
            column: 5446
          },
          end: {
            line: 448,
            column: 5508
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 5446
          },
          end: {
            line: 448,
            column: 5485
          }
        }, {
          start: {
            line: 448,
            column: 5489
          },
          end: {
            line: 448,
            column: 5508
          }
        }],
        line: 448
      },
      "67": {
        loc: {
          start: {
            line: 448,
            column: 5510
          },
          end: {
            line: 448,
            column: 5571
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 5510
          },
          end: {
            line: 448,
            column: 5547
          }
        }, {
          start: {
            line: 448,
            column: 5551
          },
          end: {
            line: 448,
            column: 5571
          }
        }],
        line: 448
      },
      "68": {
        loc: {
          start: {
            line: 448,
            column: 5656
          },
          end: {
            line: 448,
            column: 6464
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 5656
          },
          end: {
            line: 448,
            column: 5667
          }
        }, {
          start: {
            line: 448,
            column: 5672
          },
          end: {
            line: 448,
            column: 6463
          }
        }],
        line: 448
      },
      "69": {
        loc: {
          start: {
            line: 467,
            column: 231
          },
          end: {
            line: 469,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 468,
            column: 34
          },
          end: {
            line: 468,
            column: 58
          }
        }, {
          start: {
            line: 469,
            column: 34
          },
          end: {
            line: 469,
            column: 79
          }
        }],
        line: 467
      },
      "70": {
        loc: {
          start: {
            line: 495,
            column: 26
          },
          end: {
            line: 495,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 495,
            column: 80
          },
          end: {
            line: 495,
            column: 82
          }
        }, {
          start: {
            line: 495,
            column: 85
          },
          end: {
            line: 495,
            column: 86
          }
        }],
        line: 495
      },
      "71": {
        loc: {
          start: {
            line: 511,
            column: 4
          },
          end: {
            line: 512,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 4
          },
          end: {
            line: 512,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "72": {
        loc: {
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 511,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 511,
            column: 24
          }
        }, {
          start: {
            line: 511,
            column: 28
          },
          end: {
            line: 511,
            column: 45
          }
        }],
        line: 511
      },
      "73": {
        loc: {
          start: {
            line: 513,
            column: 4
          },
          end: {
            line: 514,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 4
          },
          end: {
            line: 514,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 513
      },
      "74": {
        loc: {
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 513,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 513,
            column: 25
          }
        }, {
          start: {
            line: 513,
            column: 29
          },
          end: {
            line: 513,
            column: 46
          }
        }],
        line: 513
      },
      "75": {
        loc: {
          start: {
            line: 515,
            column: 4
          },
          end: {
            line: 516,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 515,
            column: 4
          },
          end: {
            line: 516,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 515
      },
      "76": {
        loc: {
          start: {
            line: 532,
            column: 4
          },
          end: {
            line: 533,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 532,
            column: 4
          },
          end: {
            line: 533,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 532
      },
      "77": {
        loc: {
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 535,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 535,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 534
      },
      "78": {
        loc: {
          start: {
            line: 536,
            column: 4
          },
          end: {
            line: 537,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 536,
            column: 4
          },
          end: {
            line: 537,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 536
      },
      "79": {
        loc: {
          start: {
            line: 542,
            column: 4
          },
          end: {
            line: 543,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 4
          },
          end: {
            line: 543,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 542
      },
      "80": {
        loc: {
          start: {
            line: 544,
            column: 4
          },
          end: {
            line: 545,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 544,
            column: 4
          },
          end: {
            line: 545,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 544
      },
      "81": {
        loc: {
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 547,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 547,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 546
      },
      "82": {
        loc: {
          start: {
            line: 552,
            column: 4
          },
          end: {
            line: 553,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 552,
            column: 4
          },
          end: {
            line: 553,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 552
      },
      "83": {
        loc: {
          start: {
            line: 552,
            column: 8
          },
          end: {
            line: 552,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 552,
            column: 8
          },
          end: {
            line: 552,
            column: 18
          }
        }, {
          start: {
            line: 552,
            column: 22
          },
          end: {
            line: 552,
            column: 32
          }
        }],
        line: 552
      },
      "84": {
        loc: {
          start: {
            line: 554,
            column: 4
          },
          end: {
            line: 555,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 554,
            column: 4
          },
          end: {
            line: 555,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 554
      },
      "85": {
        loc: {
          start: {
            line: 554,
            column: 8
          },
          end: {
            line: 554,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 554,
            column: 8
          },
          end: {
            line: 554,
            column: 19
          }
        }, {
          start: {
            line: 554,
            column: 23
          },
          end: {
            line: 554,
            column: 33
          }
        }],
        line: 554
      },
      "86": {
        loc: {
          start: {
            line: 572,
            column: 4
          },
          end: {
            line: 573,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 572,
            column: 4
          },
          end: {
            line: 573,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 572
      },
      "87": {
        loc: {
          start: {
            line: 574,
            column: 4
          },
          end: {
            line: 575,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 4
          },
          end: {
            line: 575,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 574
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/hydration/components/HydrationOptimizer.tsx",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/hydration/components/HydrationOptimizer.tsx"],
      sourcesContent: ["import React, { useReducer, useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { supabase } from '@/lib/supabase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { \n  Droplets, \n  Target, \n  Clock, \n  Brain, \n  Heart, \n  Zap, \n  TrendingUp, \n  AlertTriangle,\n  CheckCircle,\n  Activity,\n  Calendar,\n  BarChart3,\n  Thermometer,\n  Timer,\n  Lightbulb,\n  Settings,\n  Plus,\n  Minus,\n  Coffee,\n  Wine,\n  Milk\n} from 'lucide-react';\nimport { \n  HydrationData, \n  HydrationAnalysis, \n  HydrationTrackingState, \n  WeeklyHydrationSummary,\n  HydrationGoals,\n  FluidIntakeEvent\n} from '@/features/hydration/types';\nimport { \n  dbToHydrationData, \n  hydrationDataToDb, \n  calculateHydrationScores, \n  generateHydrationAIInsights,\n  calculateDehydrationRisk\n} from '@/features/hydration/utils/hydration-mapping';\n\n// Types pour le state machine React\ninterface HydrationState {\n  currentState: HydrationTrackingState;\n  hydrationData: HydrationData | undefined;\n  hydrationAnalysis: HydrationAnalysis | undefined;\n  weeklySummary: WeeklyHydrationSummary | undefined;\n  hydrationGoals: HydrationGoals | undefined;\n  recentDays: HydrationData[];\n  todayIntakes: FluidIntakeEvent[];\n  isLoading: boolean;\n  error: string | undefined;\n  showInsights: boolean;\n  selectedDate: string;\n  hydrationScore: number;\n  efficiencyScore: number;\n  dehydrationRisk: string;\n  currentProgress: number;\n  dailyGoal: number;\n}\n\ntype HydrationAction =\n  | { type: 'SET_STATE'; payload: HydrationTrackingState }\n  | { type: 'SET_HYDRATION_DATA'; payload: HydrationData }\n  | { type: 'SET_ANALYSIS'; payload: HydrationAnalysis }\n  | { type: 'SET_WEEKLY_SUMMARY'; payload: WeeklyHydrationSummary }\n  | { type: 'SET_GOALS'; payload: HydrationGoals }\n  | { type: 'SET_RECENT_DAYS'; payload: HydrationData[] }\n  | { type: 'SET_TODAY_INTAKES'; payload: FluidIntakeEvent[] }\n  | { type: 'ADD_INTAKE'; payload: FluidIntakeEvent }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | undefined }\n  | { type: 'TOGGLE_INSIGHTS' }\n  | { type: 'SET_SELECTED_DATE'; payload: string }\n  | { type: 'UPDATE_SCORES'; payload: { hydration: number; efficiency: number; risk: string } }\n  | { type: 'UPDATE_PROGRESS'; payload: { current: number; goal: number } }\n  | { type: 'RESET_STATE' };\n\nconst initialHydrationState: HydrationState = {\n  currentState: 'idle',\n  hydrationData: null,\n  hydrationAnalysis: null,\n  weeklySummary: null,\n  hydrationGoals: null,\n  recentDays: [],\n  todayIntakes: [],\n  isLoading: false,\n  error: null,\n  showInsights: false,\n  selectedDate: new Date().toISOString().split('T')[0],\n  hydrationScore: 0,\n  efficiencyScore: 0,\n  dehydrationRisk: 'optimal',\n  currentProgress: 0,\n  dailyGoal: 2500,\n};\n\nfunction hydrationReducer(state: HydrationState, action: HydrationAction): HydrationState {\n  switch (action.type) {\n    case 'SET_STATE':\n      return { ...state, currentState: action.payload };\n    case 'SET_HYDRATION_DATA':\n      return { ...state, hydrationData: action.payload };\n    case 'SET_ANALYSIS':\n      return { ...state, hydrationAnalysis: action.payload };\n    case 'SET_WEEKLY_SUMMARY':\n      return { ...state, weeklySummary: action.payload };\n    case 'SET_GOALS':\n      return { ...state, hydrationGoals: action.payload };\n    case 'SET_RECENT_DAYS':\n      return { ...state, recentDays: action.payload };\n    case 'SET_TODAY_INTAKES':\n      return { ...state, todayIntakes: action.payload };\n    case 'ADD_INTAKE':\n      return { ...state, todayIntakes: [...state.todayIntakes, action.payload] };\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    case 'TOGGLE_INSIGHTS':\n      return { ...state, showInsights: !state.showInsights };\n    case 'SET_SELECTED_DATE':\n      return { ...state, selectedDate: action.payload };\n    case 'UPDATE_SCORES':\n      return { \n        ...state, \n        hydrationScore: action.payload.hydration,\n        efficiencyScore: action.payload.efficiency,\n        dehydrationRisk: action.payload.risk \n      };\n    case 'UPDATE_PROGRESS':\n      return { \n        ...state, \n        currentProgress: action.payload.current,\n        dailyGoal: action.payload.goal \n      };\n    case 'RESET_STATE':\n      return initialHydrationState;\n    default:\n      return state;\n  }\n}\n\nexport const HydrationOptimizer: React.FC = () => {\n  const [state, dispatch] = useReducer(hydrationReducer, initialHydrationState);\n  const [userId, setUserId] = useState<string | null>(null);\n\n  // Gestion de l'authentification\n  useEffect(() => {\n    const getUser = async () => {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        setUserId(user.id);\n        await loadHydrationData(user.id);\n      }\n    };\n    getUser();\n  }, []);\n\n  // Chargement des donn\xE9es d'hydratation\n  const loadHydrationData = async (userIdParam: string) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_STATE', payload: 'syncing_data' });\n\n    try {\n      // Chargement des donn\xE9es r\xE9centes\n      const { data: recentHydrationData, error: hydrationError } = await supabase\n        .from('hydration_data')\n        .select('*')\n        .eq('user_id', userIdParam)\n        .order('hydration_date', { ascending: false })\n        .limit(7);\n\n      if (hydrationError) throw hydrationError;\n\n      const recentDays = recentHydrationData?.map(dbToHydrationData) || [];\n      dispatch({ type: 'SET_RECENT_DAYS', payload: recentDays });\n\n      // Donn\xE9es du jour s\xE9lectionn\xE9\n      const todayData = recentDays.find(day => \n        day.hydrationDate === state.selectedDate\n      );\n\n      if (todayData) {\n        dispatch({ type: 'SET_HYDRATION_DATA', payload: todayData });\n        dispatch({ type: 'UPDATE_PROGRESS', payload: { \n          current: todayData.totalIntake, \n          goal: todayData.dailyGoal \n        }});\n        \n        // Conversion des timestamps en events\n        const todayIntakes: FluidIntakeEvent[] = todayData.hydrationTimestamps.map((ts, index) => ({\n          id: `intake_${index}`,\n          timestamp: new Date(`${todayData.hydrationDate}T${ts.time}`),\n          amount: ts.amount,\n          fluidType: ts.fluidType,\n          temperature: ts.temperature,\n          context: 'habit',\n        }));\n        dispatch({ type: 'SET_TODAY_INTAKES', payload: todayIntakes });\n        \n        await analyzeHydrationData(todayData);\n      } else {\n        // Cr\xE9er donn\xE9es par d\xE9faut pour aujourd'hui\n        await createTodayHydrationData(userIdParam);\n      }\n\n      // Chargement des objectifs\n      const { data: goalsData } = await supabase\n        .from('hydration_goals')\n        .select('*')\n        .eq('user_id', userIdParam)\n        .single();\n\n      if (goalsData) {\n        dispatch({ type: 'SET_GOALS', payload: goalsData });\n      }\n\n      dispatch({ type: 'SET_STATE', payload: 'idle' });\n    } catch (error: any) {\n      console.error('Erreur chargement donn\xE9es hydratation:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Erreur lors du chargement des donn\xE9es' });\n      dispatch({ type: 'SET_STATE', payload: 'error' });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  // Cr\xE9ation donn\xE9es par d\xE9faut aujourd'hui\n  const createTodayHydrationData = async (userIdParam: string) => {\n    const todayData: HydrationData = {\n      id: `hydration_${Date.now()}`,\n      userId: userIdParam,\n      hydrationDate: state.selectedDate,\n      dailyGoal: 2500,\n      totalIntake: 0,\n      waterIntake: 0,\n      otherFluids: {\n        coffee: 0,\n        tea: 0,\n        juice: 0,\n        alcohol: 0,\n        sportsDrinks: 0,\n        sodas: 0,\n      },\n      hydrationTimestamps: [],\n      physicalActivity: {\n        exerciseDuration: 0,\n        exerciseIntensity: 'low',\n        sweatRate: 500,\n        environmentalTemp: 20,\n        humidity: 50,\n      },\n      bodyMetrics: {\n        weight: 70,\n        urineColor: 3,\n        urineFrequency: 6,\n      },\n      symptoms: {\n        thirst: 'none',\n        headache: false,\n        fatigue: false,\n        dizziness: false,\n        drymouth: false,\n        darkUrine: false,\n        constipation: false,\n      },\n      mood: {\n        energyLevel: 7,\n        concentration: 7,\n        overallMood: 'good',\n      },\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    dispatch({ type: 'SET_HYDRATION_DATA', payload: todayData });\n    dispatch({ type: 'UPDATE_PROGRESS', payload: { current: 0, goal: 2500 }});\n  };\n\n  // Analyse IA de l'hydratation\n  const analyzeHydrationData = async (hydrationData: HydrationData) => {\n    dispatch({ type: 'SET_STATE', payload: 'analyzing_hydration' });\n\n    try {\n      // Calcul des scores\n      const hydrationScores = calculateHydrationScores(hydrationData);\n      const aiInsights = generateHydrationAIInsights(hydrationData, hydrationScores);\n      const dehydrationRisk = calculateDehydrationRisk(hydrationData);\n\n      // Cr\xE9ation de l'analyse compl\xE8te\n      const analysis: HydrationAnalysis = {\n        id: `analysis_${hydrationData.id}`,\n        userId: hydrationData.userId,\n        hydrationDataId: hydrationData.id,\n        analysisDate: new Date(),\n        hydrationScores,\n        fluidBalance: {\n          optimalIntake: calculateOptimalIntake(hydrationData),\n          actualIntake: hydrationData.totalIntake,\n          deficit: Math.max(0, hydrationData.dailyGoal - hydrationData.totalIntake),\n          surplus: Math.max(0, hydrationData.totalIntake - hydrationData.dailyGoal),\n          absorptionRate: calculateAbsorptionRate(hydrationData),\n          retentionScore: calculateRetentionScore(hydrationData),\n        },\n        performanceImpact: {\n          cognitiveFunction: calculateCognitiveImpact(hydrationData),\n          physicalPerformance: calculatePhysicalImpact(hydrationData),\n          recoveryRate: calculateRecoveryImpact(hydrationData),\n          metabolicEfficiency: calculateMetabolicImpact(hydrationData),\n        },\n        dehydrationRisk,\n        aiInsights,\n        predictiveMetrics: {\n          nextHourNeed: calculateNextHourNeed(hydrationData),\n          endOfDayProjection: calculateEndOfDayProjection(hydrationData),\n          performanceImpactTomorrow: hydrationScores.overallHydration > 75 ? 'positive' : \n                                      hydrationScores.overallHydration > 50 ? 'neutral' : 'negative',\n          optimalNextIntake: calculateOptimalNextIntake(),\n        },\n        environmentalFactors: {\n          temperatureImpact: calculateTemperatureImpact(hydrationData),\n          humidityImpact: calculateHumidityImpact(hydrationData),\n          altitudeAdjustment: 0, // Simplifi\xE9e\n          seasonalFactors: getSeasonalFactors(),\n        },\n        personalizedTargets: {\n          baselineNeed: 2000,\n          exerciseAdjustment: calculateExerciseAdjustment(hydrationData),\n          environmentalAdjustment: calculateEnvironmentalAdjustment(hydrationData),\n          finalTarget: hydrationData.dailyGoal,\n        },\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n\n      dispatch({ type: 'SET_ANALYSIS', payload: analysis });\n      dispatch({ type: 'UPDATE_SCORES', payload: { \n        hydration: hydrationScores.overallHydration,\n        efficiency: hydrationScores.hydrationEfficiency,\n        risk: dehydrationRisk.currentLevel \n      }});\n\n      // Sauvegarde en base\n      await saveHydrationAnalysis(analysis);\n      \n    } catch (error: any) {\n      console.error('Erreur analyse hydratation:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Erreur lors de l\\'analyse' });\n    }\n  };\n\n  // Sauvegarde de l'analyse\n  const saveHydrationAnalysis = async (analysis: HydrationAnalysis) => {\n    try {\n      const { error } = await supabase\n        .from('hydration_analysis')\n        .upsert({\n          id: analysis.id,\n          user_id: analysis.userId,\n          hydration_data_id: analysis.hydrationDataId,\n          analysis_date: analysis.analysisDate.toISOString(),\n          overall_hydration_score: analysis.hydrationScores.overallHydration,\n          hydration_efficiency_score: analysis.hydrationScores.hydrationEfficiency,\n          quality_score: analysis.hydrationScores.qualityScore,\n          timing_optimization_score: analysis.hydrationScores.timingOptimization,\n          recovery_hydration_score: analysis.hydrationScores.recoveryHydration,\n          balance_score: analysis.hydrationScores.balanceScore,\n          dehydration_risk_level: analysis.dehydrationRisk.currentLevel,\n          hydration_ai_analysis: {\n            fluidBalance: analysis.fluidBalance,\n            performanceImpact: analysis.performanceImpact,\n            dehydrationRisk: analysis.dehydrationRisk,\n            aiInsights: analysis.aiInsights,\n            predictiveMetrics: analysis.predictiveMetrics,\n            environmentalFactors: analysis.environmentalFactors,\n            personalizedTargets: analysis.personalizedTargets,\n          }\n        });\n\n      if (error) throw error;\n    } catch (error: any) {\n      console.error('Erreur sauvegarde analyse:', error);\n    }\n  };\n\n  // Ajout d'une nouvelle prise\n  const addFluidIntake = async (amount: number, fluidType: HydrationData['hydrationTimestamps'][0]['fluidType'], temperature: HydrationData['hydrationTimestamps'][0]['temperature'] = 'room') => {\n    if (!userId || !state.hydrationData) return;\n\n    dispatch({ type: 'SET_STATE', payload: 'logging_intake' });\n    dispatch({ type: 'SET_LOADING', payload: true });\n\n    try {\n      const now = new Date();\n      const timeString = now.toTimeString().slice(0, 5);\n      \n      // Nouvel event d'intake\n      const newIntake: FluidIntakeEvent = {\n        id: `intake_${Date.now()}`,\n        timestamp: now,\n        amount,\n        fluidType,\n        temperature,\n        context: 'habit',\n      };\n\n      // Nouveau timestamp pour les donn\xE9es\n      const newTimestamp = {\n        time: timeString,\n        amount,\n        fluidType,\n        temperature,\n      };\n\n      // Mise \xE0 jour des donn\xE9es d'hydratation\n      const updatedHydrationData: HydrationData = {\n        ...state.hydrationData,\n        totalIntake: state.hydrationData.totalIntake + amount,\n        waterIntake: fluidType === 'water' ? state.hydrationData.waterIntake + amount : state.hydrationData.waterIntake,\n        otherFluids: {\n          ...state.hydrationData.otherFluids,\n          [fluidType === 'coffee' ? 'coffee' :\n           fluidType === 'tea' ? 'tea' :\n           fluidType === 'juice' ? 'juice' :\n           fluidType === 'alcohol' ? 'alcohol' :\n           fluidType === 'sports' ? 'sportsDrinks' :\n           fluidType === 'soda' ? 'sodas' : 'coffee']: \n           state.hydrationData.otherFluids[\n             fluidType === 'coffee' ? 'coffee' :\n             fluidType === 'tea' ? 'tea' :\n             fluidType === 'juice' ? 'juice' :\n             fluidType === 'alcohol' ? 'alcohol' :\n             fluidType === 'sports' ? 'sportsDrinks' :\n             fluidType === 'soda' ? 'sodas' : 'coffee'\n           ] + (fluidType !== 'water' ? amount : 0)\n        },\n        hydrationTimestamps: [...state.hydrationData.hydrationTimestamps, newTimestamp],\n        updatedAt: new Date(),\n      };\n\n      // Sauvegarde en base\n      const dbData = hydrationDataToDb(updatedHydrationData);\n      const { error } = await supabase\n        .from('hydration_data')\n        .upsert(dbData);\n\n      if (error) throw error;\n\n      // Mise \xE0 jour du state\n      dispatch({ type: 'SET_HYDRATION_DATA', payload: updatedHydrationData });\n      dispatch({ type: 'ADD_INTAKE', payload: newIntake });\n      dispatch({ type: 'UPDATE_PROGRESS', payload: { \n        current: updatedHydrationData.totalIntake, \n        goal: updatedHydrationData.dailyGoal \n      }});\n\n      // Re-analyse\n      await analyzeHydrationData(updatedHydrationData);\n\n      dispatch({ type: 'SET_STATE', payload: 'idle' });\n    } catch (error: any) {\n      console.error('Erreur ajout prise fluide:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Erreur lors de l\\'ajout' });\n      dispatch({ type: 'SET_STATE', payload: 'error' });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  // Calcul du pourcentage de progression\n  const progressPercentage = state.dailyGoal > 0 ? Math.min(100, (state.currentProgress / state.dailyGoal) * 100) : 0;\n\n  // Rendu du composant principal\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-cyan-900 to-blue-900 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        \n        {/* Header avec progression principale */}\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"text-center space-y-4\"\n        >\n          <div className=\"flex items-center justify-center gap-3 mb-6\">\n            <div className=\"p-3 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full\">\n              <Droplets className=\"w-8 h-8 text-white\" />\n            </div>\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent\">\n              Hydration Optimizer\n            </h1>\n          </div>\n\n          {/* Progression principale */}\n          <div className=\"max-w-2xl mx-auto\">\n            <motion.div\n              initial={{ scale: 0.9 }}\n              animate={{ scale: 1 }}\n              className=\"bg-white/10 backdrop-blur-sm rounded-xl p-8 border border-white/20\"\n            >\n              <div className=\"text-center mb-6\">\n                <div className=\"text-6xl font-bold text-white mb-2\">\n                  {state.currentProgress}ml\n                </div>\n                <div className=\"text-xl text-white/80\">\n                  sur {state.dailyGoal}ml ({progressPercentage.toFixed(0)}%)\n                </div>\n              </div>\n              \n              {/* Barre de progression liquide */}\n              <div className=\"relative w-full h-4 bg-white/20 rounded-full overflow-hidden\">\n                <motion.div\n                  initial={{ width: 0 }}\n                  animate={{ width: `${progressPercentage}%` }}\n                  transition={{ duration: 1, ease: \"easeOut\" }}\n                  className=\"h-full bg-gradient-to-r from-blue-400 via-cyan-400 to-blue-500 rounded-full relative\"\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-pulse\" />\n                </motion.div>\n              </div>\n              \n              {/* Indicateur de reste */}\n              {state.currentProgress < state.dailyGoal && (\n                <div className=\"text-center mt-4 text-white/70\">\n                  Plus que {state.dailyGoal - state.currentProgress}ml pour atteindre votre objectif\n                </div>\n              )}\n            </motion.div>\n          </div>\n\n          {/* Scores principaux */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 max-w-4xl mx-auto\">\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              className=\"bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20\"\n            >\n              <div className=\"flex items-center gap-3 mb-2\">\n                <Droplets className=\"w-6 h-6 text-blue-400\" />\n                <span className=\"text-white/80 font-medium\">Hydratation</span>\n              </div>\n              <div className=\"text-3xl font-bold text-white mb-1\">\n                {state.hydrationScore}/100\n              </div>\n              <div className=\"w-full bg-white/20 rounded-full h-2\">\n                <motion.div\n                  initial={{ width: 0 }}\n                  animate={{ width: `${state.hydrationScore}%` }}\n                  transition={{ duration: 1, delay: 0.2 }}\n                  className=\"bg-gradient-to-r from-blue-500 to-cyan-500 h-2 rounded-full\"\n                />\n              </div>\n            </motion.div>\n\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              className=\"bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20\"\n            >\n              <div className=\"flex items-center gap-3 mb-2\">\n                <Zap className=\"w-6 h-6 text-yellow-400\" />\n                <span className=\"text-white/80 font-medium\">Efficacit\xE9</span>\n              </div>\n              <div className=\"text-3xl font-bold text-white mb-1\">\n                {state.efficiencyScore}/100\n              </div>\n              <div className=\"w-full bg-white/20 rounded-full h-2\">\n                <motion.div\n                  initial={{ width: 0 }}\n                  animate={{ width: `${state.efficiencyScore}%` }}\n                  transition={{ duration: 1, delay: 0.4 }}\n                  className=\"bg-gradient-to-r from-yellow-500 to-orange-500 h-2 rounded-full\"\n                />\n              </div>\n            </motion.div>\n\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              className=\"bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20\"\n            >\n              <div className=\"flex items-center gap-3 mb-2\">\n                <AlertTriangle className=\"w-6 h-6 text-red-400\" />\n                <span className=\"text-white/80 font-medium\">Risque</span>\n              </div>\n              <div className=\"text-lg font-bold text-white mb-1\">\n                {state.dehydrationRisk === 'optimal' ? 'Optimal' :\n                 state.dehydrationRisk === 'mild' ? 'L\xE9ger' :\n                 state.dehydrationRisk === 'moderate' ? 'Mod\xE9r\xE9' : 'S\xE9v\xE8re'}\n              </div>\n              <Badge \n                className={`${\n                  state.dehydrationRisk === 'optimal' ? 'bg-green-500' :\n                  state.dehydrationRisk === 'mild' ? 'bg-yellow-500' :\n                  state.dehydrationRisk === 'moderate' ? 'bg-orange-500' : 'bg-red-500'\n                } text-white`}\n              >\n                {state.dehydrationRisk}\n              </Badge>\n            </motion.div>\n          </div>\n        </motion.div>\n\n        {/* Interface principale */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          \n          {/* Colonne gauche - Prises rapides */}\n          <div className=\"space-y-6\">\n            \n            {/* Actions de prise rapide */}\n            <motion.div\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n            >\n              <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                <CardHeader>\n                  <CardTitle className=\"text-white flex items-center gap-2\">\n                    <Plus className=\"w-5 h-5\" />\n                    Ajouter une prise\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  \n                  {/* Boutons prises rapides */}\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    <Button \n                      onClick={() => addFluidIntake(250, 'water')}\n                      className=\"bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white h-16 flex flex-col items-center justify-center\"\n                      disabled={state.isLoading}\n                    >\n                      <Droplets className=\"w-5 h-5 mb-1\" />\n                      Eau 250ml\n                    </Button>\n                    \n                    <Button \n                      onClick={() => addFluidIntake(500, 'water')}\n                      className=\"bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white h-16 flex flex-col items-center justify-center\"\n                      disabled={state.isLoading}\n                    >\n                      <Droplets className=\"w-5 h-5 mb-1\" />\n                      Eau 500ml\n                    </Button>\n                    \n                    <Button \n                      onClick={() => addFluidIntake(200, 'coffee', 'hot')}\n                      className=\"bg-gradient-to-r from-amber-600 to-orange-600 hover:from-amber-700 hover:to-orange-700 text-white h-16 flex flex-col items-center justify-center\"\n                      disabled={state.isLoading}\n                    >\n                      <Coffee className=\"w-5 h-5 mb-1\" />\n                      Caf\xE9 200ml\n                    </Button>\n                    \n                    <Button \n                      onClick={() => addFluidIntake(250, 'tea', 'hot')}\n                      className=\"bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white h-16 flex flex-col items-center justify-center\"\n                      disabled={state.isLoading}\n                    >\n                      <Milk className=\"w-5 h-5 mb-1\" />\n                      Th\xE9 250ml\n                    </Button>\n                  </div>\n\n                  {/* Prise personnalis\xE9e */}\n                  <Dialog>\n                    <DialogTrigger asChild>\n                      <Button \n                        variant=\"outline\"\n                        className=\"w-full border-white/20 text-white hover:bg-white/10\"\n                      >\n                        <Settings className=\"w-4 h-4 mr-2\" />\n                        Prise personnalis\xE9e\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"bg-slate-900 border-slate-700 text-white\">\n                      <DialogHeader>\n                        <DialogTitle>Ajouter une prise personnalis\xE9e</DialogTitle>\n                      </DialogHeader>\n                      <CustomIntakeForm onSubmit={addFluidIntake} />\n                    </DialogContent>\n                  </Dialog>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            {/* Historique aujourd'hui */}\n            {state.todayIntakes.length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.4 }}\n              >\n                <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                  <CardHeader>\n                    <CardTitle className=\"text-white flex items-center gap-2\">\n                      <Clock className=\"w-5 h-5\" />\n                      Prises d'aujourd'hui\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3 max-h-64 overflow-y-auto\">\n                    {state.todayIntakes.slice().reverse().map((intake, index) => {\n                      const fluidIcons = {\n                        water: Droplets,\n                        coffee: Coffee,\n                        tea: Milk,\n                        juice: Milk,\n                        alcohol: Wine,\n                        sports: Zap,\n                        soda: Milk\n                      };\n                      const Icon = fluidIcons[intake.fluidType];\n                      \n                      return (\n                        <motion.div\n                          key={intake.id}\n                          initial={{ opacity: 0, x: -10 }}\n                          animate={{ opacity: 1, x: 0 }}\n                          transition={{ delay: index * 0.1 }}\n                          className=\"flex items-center justify-between p-3 bg-white/5 rounded-lg\"\n                        >\n                          <div className=\"flex items-center gap-3\">\n                            <Icon className=\"w-5 h-5 text-blue-400\" />\n                            <div>\n                              <div className=\"text-sm text-white font-medium\">\n                                {intake.amount}ml\n                              </div>\n                              <div className=\"text-xs text-white/70\">\n                                {intake.timestamp.toLocaleTimeString('fr-FR', { \n                                  hour: '2-digit', \n                                  minute: '2-digit' \n                                })}\n                              </div>\n                            </div>\n                          </div>\n                          <Badge \n                            className=\"bg-blue-500/20 text-blue-300 border-blue-400/30\"\n                          >\n                            {intake.fluidType}\n                          </Badge>\n                        </motion.div>\n                      );\n                    })}\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n          </div>\n\n          {/* Colonne centrale - Analyse et insights */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            \n            {/* Donn\xE9es d'hydratation */}\n            {state.hydrationData && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.3 }}\n              >\n                <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                  <CardHeader>\n                    <CardTitle className=\"text-white flex items-center gap-2\">\n                      <BarChart3 className=\"w-5 h-5\" />\n                      Analyse d\xE9taill\xE9e - {new Date(state.hydrationData.hydrationDate).toLocaleDateString('fr-FR')}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    \n                    {/* R\xE9partition des fluides */}\n                    <div className=\"space-y-3\">\n                      <h4 className=\"text-white font-medium\">R\xE9partition des fluides</h4>\n                      <div className=\"space-y-2\">\n                        {Object.entries({\n                          'Eau': state.hydrationData.waterIntake,\n                          'Caf\xE9': state.hydrationData.otherFluids.coffee,\n                          'Th\xE9': state.hydrationData.otherFluids.tea,\n                          'Jus': state.hydrationData.otherFluids.juice,\n                          'Sports': state.hydrationData.otherFluids.sportsDrinks,\n                          'Sodas': state.hydrationData.otherFluids.sodas,\n                          'Alcool': state.hydrationData.otherFluids.alcohol,\n                        }).map(([fluid, amount]) => {\n                          if (amount === 0) return null;\n                          const percentage = (amount / state.hydrationData!.totalIntake) * 100;\n                          const colors = {\n                            'Eau': 'bg-blue-500',\n                            'Caf\xE9': 'bg-amber-600',\n                            'Th\xE9': 'bg-green-500',\n                            'Jus': 'bg-orange-500',\n                            'Sports': 'bg-purple-500',\n                            'Sodas': 'bg-red-500',\n                            'Alcool': 'bg-red-600'\n                          };\n                          \n                          return (\n                            <div key={fluid} className=\"flex items-center gap-3\">\n                              <div className=\"w-20 text-sm text-white/70\">{fluid}</div>\n                              <div className=\"flex-1 bg-white/10 rounded-full h-4\">\n                                <motion.div\n                                  initial={{ width: 0 }}\n                                  animate={{ width: `${percentage}%` }}\n                                  transition={{ duration: 1, delay: 0.5 }}\n                                  className={`${colors[fluid as keyof typeof colors]} h-4 rounded-full relative overflow-hidden`}\n                                >\n                                  <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent animate-pulse\" />\n                                </motion.div>\n                              </div>\n                              <div className=\"w-24 text-sm text-white text-right\">\n                                {amount}ml ({percentage.toFixed(1)}%)\n                              </div>\n                            </div>\n                          );\n                        }).filter(Boolean)}\n                      </div>\n                    </div>\n\n                    {/* M\xE9triques corporelles */}\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">Couleur urine</div>\n                        <div className=\"text-lg font-bold text-white\">\n                          {state.hydrationData.bodyMetrics.urineColor}/8\n                        </div>\n                        <div className={`w-4 h-4 mx-auto mt-1 rounded-full ${\n                          state.hydrationData.bodyMetrics.urineColor <= 3 ? 'bg-yellow-200' :\n                          state.hydrationData.bodyMetrics.urineColor <= 5 ? 'bg-yellow-400' :\n                          state.hydrationData.bodyMetrics.urineColor <= 7 ? 'bg-orange-500' : 'bg-red-600'\n                        }`} />\n                      </div>\n                      \n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">Fr\xE9quence</div>\n                        <div className=\"text-lg font-bold text-white\">\n                          {state.hydrationData.bodyMetrics.urineFrequency}/jour\n                        </div>\n                        <Badge className={`mt-1 ${\n                          state.hydrationData.bodyMetrics.urineFrequency >= 6 && \n                          state.hydrationData.bodyMetrics.urineFrequency <= 8 ? \n                          'bg-green-500' : 'bg-orange-500'\n                        } text-white`}>\n                          {state.hydrationData.bodyMetrics.urineFrequency >= 6 && \n                           state.hydrationData.bodyMetrics.urineFrequency <= 8 ? 'Normal' : 'Attention'}\n                        </Badge>\n                      </div>\n                      \n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">\xC9nergie</div>\n                        <div className=\"text-lg font-bold text-white\">\n                          {state.hydrationData.mood.energyLevel}/10\n                        </div>\n                        <div className=\"w-full bg-white/20 rounded-full h-2 mt-1\">\n                          <div \n                            className=\"bg-gradient-to-r from-red-500 via-yellow-500 to-green-500 h-2 rounded-full\"\n                            style={{ width: `${state.hydrationData.mood.energyLevel * 10}%` }}\n                          />\n                        </div>\n                      </div>\n                      \n                      <div className=\"text-center p-3 bg-white/5 rounded-lg\">\n                        <div className=\"text-sm text-white/70 mb-1\">Concentration</div>\n                        <div className=\"text-lg font-bold text-white\">\n                          {state.hydrationData.mood.concentration}/10\n                        </div>\n                        <div className=\"w-full bg-white/20 rounded-full h-2 mt-1\">\n                          <div \n                            className=\"bg-gradient-to-r from-red-500 via-yellow-500 to-green-500 h-2 rounded-full\"\n                            style={{ width: `${state.hydrationData.mood.concentration * 10}%` }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n\n            {/* Insights IA */}\n            {state.hydrationAnalysis && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.5 }}\n              >\n                <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n                  <CardHeader>\n                    <CardTitle className=\"text-white flex items-center gap-2\">\n                      <Brain className=\"w-5 h-5\" />\n                      Analyse IA de l'hydratation\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    \n                    {/* Suggestions d'am\xE9lioration */}\n                    {state.hydrationAnalysis.aiInsights.improvementSuggestions.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <h5 className=\"text-blue-300 font-medium flex items-center gap-2\">\n                          <Lightbulb className=\"w-4 h-4\" />\n                          Suggestions d'am\xE9lioration\n                        </h5>\n                        <div className=\"space-y-1\">\n                          {state.hydrationAnalysis.aiInsights.improvementSuggestions.map((suggestion, index) => (\n                            <div key={index} className=\"flex items-center gap-2 text-sm text-white/80\">\n                              <CheckCircle className=\"w-3 h-3 text-blue-400\" />\n                              {suggestion}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Recommandations de fluides */}\n                    {state.hydrationAnalysis.aiInsights.fluidRecommendations.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <h5 className=\"text-green-300 font-medium flex items-center gap-2\">\n                          <Droplets className=\"w-4 h-4\" />\n                          Recommandations de fluides\n                        </h5>\n                        <div className=\"space-y-1\">\n                          {state.hydrationAnalysis.aiInsights.fluidRecommendations.map((recommendation, index) => (\n                            <div key={index} className=\"flex items-center gap-2 text-sm text-white/80\">\n                              <div className=\"w-1 h-1 bg-green-400 rounded-full\" />\n                              {recommendation}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Pr\xE9dictions */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 pt-4 border-t border-white/10\">\n                      <div className=\"space-y-2\">\n                        <div className=\"text-sm text-white/70\">Besoin prochaine heure</div>\n                        <div className=\"flex items-center gap-2\">\n                          <Timer className=\"w-4 h-4 text-cyan-400\" />\n                          <span className=\"text-white font-medium\">\n                            {state.hydrationAnalysis.predictiveMetrics.nextHourNeed}ml\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <div className=\"text-sm text-white/70\">Projection fin de journ\xE9e</div>\n                        <div className=\"flex items-center gap-2\">\n                          <Target className=\"w-4 h-4 text-purple-400\" />\n                          <span className=\"text-white font-medium\">\n                            {state.hydrationAnalysis.predictiveMetrics.endOfDayProjection}ml\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            )}\n          </div>\n        </div>\n\n        {/* \xC9tat de chargement */}\n        <AnimatePresence>\n          {state.isLoading && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\"\n            >\n              <div className=\"bg-white/10 backdrop-blur-sm rounded-xl p-8 text-center\">\n                <div className=\"animate-spin w-8 h-8 border-2 border-white/30 border-t-white rounded-full mx-auto mb-4\" />\n                <div className=\"text-white font-medium\">\n                  {state.currentState === 'analyzing_hydration' && 'Analyse IA en cours...'}\n                  {state.currentState === 'logging_intake' && 'Enregistrement...'}\n                  {state.currentState === 'syncing_data' && 'Synchronisation...'}\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Erreurs */}\n        <AnimatePresence>\n          {state.error && (\n            <motion.div\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: 50 }}\n              className=\"fixed bottom-4 right-4 bg-red-500 text-white p-4 rounded-lg shadow-lg max-w-md\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Erreur</span>\n              </div>\n              <div className=\"text-sm mt-1\">{state.error}</div>\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/10 mt-2\"\n                onClick={() => dispatch({ type: 'SET_ERROR', payload: null })}\n              >\n                Fermer\n              </Button>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\n// Composant formulaire de prise personnalis\xE9e\nconst CustomIntakeForm: React.FC<{ onSubmit: (amount: number, fluidType: any, temperature: any) => void }> = ({ onSubmit }) => {\n  const [formData, setFormData] = useState({\n    amount: 250,\n    fluidType: 'water' as HydrationData['hydrationTimestamps'][0]['fluidType'],\n    temperature: 'room' as HydrationData['hydrationTimestamps'][0]['temperature']\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit(formData.amount, formData.fluidType, formData.temperature);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      \n      {/* Quantit\xE9 */}\n      <div>\n        <label className=\"block text-sm font-medium text-white/80 mb-2\">\n          Quantit\xE9: {formData.amount}ml\n        </label>\n        <input\n          type=\"range\"\n          min=\"50\"\n          max=\"1000\"\n          step=\"50\"\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: Number(e.target.value) })}\n          className=\"w-full\"\n        />\n        <div className=\"flex justify-between text-xs text-white/60 mt-1\">\n          <span>50ml</span>\n          <span>1000ml</span>\n        </div>\n      </div>\n\n      {/* Type de fluide */}\n      <div>\n        <label className=\"block text-sm font-medium text-white/80 mb-2\">Type de fluide</label>\n        <select\n          value={formData.fluidType}\n          onChange={(e) => setFormData({ ...formData, fluidType: e.target.value as any })}\n          className=\"w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white\"\n        >\n          <option value=\"water\">Eau</option>\n          <option value=\"coffee\">Caf\xE9</option>\n          <option value=\"tea\">Th\xE9</option>\n          <option value=\"juice\">Jus</option>\n          <option value=\"sports\">Boisson sportive</option>\n          <option value=\"soda\">Soda</option>\n          <option value=\"alcohol\">Alcool</option>\n        </select>\n      </div>\n\n      {/* Temp\xE9rature */}\n      <div>\n        <label className=\"block text-sm font-medium text-white/80 mb-2\">Temp\xE9rature</label>\n        <div className=\"grid grid-cols-4 gap-2\">\n          {[\n            { value: 'cold', label: 'Froid', icon: '\uD83E\uDDCA' },\n            { value: 'room', label: 'Ambient', icon: '\uD83C\uDF21\uFE0F' },\n            { value: 'warm', label: 'Ti\xE8de', icon: '\u2615' },\n            { value: 'hot', label: 'Chaud', icon: '\uD83D\uDD25' }\n          ].map(({ value, label, icon }) => (\n            <button\n              key={value}\n              type=\"button\"\n              onClick={() => setFormData({ ...formData, temperature: value as any })}\n              className={`p-2 rounded-lg text-xs transition-colors ${\n                formData.temperature === value \n                  ? 'bg-blue-500 text-white' \n                  : 'bg-white/10 text-white/70 hover:bg-white/20'\n              }`}\n            >\n              <div className=\"text-lg\">{icon}</div>\n              <div>{label}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <Button \n        type=\"submit\"\n        className=\"w-full bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white\"\n      >\n        <Plus className=\"w-4 h-4 mr-2\" />\n        Ajouter {formData.amount}ml\n      </Button>\n    </form>\n  );\n};\n\n// Fonctions utilitaires\nfunction calculateOptimalIntake(hydrationData: HydrationData): number {\n  return hydrationData.dailyGoal + calculateExerciseAdjustment(hydrationData) + calculateEnvironmentalAdjustment(hydrationData);\n}\n\nfunction calculateAbsorptionRate(hydrationData: HydrationData): number {\n  // Calcul simplifi\xE9 bas\xE9 sur le type de fluides et la r\xE9partition\n  const waterRatio = hydrationData.waterIntake / hydrationData.totalIntake;\n  return Math.round(80 + (waterRatio * 20));\n}\n\nfunction calculateRetentionScore(hydrationData: HydrationData): number {\n  let retentionScore = 85;\n  \n  // Facteurs qui r\xE9duisent la r\xE9tention\n  const alcoholRatio = hydrationData.otherFluids.alcohol / hydrationData.totalIntake;\n  const caffeineRatio = hydrationData.otherFluids.coffee / hydrationData.totalIntake;\n  \n  retentionScore -= alcoholRatio * 40;\n  retentionScore -= caffeineRatio * 15;\n  \n  return Math.max(0, Math.round(retentionScore));\n}\n\nfunction calculateCognitiveImpact(hydrationData: HydrationData): number {\n  const hydrationLevel = hydrationData.totalIntake / hydrationData.dailyGoal;\n  return Math.min(100, Math.round(hydrationLevel * 100));\n}\n\nfunction calculatePhysicalImpact(hydrationData: HydrationData): number {\n  const hydrationLevel = hydrationData.totalIntake / hydrationData.dailyGoal;\n  const exerciseBonus = hydrationData.physicalActivity.exerciseDuration > 0 ? 10 : 0;\n  return Math.min(100, Math.round(hydrationLevel * 90 + exerciseBonus));\n}\n\nfunction calculateRecoveryImpact(hydrationData: HydrationData): number {\n  const hydrationLevel = hydrationData.totalIntake / hydrationData.dailyGoal;\n  const qualityBonus = (hydrationData.waterIntake / hydrationData.totalIntake) * 10;\n  return Math.min(100, Math.round(hydrationLevel * 85 + qualityBonus));\n}\n\nfunction calculateMetabolicImpact(hydrationData: HydrationData): number {\n  const hydrationLevel = hydrationData.totalIntake / hydrationData.dailyGoal;\n  return Math.min(100, Math.round(hydrationLevel * 95));\n}\n\nfunction calculateNextHourNeed(hydrationData: HydrationData): number {\n  const currentHour = new Date().getHours();\n  const baseNeed = 150; // ml/heure base\n  \n  // Ajustement selon l'heure\n  if (currentHour >= 6 && currentHour <= 10) return baseNeed + 100; // Matin\n  if (currentHour >= 14 && currentHour <= 18) return baseNeed + 50; // Apr\xE8s-midi\n  if (currentHour >= 20) return baseNeed - 50; // Soir\n  \n  return baseNeed;\n}\n\nfunction calculateEndOfDayProjection(hydrationData: HydrationData): number {\n  const currentHour = new Date().getHours();\n  const hoursLeft = 24 - currentHour;\n  const averageHourlyNeed = 120; // ml\n  \n  return hydrationData.totalIntake + (hoursLeft * averageHourlyNeed);\n}\n\nfunction calculateOptimalNextIntake(): string {\n  const now = new Date();\n  const nextIntake = new Date(now.getTime() + 60 * 60 * 1000); // +1 heure\n  return nextIntake.toTimeString().slice(0, 5);\n}\n\nfunction calculateTemperatureImpact(hydrationData: HydrationData): number {\n  const temp = hydrationData.physicalActivity.environmentalTemp;\n  if (temp <= 20) return 30;\n  if (temp <= 25) return 50;\n  if (temp <= 30) return 70;\n  return 90;\n}\n\nfunction calculateHumidityImpact(hydrationData: HydrationData): number {\n  const humidity = hydrationData.physicalActivity.humidity;\n  if (humidity <= 30) return 80; // Air sec = plus de perte\n  if (humidity <= 50) return 50;\n  if (humidity <= 70) return 30;\n  return 20; // Humidit\xE9 \xE9lev\xE9e = moins de perte\n}\n\nfunction getSeasonalFactors(): string[] {\n  const month = new Date().getMonth();\n  if (month >= 5 && month <= 8) return ['\xC9t\xE9: besoins accrus', 'Transpiration \xE9lev\xE9e'];\n  if (month >= 11 || month <= 2) return ['Hiver: air sec', 'Chauffage d\xE9shydratant'];\n  return ['Saison temp\xE9r\xE9e'];\n}\n\nfunction calculateExerciseAdjustment(hydrationData: HydrationData): number {\n  const duration = hydrationData.physicalActivity.exerciseDuration;\n  const intensityMultiplier = {\n    low: 1.2,\n    moderate: 1.5,\n    high: 2.0,\n    extreme: 2.5\n  };\n  \n  return Math.round(duration * 8 * intensityMultiplier[hydrationData.physicalActivity.exerciseIntensity]);\n}\n\nfunction calculateEnvironmentalAdjustment(hydrationData: HydrationData): number {\n  const temp = hydrationData.physicalActivity.environmentalTemp;\n  const humidity = hydrationData.physicalActivity.humidity;\n  \n  let adjustment = 0;\n  if (temp > 25) adjustment += (temp - 25) * 20;\n  if (humidity < 40) adjustment += (40 - humidity) * 5;\n  \n  return Math.round(adjustment);\n}\n\nexport default HydrationOptimizer;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9167585bf0652bc5c9d2235373e888730d564400"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_t8noq4mkq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_t8noq4mkq();
var __createBinding =
/* istanbul ignore next */
(cov_t8noq4mkq().s[0]++,
/* istanbul ignore next */
(cov_t8noq4mkq().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_t8noq4mkq().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_t8noq4mkq().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_t8noq4mkq().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[0]++;
  cov_t8noq4mkq().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[2][0]++;
    cov_t8noq4mkq().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_t8noq4mkq().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[5][1]++,
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[3][0]++;
    cov_t8noq4mkq().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_t8noq4mkq().f[1]++;
        cov_t8noq4mkq().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[3][1]++;
  }
  cov_t8noq4mkq().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_t8noq4mkq().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[2]++;
  cov_t8noq4mkq().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[7][0]++;
    cov_t8noq4mkq().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[7][1]++;
  }
  cov_t8noq4mkq().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_t8noq4mkq().s[11]++,
/* istanbul ignore next */
(cov_t8noq4mkq().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_t8noq4mkq().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_t8noq4mkq().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_t8noq4mkq().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[3]++;
  cov_t8noq4mkq().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_t8noq4mkq().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[4]++;
  cov_t8noq4mkq().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_t8noq4mkq().s[14]++,
/* istanbul ignore next */
(cov_t8noq4mkq().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_t8noq4mkq().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_t8noq4mkq().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[5]++;
  cov_t8noq4mkq().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[11][0]++;
    cov_t8noq4mkq().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[17]++, {});
  /* istanbul ignore next */
  cov_t8noq4mkq().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[13][0]++;
    cov_t8noq4mkq().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_t8noq4mkq().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_t8noq4mkq().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_t8noq4mkq().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_t8noq4mkq().b[14][0]++;
        cov_t8noq4mkq().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_t8noq4mkq().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[13][1]++;
  }
  cov_t8noq4mkq().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_t8noq4mkq().s[23]++;
  return result;
}));
/* istanbul ignore next */
cov_t8noq4mkq().s[24]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_t8noq4mkq().s[25]++;
exports.HydrationOptimizer = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_t8noq4mkq().s[26]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_t8noq4mkq().s[27]++, __importStar(require("react")));
const framer_motion_1 =
/* istanbul ignore next */
(cov_t8noq4mkq().s[28]++, require("framer-motion"));
const supabase_1 =
/* istanbul ignore next */
(cov_t8noq4mkq().s[29]++, require("@/lib/supabase"));
const card_1 =
/* istanbul ignore next */
(cov_t8noq4mkq().s[30]++, require("@/components/ui/card"));
const button_1 =
/* istanbul ignore next */
(cov_t8noq4mkq().s[31]++, require("@/components/ui/button"));
const badge_1 =
/* istanbul ignore next */
(cov_t8noq4mkq().s[32]++, require("@/components/ui/badge"));
const dialog_1 =
/* istanbul ignore next */
(cov_t8noq4mkq().s[33]++, require("@/components/ui/dialog"));
const lucide_react_1 =
/* istanbul ignore next */
(cov_t8noq4mkq().s[34]++, require("lucide-react"));
const hydration_mapping_1 =
/* istanbul ignore next */
(cov_t8noq4mkq().s[35]++, require("@/features/hydration/utils/hydration-mapping"));
const initialHydrationState =
/* istanbul ignore next */
(cov_t8noq4mkq().s[36]++, {
  currentState: 'idle',
  hydrationData: null,
  hydrationAnalysis: null,
  weeklySummary: null,
  hydrationGoals: null,
  recentDays: [],
  todayIntakes: [],
  isLoading: false,
  error: null,
  showInsights: false,
  selectedDate: new Date().toISOString().split('T')[0],
  hydrationScore: 0,
  efficiencyScore: 0,
  dehydrationRisk: 'optimal',
  currentProgress: 0,
  dailyGoal: 2500
});
function hydrationReducer(state, action) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[6]++;
  cov_t8noq4mkq().s[37]++;
  switch (action.type) {
    case 'SET_STATE':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][0]++;
      cov_t8noq4mkq().s[38]++;
      return {
        ...state,
        currentState: action.payload
      };
    case 'SET_HYDRATION_DATA':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][1]++;
      cov_t8noq4mkq().s[39]++;
      return {
        ...state,
        hydrationData: action.payload
      };
    case 'SET_ANALYSIS':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][2]++;
      cov_t8noq4mkq().s[40]++;
      return {
        ...state,
        hydrationAnalysis: action.payload
      };
    case 'SET_WEEKLY_SUMMARY':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][3]++;
      cov_t8noq4mkq().s[41]++;
      return {
        ...state,
        weeklySummary: action.payload
      };
    case 'SET_GOALS':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][4]++;
      cov_t8noq4mkq().s[42]++;
      return {
        ...state,
        hydrationGoals: action.payload
      };
    case 'SET_RECENT_DAYS':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][5]++;
      cov_t8noq4mkq().s[43]++;
      return {
        ...state,
        recentDays: action.payload
      };
    case 'SET_TODAY_INTAKES':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][6]++;
      cov_t8noq4mkq().s[44]++;
      return {
        ...state,
        todayIntakes: action.payload
      };
    case 'ADD_INTAKE':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][7]++;
      cov_t8noq4mkq().s[45]++;
      return {
        ...state,
        todayIntakes: [...state.todayIntakes, action.payload]
      };
    case 'SET_LOADING':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][8]++;
      cov_t8noq4mkq().s[46]++;
      return {
        ...state,
        isLoading: action.payload
      };
    case 'SET_ERROR':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][9]++;
      cov_t8noq4mkq().s[47]++;
      return {
        ...state,
        error: action.payload
      };
    case 'TOGGLE_INSIGHTS':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][10]++;
      cov_t8noq4mkq().s[48]++;
      return {
        ...state,
        showInsights: !state.showInsights
      };
    case 'SET_SELECTED_DATE':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][11]++;
      cov_t8noq4mkq().s[49]++;
      return {
        ...state,
        selectedDate: action.payload
      };
    case 'UPDATE_SCORES':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][12]++;
      cov_t8noq4mkq().s[50]++;
      return {
        ...state,
        hydrationScore: action.payload.hydration,
        efficiencyScore: action.payload.efficiency,
        dehydrationRisk: action.payload.risk
      };
    case 'UPDATE_PROGRESS':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][13]++;
      cov_t8noq4mkq().s[51]++;
      return {
        ...state,
        currentProgress: action.payload.current,
        dailyGoal: action.payload.goal
      };
    case 'RESET_STATE':
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][14]++;
      cov_t8noq4mkq().s[52]++;
      return initialHydrationState;
    default:
      /* istanbul ignore next */
      cov_t8noq4mkq().b[16][15]++;
      cov_t8noq4mkq().s[53]++;
      return state;
  }
}
/* istanbul ignore next */
cov_t8noq4mkq().s[54]++;
const HydrationOptimizer = () => {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[7]++;
  const [state, dispatch] =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[55]++, (0, react_1.useReducer)(hydrationReducer, initialHydrationState));
  const [userId, setUserId] =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[56]++, (0, react_1.useState)(null));
  // Gestion de l'authentification
  /* istanbul ignore next */
  cov_t8noq4mkq().s[57]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_t8noq4mkq().f[8]++;
    cov_t8noq4mkq().s[58]++;
    const getUser = async () => {
      /* istanbul ignore next */
      cov_t8noq4mkq().f[9]++;
      const {
        data: {
          user
        }
      } =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[59]++, await supabase_1.supabase.auth.getUser());
      /* istanbul ignore next */
      cov_t8noq4mkq().s[60]++;
      if (user) {
        /* istanbul ignore next */
        cov_t8noq4mkq().b[17][0]++;
        cov_t8noq4mkq().s[61]++;
        setUserId(user.id);
        /* istanbul ignore next */
        cov_t8noq4mkq().s[62]++;
        await loadHydrationData(user.id);
      } else
      /* istanbul ignore next */
      {
        cov_t8noq4mkq().b[17][1]++;
      }
    };
    /* istanbul ignore next */
    cov_t8noq4mkq().s[63]++;
    getUser();
  }, []);
  // Chargement des données d'hydratation
  /* istanbul ignore next */
  cov_t8noq4mkq().s[64]++;
  const loadHydrationData = async userIdParam => {
    /* istanbul ignore next */
    cov_t8noq4mkq().f[10]++;
    cov_t8noq4mkq().s[65]++;
    dispatch({
      type: 'SET_LOADING',
      payload: true
    });
    /* istanbul ignore next */
    cov_t8noq4mkq().s[66]++;
    dispatch({
      type: 'SET_STATE',
      payload: 'syncing_data'
    });
    /* istanbul ignore next */
    cov_t8noq4mkq().s[67]++;
    try {
      // Chargement des données récentes
      const {
        data: recentHydrationData,
        error: hydrationError
      } =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[68]++, await supabase_1.supabase.from('hydration_data').select('*').eq('user_id', userIdParam).order('hydration_date', {
        ascending: false
      }).limit(7));
      /* istanbul ignore next */
      cov_t8noq4mkq().s[69]++;
      if (hydrationError) {
        /* istanbul ignore next */
        cov_t8noq4mkq().b[18][0]++;
        cov_t8noq4mkq().s[70]++;
        throw hydrationError;
      } else
      /* istanbul ignore next */
      {
        cov_t8noq4mkq().b[18][1]++;
      }
      const recentDays =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[71]++,
      /* istanbul ignore next */
      (cov_t8noq4mkq().b[19][0]++, recentHydrationData?.map(hydration_mapping_1.dbToHydrationData)) ||
      /* istanbul ignore next */
      (cov_t8noq4mkq().b[19][1]++, []));
      /* istanbul ignore next */
      cov_t8noq4mkq().s[72]++;
      dispatch({
        type: 'SET_RECENT_DAYS',
        payload: recentDays
      });
      // Données du jour sélectionné
      const todayData =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[73]++, recentDays.find(day => {
        /* istanbul ignore next */
        cov_t8noq4mkq().f[11]++;
        cov_t8noq4mkq().s[74]++;
        return day.hydrationDate === state.selectedDate;
      }));
      /* istanbul ignore next */
      cov_t8noq4mkq().s[75]++;
      if (todayData) {
        /* istanbul ignore next */
        cov_t8noq4mkq().b[20][0]++;
        cov_t8noq4mkq().s[76]++;
        dispatch({
          type: 'SET_HYDRATION_DATA',
          payload: todayData
        });
        /* istanbul ignore next */
        cov_t8noq4mkq().s[77]++;
        dispatch({
          type: 'UPDATE_PROGRESS',
          payload: {
            current: todayData.totalIntake,
            goal: todayData.dailyGoal
          }
        });
        // Conversion des timestamps en events
        const todayIntakes =
        /* istanbul ignore next */
        (cov_t8noq4mkq().s[78]++, todayData.hydrationTimestamps.map((ts, index) => {
          /* istanbul ignore next */
          cov_t8noq4mkq().f[12]++;
          cov_t8noq4mkq().s[79]++;
          return {
            id: `intake_${index}`,
            timestamp: new Date(`${todayData.hydrationDate}T${ts.time}`),
            amount: ts.amount,
            fluidType: ts.fluidType,
            temperature: ts.temperature,
            context: 'habit'
          };
        }));
        /* istanbul ignore next */
        cov_t8noq4mkq().s[80]++;
        dispatch({
          type: 'SET_TODAY_INTAKES',
          payload: todayIntakes
        });
        /* istanbul ignore next */
        cov_t8noq4mkq().s[81]++;
        await analyzeHydrationData(todayData);
      } else {
        /* istanbul ignore next */
        cov_t8noq4mkq().b[20][1]++;
        cov_t8noq4mkq().s[82]++;
        // Créer données par défaut pour aujourd'hui
        await createTodayHydrationData(userIdParam);
      }
      // Chargement des objectifs
      const {
        data: goalsData
      } =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[83]++, await supabase_1.supabase.from('hydration_goals').select('*').eq('user_id', userIdParam).single());
      /* istanbul ignore next */
      cov_t8noq4mkq().s[84]++;
      if (goalsData) {
        /* istanbul ignore next */
        cov_t8noq4mkq().b[21][0]++;
        cov_t8noq4mkq().s[85]++;
        dispatch({
          type: 'SET_GOALS',
          payload: goalsData
        });
      } else
      /* istanbul ignore next */
      {
        cov_t8noq4mkq().b[21][1]++;
      }
      cov_t8noq4mkq().s[86]++;
      dispatch({
        type: 'SET_STATE',
        payload: 'idle'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_t8noq4mkq().s[87]++;
      console.error('Erreur chargement données hydratation:', error);
      /* istanbul ignore next */
      cov_t8noq4mkq().s[88]++;
      dispatch({
        type: 'SET_ERROR',
        payload: 'Erreur lors du chargement des données'
      });
      /* istanbul ignore next */
      cov_t8noq4mkq().s[89]++;
      dispatch({
        type: 'SET_STATE',
        payload: 'error'
      });
    } finally {
      /* istanbul ignore next */
      cov_t8noq4mkq().s[90]++;
      dispatch({
        type: 'SET_LOADING',
        payload: false
      });
    }
  };
  // Création données par défaut aujourd'hui
  /* istanbul ignore next */
  cov_t8noq4mkq().s[91]++;
  const createTodayHydrationData = async userIdParam => {
    /* istanbul ignore next */
    cov_t8noq4mkq().f[13]++;
    const todayData =
    /* istanbul ignore next */
    (cov_t8noq4mkq().s[92]++, {
      id: `hydration_${Date.now()}`,
      userId: userIdParam,
      hydrationDate: state.selectedDate,
      dailyGoal: 2500,
      totalIntake: 0,
      waterIntake: 0,
      otherFluids: {
        coffee: 0,
        tea: 0,
        juice: 0,
        alcohol: 0,
        sportsDrinks: 0,
        sodas: 0
      },
      hydrationTimestamps: [],
      physicalActivity: {
        exerciseDuration: 0,
        exerciseIntensity: 'low',
        sweatRate: 500,
        environmentalTemp: 20,
        humidity: 50
      },
      bodyMetrics: {
        weight: 70,
        urineColor: 3,
        urineFrequency: 6
      },
      symptoms: {
        thirst: 'none',
        headache: false,
        fatigue: false,
        dizziness: false,
        drymouth: false,
        darkUrine: false,
        constipation: false
      },
      mood: {
        energyLevel: 7,
        concentration: 7,
        overallMood: 'good'
      },
      createdAt: new Date(),
      updatedAt: new Date()
    });
    /* istanbul ignore next */
    cov_t8noq4mkq().s[93]++;
    dispatch({
      type: 'SET_HYDRATION_DATA',
      payload: todayData
    });
    /* istanbul ignore next */
    cov_t8noq4mkq().s[94]++;
    dispatch({
      type: 'UPDATE_PROGRESS',
      payload: {
        current: 0,
        goal: 2500
      }
    });
  };
  // Analyse IA de l'hydratation
  /* istanbul ignore next */
  cov_t8noq4mkq().s[95]++;
  const analyzeHydrationData = async hydrationData => {
    /* istanbul ignore next */
    cov_t8noq4mkq().f[14]++;
    cov_t8noq4mkq().s[96]++;
    dispatch({
      type: 'SET_STATE',
      payload: 'analyzing_hydration'
    });
    /* istanbul ignore next */
    cov_t8noq4mkq().s[97]++;
    try {
      // Calcul des scores
      const hydrationScores =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[98]++, (0, hydration_mapping_1.calculateHydrationScores)(hydrationData));
      const aiInsights =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[99]++, (0, hydration_mapping_1.generateHydrationAIInsights)(hydrationData, hydrationScores));
      const dehydrationRisk =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[100]++, (0, hydration_mapping_1.calculateDehydrationRisk)(hydrationData));
      // Création de l'analyse complète
      const analysis =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[101]++, {
        id: `analysis_${hydrationData.id}`,
        userId: hydrationData.userId,
        hydrationDataId: hydrationData.id,
        analysisDate: new Date(),
        hydrationScores,
        fluidBalance: {
          optimalIntake: calculateOptimalIntake(hydrationData),
          actualIntake: hydrationData.totalIntake,
          deficit: Math.max(0, hydrationData.dailyGoal - hydrationData.totalIntake),
          surplus: Math.max(0, hydrationData.totalIntake - hydrationData.dailyGoal),
          absorptionRate: calculateAbsorptionRate(hydrationData),
          retentionScore: calculateRetentionScore(hydrationData)
        },
        performanceImpact: {
          cognitiveFunction: calculateCognitiveImpact(hydrationData),
          physicalPerformance: calculatePhysicalImpact(hydrationData),
          recoveryRate: calculateRecoveryImpact(hydrationData),
          metabolicEfficiency: calculateMetabolicImpact(hydrationData)
        },
        dehydrationRisk,
        aiInsights,
        predictiveMetrics: {
          nextHourNeed: calculateNextHourNeed(hydrationData),
          endOfDayProjection: calculateEndOfDayProjection(hydrationData),
          performanceImpactTomorrow: hydrationScores.overallHydration > 75 ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[22][0]++, 'positive') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[22][1]++, hydrationScores.overallHydration > 50 ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[23][0]++, 'neutral') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[23][1]++, 'negative')),
          optimalNextIntake: calculateOptimalNextIntake()
        },
        environmentalFactors: {
          temperatureImpact: calculateTemperatureImpact(hydrationData),
          humidityImpact: calculateHumidityImpact(hydrationData),
          altitudeAdjustment: 0,
          // Simplifiée
          seasonalFactors: getSeasonalFactors()
        },
        personalizedTargets: {
          baselineNeed: 2000,
          exerciseAdjustment: calculateExerciseAdjustment(hydrationData),
          environmentalAdjustment: calculateEnvironmentalAdjustment(hydrationData),
          finalTarget: hydrationData.dailyGoal
        },
        createdAt: new Date(),
        updatedAt: new Date()
      });
      /* istanbul ignore next */
      cov_t8noq4mkq().s[102]++;
      dispatch({
        type: 'SET_ANALYSIS',
        payload: analysis
      });
      /* istanbul ignore next */
      cov_t8noq4mkq().s[103]++;
      dispatch({
        type: 'UPDATE_SCORES',
        payload: {
          hydration: hydrationScores.overallHydration,
          efficiency: hydrationScores.hydrationEfficiency,
          risk: dehydrationRisk.currentLevel
        }
      });
      // Sauvegarde en base
      /* istanbul ignore next */
      cov_t8noq4mkq().s[104]++;
      await saveHydrationAnalysis(analysis);
    } catch (error) {
      /* istanbul ignore next */
      cov_t8noq4mkq().s[105]++;
      console.error('Erreur analyse hydratation:', error);
      /* istanbul ignore next */
      cov_t8noq4mkq().s[106]++;
      dispatch({
        type: 'SET_ERROR',
        payload: 'Erreur lors de l\'analyse'
      });
    }
  };
  // Sauvegarde de l'analyse
  /* istanbul ignore next */
  cov_t8noq4mkq().s[107]++;
  const saveHydrationAnalysis = async analysis => {
    /* istanbul ignore next */
    cov_t8noq4mkq().f[15]++;
    cov_t8noq4mkq().s[108]++;
    try {
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[109]++, await supabase_1.supabase.from('hydration_analysis').upsert({
        id: analysis.id,
        user_id: analysis.userId,
        hydration_data_id: analysis.hydrationDataId,
        analysis_date: analysis.analysisDate.toISOString(),
        overall_hydration_score: analysis.hydrationScores.overallHydration,
        hydration_efficiency_score: analysis.hydrationScores.hydrationEfficiency,
        quality_score: analysis.hydrationScores.qualityScore,
        timing_optimization_score: analysis.hydrationScores.timingOptimization,
        recovery_hydration_score: analysis.hydrationScores.recoveryHydration,
        balance_score: analysis.hydrationScores.balanceScore,
        dehydration_risk_level: analysis.dehydrationRisk.currentLevel,
        hydration_ai_analysis: {
          fluidBalance: analysis.fluidBalance,
          performanceImpact: analysis.performanceImpact,
          dehydrationRisk: analysis.dehydrationRisk,
          aiInsights: analysis.aiInsights,
          predictiveMetrics: analysis.predictiveMetrics,
          environmentalFactors: analysis.environmentalFactors,
          personalizedTargets: analysis.personalizedTargets
        }
      }));
      /* istanbul ignore next */
      cov_t8noq4mkq().s[110]++;
      if (error) {
        /* istanbul ignore next */
        cov_t8noq4mkq().b[24][0]++;
        cov_t8noq4mkq().s[111]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_t8noq4mkq().b[24][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_t8noq4mkq().s[112]++;
      console.error('Erreur sauvegarde analyse:', error);
    }
  };
  // Ajout d'une nouvelle prise
  /* istanbul ignore next */
  cov_t8noq4mkq().s[113]++;
  const addFluidIntake = async (amount, fluidType, temperature =
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[25][0]++, 'room')) => {
    /* istanbul ignore next */
    cov_t8noq4mkq().f[16]++;
    cov_t8noq4mkq().s[114]++;
    if (
    /* istanbul ignore next */
    (cov_t8noq4mkq().b[27][0]++, !userId) ||
    /* istanbul ignore next */
    (cov_t8noq4mkq().b[27][1]++, !state.hydrationData)) {
      /* istanbul ignore next */
      cov_t8noq4mkq().b[26][0]++;
      cov_t8noq4mkq().s[115]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_t8noq4mkq().b[26][1]++;
    }
    cov_t8noq4mkq().s[116]++;
    dispatch({
      type: 'SET_STATE',
      payload: 'logging_intake'
    });
    /* istanbul ignore next */
    cov_t8noq4mkq().s[117]++;
    dispatch({
      type: 'SET_LOADING',
      payload: true
    });
    /* istanbul ignore next */
    cov_t8noq4mkq().s[118]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[119]++, new Date());
      const timeString =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[120]++, now.toTimeString().slice(0, 5));
      // Nouvel event d'intake
      const newIntake =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[121]++, {
        id: `intake_${Date.now()}`,
        timestamp: now,
        amount,
        fluidType,
        temperature,
        context: 'habit'
      });
      // Nouveau timestamp pour les données
      const newTimestamp =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[122]++, {
        time: timeString,
        amount,
        fluidType,
        temperature
      });
      // Mise à jour des données d'hydratation
      const updatedHydrationData =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[123]++, {
        ...state.hydrationData,
        totalIntake: state.hydrationData.totalIntake + amount,
        waterIntake: fluidType === 'water' ?
        /* istanbul ignore next */
        (cov_t8noq4mkq().b[28][0]++, state.hydrationData.waterIntake + amount) :
        /* istanbul ignore next */
        (cov_t8noq4mkq().b[28][1]++, state.hydrationData.waterIntake),
        otherFluids: {
          ...state.hydrationData.otherFluids,
          [fluidType === 'coffee' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[29][0]++, 'coffee') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[29][1]++, fluidType === 'tea' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[30][0]++, 'tea') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[30][1]++, fluidType === 'juice' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[31][0]++, 'juice') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[31][1]++, fluidType === 'alcohol' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[32][0]++, 'alcohol') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[32][1]++, fluidType === 'sports' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[33][0]++, 'sportsDrinks') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[33][1]++, fluidType === 'soda' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[34][0]++, 'sodas') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[34][1]++, 'coffee'))))))]: state.hydrationData.otherFluids[fluidType === 'coffee' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[35][0]++, 'coffee') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[35][1]++, fluidType === 'tea' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[36][0]++, 'tea') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[36][1]++, fluidType === 'juice' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[37][0]++, 'juice') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[37][1]++, fluidType === 'alcohol' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[38][0]++, 'alcohol') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[38][1]++, fluidType === 'sports' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[39][0]++, 'sportsDrinks') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[39][1]++, fluidType === 'soda' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[40][0]++, 'sodas') :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[40][1]++, 'coffee'))))))] + (fluidType !== 'water' ?
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[41][0]++, amount) :
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[41][1]++, 0))
        },
        hydrationTimestamps: [...state.hydrationData.hydrationTimestamps, newTimestamp],
        updatedAt: new Date()
      });
      // Sauvegarde en base
      const dbData =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[124]++, (0, hydration_mapping_1.hydrationDataToDb)(updatedHydrationData));
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_t8noq4mkq().s[125]++, await supabase_1.supabase.from('hydration_data').upsert(dbData));
      /* istanbul ignore next */
      cov_t8noq4mkq().s[126]++;
      if (error) {
        /* istanbul ignore next */
        cov_t8noq4mkq().b[42][0]++;
        cov_t8noq4mkq().s[127]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_t8noq4mkq().b[42][1]++;
      }
      // Mise à jour du state
      cov_t8noq4mkq().s[128]++;
      dispatch({
        type: 'SET_HYDRATION_DATA',
        payload: updatedHydrationData
      });
      /* istanbul ignore next */
      cov_t8noq4mkq().s[129]++;
      dispatch({
        type: 'ADD_INTAKE',
        payload: newIntake
      });
      /* istanbul ignore next */
      cov_t8noq4mkq().s[130]++;
      dispatch({
        type: 'UPDATE_PROGRESS',
        payload: {
          current: updatedHydrationData.totalIntake,
          goal: updatedHydrationData.dailyGoal
        }
      });
      // Re-analyse
      /* istanbul ignore next */
      cov_t8noq4mkq().s[131]++;
      await analyzeHydrationData(updatedHydrationData);
      /* istanbul ignore next */
      cov_t8noq4mkq().s[132]++;
      dispatch({
        type: 'SET_STATE',
        payload: 'idle'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_t8noq4mkq().s[133]++;
      console.error('Erreur ajout prise fluide:', error);
      /* istanbul ignore next */
      cov_t8noq4mkq().s[134]++;
      dispatch({
        type: 'SET_ERROR',
        payload: 'Erreur lors de l\'ajout'
      });
      /* istanbul ignore next */
      cov_t8noq4mkq().s[135]++;
      dispatch({
        type: 'SET_STATE',
        payload: 'error'
      });
    } finally {
      /* istanbul ignore next */
      cov_t8noq4mkq().s[136]++;
      dispatch({
        type: 'SET_LOADING',
        payload: false
      });
    }
  };
  // Calcul du pourcentage de progression
  const progressPercentage =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[137]++, state.dailyGoal > 0 ?
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[43][0]++, Math.min(100, state.currentProgress / state.dailyGoal * 100)) :
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[43][1]++, 0));
  // Rendu du composant principal
  /* istanbul ignore next */
  cov_t8noq4mkq().s[138]++;
  return (0, jsx_runtime_1.jsx)("div", {
    className: "min-h-screen bg-gradient-to-br from-blue-900 via-cyan-900 to-blue-900 p-6",
    children: (0, jsx_runtime_1.jsxs)("div", {
      className: "max-w-7xl mx-auto space-y-6",
      children: [(0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, {
        initial: {
          opacity: 0,
          y: -20
        },
        animate: {
          opacity: 1,
          y: 0
        },
        className: "text-center space-y-4",
        children: [(0, jsx_runtime_1.jsxs)("div", {
          className: "flex items-center justify-center gap-3 mb-6",
          children: [(0, jsx_runtime_1.jsx)("div", {
            className: "p-3 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full",
            children: (0, jsx_runtime_1.jsx)(lucide_react_1.Droplets, {
              className: "w-8 h-8 text-white"
            })
          }), (0, jsx_runtime_1.jsx)("h1", {
            className: "text-4xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent",
            children: "Hydration Optimizer"
          })]
        }), (0, jsx_runtime_1.jsx)("div", {
          className: "max-w-2xl mx-auto",
          children: (0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, {
            initial: {
              scale: 0.9
            },
            animate: {
              scale: 1
            },
            className: "bg-white/10 backdrop-blur-sm rounded-xl p-8 border border-white/20",
            children: [(0, jsx_runtime_1.jsxs)("div", {
              className: "text-center mb-6",
              children: [(0, jsx_runtime_1.jsxs)("div", {
                className: "text-6xl font-bold text-white mb-2",
                children: [state.currentProgress, "ml"]
              }), (0, jsx_runtime_1.jsxs)("div", {
                className: "text-xl text-white/80",
                children: ["sur ", state.dailyGoal, "ml (", progressPercentage.toFixed(0), "%)"]
              })]
            }), (0, jsx_runtime_1.jsx)("div", {
              className: "relative w-full h-4 bg-white/20 rounded-full overflow-hidden",
              children: (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
                initial: {
                  width: 0
                },
                animate: {
                  width: `${progressPercentage}%`
                },
                transition: {
                  duration: 1,
                  ease: "easeOut"
                },
                className: "h-full bg-gradient-to-r from-blue-400 via-cyan-400 to-blue-500 rounded-full relative",
                children: (0, jsx_runtime_1.jsx)("div", {
                  className: "absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-pulse"
                })
              })
            }),
            /* istanbul ignore next */
            (cov_t8noq4mkq().b[44][0]++, state.currentProgress < state.dailyGoal) &&
            /* istanbul ignore next */
            (cov_t8noq4mkq().b[44][1]++, (0, jsx_runtime_1.jsxs)("div", {
              className: "text-center mt-4 text-white/70",
              children: ["Plus que ", state.dailyGoal - state.currentProgress, "ml pour atteindre votre objectif"]
            }))]
          })
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: "grid grid-cols-1 md:grid-cols-3 gap-4 max-w-4xl mx-auto",
          children: [(0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, {
            whileHover: {
              scale: 1.02
            },
            className: "bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20",
            children: [(0, jsx_runtime_1.jsxs)("div", {
              className: "flex items-center gap-3 mb-2",
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Droplets, {
                className: "w-6 h-6 text-blue-400"
              }), (0, jsx_runtime_1.jsx)("span", {
                className: "text-white/80 font-medium",
                children: "Hydratation"
              })]
            }), (0, jsx_runtime_1.jsxs)("div", {
              className: "text-3xl font-bold text-white mb-1",
              children: [state.hydrationScore, "/100"]
            }), (0, jsx_runtime_1.jsx)("div", {
              className: "w-full bg-white/20 rounded-full h-2",
              children: (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
                initial: {
                  width: 0
                },
                animate: {
                  width: `${state.hydrationScore}%`
                },
                transition: {
                  duration: 1,
                  delay: 0.2
                },
                className: "bg-gradient-to-r from-blue-500 to-cyan-500 h-2 rounded-full"
              })
            })]
          }), (0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, {
            whileHover: {
              scale: 1.02
            },
            className: "bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20",
            children: [(0, jsx_runtime_1.jsxs)("div", {
              className: "flex items-center gap-3 mb-2",
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Zap, {
                className: "w-6 h-6 text-yellow-400"
              }), (0, jsx_runtime_1.jsx)("span", {
                className: "text-white/80 font-medium",
                children: "Efficacit\u00E9"
              })]
            }), (0, jsx_runtime_1.jsxs)("div", {
              className: "text-3xl font-bold text-white mb-1",
              children: [state.efficiencyScore, "/100"]
            }), (0, jsx_runtime_1.jsx)("div", {
              className: "w-full bg-white/20 rounded-full h-2",
              children: (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
                initial: {
                  width: 0
                },
                animate: {
                  width: `${state.efficiencyScore}%`
                },
                transition: {
                  duration: 1,
                  delay: 0.4
                },
                className: "bg-gradient-to-r from-yellow-500 to-orange-500 h-2 rounded-full"
              })
            })]
          }), (0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, {
            whileHover: {
              scale: 1.02
            },
            className: "bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20",
            children: [(0, jsx_runtime_1.jsxs)("div", {
              className: "flex items-center gap-3 mb-2",
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, {
                className: "w-6 h-6 text-red-400"
              }), (0, jsx_runtime_1.jsx)("span", {
                className: "text-white/80 font-medium",
                children: "Risque"
              })]
            }), (0, jsx_runtime_1.jsx)("div", {
              className: "text-lg font-bold text-white mb-1",
              children: state.dehydrationRisk === 'optimal' ?
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[45][0]++, 'Optimal') :
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[45][1]++, state.dehydrationRisk === 'mild' ?
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[46][0]++, 'Léger') :
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[46][1]++, state.dehydrationRisk === 'moderate' ?
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[47][0]++, 'Modéré') :
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[47][1]++, 'Sévère')))
            }), (0, jsx_runtime_1.jsx)(badge_1.Badge, {
              className: `${state.dehydrationRisk === 'optimal' ?
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[48][0]++, 'bg-green-500') :
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[48][1]++, state.dehydrationRisk === 'mild' ?
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[49][0]++, 'bg-yellow-500') :
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[49][1]++, state.dehydrationRisk === 'moderate' ?
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[50][0]++, 'bg-orange-500') :
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[50][1]++, 'bg-red-500')))} text-white`,
              children: state.dehydrationRisk
            })]
          })]
        })]
      }), (0, jsx_runtime_1.jsxs)("div", {
        className: "grid grid-cols-1 lg:grid-cols-3 gap-6",
        children: [(0, jsx_runtime_1.jsxs)("div", {
          className: "space-y-6",
          children: [(0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
            initial: {
              opacity: 0,
              x: -20
            },
            animate: {
              opacity: 1,
              x: 0
            },
            transition: {
              delay: 0.2
            },
            children: (0, jsx_runtime_1.jsxs)(card_1.Card, {
              className: "bg-white/10 backdrop-blur-sm border-white/20",
              children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
                children: (0, jsx_runtime_1.jsxs)(card_1.CardTitle, {
                  className: "text-white flex items-center gap-2",
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, {
                    className: "w-5 h-5"
                  }), "Ajouter une prise"]
                })
              }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
                className: "space-y-3",
                children: [(0, jsx_runtime_1.jsxs)("div", {
                  className: "grid grid-cols-2 gap-3",
                  children: [(0, jsx_runtime_1.jsxs)(button_1.Button, {
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_t8noq4mkq().f[17]++;
                      cov_t8noq4mkq().s[139]++;
                      return addFluidIntake(250, 'water');
                    },
                    className: "bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white h-16 flex flex-col items-center justify-center",
                    disabled: state.isLoading,
                    children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Droplets, {
                      className: "w-5 h-5 mb-1"
                    }), "Eau 250ml"]
                  }), (0, jsx_runtime_1.jsxs)(button_1.Button, {
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_t8noq4mkq().f[18]++;
                      cov_t8noq4mkq().s[140]++;
                      return addFluidIntake(500, 'water');
                    },
                    className: "bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white h-16 flex flex-col items-center justify-center",
                    disabled: state.isLoading,
                    children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Droplets, {
                      className: "w-5 h-5 mb-1"
                    }), "Eau 500ml"]
                  }), (0, jsx_runtime_1.jsxs)(button_1.Button, {
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_t8noq4mkq().f[19]++;
                      cov_t8noq4mkq().s[141]++;
                      return addFluidIntake(200, 'coffee', 'hot');
                    },
                    className: "bg-gradient-to-r from-amber-600 to-orange-600 hover:from-amber-700 hover:to-orange-700 text-white h-16 flex flex-col items-center justify-center",
                    disabled: state.isLoading,
                    children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Coffee, {
                      className: "w-5 h-5 mb-1"
                    }), "Caf\u00E9 200ml"]
                  }), (0, jsx_runtime_1.jsxs)(button_1.Button, {
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_t8noq4mkq().f[20]++;
                      cov_t8noq4mkq().s[142]++;
                      return addFluidIntake(250, 'tea', 'hot');
                    },
                    className: "bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white h-16 flex flex-col items-center justify-center",
                    disabled: state.isLoading,
                    children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Milk, {
                      className: "w-5 h-5 mb-1"
                    }), "Th\u00E9 250ml"]
                  })]
                }), (0, jsx_runtime_1.jsxs)(dialog_1.Dialog, {
                  children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogTrigger, {
                    asChild: true,
                    children: (0, jsx_runtime_1.jsxs)(button_1.Button, {
                      variant: "outline",
                      className: "w-full border-white/20 text-white hover:bg-white/10",
                      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Settings, {
                        className: "w-4 h-4 mr-2"
                      }), "Prise personnalis\u00E9e"]
                    })
                  }), (0, jsx_runtime_1.jsxs)(dialog_1.DialogContent, {
                    className: "bg-slate-900 border-slate-700 text-white",
                    children: [(0, jsx_runtime_1.jsx)(dialog_1.DialogHeader, {
                      children: (0, jsx_runtime_1.jsx)(dialog_1.DialogTitle, {
                        children: "Ajouter une prise personnalis\u00E9e"
                      })
                    }), (0, jsx_runtime_1.jsx)(CustomIntakeForm, {
                      onSubmit: addFluidIntake
                    })]
                  })]
                })]
              })]
            })
          }),
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[51][0]++, state.todayIntakes.length > 0) &&
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[51][1]++, (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
            initial: {
              opacity: 0,
              x: -20
            },
            animate: {
              opacity: 1,
              x: 0
            },
            transition: {
              delay: 0.4
            },
            children: (0, jsx_runtime_1.jsxs)(card_1.Card, {
              className: "bg-white/10 backdrop-blur-sm border-white/20",
              children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
                children: (0, jsx_runtime_1.jsxs)(card_1.CardTitle, {
                  className: "text-white flex items-center gap-2",
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Clock, {
                    className: "w-5 h-5"
                  }), "Prises d'aujourd'hui"]
                })
              }), (0, jsx_runtime_1.jsx)(card_1.CardContent, {
                className: "space-y-3 max-h-64 overflow-y-auto",
                children: state.todayIntakes.slice().reverse().map((intake, index) => {
                  /* istanbul ignore next */
                  cov_t8noq4mkq().f[21]++;
                  const fluidIcons =
                  /* istanbul ignore next */
                  (cov_t8noq4mkq().s[143]++, {
                    water: lucide_react_1.Droplets,
                    coffee: lucide_react_1.Coffee,
                    tea: lucide_react_1.Milk,
                    juice: lucide_react_1.Milk,
                    alcohol: lucide_react_1.Wine,
                    sports: lucide_react_1.Zap,
                    soda: lucide_react_1.Milk
                  });
                  const Icon =
                  /* istanbul ignore next */
                  (cov_t8noq4mkq().s[144]++, fluidIcons[intake.fluidType]);
                  /* istanbul ignore next */
                  cov_t8noq4mkq().s[145]++;
                  return (0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, {
                    initial: {
                      opacity: 0,
                      x: -10
                    },
                    animate: {
                      opacity: 1,
                      x: 0
                    },
                    transition: {
                      delay: index * 0.1
                    },
                    className: "flex items-center justify-between p-3 bg-white/5 rounded-lg",
                    children: [(0, jsx_runtime_1.jsxs)("div", {
                      className: "flex items-center gap-3",
                      children: [(0, jsx_runtime_1.jsx)(Icon, {
                        className: "w-5 h-5 text-blue-400"
                      }), (0, jsx_runtime_1.jsxs)("div", {
                        children: [(0, jsx_runtime_1.jsxs)("div", {
                          className: "text-sm text-white font-medium",
                          children: [intake.amount, "ml"]
                        }), (0, jsx_runtime_1.jsx)("div", {
                          className: "text-xs text-white/70",
                          children: intake.timestamp.toLocaleTimeString('fr-FR', {
                            hour: '2-digit',
                            minute: '2-digit'
                          })
                        })]
                      })]
                    }), (0, jsx_runtime_1.jsx)(badge_1.Badge, {
                      className: "bg-blue-500/20 text-blue-300 border-blue-400/30",
                      children: intake.fluidType
                    })]
                  }, intake.id);
                })
              })]
            })
          }))]
        }), (0, jsx_runtime_1.jsxs)("div", {
          className: "lg:col-span-2 space-y-6",
          children: [
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[52][0]++, state.hydrationData) &&
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[52][1]++, (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
            initial: {
              opacity: 0,
              y: 20
            },
            animate: {
              opacity: 1,
              y: 0
            },
            transition: {
              delay: 0.3
            },
            children: (0, jsx_runtime_1.jsxs)(card_1.Card, {
              className: "bg-white/10 backdrop-blur-sm border-white/20",
              children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
                children: (0, jsx_runtime_1.jsxs)(card_1.CardTitle, {
                  className: "text-white flex items-center gap-2",
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.BarChart3, {
                    className: "w-5 h-5"
                  }), "Analyse d\u00E9taill\u00E9e - ", new Date(state.hydrationData.hydrationDate).toLocaleDateString('fr-FR')]
                })
              }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
                className: "space-y-6",
                children: [(0, jsx_runtime_1.jsxs)("div", {
                  className: "space-y-3",
                  children: [(0, jsx_runtime_1.jsx)("h4", {
                    className: "text-white font-medium",
                    children: "R\u00E9partition des fluides"
                  }), (0, jsx_runtime_1.jsx)("div", {
                    className: "space-y-2",
                    children: Object.entries({
                      'Eau': state.hydrationData.waterIntake,
                      'Café': state.hydrationData.otherFluids.coffee,
                      'Thé': state.hydrationData.otherFluids.tea,
                      'Jus': state.hydrationData.otherFluids.juice,
                      'Sports': state.hydrationData.otherFluids.sportsDrinks,
                      'Sodas': state.hydrationData.otherFluids.sodas,
                      'Alcool': state.hydrationData.otherFluids.alcohol
                    }).map(([fluid, amount]) => {
                      /* istanbul ignore next */
                      cov_t8noq4mkq().f[22]++;
                      cov_t8noq4mkq().s[146]++;
                      if (amount === 0) {
                        /* istanbul ignore next */
                        cov_t8noq4mkq().b[53][0]++;
                        cov_t8noq4mkq().s[147]++;
                        return null;
                      } else
                      /* istanbul ignore next */
                      {
                        cov_t8noq4mkq().b[53][1]++;
                      }
                      const percentage =
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().s[148]++, amount / state.hydrationData.totalIntake * 100);
                      const colors =
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().s[149]++, {
                        'Eau': 'bg-blue-500',
                        'Café': 'bg-amber-600',
                        'Thé': 'bg-green-500',
                        'Jus': 'bg-orange-500',
                        'Sports': 'bg-purple-500',
                        'Sodas': 'bg-red-500',
                        'Alcool': 'bg-red-600'
                      });
                      /* istanbul ignore next */
                      cov_t8noq4mkq().s[150]++;
                      return (0, jsx_runtime_1.jsxs)("div", {
                        className: "flex items-center gap-3",
                        children: [(0, jsx_runtime_1.jsx)("div", {
                          className: "w-20 text-sm text-white/70",
                          children: fluid
                        }), (0, jsx_runtime_1.jsx)("div", {
                          className: "flex-1 bg-white/10 rounded-full h-4",
                          children: (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
                            initial: {
                              width: 0
                            },
                            animate: {
                              width: `${percentage}%`
                            },
                            transition: {
                              duration: 1,
                              delay: 0.5
                            },
                            className: `${colors[fluid]} h-4 rounded-full relative overflow-hidden`,
                            children: (0, jsx_runtime_1.jsx)("div", {
                              className: "absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent animate-pulse"
                            })
                          })
                        }), (0, jsx_runtime_1.jsxs)("div", {
                          className: "w-24 text-sm text-white text-right",
                          children: [amount, "ml (", percentage.toFixed(1), "%)"]
                        })]
                      }, fluid);
                    }).filter(Boolean)
                  })]
                }), (0, jsx_runtime_1.jsxs)("div", {
                  className: "grid grid-cols-2 md:grid-cols-4 gap-4",
                  children: [(0, jsx_runtime_1.jsxs)("div", {
                    className: "text-center p-3 bg-white/5 rounded-lg",
                    children: [(0, jsx_runtime_1.jsx)("div", {
                      className: "text-sm text-white/70 mb-1",
                      children: "Couleur urine"
                    }), (0, jsx_runtime_1.jsxs)("div", {
                      className: "text-lg font-bold text-white",
                      children: [state.hydrationData.bodyMetrics.urineColor, "/8"]
                    }), (0, jsx_runtime_1.jsx)("div", {
                      className: `w-4 h-4 mx-auto mt-1 rounded-full ${state.hydrationData.bodyMetrics.urineColor <= 3 ?
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[54][0]++, 'bg-yellow-200') :
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[54][1]++, state.hydrationData.bodyMetrics.urineColor <= 5 ?
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[55][0]++, 'bg-yellow-400') :
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[55][1]++, state.hydrationData.bodyMetrics.urineColor <= 7 ?
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[56][0]++, 'bg-orange-500') :
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[56][1]++, 'bg-red-600')))}`
                    })]
                  }), (0, jsx_runtime_1.jsxs)("div", {
                    className: "text-center p-3 bg-white/5 rounded-lg",
                    children: [(0, jsx_runtime_1.jsx)("div", {
                      className: "text-sm text-white/70 mb-1",
                      children: "Fr\u00E9quence"
                    }), (0, jsx_runtime_1.jsxs)("div", {
                      className: "text-lg font-bold text-white",
                      children: [state.hydrationData.bodyMetrics.urineFrequency, "/jour"]
                    }), (0, jsx_runtime_1.jsx)(badge_1.Badge, {
                      className: `mt-1 ${
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[58][0]++, state.hydrationData.bodyMetrics.urineFrequency >= 6) &&
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[58][1]++, state.hydrationData.bodyMetrics.urineFrequency <= 8) ?
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[57][0]++, 'bg-green-500') :
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[57][1]++, 'bg-orange-500')} text-white`,
                      children:
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[60][0]++, state.hydrationData.bodyMetrics.urineFrequency >= 6) &&
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[60][1]++, state.hydrationData.bodyMetrics.urineFrequency <= 8) ?
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[59][0]++, 'Normal') :
                      /* istanbul ignore next */
                      (cov_t8noq4mkq().b[59][1]++, 'Attention')
                    })]
                  }), (0, jsx_runtime_1.jsxs)("div", {
                    className: "text-center p-3 bg-white/5 rounded-lg",
                    children: [(0, jsx_runtime_1.jsx)("div", {
                      className: "text-sm text-white/70 mb-1",
                      children: "\u00C9nergie"
                    }), (0, jsx_runtime_1.jsxs)("div", {
                      className: "text-lg font-bold text-white",
                      children: [state.hydrationData.mood.energyLevel, "/10"]
                    }), (0, jsx_runtime_1.jsx)("div", {
                      className: "w-full bg-white/20 rounded-full h-2 mt-1",
                      children: (0, jsx_runtime_1.jsx)("div", {
                        className: "bg-gradient-to-r from-red-500 via-yellow-500 to-green-500 h-2 rounded-full",
                        style: {
                          width: `${state.hydrationData.mood.energyLevel * 10}%`
                        }
                      })
                    })]
                  }), (0, jsx_runtime_1.jsxs)("div", {
                    className: "text-center p-3 bg-white/5 rounded-lg",
                    children: [(0, jsx_runtime_1.jsx)("div", {
                      className: "text-sm text-white/70 mb-1",
                      children: "Concentration"
                    }), (0, jsx_runtime_1.jsxs)("div", {
                      className: "text-lg font-bold text-white",
                      children: [state.hydrationData.mood.concentration, "/10"]
                    }), (0, jsx_runtime_1.jsx)("div", {
                      className: "w-full bg-white/20 rounded-full h-2 mt-1",
                      children: (0, jsx_runtime_1.jsx)("div", {
                        className: "bg-gradient-to-r from-red-500 via-yellow-500 to-green-500 h-2 rounded-full",
                        style: {
                          width: `${state.hydrationData.mood.concentration * 10}%`
                        }
                      })
                    })]
                  })]
                })]
              })]
            })
          })),
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[61][0]++, state.hydrationAnalysis) &&
          /* istanbul ignore next */
          (cov_t8noq4mkq().b[61][1]++, (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
            initial: {
              opacity: 0,
              y: 20
            },
            animate: {
              opacity: 1,
              y: 0
            },
            transition: {
              delay: 0.5
            },
            children: (0, jsx_runtime_1.jsxs)(card_1.Card, {
              className: "bg-white/10 backdrop-blur-sm border-white/20",
              children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, {
                children: (0, jsx_runtime_1.jsxs)(card_1.CardTitle, {
                  className: "text-white flex items-center gap-2",
                  children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Brain, {
                    className: "w-5 h-5"
                  }), "Analyse IA de l'hydratation"]
                })
              }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, {
                className: "space-y-4",
                children: [
                /* istanbul ignore next */
                (cov_t8noq4mkq().b[62][0]++, state.hydrationAnalysis.aiInsights.improvementSuggestions.length > 0) &&
                /* istanbul ignore next */
                (cov_t8noq4mkq().b[62][1]++, (0, jsx_runtime_1.jsxs)("div", {
                  className: "space-y-2",
                  children: [(0, jsx_runtime_1.jsxs)("h5", {
                    className: "text-blue-300 font-medium flex items-center gap-2",
                    children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Lightbulb, {
                      className: "w-4 h-4"
                    }), "Suggestions d'am\u00E9lioration"]
                  }), (0, jsx_runtime_1.jsx)("div", {
                    className: "space-y-1",
                    children: state.hydrationAnalysis.aiInsights.improvementSuggestions.map((suggestion, index) => {
                      /* istanbul ignore next */
                      cov_t8noq4mkq().f[23]++;
                      cov_t8noq4mkq().s[151]++;
                      return (0, jsx_runtime_1.jsxs)("div", {
                        className: "flex items-center gap-2 text-sm text-white/80",
                        children: [(0, jsx_runtime_1.jsx)(lucide_react_1.CheckCircle, {
                          className: "w-3 h-3 text-blue-400"
                        }), suggestion]
                      }, index);
                    })
                  })]
                })),
                /* istanbul ignore next */
                (cov_t8noq4mkq().b[63][0]++, state.hydrationAnalysis.aiInsights.fluidRecommendations.length > 0) &&
                /* istanbul ignore next */
                (cov_t8noq4mkq().b[63][1]++, (0, jsx_runtime_1.jsxs)("div", {
                  className: "space-y-2",
                  children: [(0, jsx_runtime_1.jsxs)("h5", {
                    className: "text-green-300 font-medium flex items-center gap-2",
                    children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Droplets, {
                      className: "w-4 h-4"
                    }), "Recommandations de fluides"]
                  }), (0, jsx_runtime_1.jsx)("div", {
                    className: "space-y-1",
                    children: state.hydrationAnalysis.aiInsights.fluidRecommendations.map((recommendation, index) => {
                      /* istanbul ignore next */
                      cov_t8noq4mkq().f[24]++;
                      cov_t8noq4mkq().s[152]++;
                      return (0, jsx_runtime_1.jsxs)("div", {
                        className: "flex items-center gap-2 text-sm text-white/80",
                        children: [(0, jsx_runtime_1.jsx)("div", {
                          className: "w-1 h-1 bg-green-400 rounded-full"
                        }), recommendation]
                      }, index);
                    })
                  })]
                })), (0, jsx_runtime_1.jsxs)("div", {
                  className: "grid grid-cols-1 md:grid-cols-2 gap-4 pt-4 border-t border-white/10",
                  children: [(0, jsx_runtime_1.jsxs)("div", {
                    className: "space-y-2",
                    children: [(0, jsx_runtime_1.jsx)("div", {
                      className: "text-sm text-white/70",
                      children: "Besoin prochaine heure"
                    }), (0, jsx_runtime_1.jsxs)("div", {
                      className: "flex items-center gap-2",
                      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Timer, {
                        className: "w-4 h-4 text-cyan-400"
                      }), (0, jsx_runtime_1.jsxs)("span", {
                        className: "text-white font-medium",
                        children: [state.hydrationAnalysis.predictiveMetrics.nextHourNeed, "ml"]
                      })]
                    })]
                  }), (0, jsx_runtime_1.jsxs)("div", {
                    className: "space-y-2",
                    children: [(0, jsx_runtime_1.jsx)("div", {
                      className: "text-sm text-white/70",
                      children: "Projection fin de journ\u00E9e"
                    }), (0, jsx_runtime_1.jsxs)("div", {
                      className: "flex items-center gap-2",
                      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Target, {
                        className: "w-4 h-4 text-purple-400"
                      }), (0, jsx_runtime_1.jsxs)("span", {
                        className: "text-white font-medium",
                        children: [state.hydrationAnalysis.predictiveMetrics.endOfDayProjection, "ml"]
                      })]
                    })]
                  })]
                })]
              })]
            })
          }))]
        })]
      }), (0, jsx_runtime_1.jsx)(framer_motion_1.AnimatePresence, {
        children:
        /* istanbul ignore next */
        (cov_t8noq4mkq().b[64][0]++, state.isLoading) &&
        /* istanbul ignore next */
        (cov_t8noq4mkq().b[64][1]++, (0, jsx_runtime_1.jsx)(framer_motion_1.motion.div, {
          initial: {
            opacity: 0
          },
          animate: {
            opacity: 1
          },
          exit: {
            opacity: 0
          },
          className: "fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50",
          children: (0, jsx_runtime_1.jsxs)("div", {
            className: "bg-white/10 backdrop-blur-sm rounded-xl p-8 text-center",
            children: [(0, jsx_runtime_1.jsx)("div", {
              className: "animate-spin w-8 h-8 border-2 border-white/30 border-t-white rounded-full mx-auto mb-4"
            }), (0, jsx_runtime_1.jsxs)("div", {
              className: "text-white font-medium",
              children: [
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[65][0]++, state.currentState === 'analyzing_hydration') &&
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[65][1]++, 'Analyse IA en cours...'),
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[66][0]++, state.currentState === 'logging_intake') &&
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[66][1]++, 'Enregistrement...'),
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[67][0]++, state.currentState === 'syncing_data') &&
              /* istanbul ignore next */
              (cov_t8noq4mkq().b[67][1]++, 'Synchronisation...')]
            })]
          })
        }))
      }), (0, jsx_runtime_1.jsx)(framer_motion_1.AnimatePresence, {
        children:
        /* istanbul ignore next */
        (cov_t8noq4mkq().b[68][0]++, state.error) &&
        /* istanbul ignore next */
        (cov_t8noq4mkq().b[68][1]++, (0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, {
          initial: {
            opacity: 0,
            y: 50
          },
          animate: {
            opacity: 1,
            y: 0
          },
          exit: {
            opacity: 0,
            y: 50
          },
          className: "fixed bottom-4 right-4 bg-red-500 text-white p-4 rounded-lg shadow-lg max-w-md",
          children: [(0, jsx_runtime_1.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, {
              className: "w-5 h-5"
            }), (0, jsx_runtime_1.jsx)("span", {
              className: "font-medium",
              children: "Erreur"
            })]
          }), (0, jsx_runtime_1.jsx)("div", {
            className: "text-sm mt-1",
            children: state.error
          }), (0, jsx_runtime_1.jsx)(button_1.Button, {
            size: "sm",
            variant: "ghost",
            className: "text-white hover:bg-white/10 mt-2",
            onClick: () => {
              /* istanbul ignore next */
              cov_t8noq4mkq().f[25]++;
              cov_t8noq4mkq().s[153]++;
              return dispatch({
                type: 'SET_ERROR',
                payload: null
              });
            },
            children: "Fermer"
          })]
        }))
      })]
    })
  });
};
/* istanbul ignore next */
cov_t8noq4mkq().s[154]++;
exports.HydrationOptimizer = HydrationOptimizer;
// Composant formulaire de prise personnalisée
/* istanbul ignore next */
cov_t8noq4mkq().s[155]++;
const CustomIntakeForm = ({
  onSubmit
}) => {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[26]++;
  const [formData, setFormData] =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[156]++, (0, react_1.useState)({
    amount: 250,
    fluidType: 'water',
    temperature: 'room'
  }));
  /* istanbul ignore next */
  cov_t8noq4mkq().s[157]++;
  const handleSubmit = e => {
    /* istanbul ignore next */
    cov_t8noq4mkq().f[27]++;
    cov_t8noq4mkq().s[158]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_t8noq4mkq().s[159]++;
    onSubmit(formData.amount, formData.fluidType, formData.temperature);
  };
  /* istanbul ignore next */
  cov_t8noq4mkq().s[160]++;
  return (0, jsx_runtime_1.jsxs)("form", {
    onSubmit: handleSubmit,
    className: "space-y-4",
    children: [(0, jsx_runtime_1.jsxs)("div", {
      children: [(0, jsx_runtime_1.jsxs)("label", {
        className: "block text-sm font-medium text-white/80 mb-2",
        children: ["Quantit\u00E9: ", formData.amount, "ml"]
      }), (0, jsx_runtime_1.jsx)("input", {
        type: "range",
        min: "50",
        max: "1000",
        step: "50",
        value: formData.amount,
        onChange: e => {
          /* istanbul ignore next */
          cov_t8noq4mkq().f[28]++;
          cov_t8noq4mkq().s[161]++;
          return setFormData({
            ...formData,
            amount: Number(e.target.value)
          });
        },
        className: "w-full"
      }), (0, jsx_runtime_1.jsxs)("div", {
        className: "flex justify-between text-xs text-white/60 mt-1",
        children: [(0, jsx_runtime_1.jsx)("span", {
          children: "50ml"
        }), (0, jsx_runtime_1.jsx)("span", {
          children: "1000ml"
        })]
      })]
    }), (0, jsx_runtime_1.jsxs)("div", {
      children: [(0, jsx_runtime_1.jsx)("label", {
        className: "block text-sm font-medium text-white/80 mb-2",
        children: "Type de fluide"
      }), (0, jsx_runtime_1.jsxs)("select", {
        value: formData.fluidType,
        onChange: e => {
          /* istanbul ignore next */
          cov_t8noq4mkq().f[29]++;
          cov_t8noq4mkq().s[162]++;
          return setFormData({
            ...formData,
            fluidType: e.target.value
          });
        },
        className: "w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white",
        children: [(0, jsx_runtime_1.jsx)("option", {
          value: "water",
          children: "Eau"
        }), (0, jsx_runtime_1.jsx)("option", {
          value: "coffee",
          children: "Caf\u00E9"
        }), (0, jsx_runtime_1.jsx)("option", {
          value: "tea",
          children: "Th\u00E9"
        }), (0, jsx_runtime_1.jsx)("option", {
          value: "juice",
          children: "Jus"
        }), (0, jsx_runtime_1.jsx)("option", {
          value: "sports",
          children: "Boisson sportive"
        }), (0, jsx_runtime_1.jsx)("option", {
          value: "soda",
          children: "Soda"
        }), (0, jsx_runtime_1.jsx)("option", {
          value: "alcohol",
          children: "Alcool"
        })]
      })]
    }), (0, jsx_runtime_1.jsxs)("div", {
      children: [(0, jsx_runtime_1.jsx)("label", {
        className: "block text-sm font-medium text-white/80 mb-2",
        children: "Temp\u00E9rature"
      }), (0, jsx_runtime_1.jsx)("div", {
        className: "grid grid-cols-4 gap-2",
        children: [{
          value: 'cold',
          label: 'Froid',
          icon: '🧊'
        }, {
          value: 'room',
          label: 'Ambient',
          icon: '🌡️'
        }, {
          value: 'warm',
          label: 'Tiède',
          icon: '☕'
        }, {
          value: 'hot',
          label: 'Chaud',
          icon: '🔥'
        }].map(({
          value,
          label,
          icon
        }) => {
          /* istanbul ignore next */
          cov_t8noq4mkq().f[30]++;
          cov_t8noq4mkq().s[163]++;
          return (0, jsx_runtime_1.jsxs)("button", {
            type: "button",
            onClick: () => {
              /* istanbul ignore next */
              cov_t8noq4mkq().f[31]++;
              cov_t8noq4mkq().s[164]++;
              return setFormData({
                ...formData,
                temperature: value
              });
            },
            className: `p-2 rounded-lg text-xs transition-colors ${formData.temperature === value ?
            /* istanbul ignore next */
            (cov_t8noq4mkq().b[69][0]++, 'bg-blue-500 text-white') :
            /* istanbul ignore next */
            (cov_t8noq4mkq().b[69][1]++, 'bg-white/10 text-white/70 hover:bg-white/20')}`,
            children: [(0, jsx_runtime_1.jsx)("div", {
              className: "text-lg",
              children: icon
            }), (0, jsx_runtime_1.jsx)("div", {
              children: label
            })]
          }, value);
        })
      })]
    }), (0, jsx_runtime_1.jsxs)(button_1.Button, {
      type: "submit",
      className: "w-full bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white",
      children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, {
        className: "w-4 h-4 mr-2"
      }), "Ajouter ", formData.amount, "ml"]
    })]
  });
};
// Fonctions utilitaires
function calculateOptimalIntake(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[32]++;
  cov_t8noq4mkq().s[165]++;
  return hydrationData.dailyGoal + calculateExerciseAdjustment(hydrationData) + calculateEnvironmentalAdjustment(hydrationData);
}
function calculateAbsorptionRate(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[33]++;
  // Calcul simplifié basé sur le type de fluides et la répartition
  const waterRatio =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[166]++, hydrationData.waterIntake / hydrationData.totalIntake);
  /* istanbul ignore next */
  cov_t8noq4mkq().s[167]++;
  return Math.round(80 + waterRatio * 20);
}
function calculateRetentionScore(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[34]++;
  let retentionScore =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[168]++, 85);
  // Facteurs qui réduisent la rétention
  const alcoholRatio =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[169]++, hydrationData.otherFluids.alcohol / hydrationData.totalIntake);
  const caffeineRatio =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[170]++, hydrationData.otherFluids.coffee / hydrationData.totalIntake);
  /* istanbul ignore next */
  cov_t8noq4mkq().s[171]++;
  retentionScore -= alcoholRatio * 40;
  /* istanbul ignore next */
  cov_t8noq4mkq().s[172]++;
  retentionScore -= caffeineRatio * 15;
  /* istanbul ignore next */
  cov_t8noq4mkq().s[173]++;
  return Math.max(0, Math.round(retentionScore));
}
function calculateCognitiveImpact(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[35]++;
  const hydrationLevel =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[174]++, hydrationData.totalIntake / hydrationData.dailyGoal);
  /* istanbul ignore next */
  cov_t8noq4mkq().s[175]++;
  return Math.min(100, Math.round(hydrationLevel * 100));
}
function calculatePhysicalImpact(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[36]++;
  const hydrationLevel =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[176]++, hydrationData.totalIntake / hydrationData.dailyGoal);
  const exerciseBonus =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[177]++, hydrationData.physicalActivity.exerciseDuration > 0 ?
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[70][0]++, 10) :
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[70][1]++, 0));
  /* istanbul ignore next */
  cov_t8noq4mkq().s[178]++;
  return Math.min(100, Math.round(hydrationLevel * 90 + exerciseBonus));
}
function calculateRecoveryImpact(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[37]++;
  const hydrationLevel =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[179]++, hydrationData.totalIntake / hydrationData.dailyGoal);
  const qualityBonus =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[180]++, hydrationData.waterIntake / hydrationData.totalIntake * 10);
  /* istanbul ignore next */
  cov_t8noq4mkq().s[181]++;
  return Math.min(100, Math.round(hydrationLevel * 85 + qualityBonus));
}
function calculateMetabolicImpact(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[38]++;
  const hydrationLevel =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[182]++, hydrationData.totalIntake / hydrationData.dailyGoal);
  /* istanbul ignore next */
  cov_t8noq4mkq().s[183]++;
  return Math.min(100, Math.round(hydrationLevel * 95));
}
function calculateNextHourNeed(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[39]++;
  const currentHour =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[184]++, new Date().getHours());
  const baseNeed =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[185]++, 150); // ml/heure base
  // Ajustement selon l'heure
  /* istanbul ignore next */
  cov_t8noq4mkq().s[186]++;
  if (
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[72][0]++, currentHour >= 6) &&
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[72][1]++, currentHour <= 10)) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[71][0]++;
    cov_t8noq4mkq().s[187]++;
    return baseNeed + 100;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[71][1]++;
  } // Matin
  cov_t8noq4mkq().s[188]++;
  if (
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[74][0]++, currentHour >= 14) &&
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[74][1]++, currentHour <= 18)) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[73][0]++;
    cov_t8noq4mkq().s[189]++;
    return baseNeed + 50;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[73][1]++;
  } // Après-midi
  cov_t8noq4mkq().s[190]++;
  if (currentHour >= 20) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[75][0]++;
    cov_t8noq4mkq().s[191]++;
    return baseNeed - 50;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[75][1]++;
  } // Soir
  cov_t8noq4mkq().s[192]++;
  return baseNeed;
}
function calculateEndOfDayProjection(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[40]++;
  const currentHour =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[193]++, new Date().getHours());
  const hoursLeft =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[194]++, 24 - currentHour);
  const averageHourlyNeed =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[195]++, 120); // ml
  /* istanbul ignore next */
  cov_t8noq4mkq().s[196]++;
  return hydrationData.totalIntake + hoursLeft * averageHourlyNeed;
}
function calculateOptimalNextIntake() {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[41]++;
  const now =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[197]++, new Date());
  const nextIntake =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[198]++, new Date(now.getTime() + 60 * 60 * 1000)); // +1 heure
  /* istanbul ignore next */
  cov_t8noq4mkq().s[199]++;
  return nextIntake.toTimeString().slice(0, 5);
}
function calculateTemperatureImpact(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[42]++;
  const temp =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[200]++, hydrationData.physicalActivity.environmentalTemp);
  /* istanbul ignore next */
  cov_t8noq4mkq().s[201]++;
  if (temp <= 20) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[76][0]++;
    cov_t8noq4mkq().s[202]++;
    return 30;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[76][1]++;
  }
  cov_t8noq4mkq().s[203]++;
  if (temp <= 25) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[77][0]++;
    cov_t8noq4mkq().s[204]++;
    return 50;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[77][1]++;
  }
  cov_t8noq4mkq().s[205]++;
  if (temp <= 30) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[78][0]++;
    cov_t8noq4mkq().s[206]++;
    return 70;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[78][1]++;
  }
  cov_t8noq4mkq().s[207]++;
  return 90;
}
function calculateHumidityImpact(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[43]++;
  const humidity =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[208]++, hydrationData.physicalActivity.humidity);
  /* istanbul ignore next */
  cov_t8noq4mkq().s[209]++;
  if (humidity <= 30) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[79][0]++;
    cov_t8noq4mkq().s[210]++;
    return 80;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[79][1]++;
  } // Air sec = plus de perte
  cov_t8noq4mkq().s[211]++;
  if (humidity <= 50) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[80][0]++;
    cov_t8noq4mkq().s[212]++;
    return 50;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[80][1]++;
  }
  cov_t8noq4mkq().s[213]++;
  if (humidity <= 70) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[81][0]++;
    cov_t8noq4mkq().s[214]++;
    return 30;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[81][1]++;
  }
  cov_t8noq4mkq().s[215]++;
  return 20; // Humidité élevée = moins de perte
}
function getSeasonalFactors() {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[44]++;
  const month =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[216]++, new Date().getMonth());
  /* istanbul ignore next */
  cov_t8noq4mkq().s[217]++;
  if (
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[83][0]++, month >= 5) &&
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[83][1]++, month <= 8)) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[82][0]++;
    cov_t8noq4mkq().s[218]++;
    return ['Été: besoins accrus', 'Transpiration élevée'];
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[82][1]++;
  }
  cov_t8noq4mkq().s[219]++;
  if (
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[85][0]++, month >= 11) ||
  /* istanbul ignore next */
  (cov_t8noq4mkq().b[85][1]++, month <= 2)) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[84][0]++;
    cov_t8noq4mkq().s[220]++;
    return ['Hiver: air sec', 'Chauffage déshydratant'];
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[84][1]++;
  }
  cov_t8noq4mkq().s[221]++;
  return ['Saison tempérée'];
}
function calculateExerciseAdjustment(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[45]++;
  const duration =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[222]++, hydrationData.physicalActivity.exerciseDuration);
  const intensityMultiplier =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[223]++, {
    low: 1.2,
    moderate: 1.5,
    high: 2.0,
    extreme: 2.5
  });
  /* istanbul ignore next */
  cov_t8noq4mkq().s[224]++;
  return Math.round(duration * 8 * intensityMultiplier[hydrationData.physicalActivity.exerciseIntensity]);
}
function calculateEnvironmentalAdjustment(hydrationData) {
  /* istanbul ignore next */
  cov_t8noq4mkq().f[46]++;
  const temp =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[225]++, hydrationData.physicalActivity.environmentalTemp);
  const humidity =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[226]++, hydrationData.physicalActivity.humidity);
  let adjustment =
  /* istanbul ignore next */
  (cov_t8noq4mkq().s[227]++, 0);
  /* istanbul ignore next */
  cov_t8noq4mkq().s[228]++;
  if (temp > 25) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[86][0]++;
    cov_t8noq4mkq().s[229]++;
    adjustment += (temp - 25) * 20;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[86][1]++;
  }
  cov_t8noq4mkq().s[230]++;
  if (humidity < 40) {
    /* istanbul ignore next */
    cov_t8noq4mkq().b[87][0]++;
    cov_t8noq4mkq().s[231]++;
    adjustment += (40 - humidity) * 5;
  } else
  /* istanbul ignore next */
  {
    cov_t8noq4mkq().b[87][1]++;
  }
  cov_t8noq4mkq().s[232]++;
  return Math.round(adjustment);
}
/* istanbul ignore next */
cov_t8noq4mkq().s[233]++;
exports.default = exports.HydrationOptimizer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,