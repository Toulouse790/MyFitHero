f405e376a73dae44b98117c765effbe0
"use strict";

/* istanbul ignore next */
function cov_ag8fauxjb() {
  var path = "/workspaces/MyFitHero/src/lib/services/muscleRecoveryService.ts";
  var hash = "fa01fb52a71ef752fbc5ad2721cd7d4c6bcd10fc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/lib/services/muscleRecoveryService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 39
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "3": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "4": {
        start: {
          line: 9,
          column: 36
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "5": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "7": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "8": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 74
        }
      },
      "9": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "11": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 110
        }
      },
      "12": {
        start: {
          line: 27,
          column: 36
        },
        end: {
          line: 31,
          column: 25
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 33,
          column: 28
        }
      },
      "14": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 28
        }
      },
      "15": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 24
        }
      },
      "16": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 78
        }
      },
      "17": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 24
        }
      },
      "18": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "19": {
        start: {
          line: 45,
          column: 26
        },
        end: {
          line: 45,
          column: 64
        }
      },
      "20": {
        start: {
          line: 47,
          column: 36
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "21": {
        start: {
          line: 53,
          column: 35
        },
        end: {
          line: 53,
          column: 104
        }
      },
      "22": {
        start: {
          line: 55,
          column: 31
        },
        end: {
          line: 55,
          column: 34
        }
      },
      "23": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 57,
          column: 36
        }
      },
      "24": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 36
        }
      },
      "25": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 59,
          column: 37
        }
      },
      "26": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 37
        }
      },
      "27": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 61,
          column: 37
        }
      },
      "28": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 37
        }
      },
      "29": {
        start: {
          line: 63,
          column: 33
        },
        end: {
          line: 63,
          column: 36
        }
      },
      "30": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "31": {
        start: {
          line: 65,
          column: 36
        },
        end: {
          line: 66,
          column: 32
        }
      },
      "32": {
        start: {
          line: 65,
          column: 71
        },
        end: {
          line: 65,
          column: 106
        }
      },
      "33": {
        start: {
          line: 67,
          column: 37
        },
        end: {
          line: 69,
          column: 18
        }
      },
      "34": {
        start: {
          line: 67,
          column: 72
        },
        end: {
          line: 67,
          column: 111
        }
      },
      "35": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 124
        }
      },
      "36": {
        start: {
          line: 73,
          column: 37
        },
        end: {
          line: 73,
          column: 40
        }
      },
      "37": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "38": {
        start: {
          line: 75,
          column: 31
        },
        end: {
          line: 76,
          column: 36
        }
      },
      "39": {
        start: {
          line: 75,
          column: 66
        },
        end: {
          line: 75,
          column: 96
        }
      },
      "40": {
        start: {
          line: 77,
          column: 34
        },
        end: {
          line: 77,
          column: 69
        }
      },
      "41": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 94
        }
      },
      "42": {
        start: {
          line: 81,
          column: 30
        },
        end: {
          line: 81,
          column: 32
        }
      },
      "43": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "44": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 94,
          column: 15
        }
      },
      "45": {
        start: {
          line: 84,
          column: 36
        },
        end: {
          line: 84,
          column: 56
        }
      },
      "46": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 86,
          column: 52
        }
      },
      "47": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 86,
          column: 52
        }
      },
      "48": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 88,
          column: 47
        }
      },
      "49": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 88,
          column: 47
        }
      },
      "50": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 90,
          column: 67
        }
      },
      "51": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 67
        }
      },
      "52": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 92,
          column: 49
        }
      },
      "53": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 49
        }
      },
      "54": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 109,
          column: 10
        }
      },
      "55": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "56": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "57": {
        start: {
          line: 115,
          column: 32
        },
        end: {
          line: 115,
          column: 73
        }
      },
      "58": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "59": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 66
        }
      },
      "60": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 42
        }
      },
      "61": {
        start: {
          line: 121,
          column: 38
        },
        end: {
          line: 121,
          column: 47
        }
      },
      "62": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 34
        }
      },
      "63": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 140,
          column: 15
        }
      },
      "64": {
        start: {
          line: 125,
          column: 36
        },
        end: {
          line: 125,
          column: 42
        }
      },
      "65": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 139,
          column: 19
        }
      },
      "66": {
        start: {
          line: 142,
          column: 35
        },
        end: {
          line: 146,
          column: 14
        }
      },
      "67": {
        start: {
          line: 143,
          column: 36
        },
        end: {
          line: 143,
          column: 94
        }
      },
      "68": {
        start: {
          line: 144,
          column: 33
        },
        end: {
          line: 144,
          column: 96
        }
      },
      "69": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 37
        }
      },
      "70": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "71": {
        start: {
          line: 149,
          column: 39
        },
        end: {
          line: 149,
          column: 73
        }
      },
      "72": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 188,
          column: 17
        }
      },
      "73": {
        start: {
          line: 151,
          column: 40
        },
        end: {
          line: 151,
          column: 82
        }
      },
      "74": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 153,
          column: 33
        }
      },
      "75": {
        start: {
          line: 153,
          column: 24
        },
        end: {
          line: 153,
          column: 33
        }
      },
      "76": {
        start: {
          line: 154,
          column: 40
        },
        end: {
          line: 154,
          column: 98
        }
      },
      "77": {
        start: {
          line: 155,
          column: 41
        },
        end: {
          line: 155,
          column: 99
        }
      },
      "78": {
        start: {
          line: 157,
          column: 46
        },
        end: {
          line: 157,
          column: 91
        }
      },
      "79": {
        start: {
          line: 158,
          column: 48
        },
        end: {
          line: 158,
          column: 92
        }
      },
      "80": {
        start: {
          line: 159,
          column: 45
        },
        end: {
          line: 159,
          column: 93
        }
      },
      "81": {
        start: {
          line: 160,
          column: 47
        },
        end: {
          line: 167,
          column: 66
        }
      },
      "82": {
        start: {
          line: 169,
          column: 47
        },
        end: {
          line: 169,
          column: 103
        }
      },
      "83": {
        start: {
          line: 171,
          column: 20
        },
        end: {
          line: 187,
          column: 21
        }
      },
      "84": {
        start: {
          line: 172,
          column: 54
        },
        end: {
          line: 172,
          column: 123
        }
      },
      "85": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 186,
          column: 27
        }
      },
      "86": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 58
        }
      },
      "87": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 71
        }
      },
      "88": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 22
        }
      },
      "89": {
        start: {
          line: 199,
          column: 24
        },
        end: {
          line: 199,
          column: 26
        }
      },
      "90": {
        start: {
          line: 201,
          column: 26
        },
        end: {
          line: 201,
          column: 49
        }
      },
      "91": {
        start: {
          line: 202,
          column: 28
        },
        end: {
          line: 202,
          column: 62
        }
      },
      "92": {
        start: {
          line: 203,
          column: 25
        },
        end: {
          line: 203,
          column: 55
        }
      },
      "93": {
        start: {
          line: 205,
          column: 32
        },
        end: {
          line: 205,
          column: 77
        }
      },
      "94": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "95": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 221,
          column: 15
        }
      },
      "96": {
        start: {
          line: 209,
          column: 37
        },
        end: {
          line: 209,
          column: 79
        }
      },
      "97": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 220,
          column: 19
        }
      },
      "98": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 219,
          column: 23
        }
      },
      "99": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "100": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 234,
          column: 19
        }
      },
      "101": {
        start: {
          line: 231,
          column: 65
        },
        end: {
          line: 231,
          column: 85
        }
      },
      "102": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 23
        }
      },
      "103": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 240,
          column: 64
        }
      },
      "104": {
        start: {
          line: 241,
          column: 24
        },
        end: {
          line: 241,
          column: 26
        }
      },
      "105": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "106": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 54
        }
      },
      "107": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "108": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 51
        }
      },
      "109": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "110": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 49
        }
      },
      "111": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "112": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 66
        }
      },
      "113": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "114": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 45
        }
      },
      "115": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "116": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 35
        }
      },
      "117": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "118": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 36
        }
      },
      "119": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "120": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 35
        }
      },
      "121": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "122": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 33
        }
      },
      "123": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 55
        }
      },
      "124": {
        start: {
          line: 273,
          column: 27
        },
        end: {
          line: 273,
          column: 59
        }
      },
      "125": {
        start: {
          line: 274,
          column: 20
        },
        end: {
          line: 274,
          column: 37
        }
      },
      "126": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 276,
          column: 29
        }
      },
      "127": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 29
        }
      },
      "128": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 278,
          column: 26
        }
      },
      "129": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 26
        }
      },
      "130": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 280,
          column: 30
        }
      },
      "131": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 30
        }
      },
      "132": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 23
        }
      },
      "133": {
        start: {
          line: 284,
          column: 27
        },
        end: {
          line: 284,
          column: 59
        }
      },
      "134": {
        start: {
          line: 285,
          column: 25
        },
        end: {
          line: 285,
          column: 55
        }
      },
      "135": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 287,
          column: 29
        }
      },
      "136": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 29
        }
      },
      "137": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 289,
          column: 26
        }
      },
      "138": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 26
        }
      },
      "139": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 291,
          column: 30
        }
      },
      "140": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 30
        }
      },
      "141": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 23
        }
      },
      "142": {
        start: {
          line: 295,
          column: 26
        },
        end: {
          line: 295,
          column: 49
        }
      },
      "143": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 74
        }
      },
      "144": {
        start: {
          line: 296,
          column: 47
        },
        end: {
          line: 296,
          column: 69
        }
      },
      "145": {
        start: {
          line: 299,
          column: 33
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "146": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 94
        }
      },
      "147": {
        start: {
          line: 309,
          column: 48
        },
        end: {
          line: 309,
          column: 92
        }
      },
      "148": {
        start: {
          line: 312,
          column: 34
        },
        end: {
          line: 312,
          column: 76
        }
      },
      "149": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 95
        }
      },
      "150": {
        start: {
          line: 313,
          column: 49
        },
        end: {
          line: 313,
          column: 93
        }
      },
      "151": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 317,
          column: 37
        }
      },
      "152": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 37
        }
      },
      "153": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 319,
          column: 38
        }
      },
      "154": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 38
        }
      },
      "155": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 321,
          column: 41
        }
      },
      "156": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 41
        }
      },
      "157": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 323,
          column: 36
        }
      },
      "158": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 36
        }
      },
      "159": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 28
        }
      },
      "160": {
        start: {
          line: 327,
          column: 37
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "161": {
        start: {
          line: 333,
          column: 28
        },
        end: {
          line: 333,
          column: 59
        }
      },
      "162": {
        start: {
          line: 334,
          column: 31
        },
        end: {
          line: 334,
          column: 63
        }
      },
      "163": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 83
        }
      },
      "164": {
        start: {
          line: 338,
          column: 34
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "165": {
        start: {
          line: 344,
          column: 26
        },
        end: {
          line: 344,
          column: 54
        }
      },
      "166": {
        start: {
          line: 345,
          column: 28
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "167": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "168": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 83
        }
      },
      "169": {
        start: {
          line: 357,
          column: 35
        },
        end: {
          line: 357,
          column: 65
        }
      },
      "170": {
        start: {
          line: 358,
          column: 35
        },
        end: {
          line: 358,
          column: 59
        }
      },
      "171": {
        start: {
          line: 359,
          column: 38
        },
        end: {
          line: 359,
          column: 96
        }
      },
      "172": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 87
        }
      },
      "173": {
        start: {
          line: 364,
          column: 24
        },
        end: {
          line: 364,
          column: 42
        }
      },
      "174": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "175": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 29
        }
      },
      "176": {
        start: {
          line: 370,
          column: 29
        },
        end: {
          line: 370,
          column: 80
        }
      },
      "177": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 373,
          column: 9
        }
      },
      "178": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 29
        }
      },
      "179": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 50
        }
      },
      "180": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 54
        }
      },
      "181": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 40
        }
      },
      "182": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 65
        }
      },
      "183": {
        start: {
          line: 382,
          column: 32
        },
        end: {
          line: 382,
          column: 34
        }
      },
      "184": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 466,
          column: 9
        }
      },
      "185": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 432,
          column: 13
        }
      },
      "186": {
        start: {
          line: 386,
          column: 16
        },
        end: {
          line: 431,
          column: 17
        }
      },
      "187": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 399,
          column: 23
        }
      },
      "188": {
        start: {
          line: 401,
          column: 21
        },
        end: {
          line: 431,
          column: 17
        }
      },
      "189": {
        start: {
          line: 402,
          column: 20
        },
        end: {
          line: 415,
          column: 23
        }
      },
      "190": {
        start: {
          line: 418,
          column: 20
        },
        end: {
          line: 430,
          column: 23
        }
      },
      "191": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 448,
          column: 13
        }
      },
      "192": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 447,
          column: 19
        }
      },
      "193": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 465,
          column: 13
        }
      },
      "194": {
        start: {
          line: 451,
          column: 16
        },
        end: {
          line: 464,
          column: 19
        }
      },
      "195": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 474,
          column: 11
        }
      },
      "196": {
        start: {
          line: 469,
          column: 34
        },
        end: {
          line: 469,
          column: 77
        }
      },
      "197": {
        start: {
          line: 470,
          column: 33
        },
        end: {
          line: 470,
          column: 86
        }
      },
      "198": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 472,
          column: 36
        }
      },
      "199": {
        start: {
          line: 472,
          column: 16
        },
        end: {
          line: 472,
          column: 36
        }
      },
      "200": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 61
        }
      },
      "201": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "202": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 488,
          column: 14
        }
      },
      "203": {
        start: {
          line: 491,
          column: 27
        },
        end: {
          line: 491,
          column: 106
        }
      },
      "204": {
        start: {
          line: 491,
          column: 70
        },
        end: {
          line: 491,
          column: 102
        }
      },
      "205": {
        start: {
          line: 492,
          column: 29
        },
        end: {
          line: 492,
          column: 79
        }
      },
      "206": {
        start: {
          line: 494,
          column: 33
        },
        end: {
          line: 494,
          column: 118
        }
      },
      "207": {
        start: {
          line: 494,
          column: 72
        },
        end: {
          line: 494,
          column: 117
        }
      },
      "208": {
        start: {
          line: 495,
          column: 30
        },
        end: {
          line: 495,
          column: 62
        }
      },
      "209": {
        start: {
          line: 496,
          column: 31
        },
        end: {
          line: 496,
          column: 89
        }
      },
      "210": {
        start: {
          line: 498,
          column: 33
        },
        end: {
          line: 500,
          column: 56
        }
      },
      "211": {
        start: {
          line: 499,
          column: 30
        },
        end: {
          line: 499,
          column: 61
        }
      },
      "212": {
        start: {
          line: 500,
          column: 36
        },
        end: {
          line: 500,
          column: 55
        }
      },
      "213": {
        start: {
          line: 502,
          column: 26
        },
        end: {
          line: 504,
          column: 56
        }
      },
      "214": {
        start: {
          line: 503,
          column: 30
        },
        end: {
          line: 503,
          column: 61
        }
      },
      "215": {
        start: {
          line: 504,
          column: 36
        },
        end: {
          line: 504,
          column: 55
        }
      },
      "216": {
        start: {
          line: 506,
          column: 33
        },
        end: {
          line: 506,
          column: 39
        }
      },
      "217": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 518,
          column: 9
        }
      },
      "218": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 508,
          column: 45
        }
      },
      "219": {
        start: {
          line: 510,
          column: 13
        },
        end: {
          line: 518,
          column: 9
        }
      },
      "220": {
        start: {
          line: 511,
          column: 12
        },
        end: {
          line: 511,
          column: 53
        }
      },
      "221": {
        start: {
          line: 513,
          column: 13
        },
        end: {
          line: 518,
          column: 9
        }
      },
      "222": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 514,
          column: 53
        }
      },
      "223": {
        start: {
          line: 516,
          column: 13
        },
        end: {
          line: 518,
          column: 9
        }
      },
      "224": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 517,
          column: 48
        }
      },
      "225": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 528,
          column: 10
        }
      },
      "226": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 549,
          column: 9
        }
      },
      "227": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 534,
          column: 98
        }
      },
      "228": {
        start: {
          line: 536,
          column: 33
        },
        end: {
          line: 539,
          column: 15
        }
      },
      "229": {
        start: {
          line: 536,
          column: 68
        },
        end: {
          line: 539,
          column: 13
        }
      },
      "230": {
        start: {
          line: 540,
          column: 30
        },
        end: {
          line: 540,
          column: 105
        }
      },
      "231": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 542,
          column: 28
        }
      },
      "232": {
        start: {
          line: 542,
          column: 16
        },
        end: {
          line: 542,
          column: 28
        }
      },
      "233": {
        start: {
          line: 543,
          column: 12
        },
        end: {
          line: 543,
          column: 24
        }
      },
      "234": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 547,
          column: 71
        }
      },
      "235": {
        start: {
          line: 548,
          column: 12
        },
        end: {
          line: 548,
          column: 25
        }
      },
      "236": {
        start: {
          line: 552,
          column: 8
        },
        end: {
          line: 566,
          column: 9
        }
      },
      "237": {
        start: {
          line: 553,
          column: 36
        },
        end: {
          line: 557,
          column: 60
        }
      },
      "238": {
        start: {
          line: 558,
          column: 12
        },
        end: {
          line: 559,
          column: 28
        }
      },
      "239": {
        start: {
          line: 559,
          column: 16
        },
        end: {
          line: 559,
          column: 28
        }
      },
      "240": {
        start: {
          line: 560,
          column: 12
        },
        end: {
          line: 560,
          column: 30
        }
      },
      "241": {
        start: {
          line: 564,
          column: 12
        },
        end: {
          line: 564,
          column: 73
        }
      },
      "242": {
        start: {
          line: 565,
          column: 12
        },
        end: {
          line: 565,
          column: 22
        }
      },
      "243": {
        start: {
          line: 569,
          column: 0
        },
        end: {
          line: 569,
          column: 54
        }
      },
      "244": {
        start: {
          line: 571,
          column: 0
        },
        end: {
          line: 591,
          column: 3
        }
      },
      "245": {
        start: {
          line: 592,
          column: 0
        },
        end: {
          line: 602,
          column: 3
        }
      },
      "246": {
        start: {
          line: 603,
          column: 0
        },
        end: {
          line: 617,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 48
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 94
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 89
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 65,
            column: 53
          },
          end: {
            line: 65,
            column: 54
          }
        },
        loc: {
          start: {
            line: 65,
            column: 71
          },
          end: {
            line: 65,
            column: 106
          }
        },
        line: 65
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 67,
            column: 54
          },
          end: {
            line: 67,
            column: 55
          }
        },
        loc: {
          start: {
            line: 67,
            column: 72
          },
          end: {
            line: 67,
            column: 111
          }
        },
        line: 67
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 52
          },
          end: {
            line: 75,
            column: 53
          }
        },
        loc: {
          start: {
            line: 75,
            column: 66
          },
          end: {
            line: 75,
            column: 96
          }
        },
        line: 75
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 83,
            column: 41
          },
          end: {
            line: 83,
            column: 42
          }
        },
        loc: {
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 94,
            column: 13
          }
        },
        line: 83
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 76
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 112
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 124,
            column: 58
          },
          end: {
            line: 124,
            column: 59
          }
        },
        loc: {
          start: {
            line: 124,
            column: 68
          },
          end: {
            line: 140,
            column: 13
          }
        },
        line: 124
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 142,
            column: 51
          },
          end: {
            line: 142,
            column: 52
          }
        },
        loc: {
          start: {
            line: 142,
            column: 62
          },
          end: {
            line: 146,
            column: 13
          }
        },
        line: 142
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 41
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 198
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 208,
            column: 30
          },
          end: {
            line: 208,
            column: 31
          }
        },
        loc: {
          start: {
            line: 208,
            column: 42
          },
          end: {
            line: 221,
            column: 13
          }
        },
        line: 208
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 210,
            column: 37
          },
          end: {
            line: 210,
            column: 38
          }
        },
        loc: {
          start: {
            line: 210,
            column: 47
          },
          end: {
            line: 220,
            column: 17
          }
        },
        line: 210
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 225,
            column: 36
          },
          end: {
            line: 225,
            column: 37
          }
        },
        loc: {
          start: {
            line: 225,
            column: 46
          },
          end: {
            line: 235,
            column: 13
          }
        },
        line: 225
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 231,
            column: 50
          },
          end: {
            line: 231,
            column: 51
          }
        },
        loc: {
          start: {
            line: 231,
            column: 65
          },
          end: {
            line: 231,
            column: 85
          }
        },
        line: 231
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 49
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 239
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 49
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 272
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 46
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 283
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 46
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 294
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 296,
            column: 32
          },
          end: {
            line: 296,
            column: 33
          }
        },
        loc: {
          start: {
            line: 296,
            column: 47
          },
          end: {
            line: 296,
            column: 69
          }
        },
        line: 296
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        loc: {
          start: {
            line: 298,
            column: 44
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 298
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 309,
            column: 37
          },
          end: {
            line: 309,
            column: 38
          }
        },
        loc: {
          start: {
            line: 309,
            column: 48
          },
          end: {
            line: 309,
            column: 92
          }
        },
        line: 309
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 311,
            column: 5
          }
        },
        loc: {
          start: {
            line: 311,
            column: 43
          },
          end: {
            line: 314,
            column: 5
          }
        },
        line: 311
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 313,
            column: 38
          },
          end: {
            line: 313,
            column: 39
          }
        },
        loc: {
          start: {
            line: 313,
            column: 49
          },
          end: {
            line: 313,
            column: 93
          }
        },
        line: 313
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 55
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 315
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 64
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 326
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        loc: {
          start: {
            line: 337,
            column: 79
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 337
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 77
          },
          end: {
            line: 379,
            column: 5
          }
        },
        line: 363
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 381,
            column: 5
          }
        },
        loc: {
          start: {
            line: 381,
            column: 82
          },
          end: {
            line: 475,
            column: 5
          }
        },
        line: 381
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 468,
            column: 36
          },
          end: {
            line: 468,
            column: 37
          }
        },
        loc: {
          start: {
            line: 468,
            column: 46
          },
          end: {
            line: 474,
            column: 9
          }
        },
        line: 468
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 477,
            column: 4
          },
          end: {
            line: 477,
            column: 5
          }
        },
        loc: {
          start: {
            line: 477,
            column: 62
          },
          end: {
            line: 529,
            column: 5
          }
        },
        line: 477
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 491,
            column: 53
          },
          end: {
            line: 491,
            column: 54
          }
        },
        loc: {
          start: {
            line: 491,
            column: 70
          },
          end: {
            line: 491,
            column: 102
          }
        },
        line: 491
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 494,
            column: 62
          },
          end: {
            line: 494,
            column: 63
          }
        },
        loc: {
          start: {
            line: 494,
            column: 72
          },
          end: {
            line: 494,
            column: 117
          }
        },
        line: 494
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 499,
            column: 20
          },
          end: {
            line: 499,
            column: 21
          }
        },
        loc: {
          start: {
            line: 499,
            column: 30
          },
          end: {
            line: 499,
            column: 61
          }
        },
        line: 499
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 500,
            column: 17
          },
          end: {
            line: 500,
            column: 18
          }
        },
        loc: {
          start: {
            line: 500,
            column: 36
          },
          end: {
            line: 500,
            column: 55
          }
        },
        line: 500
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 503,
            column: 20
          },
          end: {
            line: 503,
            column: 21
          }
        },
        loc: {
          start: {
            line: 503,
            column: 30
          },
          end: {
            line: 503,
            column: 61
          }
        },
        line: 503
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 504,
            column: 17
          },
          end: {
            line: 504,
            column: 18
          }
        },
        loc: {
          start: {
            line: 504,
            column: 36
          },
          end: {
            line: 504,
            column: 55
          }
        },
        line: 504
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 531,
            column: 4
          },
          end: {
            line: 531,
            column: 5
          }
        },
        loc: {
          start: {
            line: 531,
            column: 62
          },
          end: {
            line: 550,
            column: 5
          }
        },
        line: 531
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 536,
            column: 50
          },
          end: {
            line: 536,
            column: 51
          }
        },
        loc: {
          start: {
            line: 536,
            column: 68
          },
          end: {
            line: 539,
            column: 13
          }
        },
        line: 536
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 551,
            column: 4
          },
          end: {
            line: 551,
            column: 5
          }
        },
        loc: {
          start: {
            line: 551,
            column: 47
          },
          end: {
            line: 567,
            column: 5
          }
        },
        line: 551
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 15,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 15,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 16
          },
          end: {
            line: 14,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 16
          },
          end: {
            line: 14,
            column: 21
          }
        }, {
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 14,
            column: 50
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 16,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 16,
            column: 23
          }
        }, {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 16,
            column: 36
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 33,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 33,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 35
          }
        }, {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 44,
            column: 41
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 55
          },
          end: {
            line: 53,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 55
          },
          end: {
            line: 53,
            column: 85
          }
        }, {
          start: {
            line: 53,
            column: 89
          },
          end: {
            line: 53,
            column: 103
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 59,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 59,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 61,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "9": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "10": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 21
          }
        }, {
          start: {
            line: 64,
            column: 25
          },
          end: {
            line: 64,
            column: 45
          }
        }],
        line: 64
      },
      "11": {
        loc: {
          start: {
            line: 65,
            column: 78
          },
          end: {
            line: 65,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 78
          },
          end: {
            line: 65,
            column: 100
          }
        }, {
          start: {
            line: 65,
            column: 104
          },
          end: {
            line: 65,
            column: 105
          }
        }],
        line: 65
      },
      "12": {
        loc: {
          start: {
            line: 67,
            column: 79
          },
          end: {
            line: 67,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 79
          },
          end: {
            line: 67,
            column: 103
          }
        }, {
          start: {
            line: 67,
            column: 107
          },
          end: {
            line: 67,
            column: 110
          }
        }],
        line: 67
      },
      "13": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "14": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 25
          }
        }, {
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 74,
            column: 53
          }
        }],
        line: 74
      },
      "15": {
        loc: {
          start: {
            line: 75,
            column: 73
          },
          end: {
            line: 75,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 73
          },
          end: {
            line: 75,
            column: 90
          }
        }, {
          start: {
            line: 75,
            column: 94
          },
          end: {
            line: 75,
            column: 95
          }
        }],
        line: 75
      },
      "16": {
        loc: {
          start: {
            line: 77,
            column: 35
          },
          end: {
            line: 77,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 35
          },
          end: {
            line: 77,
            column: 56
          }
        }, {
          start: {
            line: 77,
            column: 60
          },
          end: {
            line: 77,
            column: 62
          }
        }],
        line: 77
      },
      "17": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "18": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 32
          }
        }, {
          start: {
            line: 82,
            column: 36
          },
          end: {
            line: 82,
            column: 67
          }
        }],
        line: 82
      },
      "19": {
        loc: {
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 86,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 86,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "20": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 88,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 88,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "21": {
        loc: {
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 90,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 90,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "22": {
        loc: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 92,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 92,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "23": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "24": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "25": {
        loc: {
          start: {
            line: 143,
            column: 45
          },
          end: {
            line: 143,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 45
          },
          end: {
            line: 143,
            column: 65
          }
        }, {
          start: {
            line: 143,
            column: 69
          },
          end: {
            line: 143,
            column: 87
          }
        }, {
          start: {
            line: 143,
            column: 91
          },
          end: {
            line: 143,
            column: 93
          }
        }],
        line: 143
      },
      "26": {
        loc: {
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 153,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 153,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "27": {
        loc: {
          start: {
            line: 154,
            column: 49
          },
          end: {
            line: 154,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 49
          },
          end: {
            line: 154,
            column: 69
          }
        }, {
          start: {
            line: 154,
            column: 73
          },
          end: {
            line: 154,
            column: 91
          }
        }, {
          start: {
            line: 154,
            column: 95
          },
          end: {
            line: 154,
            column: 97
          }
        }],
        line: 154
      },
      "28": {
        loc: {
          start: {
            line: 171,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "29": {
        loc: {
          start: {
            line: 171,
            column: 57
          },
          end: {
            line: 171,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 57
          },
          end: {
            line: 171,
            column: 86
          }
        }, {
          start: {
            line: 171,
            column: 90
          },
          end: {
            line: 171,
            column: 91
          }
        }],
        line: 171
      },
      "30": {
        loc: {
          start: {
            line: 201,
            column: 26
          },
          end: {
            line: 201,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 26
          },
          end: {
            line: 201,
            column: 43
          }
        }, {
          start: {
            line: 201,
            column: 47
          },
          end: {
            line: 201,
            column: 49
          }
        }],
        line: 201
      },
      "31": {
        loc: {
          start: {
            line: 202,
            column: 28
          },
          end: {
            line: 202,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 28
          },
          end: {
            line: 202,
            column: 48
          }
        }, {
          start: {
            line: 202,
            column: 52
          },
          end: {
            line: 202,
            column: 62
          }
        }],
        line: 202
      },
      "32": {
        loc: {
          start: {
            line: 203,
            column: 25
          },
          end: {
            line: 203,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 25
          },
          end: {
            line: 203,
            column: 49
          }
        }, {
          start: {
            line: 203,
            column: 53
          },
          end: {
            line: 203,
            column: 55
          }
        }],
        line: 203
      },
      "33": {
        loc: {
          start: {
            line: 205,
            column: 32
          },
          end: {
            line: 205,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 32
          },
          end: {
            line: 205,
            column: 71
          }
        }, {
          start: {
            line: 205,
            column: 75
          },
          end: {
            line: 205,
            column: 77
          }
        }],
        line: 205
      },
      "34": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: 223,
            column: 13
          },
          end: {
            line: 236,
            column: 9
          }
        }],
        line: 206
      },
      "35": {
        loc: {
          start: {
            line: 214,
            column: 32
          },
          end: {
            line: 214,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 32
          },
          end: {
            line: 214,
            column: 45
          }
        }, {
          start: {
            line: 214,
            column: 49
          },
          end: {
            line: 214,
            column: 50
          }
        }],
        line: 214
      },
      "36": {
        loc: {
          start: {
            line: 216,
            column: 41
          },
          end: {
            line: 216,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 41
          },
          end: {
            line: 216,
            column: 54
          }
        }, {
          start: {
            line: 216,
            column: 58
          },
          end: {
            line: 216,
            column: 67
          }
        }],
        line: 216
      },
      "37": {
        loc: {
          start: {
            line: 217,
            column: 68
          },
          end: {
            line: 217,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 68
          },
          end: {
            line: 217,
            column: 81
          }
        }, {
          start: {
            line: 217,
            column: 85
          },
          end: {
            line: 217,
            column: 87
          }
        }],
        line: 217
      },
      "38": {
        loc: {
          start: {
            line: 218,
            column: 64
          },
          end: {
            line: 218,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 64
          },
          end: {
            line: 218,
            column: 77
          }
        }, {
          start: {
            line: 218,
            column: 81
          },
          end: {
            line: 218,
            column: 83
          }
        }],
        line: 218
      },
      "39": {
        loc: {
          start: {
            line: 231,
            column: 65
          },
          end: {
            line: 231,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 65
          },
          end: {
            line: 231,
            column: 72
          }
        }, {
          start: {
            line: 231,
            column: 76
          },
          end: {
            line: 231,
            column: 85
          }
        }],
        line: 231
      },
      "40": {
        loc: {
          start: {
            line: 240,
            column: 30
          },
          end: {
            line: 240,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 30
          },
          end: {
            line: 240,
            column: 43
          }
        }, {
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 240,
            column: 49
          }
        }],
        line: 240
      },
      "41": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "42": {
        loc: {
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 243,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 243,
            column: 42
          }
        }, {
          start: {
            line: 243,
            column: 46
          },
          end: {
            line: 243,
            column: 75
          }
        }],
        line: 243
      },
      "43": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "44": {
        loc: {
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 246,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 246,
            column: 41
          }
        }, {
          start: {
            line: 246,
            column: 45
          },
          end: {
            line: 246,
            column: 73
          }
        }],
        line: 246
      },
      "45": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "46": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 249,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 249,
            column: 42
          }
        }, {
          start: {
            line: 249,
            column: 46
          },
          end: {
            line: 249,
            column: 80
          }
        }],
        line: 249
      },
      "47": {
        loc: {
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "48": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "49": {
        loc: {
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 255,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 255,
            column: 45
          }
        }, {
          start: {
            line: 255,
            column: 49
          },
          end: {
            line: 255,
            column: 79
          }
        }],
        line: 255
      },
      "50": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "51": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "52": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 43
          }
        }, {
          start: {
            line: 261,
            column: 47
          },
          end: {
            line: 261,
            column: 75
          }
        }],
        line: 261
      },
      "53": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "54": {
        loc: {
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "55": {
        loc: {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 267,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 267,
            column: 41
          }
        }, {
          start: {
            line: 267,
            column: 45
          },
          end: {
            line: 267,
            column: 72
          }
        }],
        line: 267
      },
      "56": {
        loc: {
          start: {
            line: 270,
            column: 15
          },
          end: {
            line: 270,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 270,
            column: 36
          },
          end: {
            line: 270,
            column: 43
          }
        }, {
          start: {
            line: 270,
            column: 46
          },
          end: {
            line: 270,
            column: 54
          }
        }],
        line: 270
      },
      "57": {
        loc: {
          start: {
            line: 273,
            column: 27
          },
          end: {
            line: 273,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 27
          },
          end: {
            line: 273,
            column: 45
          }
        }, {
          start: {
            line: 273,
            column: 49
          },
          end: {
            line: 273,
            column: 59
          }
        }],
        line: 273
      },
      "58": {
        loc: {
          start: {
            line: 274,
            column: 20
          },
          end: {
            line: 274,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 20
          },
          end: {
            line: 274,
            column: 32
          }
        }, {
          start: {
            line: 274,
            column: 36
          },
          end: {
            line: 274,
            column: 37
          }
        }],
        line: 274
      },
      "59": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 276,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 276,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "60": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 20
          }
        }, {
          start: {
            line: 275,
            column: 24
          },
          end: {
            line: 275,
            column: 49
          }
        }],
        line: 275
      },
      "61": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 278,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 278,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "62": {
        loc: {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 277,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 277,
            column: 20
          }
        }, {
          start: {
            line: 277,
            column: 24
          },
          end: {
            line: 277,
            column: 53
          }
        }],
        line: 277
      },
      "63": {
        loc: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 280,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 280,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "64": {
        loc: {
          start: {
            line: 284,
            column: 27
          },
          end: {
            line: 284,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 27
          },
          end: {
            line: 284,
            column: 45
          }
        }, {
          start: {
            line: 284,
            column: 49
          },
          end: {
            line: 284,
            column: 59
          }
        }],
        line: 284
      },
      "65": {
        loc: {
          start: {
            line: 285,
            column: 25
          },
          end: {
            line: 285,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 285,
            column: 25
          },
          end: {
            line: 285,
            column: 49
          }
        }, {
          start: {
            line: 285,
            column: 53
          },
          end: {
            line: 285,
            column: 55
          }
        }],
        line: 285
      },
      "66": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 287,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 287,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "67": {
        loc: {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 37
          }
        }, {
          start: {
            line: 286,
            column: 41
          },
          end: {
            line: 286,
            column: 54
          }
        }],
        line: 286
      },
      "68": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 289,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 289,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "69": {
        loc: {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 41
          }
        }, {
          start: {
            line: 288,
            column: 45
          },
          end: {
            line: 288,
            column: 58
          }
        }],
        line: 288
      },
      "70": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 291,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 291,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "71": {
        loc: {
          start: {
            line: 295,
            column: 26
          },
          end: {
            line: 295,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 26
          },
          end: {
            line: 295,
            column: 43
          }
        }, {
          start: {
            line: 295,
            column: 47
          },
          end: {
            line: 295,
            column: 49
          }
        }],
        line: 295
      },
      "72": {
        loc: {
          start: {
            line: 296,
            column: 56
          },
          end: {
            line: 296,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 296,
            column: 56
          },
          end: {
            line: 296,
            column: 63
          }
        }, {
          start: {
            line: 296,
            column: 67
          },
          end: {
            line: 296,
            column: 68
          }
        }],
        line: 296
      },
      "73": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 317,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 317,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "74": {
        loc: {
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 319,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 319,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "75": {
        loc: {
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 321,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 321,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "76": {
        loc: {
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 323,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 323,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "77": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        }, {
          start: {
            line: 355,
            column: 13
          },
          end: {
            line: 361,
            column: 9
          }
        }],
        line: 351
      },
      "78": {
        loc: {
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "79": {
        loc: {
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 373,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 373,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "80": {
        loc: {
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 432,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 432,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "81": {
        loc: {
          start: {
            line: 386,
            column: 16
          },
          end: {
            line: 431,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 16
          },
          end: {
            line: 431,
            column: 17
          }
        }, {
          start: {
            line: 401,
            column: 21
          },
          end: {
            line: 431,
            column: 17
          }
        }],
        line: 386
      },
      "82": {
        loc: {
          start: {
            line: 401,
            column: 21
          },
          end: {
            line: 431,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 21
          },
          end: {
            line: 431,
            column: 17
          }
        }, {
          start: {
            line: 417,
            column: 21
          },
          end: {
            line: 431,
            column: 17
          }
        }],
        line: 401
      },
      "83": {
        loc: {
          start: {
            line: 434,
            column: 12
          },
          end: {
            line: 448,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 12
          },
          end: {
            line: 448,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "84": {
        loc: {
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 465,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 465,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "85": {
        loc: {
          start: {
            line: 450,
            column: 16
          },
          end: {
            line: 450,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 450,
            column: 16
          },
          end: {
            line: 450,
            column: 47
          }
        }, {
          start: {
            line: 450,
            column: 51
          },
          end: {
            line: 450,
            column: 75
          }
        }],
        line: 450
      },
      "86": {
        loc: {
          start: {
            line: 471,
            column: 12
          },
          end: {
            line: 472,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 471,
            column: 12
          },
          end: {
            line: 472,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 471
      },
      "87": {
        loc: {
          start: {
            line: 478,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 478,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 478
      },
      "88": {
        loc: {
          start: {
            line: 507,
            column: 8
          },
          end: {
            line: 518,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 507,
            column: 8
          },
          end: {
            line: 518,
            column: 9
          }
        }, {
          start: {
            line: 510,
            column: 13
          },
          end: {
            line: 518,
            column: 9
          }
        }],
        line: 507
      },
      "89": {
        loc: {
          start: {
            line: 510,
            column: 13
          },
          end: {
            line: 518,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 510,
            column: 13
          },
          end: {
            line: 518,
            column: 9
          }
        }, {
          start: {
            line: 513,
            column: 13
          },
          end: {
            line: 518,
            column: 9
          }
        }],
        line: 510
      },
      "90": {
        loc: {
          start: {
            line: 513,
            column: 13
          },
          end: {
            line: 518,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 13
          },
          end: {
            line: 518,
            column: 9
          }
        }, {
          start: {
            line: 516,
            column: 13
          },
          end: {
            line: 518,
            column: 9
          }
        }],
        line: 513
      },
      "91": {
        loc: {
          start: {
            line: 516,
            column: 13
          },
          end: {
            line: 518,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 516,
            column: 13
          },
          end: {
            line: 518,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 516
      },
      "92": {
        loc: {
          start: {
            line: 541,
            column: 12
          },
          end: {
            line: 542,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 12
          },
          end: {
            line: 542,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 541
      },
      "93": {
        loc: {
          start: {
            line: 558,
            column: 12
          },
          end: {
            line: 559,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 558,
            column: 12
          },
          end: {
            line: 559,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 558
      },
      "94": {
        loc: {
          start: {
            line: 560,
            column: 19
          },
          end: {
            line: 560,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 560,
            column: 19
          },
          end: {
            line: 560,
            column: 23
          }
        }, {
          start: {
            line: 560,
            column: 27
          },
          end: {
            line: 560,
            column: 29
          }
        }],
        line: 560
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/lib/services/muscleRecoveryService.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/lib/services/muscleRecoveryService.ts"],
      sourcesContent: ["import { supabase } from '@/lib/supabase';\nimport type {\n  MuscleRecoveryData,\n  UserRecoveryProfile,\n  WorkoutImpact,\n  RecoveryRecommendation,\n  GlobalRecoveryMetrics,\n  MuscleGroup,\n  RecoveryStatus,\n  WorkoutIntensity,\n} from '@/features/workout/types/muscleRecovery';\nimport type {\n  UserProfile,\n  Workout,\n  SleepSession,\n  DailyStats,\n} from '@/lib/types/database';\n\nexport class MuscleRecoveryService {\n  // === CONSTANTES DE R\xC9CUP\xC9RATION ===\n  private static readonly BASE_RECOVERY_HOURS: Record<MuscleGroup, number> = {\n    chest: 48,\n    back: 48,\n    shoulders: 36,\n    biceps: 36,\n    triceps: 36,\n    forearms: 24,\n    quadriceps: 48,\n    hamstrings: 48,\n    glutes: 48,\n    calves: 24,\n    core: 24,\n    traps: 36,\n    lats: 48,\n    delts: 36,\n  };\n\n  private static readonly INTENSITY_MULTIPLIERS: Record<WorkoutIntensity, number> = {\n    light: 0.7,\n    moderate: 1.0,\n    high: 1.4,\n    extreme: 1.8,\n  };\n\n  private static readonly MUSCLE_GROUP_MAPPINGS: Record<string, MuscleGroup[]> = {\n    chest: ['chest', 'triceps', 'delts'],\n    back: ['back', 'lats', 'biceps', 'traps'],\n    shoulders: ['delts', 'traps'],\n    arms: ['biceps', 'triceps', 'forearms'],\n    legs: ['quadriceps', 'hamstrings', 'glutes', 'calves'],\n    core: ['core'],\n    cardio: [], // pas d'impact musculaire sp\xE9cifique\n    flexibility: [],\n  };\n\n  // === PROFIL DE R\xC9CUP\xC9RATION UTILISATEUR ===\n  static async getUserRecoveryProfile(userId: string): Promise<UserRecoveryProfile | null> {\n    try {\n      const { data, error }: any = await supabase\n        .from('user_recovery_profiles')\n        .select('*')\n        .eq('user_id', userId)\n        .single();\n\n      if (error && error.code !== 'PGRST116') throw error;\n      return data || undefined;\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Error fetching user recovery profile:', error);\n      return null;\n    }\n  }\n\n  static async createOrUpdateRecoveryProfile(\n    userId: string,\n    userProfile: UserProfile,\n    sleepData?: SleepSession[],\n    nutritionData?: DailyStats[]\n  ): Promise<UserRecoveryProfile | null> {\n    try {\n      const profile = await this.calculateRecoveryProfile(\n        userId,\n        userProfile,\n        sleepData,\n        nutritionData\n      );\n\n      const { data, error }: any = await supabase\n        .from('user_recovery_profiles')\n        .upsert(profile, { onConflict: 'user_id' })\n        .select()\n        .single();\n\n      if (error) throw error;\n      return data;\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Error creating/updating recovery profile:', error);\n      return null;\n    }\n  }\n\n  private static async calculateRecoveryProfile(\n    userId: string,\n    userProfile: UserProfile,\n    sleepData?: SleepSession[],\n    nutritionData?: DailyStats[]\n  ): Promise<UserRecoveryProfile> {\n    // Facteur d'\xE2ge (r\xE9cup\xE9ration ralentit avec l'\xE2ge)\n    const age = userProfile.age || 25;\n    const ageFactor = Math.max(0.6, 1.2 - (age - 20) * 0.01);\n\n    // Facteur de niveau de fitness\n    const fitnessLevelFactors = {\n      beginner: 0.8,\n      intermediate: 1.0,\n      advanced: 1.2,\n      expert: 1.3,\n    };\n    const fitnessLevelFactor =\n      fitnessLevelFactors[userProfile.fitness_experience || 'intermediate'];\n\n    // Facteur de r\xE9cup\xE9ration de base (g\xE9n\xE9tique + lifestyle)\n    let baseRecoveryRate = 1.0;\n    if (userProfile.lifestyle === 'physical_job') baseRecoveryRate *= 0.9;\n    if (userProfile.lifestyle === 'office_worker') baseRecoveryRate *= 0.95;\n    if (userProfile.lifestyle === 'student') baseRecoveryRate *= 1.05;\n\n    // Impact du sommeil (moyenne des 7 derniers jours)\n    let sleepQualityImpact = 1.0;\n    if (sleepData && sleepData.length > 0) {\n      const avgSleepQuality =\n        sleepData.reduce((sum, session) => sum + (session.quality_rating || 7), 0) /\n        sleepData.length;\n      const avgSleepDuration =\n        sleepData.reduce((sum, session) => sum + (session.duration_minutes || 480), 0) /\n        sleepData.length /\n        60;\n\n      sleepQualityImpact = Math.max(\n        0.7,\n        Math.min(1.3, (avgSleepQuality / 10) * Math.min(avgSleepDuration / 8, 1.2))\n      );\n    }\n\n    // Impact de la nutrition (moyenne des 7 derniers jours)\n    let nutritionQualityImpact = 1.0;\n    if (nutritionData && nutritionData.length > 0) {\n      const avgProtein =\n        nutritionData.reduce((sum, day) => sum + (day.total_protein || 0), 0) /\n        nutritionData.length;\n      const targetProtein = (userProfile.weight_kg || 70) * 1.6; // 1.6g/kg pour r\xE9cup\xE9ration\n\n      nutritionQualityImpact = Math.max(0.8, Math.min(1.2, avgProtein / targetProtein));\n    }\n\n    // Historique des blessures\n    const injuryHistory: MuscleGroup[] = [];\n    if (userProfile.injuries && userProfile.injuries.length > 0) {\n      userProfile.injuries.forEach(injury => {\n        const injuryLower = injury.toLowerCase();\n        if (injuryLower.includes('shoulder')) injuryHistory.push('shoulders');\n        if (injuryLower.includes('back')) injuryHistory.push('back');\n        if (injuryLower.includes('knee')) injuryHistory.push('quadriceps', 'hamstrings');\n        if (injuryLower.includes('ankle')) injuryHistory.push('calves');\n        // Ajouter d'autres mappings selon les besoins\n      });\n    }\n\n    return {\n      user_id: userId,\n      recovery_rate_multiplier: baseRecoveryRate,\n      sleep_quality_impact: sleepQualityImpact,\n      nutrition_quality_impact: nutritionQualityImpact,\n      stress_level_impact: 1.0, // \xC0 calculer avec des donn\xE9es de stress\n      hydration_impact: 1.0, // \xC0 calculer avec les donn\xE9es d'hydratation\n      age_factor: ageFactor,\n      fitness_level_factor: fitnessLevelFactor,\n      injury_history: injuryHistory,\n      supplements: [], // \xC0 remplir selon les pr\xE9f\xE9rences utilisateur\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n    };\n  }\n\n  // === CALCUL DE LA R\xC9CUP\xC9RATION MUSCULAIRE ===\n  static async calculateMuscleRecovery(\n    userId: string,\n    workouts: Workout[],\n    recoveryProfile?: UserRecoveryProfile\n  ): Promise<MuscleRecoveryData[]> {\n    try {\n      if (!recoveryProfile) {\n        const profile = await this.getUserRecoveryProfile(userId);\n        if (!profile) {\n          throw new Error('Recovery profile not found');\n        }\n        recoveryProfile = profile;\n      }\n\n      const muscleRecoveryMap = new Map<MuscleGroup, MuscleRecoveryData>();\n      const now = new Date();\n\n      // Initialiser tous les groupes musculaires\n      Object.keys(this.BASE_RECOVERY_HOURS).forEach(muscle => {\n        const muscleGroup = muscle as MuscleGroup;\n        muscleRecoveryMap.set(muscleGroup, {\n          muscle_group: muscleGroup,\n          last_workout_date: '',\n          workout_intensity: 'light',\n          workout_volume: 0,\n          workout_duration_minutes: 0,\n          recovery_status: 'fully_recovered',\n          recovery_percentage: 100,\n          estimated_full_recovery: now.toISOString(),\n          fatigue_level: 1,\n          soreness_level: 1,\n          readiness_score: 100,\n          last_updated: now.toISOString(),\n        });\n      });\n\n      // Analyser les workouts r\xE9cents (7 derniers jours)\n      const recentWorkouts = workouts.filter(workout => {\n        const workoutDate = new Date(workout.completed_at || workout.created_at || '');\n        const daysDiff = (now.getTime() - workoutDate.getTime()) / (1000 * 60 * 60 * 24);\n        return daysDiff <= 7;\n      });\n\n      // Calculer l'impact de chaque workout\n      for (const workout of recentWorkouts) {\n        const workoutImpacts = this.analyzeWorkoutImpact(workout);\n\n        for (const impact of workoutImpacts) {\n          const currentData = muscleRecoveryMap.get(impact.muscle_group);\n          if (!currentData) continue;\n\n          const workoutDate = new Date(workout.completed_at || workout.created_at || '');\n          const hoursElapsed = (now.getTime() - workoutDate.getTime()) / (1000 * 60 * 60);\n\n          // Calculer le temps de r\xE9cup\xE9ration n\xE9cessaire\n          const baseRecoveryHours = this.BASE_RECOVERY_HOURS[impact.muscle_group];\n          const intensityMultiplier = this.INTENSITY_MULTIPLIERS[impact.intensity];\n          const volumeMultiplier = Math.max(0.8, Math.min(1.5, impact.volume / 12)); // 12 s\xE9ries = r\xE9f\xE9rence\n\n          const totalRecoveryHours =\n            baseRecoveryHours *\n            intensityMultiplier *\n            volumeMultiplier *\n            (1 / recoveryProfile.recovery_rate_multiplier) *\n            (1 / recoveryProfile.sleep_quality_impact) *\n            (1 / recoveryProfile.nutrition_quality_impact) *\n            (1 / recoveryProfile.age_factor) *\n            (1 / recoveryProfile.fitness_level_factor);\n\n          // Calculer le pourcentage de r\xE9cup\xE9ration\n          const recoveryPercentage = Math.min(100, (hoursElapsed / totalRecoveryHours) * 100);\n\n          // Mettre \xE0 jour si ce workout est plus r\xE9cent ou plus impactant\n          if (workoutDate.getTime() > new Date(currentData.last_workout_date || 0).getTime()) {\n            const estimatedFullRecovery = new Date(\n              workoutDate.getTime() + totalRecoveryHours * 60 * 60 * 1000\n            );\n\n            muscleRecoveryMap.set(impact.muscle_group, {\n              ...currentData,\n              last_workout_date: workoutDate.toISOString(),\n              workout_intensity: impact.intensity,\n              workout_volume: impact.volume,\n              workout_duration_minutes: impact.duration_minutes,\n              recovery_percentage: Math.max(0, recoveryPercentage),\n              estimated_full_recovery: estimatedFullRecovery.toISOString(),\n              recovery_status: this.calculateRecoveryStatus(recoveryPercentage),\n              fatigue_level: this.calculateFatigueLevel(recoveryPercentage, impact.intensity),\n              soreness_level: this.calculateSorenessLevel(\n                hoursElapsed,\n                totalRecoveryHours,\n                impact.intensity\n              ),\n              readiness_score: this.calculateReadinessScore(\n                recoveryPercentage,\n                impact.muscle_group,\n                recoveryProfile\n              ),\n              last_updated: now.toISOString(),\n            });\n          }\n        }\n      }\n\n      return Array.from(muscleRecoveryMap.values());\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Error calculating muscle recovery:', error);\n      return [];\n    }\n  }\n\n  private static analyzeWorkoutImpact(workout: Workout): WorkoutImpact[] {\n    const impacts: WorkoutImpact[] = [];\n\n    // Analyser les exercices du workout\n    const exercises = (workout.exercises as any[]) || [];\n    const workoutType = workout.workout_type || 'strength';\n    const duration = workout.duration_minutes || 60;\n\n    // Mapper le type de workout aux groupes musculaires\n    const affectedMuscles = this.MUSCLE_GROUP_MAPPINGS[workoutType] || [];\n\n    if (affectedMuscles.length === 0) {\n      // Si pas de mapping sp\xE9cifique, analyser les exercices individuellement\n      exercises.forEach(exercise => {\n        const muscleGroups = this.getMuscleGroupsFromExercise(exercise);\n        muscleGroups.forEach(muscle => {\n          impacts.push({\n            muscle_group: muscle,\n            intensity: this.determineIntensity(workout, exercise),\n            volume: exercise.sets || 3,\n            duration_minutes: duration / exercises.length,\n            exercise_types: [exercise.name || 'unknown'],\n            compound_movements: this.isCompoundMovement(exercise.name || ''),\n            eccentric_focus: this.hasEccentricFocus(exercise.name || ''),\n          });\n        });\n      });\n    } else {\n      // Utiliser le mapping du type de workout\n      affectedMuscles.forEach(muscle => {\n        impacts.push({\n          muscle_group: muscle,\n          intensity: this.determineWorkoutIntensity(workout),\n          volume: this.estimateVolumeFromWorkout(workout),\n          duration_minutes: duration / affectedMuscles.length,\n          exercise_types: exercises.map((ex, index) => ex.name || 'unknown'),\n          compound_movements: true, // Assum\xE9 pour les workouts typ\xE9s\n          eccentric_focus: false,\n        });\n      });\n    }\n\n    return impacts;\n  }\n\n  private static getMuscleGroupsFromExercise(exercise: any): MuscleGroup[] {\n    const exerciseName = (exercise.name || '').toLowerCase();\n    const muscles: MuscleGroup[] = [];\n\n    // Mapping des exercices aux groupes musculaires\n    if (exerciseName.includes('bench') || exerciseName.includes('push')) {\n      muscles.push('chest', 'triceps', 'delts');\n    }\n    if (exerciseName.includes('pull') || exerciseName.includes('row')) {\n      muscles.push('back', 'lats', 'biceps');\n    }\n    if (exerciseName.includes('squat') || exerciseName.includes('leg press')) {\n      muscles.push('quadriceps', 'glutes');\n    }\n    if (exerciseName.includes('deadlift')) {\n      muscles.push('hamstrings', 'glutes', 'back', 'traps');\n    }\n    if (exerciseName.includes('shoulder') || exerciseName.includes('press')) {\n      muscles.push('delts', 'triceps');\n    }\n    if (exerciseName.includes('curl')) {\n      muscles.push('biceps');\n    }\n    if (exerciseName.includes('tricep') || exerciseName.includes('dip')) {\n      muscles.push('triceps');\n    }\n    if (exerciseName.includes('calf')) {\n      muscles.push('calves');\n    }\n    if (exerciseName.includes('core') || exerciseName.includes('ab')) {\n      muscles.push('core');\n    }\n\n    return muscles.length > 0 ? muscles : ['core']; // Fallback\n  }\n\n  private static determineIntensity(workout: Workout, exercise: any): WorkoutIntensity {\n    const difficulty = workout.difficulty || 'moderate';\n    const rpe = exercise.rpe || 7; // Rate of Perceived Exertion\n\n    if (rpe >= 9 || difficulty === 'advanced') return 'extreme';\n    if (rpe >= 7 || difficulty === 'intermediate') return 'high';\n    if (rpe >= 5) return 'moderate';\n    return 'light';\n  }\n\n  private static determineWorkoutIntensity(workout: Workout): WorkoutIntensity {\n    const difficulty = workout.difficulty || 'moderate';\n    const duration = workout.duration_minutes || 60;\n\n    if (difficulty === 'advanced' || duration > 90) return 'extreme';\n    if (difficulty === 'intermediate' || duration > 60) return 'high';\n    if (duration > 30) return 'moderate';\n    return 'light';\n  }\n\n  private static estimateVolumeFromWorkout(workout: Workout): number {\n    const exercises = (workout.exercises as any[]) || [];\n    return exercises.reduce((total, ex) => total + (ex.sets || 3), 0);\n  }\n\n  private static isCompoundMovement(exerciseName: string): boolean {\n    const compoundKeywords = [\n      'squat',\n      'deadlift',\n      'bench',\n      'press',\n      'pull',\n      'row',\n      'clean',\n      'snatch',\n    ];\n    return compoundKeywords.some(keyword => exerciseName.toLowerCase().includes(keyword));\n  }\n\n  private static hasEccentricFocus(exerciseName: string): boolean {\n    const eccentricKeywords = ['negative', 'eccentric', 'slow', 'tempo'];\n    return eccentricKeywords.some(keyword => exerciseName.toLowerCase().includes(keyword));\n  }\n\n  private static calculateRecoveryStatus(recoveryPercentage: number): RecoveryStatus {\n    if (recoveryPercentage >= 95) return 'fully_recovered';\n    if (recoveryPercentage >= 80) return 'mostly_recovered';\n    if (recoveryPercentage >= 60) return 'partially_recovered';\n    if (recoveryPercentage >= 30) return 'needs_recovery';\n    return 'overworked';\n  }\n\n  private static calculateFatigueLevel(\n    recoveryPercentage: number,\n    intensity: WorkoutIntensity\n  ): number {\n    const baseIntensityFatigue = {\n      light: 2,\n      moderate: 4,\n      high: 6,\n      extreme: 8,\n    };\n\n    const baseFatigue = baseIntensityFatigue[intensity];\n    const recoveryFactor = (100 - recoveryPercentage) / 100;\n\n    return Math.max(1, Math.min(10, Math.round(baseFatigue * recoveryFactor)));\n  }\n\n  private static calculateSorenessLevel(\n    hoursElapsed: number,\n    totalRecoveryHours: number,\n    intensity: WorkoutIntensity\n  ): number {\n    const peakSorenessHours = {\n      light: 12,\n      moderate: 24,\n      high: 36,\n      extreme: 48,\n    };\n\n    const peakHours = peakSorenessHours[intensity];\n    const maxSoreness = {\n      light: 3,\n      moderate: 5,\n      high: 7,\n      extreme: 9,\n    };\n\n    if (hoursElapsed <= peakHours) {\n      // Mont\xE9e vers le pic\n      return Math.round((hoursElapsed / peakHours) * maxSoreness[intensity]);\n    } else {\n      // Descente apr\xE8s le pic\n      const remainingHours = totalRecoveryHours - peakHours;\n      const hoursAfterPeak = hoursElapsed - peakHours;\n      const sorenessReduction = (hoursAfterPeak / remainingHours) * maxSoreness[intensity];\n      return Math.max(1, Math.round(maxSoreness[intensity] - sorenessReduction));\n    }\n  }\n\n  private static calculateReadinessScore(\n    recoveryPercentage: number,\n    muscleGroup: MuscleGroup,\n    profile: UserRecoveryProfile\n  ): number {\n    let baseScore = recoveryPercentage;\n\n    // P\xE9nalit\xE9 pour les muscles avec historique de blessure\n    if (profile.injury_history.includes(muscleGroup)) {\n      baseScore *= 0.9;\n    }\n\n    // Bonus pour les petits groupes musculaires (r\xE9cup\xE8rent plus vite)\n    const smallMuscles: MuscleGroup[] = ['biceps', 'triceps', 'forearms', 'calves', 'core'];\n    if (smallMuscles.includes(muscleGroup)) {\n      baseScore *= 1.1;\n    }\n\n    // Impact des facteurs globaux\n    baseScore *= profile.sleep_quality_impact;\n    baseScore *= profile.nutrition_quality_impact;\n    baseScore *= profile.age_factor;\n\n    return Math.max(0, Math.min(100, Math.round(baseScore)));\n  }\n\n  // === RECOMMANDATIONS ===\n  static async generateRecoveryRecommendations(\n    muscleRecoveryData: MuscleRecoveryData[],\n    userProfile: UserProfile\n  ): Promise<RecoveryRecommendation[]> {\n    const recommendations: RecoveryRecommendation[] = [];\n\n    for (const muscle of muscleRecoveryData) {\n      if (muscle.recovery_percentage < 70) {\n        // Muscle a besoin de r\xE9cup\xE9ration\n        if (muscle.recovery_percentage < 30) {\n          recommendations.push({\n            muscle_group: muscle.muscle_group,\n            recommendation_type: 'rest',\n            priority: 'critical',\n            message: `${muscle.muscle_group} est en surmenage. Repos complet recommand\xE9.`,\n            estimated_benefit: 90,\n            specific_actions: [\n              '\xC9viter tout exercice sollicitant ce groupe musculaire',\n              'Appliquer de la glace si inflammation',\n              'Massage l\xE9ger ou auto-massage',\n              '\xC9tirements tr\xE8s doux uniquement',\n            ],\n          });\n        } else if (muscle.recovery_percentage < 50) {\n          recommendations.push({\n            muscle_group: muscle.muscle_group,\n            recommendation_type: 'light_activity',\n            priority: 'high',\n            message: `${muscle.muscle_group} a besoin de r\xE9cup\xE9ration active.`,\n            estimated_benefit: 70,\n            duration_minutes: 15,\n            specific_actions: [\n              'Exercices de mobilit\xE9 douce',\n              'Marche l\xE9g\xE8re',\n              '\xC9tirements dynamiques l\xE9gers',\n              '\xC9chauffement prolong\xE9 avant exercice',\n            ],\n          });\n        } else {\n          recommendations.push({\n            muscle_group: muscle.muscle_group,\n            recommendation_type: 'stretching',\n            priority: 'medium',\n            message: `${muscle.muscle_group} b\xE9n\xE9ficierait d'\xE9tirements et de mobilit\xE9.`,\n            estimated_benefit: 50,\n            duration_minutes: 10,\n            specific_actions: [\n              '\xC9tirements statiques 30 secondes',\n              'Rouleau de massage (foam rolling)',\n              'Exercices de mobilit\xE9 articulaire',\n            ],\n          });\n        }\n      }\n\n      // Recommandations nutritionnelles pour la r\xE9cup\xE9ration\n      if (muscle.soreness_level > 6) {\n        recommendations.push({\n          muscle_group: muscle.muscle_group,\n          recommendation_type: 'nutrition',\n          priority: 'medium',\n          message: \"Optimiser la nutrition pour r\xE9duire l'inflammation.\",\n          estimated_benefit: 60,\n          specific_actions: [\n            'Consommer des prot\xE9ines dans les 2h post-entra\xEEnement',\n            'Aliments anti-inflammatoires (curcuma, gingembre)',\n            'Hydratation accrue',\n            'Om\xE9ga-3 (poisson, noix)',\n          ],\n        });\n      }\n\n      // Recommandations de sommeil\n      if (muscle.recovery_percentage < 60 && muscle.fatigue_level > 6) {\n        recommendations.push({\n          muscle_group: muscle.muscle_group,\n          recommendation_type: 'sleep',\n          priority: 'high',\n          message: 'Le sommeil est crucial pour la r\xE9cup\xE9ration musculaire.',\n          estimated_benefit: 80,\n          duration_minutes: 480, // 8 heures\n          specific_actions: [\n            'Viser 8-9h de sommeil de qualit\xE9',\n            '\xC9viter les \xE9crans 1h avant le coucher',\n            'Temp\xE9rature fra\xEEche dans la chambre',\n            'Routine de relaxation avant le coucher',\n          ],\n        });\n      }\n    }\n\n    // Trier par priorit\xE9 et b\xE9n\xE9fice estim\xE9\n    return recommendations.sort((a, b) => {\n      const priorityOrder = { critical: 4, high: 3, medium: 2, low: 1 };\n      const priorityDiff = priorityOrder[b.priority] - priorityOrder[a.priority];\n      if (priorityDiff !== 0) return priorityDiff;\n      return b.estimated_benefit - a.estimated_benefit;\n    });\n  }\n\n  // === M\xC9TRIQUES GLOBALES ===\n  static calculateGlobalRecoveryMetrics(\n    muscleRecoveryData: MuscleRecoveryData[]\n  ): GlobalRecoveryMetrics {\n    if (muscleRecoveryData.length === 0) {\n      return {\n        overall_recovery_score: 100,\n        most_recovered_muscle: 'core',\n        least_recovered_muscle: 'core',\n        ready_for_training: [],\n        needs_rest: [],\n        optimal_workout_type: 'light_cardio',\n        recovery_trend: 'stable',\n        last_calculated: new Date().toISOString(),\n      };\n    }\n\n    // Score global de r\xE9cup\xE9ration (moyenne pond\xE9r\xE9e)\n    const totalScore = muscleRecoveryData.reduce(\n      (sum, muscle) => sum + muscle.recovery_percentage,\n      0\n    );\n    const overallScore = Math.round(totalScore / muscleRecoveryData.length);\n\n    // Muscle le plus et le moins r\xE9cup\xE9r\xE9\n    const sortedByRecovery = [...muscleRecoveryData].sort(\n      (a, b) => b.recovery_percentage - a.recovery_percentage\n    );\n    const mostRecovered = sortedByRecovery[0].muscle_group;\n    const leastRecovered = sortedByRecovery[sortedByRecovery.length - 1].muscle_group;\n\n    // Muscles pr\xEAts pour l'entra\xEEnement (>80% r\xE9cup\xE9ration)\n    const readyForTraining = muscleRecoveryData\n      .filter(muscle => muscle.recovery_percentage > 80)\n      .map((muscle, index) => muscle.muscle_group);\n\n    // Muscles ayant besoin de repos (<60% r\xE9cup\xE9ration)\n    const needsRest = muscleRecoveryData\n      .filter(muscle => muscle.recovery_percentage < 60)\n      .map((muscle, index) => muscle.muscle_group);\n\n    // Type d'entra\xEEnement optimal\n    let optimalWorkoutType = 'rest';\n    if (readyForTraining.length >= 6) {\n      optimalWorkoutType = 'full_body';\n    } else if (readyForTraining.length >= 4) {\n      optimalWorkoutType = 'upper_lower_split';\n    } else if (readyForTraining.length >= 2) {\n      optimalWorkoutType = 'targeted_training';\n    } else if (overallScore > 70) {\n      optimalWorkoutType = 'light_cardio';\n    }\n\n    return {\n      overall_recovery_score: overallScore,\n      most_recovered_muscle: mostRecovered,\n      least_recovered_muscle: leastRecovered,\n      ready_for_training: readyForTraining,\n      needs_rest: needsRest,\n      optimal_workout_type: optimalWorkoutType,\n      recovery_trend: 'stable', // \xC0 calculer avec l'historique\n      last_calculated: new Date().toISOString(),\n    };\n  }\n\n  // === SAUVEGARDE EN BASE ===\n  static async saveMuscleRecoveryData(\n    userId: string,\n    recoveryData: MuscleRecoveryData[]\n  ): Promise<boolean> {\n    try {\n      // Supprimer les anciennes donn\xE9es\n      await supabase.from('muscle_recovery_data').delete().eq('user_id', userId);\n\n      // Ins\xE9rer les nouvelles donn\xE9es\n      const dataToInsert = recoveryData.map((data, index) => ({\n        user_id: userId,\n        ...data,\n      }));\n\n      const { error } = await supabase.from('muscle_recovery_data').insert(dataToInsert);\n\n      if (error) throw error;\n      return true;\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Error saving muscle recovery data:', error);\n      return false;\n    }\n  }\n\n  static async getMuscleRecoveryData(userId: string): Promise<MuscleRecoveryData[]> {\n    try {\n      const { data, error }: any = await supabase\n        .from('muscle_recovery_data')\n        .select('*')\n        .eq('user_id', userId)\n        .order('last_updated', { ascending: false });\n\n      if (error) throw error;\n      return data || [];\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Error fetching muscle recovery data:', error);\n      return [];\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fa01fb52a71ef752fbc5ad2721cd7d4c6bcd10fc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ag8fauxjb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ag8fauxjb();
cov_ag8fauxjb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ag8fauxjb().s[1]++;
exports.MuscleRecoveryService = void 0;
const supabase_1 =
/* istanbul ignore next */
(cov_ag8fauxjb().s[2]++, require("@/lib/supabase"));
class MuscleRecoveryService {
  // === PROFIL DE RÉCUPÉRATION UTILISATEUR ===
  static async getUserRecoveryProfile(userId) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[0]++;
    cov_ag8fauxjb().s[3]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[4]++, await supabase_1.supabase.from('user_recovery_profiles').select('*').eq('user_id', userId).single());
      /* istanbul ignore next */
      cov_ag8fauxjb().s[5]++;
      if (
      /* istanbul ignore next */
      (cov_ag8fauxjb().b[1][0]++, error) &&
      /* istanbul ignore next */
      (cov_ag8fauxjb().b[1][1]++, error.code !== 'PGRST116')) {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[0][0]++;
        cov_ag8fauxjb().s[6]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_ag8fauxjb().b[0][1]++;
      }
      cov_ag8fauxjb().s[7]++;
      return /* istanbul ignore next */(cov_ag8fauxjb().b[2][0]++, data) ||
      /* istanbul ignore next */
      (cov_ag8fauxjb().b[2][1]++, undefined);
    } catch (error) {
      /* istanbul ignore next */
      cov_ag8fauxjb().s[8]++;
      // Erreur silencieuse
      console.error('Error fetching user recovery profile:', error);
      /* istanbul ignore next */
      cov_ag8fauxjb().s[9]++;
      return null;
    }
  }
  static async createOrUpdateRecoveryProfile(userId, userProfile, sleepData, nutritionData) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[1]++;
    cov_ag8fauxjb().s[10]++;
    try {
      const profile =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[11]++, await this.calculateRecoveryProfile(userId, userProfile, sleepData, nutritionData));
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[12]++, await supabase_1.supabase.from('user_recovery_profiles').upsert(profile, {
        onConflict: 'user_id'
      }).select().single());
      /* istanbul ignore next */
      cov_ag8fauxjb().s[13]++;
      if (error) {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[3][0]++;
        cov_ag8fauxjb().s[14]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_ag8fauxjb().b[3][1]++;
      }
      cov_ag8fauxjb().s[15]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_ag8fauxjb().s[16]++;
      // Erreur silencieuse
      console.error('Error creating/updating recovery profile:', error);
      /* istanbul ignore next */
      cov_ag8fauxjb().s[17]++;
      return null;
    }
  }
  static async calculateRecoveryProfile(userId, userProfile, sleepData, nutritionData) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[2]++;
    // Facteur d'âge (récupération ralentit avec l'âge)
    const age =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[18]++,
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[4][0]++, userProfile.age) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[4][1]++, 25));
    const ageFactor =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[19]++, Math.max(0.6, 1.2 - (age - 20) * 0.01));
    // Facteur de niveau de fitness
    const fitnessLevelFactors =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[20]++, {
      beginner: 0.8,
      intermediate: 1.0,
      advanced: 1.2,
      expert: 1.3
    });
    const fitnessLevelFactor =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[21]++, fitnessLevelFactors[
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[5][0]++, userProfile.fitness_experience) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[5][1]++, 'intermediate')]);
    // Facteur de récupération de base (génétique + lifestyle)
    let baseRecoveryRate =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[22]++, 1.0);
    /* istanbul ignore next */
    cov_ag8fauxjb().s[23]++;
    if (userProfile.lifestyle === 'physical_job') {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[6][0]++;
      cov_ag8fauxjb().s[24]++;
      baseRecoveryRate *= 0.9;
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[6][1]++;
    }
    cov_ag8fauxjb().s[25]++;
    if (userProfile.lifestyle === 'office_worker') {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[7][0]++;
      cov_ag8fauxjb().s[26]++;
      baseRecoveryRate *= 0.95;
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[7][1]++;
    }
    cov_ag8fauxjb().s[27]++;
    if (userProfile.lifestyle === 'student') {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[8][0]++;
      cov_ag8fauxjb().s[28]++;
      baseRecoveryRate *= 1.05;
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[8][1]++;
    }
    // Impact du sommeil (moyenne des 7 derniers jours)
    let sleepQualityImpact =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[29]++, 1.0);
    /* istanbul ignore next */
    cov_ag8fauxjb().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[10][0]++, sleepData) &&
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[10][1]++, sleepData.length > 0)) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[9][0]++;
      const avgSleepQuality =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[31]++, sleepData.reduce((sum, session) => {
        /* istanbul ignore next */
        cov_ag8fauxjb().f[3]++;
        cov_ag8fauxjb().s[32]++;
        return sum + (
        /* istanbul ignore next */
        (cov_ag8fauxjb().b[11][0]++, session.quality_rating) ||
        /* istanbul ignore next */
        (cov_ag8fauxjb().b[11][1]++, 7));
      }, 0) / sleepData.length);
      const avgSleepDuration =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[33]++, sleepData.reduce((sum, session) => {
        /* istanbul ignore next */
        cov_ag8fauxjb().f[4]++;
        cov_ag8fauxjb().s[34]++;
        return sum + (
        /* istanbul ignore next */
        (cov_ag8fauxjb().b[12][0]++, session.duration_minutes) ||
        /* istanbul ignore next */
        (cov_ag8fauxjb().b[12][1]++, 480));
      }, 0) / sleepData.length / 60);
      /* istanbul ignore next */
      cov_ag8fauxjb().s[35]++;
      sleepQualityImpact = Math.max(0.7, Math.min(1.3, avgSleepQuality / 10 * Math.min(avgSleepDuration / 8, 1.2)));
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[9][1]++;
    }
    // Impact de la nutrition (moyenne des 7 derniers jours)
    let nutritionQualityImpact =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[36]++, 1.0);
    /* istanbul ignore next */
    cov_ag8fauxjb().s[37]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[14][0]++, nutritionData) &&
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[14][1]++, nutritionData.length > 0)) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[13][0]++;
      const avgProtein =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[38]++, nutritionData.reduce((sum, day) => {
        /* istanbul ignore next */
        cov_ag8fauxjb().f[5]++;
        cov_ag8fauxjb().s[39]++;
        return sum + (
        /* istanbul ignore next */
        (cov_ag8fauxjb().b[15][0]++, day.total_protein) ||
        /* istanbul ignore next */
        (cov_ag8fauxjb().b[15][1]++, 0));
      }, 0) / nutritionData.length);
      const targetProtein =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[40]++, (
      /* istanbul ignore next */
      (cov_ag8fauxjb().b[16][0]++, userProfile.weight_kg) ||
      /* istanbul ignore next */
      (cov_ag8fauxjb().b[16][1]++, 70)) * 1.6); // 1.6g/kg pour récupération
      /* istanbul ignore next */
      cov_ag8fauxjb().s[41]++;
      nutritionQualityImpact = Math.max(0.8, Math.min(1.2, avgProtein / targetProtein));
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[13][1]++;
    }
    // Historique des blessures
    const injuryHistory =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[42]++, []);
    /* istanbul ignore next */
    cov_ag8fauxjb().s[43]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[18][0]++, userProfile.injuries) &&
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[18][1]++, userProfile.injuries.length > 0)) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[17][0]++;
      cov_ag8fauxjb().s[44]++;
      userProfile.injuries.forEach(injury => {
        /* istanbul ignore next */
        cov_ag8fauxjb().f[6]++;
        const injuryLower =
        /* istanbul ignore next */
        (cov_ag8fauxjb().s[45]++, injury.toLowerCase());
        /* istanbul ignore next */
        cov_ag8fauxjb().s[46]++;
        if (injuryLower.includes('shoulder')) {
          /* istanbul ignore next */
          cov_ag8fauxjb().b[19][0]++;
          cov_ag8fauxjb().s[47]++;
          injuryHistory.push('shoulders');
        } else
        /* istanbul ignore next */
        {
          cov_ag8fauxjb().b[19][1]++;
        }
        cov_ag8fauxjb().s[48]++;
        if (injuryLower.includes('back')) {
          /* istanbul ignore next */
          cov_ag8fauxjb().b[20][0]++;
          cov_ag8fauxjb().s[49]++;
          injuryHistory.push('back');
        } else
        /* istanbul ignore next */
        {
          cov_ag8fauxjb().b[20][1]++;
        }
        cov_ag8fauxjb().s[50]++;
        if (injuryLower.includes('knee')) {
          /* istanbul ignore next */
          cov_ag8fauxjb().b[21][0]++;
          cov_ag8fauxjb().s[51]++;
          injuryHistory.push('quadriceps', 'hamstrings');
        } else
        /* istanbul ignore next */
        {
          cov_ag8fauxjb().b[21][1]++;
        }
        cov_ag8fauxjb().s[52]++;
        if (injuryLower.includes('ankle')) {
          /* istanbul ignore next */
          cov_ag8fauxjb().b[22][0]++;
          cov_ag8fauxjb().s[53]++;
          injuryHistory.push('calves');
        } else
        /* istanbul ignore next */
        {
          cov_ag8fauxjb().b[22][1]++;
        }
        // Ajouter d'autres mappings selon les besoins
      });
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[17][1]++;
    }
    cov_ag8fauxjb().s[54]++;
    return {
      user_id: userId,
      recovery_rate_multiplier: baseRecoveryRate,
      sleep_quality_impact: sleepQualityImpact,
      nutrition_quality_impact: nutritionQualityImpact,
      stress_level_impact: 1.0,
      // À calculer avec des données de stress
      hydration_impact: 1.0,
      // À calculer avec les données d'hydratation
      age_factor: ageFactor,
      fitness_level_factor: fitnessLevelFactor,
      injury_history: injuryHistory,
      supplements: [],
      // À remplir selon les préférences utilisateur
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    };
  }
  // === CALCUL DE LA RÉCUPÉRATION MUSCULAIRE ===
  static async calculateMuscleRecovery(userId, workouts, recoveryProfile) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[7]++;
    cov_ag8fauxjb().s[55]++;
    try {
      /* istanbul ignore next */
      cov_ag8fauxjb().s[56]++;
      if (!recoveryProfile) {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[23][0]++;
        const profile =
        /* istanbul ignore next */
        (cov_ag8fauxjb().s[57]++, await this.getUserRecoveryProfile(userId));
        /* istanbul ignore next */
        cov_ag8fauxjb().s[58]++;
        if (!profile) {
          /* istanbul ignore next */
          cov_ag8fauxjb().b[24][0]++;
          cov_ag8fauxjb().s[59]++;
          throw new Error('Recovery profile not found');
        } else
        /* istanbul ignore next */
        {
          cov_ag8fauxjb().b[24][1]++;
        }
        cov_ag8fauxjb().s[60]++;
        recoveryProfile = profile;
      } else
      /* istanbul ignore next */
      {
        cov_ag8fauxjb().b[23][1]++;
      }
      const muscleRecoveryMap =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[61]++, new Map());
      const now =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[62]++, new Date());
      // Initialiser tous les groupes musculaires
      /* istanbul ignore next */
      cov_ag8fauxjb().s[63]++;
      Object.keys(this.BASE_RECOVERY_HOURS).forEach(muscle => {
        /* istanbul ignore next */
        cov_ag8fauxjb().f[8]++;
        const muscleGroup =
        /* istanbul ignore next */
        (cov_ag8fauxjb().s[64]++, muscle);
        /* istanbul ignore next */
        cov_ag8fauxjb().s[65]++;
        muscleRecoveryMap.set(muscleGroup, {
          muscle_group: muscleGroup,
          last_workout_date: '',
          workout_intensity: 'light',
          workout_volume: 0,
          workout_duration_minutes: 0,
          recovery_status: 'fully_recovered',
          recovery_percentage: 100,
          estimated_full_recovery: now.toISOString(),
          fatigue_level: 1,
          soreness_level: 1,
          readiness_score: 100,
          last_updated: now.toISOString()
        });
      });
      // Analyser les workouts récents (7 derniers jours)
      const recentWorkouts =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[66]++, workouts.filter(workout => {
        /* istanbul ignore next */
        cov_ag8fauxjb().f[9]++;
        const workoutDate =
        /* istanbul ignore next */
        (cov_ag8fauxjb().s[67]++, new Date(
        /* istanbul ignore next */
        (cov_ag8fauxjb().b[25][0]++, workout.completed_at) ||
        /* istanbul ignore next */
        (cov_ag8fauxjb().b[25][1]++, workout.created_at) ||
        /* istanbul ignore next */
        (cov_ag8fauxjb().b[25][2]++, '')));
        const daysDiff =
        /* istanbul ignore next */
        (cov_ag8fauxjb().s[68]++, (now.getTime() - workoutDate.getTime()) / (1000 * 60 * 60 * 24));
        /* istanbul ignore next */
        cov_ag8fauxjb().s[69]++;
        return daysDiff <= 7;
      }));
      // Calculer l'impact de chaque workout
      /* istanbul ignore next */
      cov_ag8fauxjb().s[70]++;
      for (const workout of recentWorkouts) {
        const workoutImpacts =
        /* istanbul ignore next */
        (cov_ag8fauxjb().s[71]++, this.analyzeWorkoutImpact(workout));
        /* istanbul ignore next */
        cov_ag8fauxjb().s[72]++;
        for (const impact of workoutImpacts) {
          const currentData =
          /* istanbul ignore next */
          (cov_ag8fauxjb().s[73]++, muscleRecoveryMap.get(impact.muscle_group));
          /* istanbul ignore next */
          cov_ag8fauxjb().s[74]++;
          if (!currentData) {
            /* istanbul ignore next */
            cov_ag8fauxjb().b[26][0]++;
            cov_ag8fauxjb().s[75]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_ag8fauxjb().b[26][1]++;
          }
          const workoutDate =
          /* istanbul ignore next */
          (cov_ag8fauxjb().s[76]++, new Date(
          /* istanbul ignore next */
          (cov_ag8fauxjb().b[27][0]++, workout.completed_at) ||
          /* istanbul ignore next */
          (cov_ag8fauxjb().b[27][1]++, workout.created_at) ||
          /* istanbul ignore next */
          (cov_ag8fauxjb().b[27][2]++, '')));
          const hoursElapsed =
          /* istanbul ignore next */
          (cov_ag8fauxjb().s[77]++, (now.getTime() - workoutDate.getTime()) / (1000 * 60 * 60));
          // Calculer le temps de récupération nécessaire
          const baseRecoveryHours =
          /* istanbul ignore next */
          (cov_ag8fauxjb().s[78]++, this.BASE_RECOVERY_HOURS[impact.muscle_group]);
          const intensityMultiplier =
          /* istanbul ignore next */
          (cov_ag8fauxjb().s[79]++, this.INTENSITY_MULTIPLIERS[impact.intensity]);
          const volumeMultiplier =
          /* istanbul ignore next */
          (cov_ag8fauxjb().s[80]++, Math.max(0.8, Math.min(1.5, impact.volume / 12))); // 12 séries = référence
          const totalRecoveryHours =
          /* istanbul ignore next */
          (cov_ag8fauxjb().s[81]++, baseRecoveryHours * intensityMultiplier * volumeMultiplier * (1 / recoveryProfile.recovery_rate_multiplier) * (1 / recoveryProfile.sleep_quality_impact) * (1 / recoveryProfile.nutrition_quality_impact) * (1 / recoveryProfile.age_factor) * (1 / recoveryProfile.fitness_level_factor));
          // Calculer le pourcentage de récupération
          const recoveryPercentage =
          /* istanbul ignore next */
          (cov_ag8fauxjb().s[82]++, Math.min(100, hoursElapsed / totalRecoveryHours * 100));
          // Mettre à jour si ce workout est plus récent ou plus impactant
          /* istanbul ignore next */
          cov_ag8fauxjb().s[83]++;
          if (workoutDate.getTime() > new Date(
          /* istanbul ignore next */
          (cov_ag8fauxjb().b[29][0]++, currentData.last_workout_date) ||
          /* istanbul ignore next */
          (cov_ag8fauxjb().b[29][1]++, 0)).getTime()) {
            /* istanbul ignore next */
            cov_ag8fauxjb().b[28][0]++;
            const estimatedFullRecovery =
            /* istanbul ignore next */
            (cov_ag8fauxjb().s[84]++, new Date(workoutDate.getTime() + totalRecoveryHours * 60 * 60 * 1000));
            /* istanbul ignore next */
            cov_ag8fauxjb().s[85]++;
            muscleRecoveryMap.set(impact.muscle_group, {
              ...currentData,
              last_workout_date: workoutDate.toISOString(),
              workout_intensity: impact.intensity,
              workout_volume: impact.volume,
              workout_duration_minutes: impact.duration_minutes,
              recovery_percentage: Math.max(0, recoveryPercentage),
              estimated_full_recovery: estimatedFullRecovery.toISOString(),
              recovery_status: this.calculateRecoveryStatus(recoveryPercentage),
              fatigue_level: this.calculateFatigueLevel(recoveryPercentage, impact.intensity),
              soreness_level: this.calculateSorenessLevel(hoursElapsed, totalRecoveryHours, impact.intensity),
              readiness_score: this.calculateReadinessScore(recoveryPercentage, impact.muscle_group, recoveryProfile),
              last_updated: now.toISOString()
            });
          } else
          /* istanbul ignore next */
          {
            cov_ag8fauxjb().b[28][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_ag8fauxjb().s[86]++;
      return Array.from(muscleRecoveryMap.values());
    } catch (error) {
      /* istanbul ignore next */
      cov_ag8fauxjb().s[87]++;
      // Erreur silencieuse
      console.error('Error calculating muscle recovery:', error);
      /* istanbul ignore next */
      cov_ag8fauxjb().s[88]++;
      return [];
    }
  }
  static analyzeWorkoutImpact(workout) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[10]++;
    const impacts =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[89]++, []);
    // Analyser les exercices du workout
    const exercises =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[90]++,
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[30][0]++, workout.exercises) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[30][1]++, []));
    const workoutType =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[91]++,
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[31][0]++, workout.workout_type) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[31][1]++, 'strength'));
    const duration =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[92]++,
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[32][0]++, workout.duration_minutes) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[32][1]++, 60));
    // Mapper le type de workout aux groupes musculaires
    const affectedMuscles =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[93]++,
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[33][0]++, this.MUSCLE_GROUP_MAPPINGS[workoutType]) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[33][1]++, []));
    /* istanbul ignore next */
    cov_ag8fauxjb().s[94]++;
    if (affectedMuscles.length === 0) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[34][0]++;
      cov_ag8fauxjb().s[95]++;
      // Si pas de mapping spécifique, analyser les exercices individuellement
      exercises.forEach(exercise => {
        /* istanbul ignore next */
        cov_ag8fauxjb().f[11]++;
        const muscleGroups =
        /* istanbul ignore next */
        (cov_ag8fauxjb().s[96]++, this.getMuscleGroupsFromExercise(exercise));
        /* istanbul ignore next */
        cov_ag8fauxjb().s[97]++;
        muscleGroups.forEach(muscle => {
          /* istanbul ignore next */
          cov_ag8fauxjb().f[12]++;
          cov_ag8fauxjb().s[98]++;
          impacts.push({
            muscle_group: muscle,
            intensity: this.determineIntensity(workout, exercise),
            volume:
            /* istanbul ignore next */
            (cov_ag8fauxjb().b[35][0]++, exercise.sets) ||
            /* istanbul ignore next */
            (cov_ag8fauxjb().b[35][1]++, 3),
            duration_minutes: duration / exercises.length,
            exercise_types: [
            /* istanbul ignore next */
            (cov_ag8fauxjb().b[36][0]++, exercise.name) ||
            /* istanbul ignore next */
            (cov_ag8fauxjb().b[36][1]++, 'unknown')],
            compound_movements: this.isCompoundMovement(
            /* istanbul ignore next */
            (cov_ag8fauxjb().b[37][0]++, exercise.name) ||
            /* istanbul ignore next */
            (cov_ag8fauxjb().b[37][1]++, '')),
            eccentric_focus: this.hasEccentricFocus(
            /* istanbul ignore next */
            (cov_ag8fauxjb().b[38][0]++, exercise.name) ||
            /* istanbul ignore next */
            (cov_ag8fauxjb().b[38][1]++, ''))
          });
        });
      });
    } else {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[34][1]++;
      cov_ag8fauxjb().s[99]++;
      // Utiliser le mapping du type de workout
      affectedMuscles.forEach(muscle => {
        /* istanbul ignore next */
        cov_ag8fauxjb().f[13]++;
        cov_ag8fauxjb().s[100]++;
        impacts.push({
          muscle_group: muscle,
          intensity: this.determineWorkoutIntensity(workout),
          volume: this.estimateVolumeFromWorkout(workout),
          duration_minutes: duration / affectedMuscles.length,
          exercise_types: exercises.map((ex, index) => {
            /* istanbul ignore next */
            cov_ag8fauxjb().f[14]++;
            cov_ag8fauxjb().s[101]++;
            return /* istanbul ignore next */(cov_ag8fauxjb().b[39][0]++, ex.name) ||
            /* istanbul ignore next */
            (cov_ag8fauxjb().b[39][1]++, 'unknown');
          }),
          compound_movements: true,
          // Assumé pour les workouts typés
          eccentric_focus: false
        });
      });
    }
    /* istanbul ignore next */
    cov_ag8fauxjb().s[102]++;
    return impacts;
  }
  static getMuscleGroupsFromExercise(exercise) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[15]++;
    const exerciseName =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[103]++, (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[40][0]++, exercise.name) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[40][1]++, '')).toLowerCase());
    const muscles =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[104]++, []);
    // Mapping des exercices aux groupes musculaires
    /* istanbul ignore next */
    cov_ag8fauxjb().s[105]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[42][0]++, exerciseName.includes('bench')) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[42][1]++, exerciseName.includes('push'))) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[41][0]++;
      cov_ag8fauxjb().s[106]++;
      muscles.push('chest', 'triceps', 'delts');
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[41][1]++;
    }
    cov_ag8fauxjb().s[107]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[44][0]++, exerciseName.includes('pull')) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[44][1]++, exerciseName.includes('row'))) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[43][0]++;
      cov_ag8fauxjb().s[108]++;
      muscles.push('back', 'lats', 'biceps');
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[43][1]++;
    }
    cov_ag8fauxjb().s[109]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[46][0]++, exerciseName.includes('squat')) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[46][1]++, exerciseName.includes('leg press'))) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[45][0]++;
      cov_ag8fauxjb().s[110]++;
      muscles.push('quadriceps', 'glutes');
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[45][1]++;
    }
    cov_ag8fauxjb().s[111]++;
    if (exerciseName.includes('deadlift')) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[47][0]++;
      cov_ag8fauxjb().s[112]++;
      muscles.push('hamstrings', 'glutes', 'back', 'traps');
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[47][1]++;
    }
    cov_ag8fauxjb().s[113]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[49][0]++, exerciseName.includes('shoulder')) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[49][1]++, exerciseName.includes('press'))) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[48][0]++;
      cov_ag8fauxjb().s[114]++;
      muscles.push('delts', 'triceps');
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[48][1]++;
    }
    cov_ag8fauxjb().s[115]++;
    if (exerciseName.includes('curl')) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[50][0]++;
      cov_ag8fauxjb().s[116]++;
      muscles.push('biceps');
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[50][1]++;
    }
    cov_ag8fauxjb().s[117]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[52][0]++, exerciseName.includes('tricep')) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[52][1]++, exerciseName.includes('dip'))) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[51][0]++;
      cov_ag8fauxjb().s[118]++;
      muscles.push('triceps');
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[51][1]++;
    }
    cov_ag8fauxjb().s[119]++;
    if (exerciseName.includes('calf')) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[53][0]++;
      cov_ag8fauxjb().s[120]++;
      muscles.push('calves');
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[53][1]++;
    }
    cov_ag8fauxjb().s[121]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[55][0]++, exerciseName.includes('core')) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[55][1]++, exerciseName.includes('ab'))) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[54][0]++;
      cov_ag8fauxjb().s[122]++;
      muscles.push('core');
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[54][1]++;
    }
    cov_ag8fauxjb().s[123]++;
    return muscles.length > 0 ?
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[56][0]++, muscles) :
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[56][1]++, ['core']); // Fallback
  }
  static determineIntensity(workout, exercise) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[16]++;
    const difficulty =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[124]++,
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[57][0]++, workout.difficulty) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[57][1]++, 'moderate'));
    const rpe =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[125]++,
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[58][0]++, exercise.rpe) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[58][1]++, 7)); // Rate of Perceived Exertion
    /* istanbul ignore next */
    cov_ag8fauxjb().s[126]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[60][0]++, rpe >= 9) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[60][1]++, difficulty === 'advanced')) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[59][0]++;
      cov_ag8fauxjb().s[127]++;
      return 'extreme';
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[59][1]++;
    }
    cov_ag8fauxjb().s[128]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[62][0]++, rpe >= 7) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[62][1]++, difficulty === 'intermediate')) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[61][0]++;
      cov_ag8fauxjb().s[129]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[61][1]++;
    }
    cov_ag8fauxjb().s[130]++;
    if (rpe >= 5) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[63][0]++;
      cov_ag8fauxjb().s[131]++;
      return 'moderate';
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[63][1]++;
    }
    cov_ag8fauxjb().s[132]++;
    return 'light';
  }
  static determineWorkoutIntensity(workout) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[17]++;
    const difficulty =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[133]++,
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[64][0]++, workout.difficulty) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[64][1]++, 'moderate'));
    const duration =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[134]++,
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[65][0]++, workout.duration_minutes) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[65][1]++, 60));
    /* istanbul ignore next */
    cov_ag8fauxjb().s[135]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[67][0]++, difficulty === 'advanced') ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[67][1]++, duration > 90)) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[66][0]++;
      cov_ag8fauxjb().s[136]++;
      return 'extreme';
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[66][1]++;
    }
    cov_ag8fauxjb().s[137]++;
    if (
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[69][0]++, difficulty === 'intermediate') ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[69][1]++, duration > 60)) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[68][0]++;
      cov_ag8fauxjb().s[138]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[68][1]++;
    }
    cov_ag8fauxjb().s[139]++;
    if (duration > 30) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[70][0]++;
      cov_ag8fauxjb().s[140]++;
      return 'moderate';
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[70][1]++;
    }
    cov_ag8fauxjb().s[141]++;
    return 'light';
  }
  static estimateVolumeFromWorkout(workout) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[18]++;
    const exercises =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[142]++,
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[71][0]++, workout.exercises) ||
    /* istanbul ignore next */
    (cov_ag8fauxjb().b[71][1]++, []));
    /* istanbul ignore next */
    cov_ag8fauxjb().s[143]++;
    return exercises.reduce((total, ex) => {
      /* istanbul ignore next */
      cov_ag8fauxjb().f[19]++;
      cov_ag8fauxjb().s[144]++;
      return total + (
      /* istanbul ignore next */
      (cov_ag8fauxjb().b[72][0]++, ex.sets) ||
      /* istanbul ignore next */
      (cov_ag8fauxjb().b[72][1]++, 3));
    }, 0);
  }
  static isCompoundMovement(exerciseName) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[20]++;
    const compoundKeywords =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[145]++, ['squat', 'deadlift', 'bench', 'press', 'pull', 'row', 'clean', 'snatch']);
    /* istanbul ignore next */
    cov_ag8fauxjb().s[146]++;
    return compoundKeywords.some(keyword => {
      /* istanbul ignore next */
      cov_ag8fauxjb().f[21]++;
      cov_ag8fauxjb().s[147]++;
      return exerciseName.toLowerCase().includes(keyword);
    });
  }
  static hasEccentricFocus(exerciseName) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[22]++;
    const eccentricKeywords =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[148]++, ['negative', 'eccentric', 'slow', 'tempo']);
    /* istanbul ignore next */
    cov_ag8fauxjb().s[149]++;
    return eccentricKeywords.some(keyword => {
      /* istanbul ignore next */
      cov_ag8fauxjb().f[23]++;
      cov_ag8fauxjb().s[150]++;
      return exerciseName.toLowerCase().includes(keyword);
    });
  }
  static calculateRecoveryStatus(recoveryPercentage) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[24]++;
    cov_ag8fauxjb().s[151]++;
    if (recoveryPercentage >= 95) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[73][0]++;
      cov_ag8fauxjb().s[152]++;
      return 'fully_recovered';
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[73][1]++;
    }
    cov_ag8fauxjb().s[153]++;
    if (recoveryPercentage >= 80) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[74][0]++;
      cov_ag8fauxjb().s[154]++;
      return 'mostly_recovered';
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[74][1]++;
    }
    cov_ag8fauxjb().s[155]++;
    if (recoveryPercentage >= 60) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[75][0]++;
      cov_ag8fauxjb().s[156]++;
      return 'partially_recovered';
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[75][1]++;
    }
    cov_ag8fauxjb().s[157]++;
    if (recoveryPercentage >= 30) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[76][0]++;
      cov_ag8fauxjb().s[158]++;
      return 'needs_recovery';
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[76][1]++;
    }
    cov_ag8fauxjb().s[159]++;
    return 'overworked';
  }
  static calculateFatigueLevel(recoveryPercentage, intensity) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[25]++;
    const baseIntensityFatigue =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[160]++, {
      light: 2,
      moderate: 4,
      high: 6,
      extreme: 8
    });
    const baseFatigue =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[161]++, baseIntensityFatigue[intensity]);
    const recoveryFactor =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[162]++, (100 - recoveryPercentage) / 100);
    /* istanbul ignore next */
    cov_ag8fauxjb().s[163]++;
    return Math.max(1, Math.min(10, Math.round(baseFatigue * recoveryFactor)));
  }
  static calculateSorenessLevel(hoursElapsed, totalRecoveryHours, intensity) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[26]++;
    const peakSorenessHours =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[164]++, {
      light: 12,
      moderate: 24,
      high: 36,
      extreme: 48
    });
    const peakHours =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[165]++, peakSorenessHours[intensity]);
    const maxSoreness =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[166]++, {
      light: 3,
      moderate: 5,
      high: 7,
      extreme: 9
    });
    /* istanbul ignore next */
    cov_ag8fauxjb().s[167]++;
    if (hoursElapsed <= peakHours) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[77][0]++;
      cov_ag8fauxjb().s[168]++;
      // Montée vers le pic
      return Math.round(hoursElapsed / peakHours * maxSoreness[intensity]);
    } else {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[77][1]++;
      // Descente après le pic
      const remainingHours =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[169]++, totalRecoveryHours - peakHours);
      const hoursAfterPeak =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[170]++, hoursElapsed - peakHours);
      const sorenessReduction =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[171]++, hoursAfterPeak / remainingHours * maxSoreness[intensity]);
      /* istanbul ignore next */
      cov_ag8fauxjb().s[172]++;
      return Math.max(1, Math.round(maxSoreness[intensity] - sorenessReduction));
    }
  }
  static calculateReadinessScore(recoveryPercentage, muscleGroup, profile) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[27]++;
    let baseScore =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[173]++, recoveryPercentage);
    // Pénalité pour les muscles avec historique de blessure
    /* istanbul ignore next */
    cov_ag8fauxjb().s[174]++;
    if (profile.injury_history.includes(muscleGroup)) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[78][0]++;
      cov_ag8fauxjb().s[175]++;
      baseScore *= 0.9;
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[78][1]++;
    }
    // Bonus pour les petits groupes musculaires (récupèrent plus vite)
    const smallMuscles =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[176]++, ['biceps', 'triceps', 'forearms', 'calves', 'core']);
    /* istanbul ignore next */
    cov_ag8fauxjb().s[177]++;
    if (smallMuscles.includes(muscleGroup)) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[79][0]++;
      cov_ag8fauxjb().s[178]++;
      baseScore *= 1.1;
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[79][1]++;
    }
    // Impact des facteurs globaux
    cov_ag8fauxjb().s[179]++;
    baseScore *= profile.sleep_quality_impact;
    /* istanbul ignore next */
    cov_ag8fauxjb().s[180]++;
    baseScore *= profile.nutrition_quality_impact;
    /* istanbul ignore next */
    cov_ag8fauxjb().s[181]++;
    baseScore *= profile.age_factor;
    /* istanbul ignore next */
    cov_ag8fauxjb().s[182]++;
    return Math.max(0, Math.min(100, Math.round(baseScore)));
  }
  // === RECOMMANDATIONS ===
  static async generateRecoveryRecommendations(muscleRecoveryData, userProfile) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[28]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[183]++, []);
    /* istanbul ignore next */
    cov_ag8fauxjb().s[184]++;
    for (const muscle of muscleRecoveryData) {
      /* istanbul ignore next */
      cov_ag8fauxjb().s[185]++;
      if (muscle.recovery_percentage < 70) {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[80][0]++;
        cov_ag8fauxjb().s[186]++;
        // Muscle a besoin de récupération
        if (muscle.recovery_percentage < 30) {
          /* istanbul ignore next */
          cov_ag8fauxjb().b[81][0]++;
          cov_ag8fauxjb().s[187]++;
          recommendations.push({
            muscle_group: muscle.muscle_group,
            recommendation_type: 'rest',
            priority: 'critical',
            message: `${muscle.muscle_group} est en surmenage. Repos complet recommandé.`,
            estimated_benefit: 90,
            specific_actions: ['Éviter tout exercice sollicitant ce groupe musculaire', 'Appliquer de la glace si inflammation', 'Massage léger ou auto-massage', 'Étirements très doux uniquement']
          });
        } else {
          /* istanbul ignore next */
          cov_ag8fauxjb().b[81][1]++;
          cov_ag8fauxjb().s[188]++;
          if (muscle.recovery_percentage < 50) {
            /* istanbul ignore next */
            cov_ag8fauxjb().b[82][0]++;
            cov_ag8fauxjb().s[189]++;
            recommendations.push({
              muscle_group: muscle.muscle_group,
              recommendation_type: 'light_activity',
              priority: 'high',
              message: `${muscle.muscle_group} a besoin de récupération active.`,
              estimated_benefit: 70,
              duration_minutes: 15,
              specific_actions: ['Exercices de mobilité douce', 'Marche légère', 'Étirements dynamiques légers', 'Échauffement prolongé avant exercice']
            });
          } else {
            /* istanbul ignore next */
            cov_ag8fauxjb().b[82][1]++;
            cov_ag8fauxjb().s[190]++;
            recommendations.push({
              muscle_group: muscle.muscle_group,
              recommendation_type: 'stretching',
              priority: 'medium',
              message: `${muscle.muscle_group} bénéficierait d'étirements et de mobilité.`,
              estimated_benefit: 50,
              duration_minutes: 10,
              specific_actions: ['Étirements statiques 30 secondes', 'Rouleau de massage (foam rolling)', 'Exercices de mobilité articulaire']
            });
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_ag8fauxjb().b[80][1]++;
      }
      // Recommandations nutritionnelles pour la récupération
      cov_ag8fauxjb().s[191]++;
      if (muscle.soreness_level > 6) {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[83][0]++;
        cov_ag8fauxjb().s[192]++;
        recommendations.push({
          muscle_group: muscle.muscle_group,
          recommendation_type: 'nutrition',
          priority: 'medium',
          message: "Optimiser la nutrition pour réduire l'inflammation.",
          estimated_benefit: 60,
          specific_actions: ['Consommer des protéines dans les 2h post-entraînement', 'Aliments anti-inflammatoires (curcuma, gingembre)', 'Hydratation accrue', 'Oméga-3 (poisson, noix)']
        });
      } else
      /* istanbul ignore next */
      {
        cov_ag8fauxjb().b[83][1]++;
      }
      // Recommandations de sommeil
      cov_ag8fauxjb().s[193]++;
      if (
      /* istanbul ignore next */
      (cov_ag8fauxjb().b[85][0]++, muscle.recovery_percentage < 60) &&
      /* istanbul ignore next */
      (cov_ag8fauxjb().b[85][1]++, muscle.fatigue_level > 6)) {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[84][0]++;
        cov_ag8fauxjb().s[194]++;
        recommendations.push({
          muscle_group: muscle.muscle_group,
          recommendation_type: 'sleep',
          priority: 'high',
          message: 'Le sommeil est crucial pour la récupération musculaire.',
          estimated_benefit: 80,
          duration_minutes: 480,
          // 8 heures
          specific_actions: ['Viser 8-9h de sommeil de qualité', 'Éviter les écrans 1h avant le coucher', 'Température fraîche dans la chambre', 'Routine de relaxation avant le coucher']
        });
      } else
      /* istanbul ignore next */
      {
        cov_ag8fauxjb().b[84][1]++;
      }
    }
    // Trier par priorité et bénéfice estimé
    /* istanbul ignore next */
    cov_ag8fauxjb().s[195]++;
    return recommendations.sort((a, b) => {
      /* istanbul ignore next */
      cov_ag8fauxjb().f[29]++;
      const priorityOrder =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[196]++, {
        critical: 4,
        high: 3,
        medium: 2,
        low: 1
      });
      const priorityDiff =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[197]++, priorityOrder[b.priority] - priorityOrder[a.priority]);
      /* istanbul ignore next */
      cov_ag8fauxjb().s[198]++;
      if (priorityDiff !== 0) {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[86][0]++;
        cov_ag8fauxjb().s[199]++;
        return priorityDiff;
      } else
      /* istanbul ignore next */
      {
        cov_ag8fauxjb().b[86][1]++;
      }
      cov_ag8fauxjb().s[200]++;
      return b.estimated_benefit - a.estimated_benefit;
    });
  }
  // === MÉTRIQUES GLOBALES ===
  static calculateGlobalRecoveryMetrics(muscleRecoveryData) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[30]++;
    cov_ag8fauxjb().s[201]++;
    if (muscleRecoveryData.length === 0) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[87][0]++;
      cov_ag8fauxjb().s[202]++;
      return {
        overall_recovery_score: 100,
        most_recovered_muscle: 'core',
        least_recovered_muscle: 'core',
        ready_for_training: [],
        needs_rest: [],
        optimal_workout_type: 'light_cardio',
        recovery_trend: 'stable',
        last_calculated: new Date().toISOString()
      };
    } else
    /* istanbul ignore next */
    {
      cov_ag8fauxjb().b[87][1]++;
    }
    // Score global de récupération (moyenne pondérée)
    const totalScore =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[203]++, muscleRecoveryData.reduce((sum, muscle) => {
      /* istanbul ignore next */
      cov_ag8fauxjb().f[31]++;
      cov_ag8fauxjb().s[204]++;
      return sum + muscle.recovery_percentage;
    }, 0));
    const overallScore =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[205]++, Math.round(totalScore / muscleRecoveryData.length));
    // Muscle le plus et le moins récupéré
    const sortedByRecovery =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[206]++, [...muscleRecoveryData].sort((a, b) => {
      /* istanbul ignore next */
      cov_ag8fauxjb().f[32]++;
      cov_ag8fauxjb().s[207]++;
      return b.recovery_percentage - a.recovery_percentage;
    }));
    const mostRecovered =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[208]++, sortedByRecovery[0].muscle_group);
    const leastRecovered =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[209]++, sortedByRecovery[sortedByRecovery.length - 1].muscle_group);
    // Muscles prêts pour l'entraînement (>80% récupération)
    const readyForTraining =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[210]++, muscleRecoveryData.filter(muscle => {
      /* istanbul ignore next */
      cov_ag8fauxjb().f[33]++;
      cov_ag8fauxjb().s[211]++;
      return muscle.recovery_percentage > 80;
    }).map((muscle, index) => {
      /* istanbul ignore next */
      cov_ag8fauxjb().f[34]++;
      cov_ag8fauxjb().s[212]++;
      return muscle.muscle_group;
    }));
    // Muscles ayant besoin de repos (<60% récupération)
    const needsRest =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[213]++, muscleRecoveryData.filter(muscle => {
      /* istanbul ignore next */
      cov_ag8fauxjb().f[35]++;
      cov_ag8fauxjb().s[214]++;
      return muscle.recovery_percentage < 60;
    }).map((muscle, index) => {
      /* istanbul ignore next */
      cov_ag8fauxjb().f[36]++;
      cov_ag8fauxjb().s[215]++;
      return muscle.muscle_group;
    }));
    // Type d'entraînement optimal
    let optimalWorkoutType =
    /* istanbul ignore next */
    (cov_ag8fauxjb().s[216]++, 'rest');
    /* istanbul ignore next */
    cov_ag8fauxjb().s[217]++;
    if (readyForTraining.length >= 6) {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[88][0]++;
      cov_ag8fauxjb().s[218]++;
      optimalWorkoutType = 'full_body';
    } else {
      /* istanbul ignore next */
      cov_ag8fauxjb().b[88][1]++;
      cov_ag8fauxjb().s[219]++;
      if (readyForTraining.length >= 4) {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[89][0]++;
        cov_ag8fauxjb().s[220]++;
        optimalWorkoutType = 'upper_lower_split';
      } else {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[89][1]++;
        cov_ag8fauxjb().s[221]++;
        if (readyForTraining.length >= 2) {
          /* istanbul ignore next */
          cov_ag8fauxjb().b[90][0]++;
          cov_ag8fauxjb().s[222]++;
          optimalWorkoutType = 'targeted_training';
        } else {
          /* istanbul ignore next */
          cov_ag8fauxjb().b[90][1]++;
          cov_ag8fauxjb().s[223]++;
          if (overallScore > 70) {
            /* istanbul ignore next */
            cov_ag8fauxjb().b[91][0]++;
            cov_ag8fauxjb().s[224]++;
            optimalWorkoutType = 'light_cardio';
          } else
          /* istanbul ignore next */
          {
            cov_ag8fauxjb().b[91][1]++;
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_ag8fauxjb().s[225]++;
    return {
      overall_recovery_score: overallScore,
      most_recovered_muscle: mostRecovered,
      least_recovered_muscle: leastRecovered,
      ready_for_training: readyForTraining,
      needs_rest: needsRest,
      optimal_workout_type: optimalWorkoutType,
      recovery_trend: 'stable',
      // À calculer avec l'historique
      last_calculated: new Date().toISOString()
    };
  }
  // === SAUVEGARDE EN BASE ===
  static async saveMuscleRecoveryData(userId, recoveryData) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[37]++;
    cov_ag8fauxjb().s[226]++;
    try {
      /* istanbul ignore next */
      cov_ag8fauxjb().s[227]++;
      // Supprimer les anciennes données
      await supabase_1.supabase.from('muscle_recovery_data').delete().eq('user_id', userId);
      // Insérer les nouvelles données
      const dataToInsert =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[228]++, recoveryData.map((data, index) => {
        /* istanbul ignore next */
        cov_ag8fauxjb().f[38]++;
        cov_ag8fauxjb().s[229]++;
        return {
          user_id: userId,
          ...data
        };
      }));
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[230]++, await supabase_1.supabase.from('muscle_recovery_data').insert(dataToInsert));
      /* istanbul ignore next */
      cov_ag8fauxjb().s[231]++;
      if (error) {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[92][0]++;
        cov_ag8fauxjb().s[232]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_ag8fauxjb().b[92][1]++;
      }
      cov_ag8fauxjb().s[233]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_ag8fauxjb().s[234]++;
      // Erreur silencieuse
      console.error('Error saving muscle recovery data:', error);
      /* istanbul ignore next */
      cov_ag8fauxjb().s[235]++;
      return false;
    }
  }
  static async getMuscleRecoveryData(userId) {
    /* istanbul ignore next */
    cov_ag8fauxjb().f[39]++;
    cov_ag8fauxjb().s[236]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_ag8fauxjb().s[237]++, await supabase_1.supabase.from('muscle_recovery_data').select('*').eq('user_id', userId).order('last_updated', {
        ascending: false
      }));
      /* istanbul ignore next */
      cov_ag8fauxjb().s[238]++;
      if (error) {
        /* istanbul ignore next */
        cov_ag8fauxjb().b[93][0]++;
        cov_ag8fauxjb().s[239]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_ag8fauxjb().b[93][1]++;
      }
      cov_ag8fauxjb().s[240]++;
      return /* istanbul ignore next */(cov_ag8fauxjb().b[94][0]++, data) ||
      /* istanbul ignore next */
      (cov_ag8fauxjb().b[94][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_ag8fauxjb().s[241]++;
      // Erreur silencieuse
      console.error('Error fetching muscle recovery data:', error);
      /* istanbul ignore next */
      cov_ag8fauxjb().s[242]++;
      return [];
    }
  }
}
/* istanbul ignore next */
cov_ag8fauxjb().s[243]++;
exports.MuscleRecoveryService = MuscleRecoveryService;
// === CONSTANTES DE RÉCUPÉRATION ===
/* istanbul ignore next */
cov_ag8fauxjb().s[244]++;
Object.defineProperty(MuscleRecoveryService, "BASE_RECOVERY_HOURS", {
  enumerable: true,
  configurable: true,
  writable: true,
  value: {
    chest: 48,
    back: 48,
    shoulders: 36,
    biceps: 36,
    triceps: 36,
    forearms: 24,
    quadriceps: 48,
    hamstrings: 48,
    glutes: 48,
    calves: 24,
    core: 24,
    traps: 36,
    lats: 48,
    delts: 36
  }
});
/* istanbul ignore next */
cov_ag8fauxjb().s[245]++;
Object.defineProperty(MuscleRecoveryService, "INTENSITY_MULTIPLIERS", {
  enumerable: true,
  configurable: true,
  writable: true,
  value: {
    light: 0.7,
    moderate: 1.0,
    high: 1.4,
    extreme: 1.8
  }
});
/* istanbul ignore next */
cov_ag8fauxjb().s[246]++;
Object.defineProperty(MuscleRecoveryService, "MUSCLE_GROUP_MAPPINGS", {
  enumerable: true,
  configurable: true,
  writable: true,
  value: {
    chest: ['chest', 'triceps', 'delts'],
    back: ['back', 'lats', 'biceps', 'traps'],
    shoulders: ['delts', 'traps'],
    arms: ['biceps', 'triceps', 'forearms'],
    legs: ['quadriceps', 'hamstrings', 'glutes', 'calves'],
    core: ['core'],
    cardio: [],
    // pas d'impact musculaire spécifique
    flexibility: []
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,