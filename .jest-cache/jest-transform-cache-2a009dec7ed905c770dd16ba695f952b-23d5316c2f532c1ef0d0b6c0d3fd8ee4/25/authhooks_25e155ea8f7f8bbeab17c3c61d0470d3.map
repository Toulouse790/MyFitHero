{"version":3,"names":["cov_tht8vxd22","actualCoverage","s","react_1","require","wouter_1","auth_store_1","supabase_1","useAuth","f","authStore","useAuthStore","navigate","useLocation","useEffect","checkAuth","signUp","data","error","console","signIn","user","supabase","auth","getUser","b","profile","from","select","eq","id","single","onboarding_completed","signOut","updateProfile","session","isAuthenticated","isLoading","exports","useUser","useIsAuthenticated","useRequireAuth","redirectTo","usePublicRoute"],"sources":["/workspaces/MyFitHero/src/core/auth/auth.hooks.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { useAuthStore } from './auth.store';\nimport { SignUpData, SignInData, UpdateProfileData } from './auth.types';\nimport { supabase } from '@/lib/supabase';\n\n// Hook principal pour l'authentification\nexport const useAuth = () => {\n  const authStore = useAuthStore();\n  const [, navigate] = useLocation();\n\n  useEffect(() => {\n    // Vérifier l'authentification au chargement\n    authStore.checkAuth();\n  }, []);\n\n  const signUp = async (data: SignUpData) => {\n    try {\n      await authStore.signUp(data);\n      // Redirection vers l'onboarding conversationnel après inscription\n      navigate('/onboarding');\n    } catch (error: any) {\n      console.error('Erreur inscription:', error);\n    }\n  };\n\n  const signIn = async (data: SignInData) => {\n    try {\n      await authStore.signIn(data);\n      \n      // Vérifier si l'utilisateur a terminé l'onboarding\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        const { data: profile } = await supabase\n          .from('user_profiles')\n          .select('onboarding_completed')\n          .eq('id', user.id)\n          .single();\n        \n        // Redirection conditionnelle\n        if (profile?.onboarding_completed) {\n          navigate('/dashboard');\n        } else {\n          navigate('/onboarding');\n        }\n      }\n    } catch (error: any) {\n      console.error('Erreur connexion:', error);\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      await authStore.signOut();\n      navigate('/auth'); // Redirection vers auth après déconnexion\n    } catch (error: any) {\n      console.error('Erreur déconnexion:', error);\n    }\n  };\n\n  const updateProfile = async (data: UpdateProfileData) => {\n    try {\n      await authStore.updateProfile(data);\n      return true;\n    } catch (error: any) {\n      console.error('Erreur mise à jour profil:', error);\n      return false;\n    }\n  };\n\n  return {\n    user: authStore.user,\n    session: authStore.session,\n    isAuthenticated: authStore.isAuthenticated,\n    isLoading: authStore.isLoading,\n    error: authStore.error,\n    signUp,\n    signIn,\n    signOut,\n    updateProfile,\n    checkAuth: authStore.checkAuth,\n  };\n};\n\n// Hook pour l'utilisateur uniquement\nexport const useUser = () => {\n  const { user } = useAuthStore();\n  return user;\n};\n\n// Hook pour vérifier l'authentification\nexport const useIsAuthenticated = () => {\n  const { isAuthenticated } = useAuthStore();\n  return isAuthenticated;\n};\n\n// Hook pour protéger les routes\nexport const useRequireAuth = (redirectTo = '/auth') => {\n  const { isAuthenticated, isLoading } = useAuthStore();\n  const [, navigate] = useLocation();\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      navigate(redirectTo);\n    }\n  }, [isAuthenticated, isLoading, navigate, redirectTo]);\n\n  return { isAuthenticated, isLoading };\n};\n\n// Hook pour les pages publiques (redirection si déjà connecté)\nexport const usePublicRoute = (redirectTo = '/dashboard') => {\n  const { isAuthenticated, isLoading } = useAuthStore();\n  const [, navigate] = useLocation();\n\n  useEffect(() => {\n    if (!isLoading && isAuthenticated) {\n      navigate(redirectTo);\n    }\n  }, [isAuthenticated, isLoading, navigate, redirectTo]);\n\n  return { isAuthenticated, isLoading };\n};\n"],"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","ignoreList":[]}