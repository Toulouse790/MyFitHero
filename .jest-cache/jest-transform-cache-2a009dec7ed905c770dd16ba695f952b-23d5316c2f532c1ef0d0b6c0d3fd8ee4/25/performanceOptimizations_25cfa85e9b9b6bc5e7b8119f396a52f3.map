{"version":3,"names":["react_1","cov_hsyibfv02","s","require","web_vitals_1","PERFORMANCE_THRESHOLDS","LCP","INP","CLS","FCP","TTFB","PerformanceCollector","constructor","f","Object","defineProperty","Map","initWebVitals","onLCP","handleMetric","bind","onINP","onCLS","onFCP","onTTFB","metric","metrics","set","name","listeners","forEach","listener","import","meta","env","DEV","b","console","log","value","threshold","status","getMetricStatus","PROD","sendToAnalytics","gtag","metric_value","metric_delta","delta","metric_id","id","supabase","Promise","resolve","then","__importStar","from","insert","metric_name","navigation_type","performance","navigation","type","toString","user_agent","navigator","userAgent","created_at","Date","toISOString","error","getMetrics","onMetric","push","index","indexOf","splice","performanceCollector","exports","usePerformanceMetrics","useCallback","useEffect","unsubscribe","thresholds","RuntimeOptimizerClass","getInstance","instance","splitLongTask","task","maxDuration","start","now","result","duration","setTimeout","scheduleIdleTask","window","requestIdleCallback","timeout","prefetchResource","href","as","document","querySelector","link","createElement","rel","head","appendChild","preloadResource","LayoutStabilizerClass","reserveImageSpace","width","height","aspectRatio","createSkeleton","backgroundColor","borderRadius","animation","stableContainer","minHeight","display","flexDirection","RuntimeOptimizer","LayoutStabilizer","usePerformanceOptimizations","optimizer","images","querySelectorAll","img","HTMLImageElement","loading","decoding","layoutStabilizer","performanceMetrics","default"],"sources":["/workspaces/MyFitHero/src/core/utils/performanceOptimizations.ts"],"sourcesContent":["import { useEffect, useCallback } from 'react';\nimport { onCLS, onLCP, onFCP, onTTFB, onINP, type Metric } from 'web-vitals';\nimport React from 'react';\n\ninterface PerformanceThresholds {\n  LCP: number; // < 2.5s\n  INP: number; // < 200ms (remplace FID)\n  CLS: number; // < 0.1\n  FCP: number; // < 1.8s\n  TTFB: number; // < 800ms\n}\n\n// Seuils optimaux pour Lighthouse 95+\nconst PERFORMANCE_THRESHOLDS: PerformanceThresholds = {\n  LCP: 2500,  // Largest Contentful Paint < 2.5s\n  INP: 200,   // Interaction to Next Paint < 200ms\n  CLS: 0.1,   // Cumulative Layout Shift < 0.1\n  FCP: 1800,  // First Contentful Paint < 1.8s\n  TTFB: 800,  // Time to First Byte < 800ms\n};\n\n// Types globaux pour gtag\ndeclare global {\n  function gtag(...args: any[]): void;\n}\n\n// Collecteur de m√©triques de performance\nclass PerformanceCollector {\n  private metrics: Map<string, Metric> = new Map();\n  private listeners: ((metric: Metric) => void)[] = [];\n\n  constructor() {\n    this.initWebVitals();\n  }\n\n  private initWebVitals() {\n    // Collecter toutes les m√©triques Web Vitals\n    onLCP(this.handleMetric.bind(this));\n    onINP(this.handleMetric.bind(this));\n    onCLS(this.handleMetric.bind(this));\n    onFCP(this.handleMetric.bind(this));\n    onTTFB(this.handleMetric.bind(this));\n  }\n\n  private handleMetric(metric: Metric) {\n    this.metrics.set(metric.name, metric);\n    this.listeners.forEach(listener => listener(metric));\n    \n    // Log en d√©veloppement\n    if (import.meta.env.DEV) {\n      console.log(`üìä Performance Metric: ${metric.name}`, {\n        value: `${metric.value}ms`,\n        threshold: `${PERFORMANCE_THRESHOLDS[metric.name as keyof PerformanceThresholds]}ms`,\n        status: this.getMetricStatus(metric)\n      });\n    }\n\n    // Envoyer √† l'analytics en production\n    if (import.meta.env.PROD) {\n      this.sendToAnalytics(metric);\n    }\n  }\n\n  private getMetricStatus(metric: Metric): '‚úÖ Good' | '‚ö†Ô∏è Needs Improvement' | '‚ùå Poor' {\n    const threshold = PERFORMANCE_THRESHOLDS[metric.name as keyof PerformanceThresholds];\n    if (!threshold) return '‚úÖ Good';\n    \n    if (metric.value <= threshold) return '‚úÖ Good';\n    if (metric.value <= threshold * 1.5) return '‚ö†Ô∏è Needs Improvement';\n    return '‚ùå Poor';\n  }\n\n  private async sendToAnalytics(metric: Metric) {\n    try {\n      // Envoyer √† Google Analytics 4 ou service similaire\n      if (typeof gtag !== 'undefined') {\n        gtag('event', metric.name, {\n          metric_value: metric.value,\n          metric_delta: metric.delta,\n          metric_id: metric.id,\n        });\n      }\n\n      // Envoyer √† Supabase pour tracking interne\n      const { supabase } = await import('@/lib/supabase');\n      await supabase.from('performance_metrics').insert({\n        metric_name: metric.name,\n        metric_value: metric.value,\n        metric_delta: metric.delta,\n        metric_id: metric.id,\n        navigation_type: performance.navigation ? performance.navigation.type.toString() : 'unknown',\n        user_agent: navigator.userAgent,\n        created_at: new Date().toISOString()\n      });\n    } catch (error: any) {\n      console.error('Failed to send performance metric:', error);\n    }\n  }\n\n  public getMetrics(): Map<string, Metric> {\n    return this.metrics;\n  }\n\n  public onMetric(listener: (metric: Metric) => void) {\n    this.listeners.push(listener);\n    return () => {\n      const index = this.listeners.indexOf(listener);\n      if (index > -1) this.listeners.splice(index, 1);\n    };\n  }\n}\n\n// Instance globale du collecteur\nconst performanceCollector = new PerformanceCollector();\n\n// Hook pour utiliser les m√©triques de performance\nexport const usePerformanceMetrics = () => {\n  const handleMetric = useCallback((metric: Metric) => {\n    // Traitement optionnel des m√©triques dans les composants\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = performanceCollector.onMetric(handleMetric);\n    return unsubscribe;\n  }, [handleMetric]);\n\n  return {\n    metrics: performanceCollector.getMetrics(),\n    thresholds: PERFORMANCE_THRESHOLDS\n  };\n};\n\n// Optimisations runtime pour am√©liorer INP\nclass RuntimeOptimizerClass {\n  private static instance: RuntimeOptimizerClass;\n  \n  public static getInstance(): RuntimeOptimizerClass {\n    if (!RuntimeOptimizerClass.instance) {\n      RuntimeOptimizerClass.instance = new RuntimeOptimizerClass();\n    }\n    return RuntimeOptimizerClass.instance;\n  }\n\n  // D√©coupage des t√¢ches longues pour am√©liorer FID\n  public async splitLongTask<T>(\n    task: () => T | Promise<T>,\n    maxDuration: number = 50\n  ): Promise<T> {\n    const start = performance.now();\n    \n    const result = await task();\n    \n    const duration = performance.now() - start;\n    if (duration > maxDuration) {\n      // Yielding pour √©viter de bloquer le main thread\n      await new Promise(resolve => setTimeout(resolve, 0));\n    }\n    \n    return result;\n  }\n\n  // Scheduler pour les t√¢ches non-critiques\n  public scheduleIdleTask(task: () => void): void {\n    if ('requestIdleCallback' in window) {\n      requestIdleCallback(task, { timeout: 1000 });\n    } else {\n      setTimeout(task, 0);\n    }\n  }\n\n  // Prefetch des ressources critiques\n  public prefetchResource(href: string, as: string = 'script'): void {\n    if (document.querySelector(`link[href=\"${href}\"]`)) return;\n\n    const link = document.createElement('link');\n    link.rel = 'prefetch';\n    link.href = href;\n    link.as = as;\n    document.head.appendChild(link);\n  }\n\n  // Preload des ressources critiques\n  public preloadResource(href: string, as: string = 'script'): void {\n    if (document.querySelector(`link[href=\"${href}\"]`)) return;\n\n    const link = document.createElement('link');\n    link.rel = 'preload';\n    link.href = href;\n    link.as = as;\n    document.head.appendChild(link);\n  }\n}\n\n// Optimisations pour r√©duire CLS (Cumulative Layout Shift)\nclass LayoutStabilizerClass {\n  // R√©server l'espace pour les images avec dimensions\n  public static reserveImageSpace(width: number, height: number): React.CSSProperties {\n    return {\n      aspectRatio: `${width} / ${height}`,\n      width: '100%',\n      height: 'auto',\n    };\n  }\n\n  // Skeleton loader pour r√©duire CLS\n  public static createSkeleton(\n    width: string | number = '100%',\n    height: string | number = '20px'\n  ): React.CSSProperties {\n    return {\n      width,\n      height,\n      backgroundColor: '#f3f4f6',\n      borderRadius: '4px',\n      animation: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n    };\n  }\n\n  // Container stable pour √©viter les reflows\n  public static stableContainer(minHeight?: number): React.CSSProperties {\n    return {\n      minHeight: minHeight ? `${minHeight}px` : '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n    };\n  }\n}\n\n// Exports avec noms corrects\nexport const RuntimeOptimizer = RuntimeOptimizerClass;\nexport const LayoutStabilizer = LayoutStabilizerClass;\n\n// Hook principal pour les optimisations de performance\nexport const usePerformanceOptimizations = () => {\n  const optimizer = RuntimeOptimizer.getInstance();\n\n  useEffect(() => {\n    // Prefetch des routes critiques apr√®s chargement initial\n    optimizer.scheduleIdleTask(() => {\n      optimizer.prefetchResource('/dashboard', 'document');\n      optimizer.prefetchResource('/workouts', 'document');\n      optimizer.prefetchResource('/nutrition', 'document');\n    });\n\n    // Optimiser les images apr√®s chargement\n    optimizer.scheduleIdleTask(() => {\n      const images = document.querySelectorAll('img[data-optimize]');\n      images.forEach((img) => {\n        if (img instanceof HTMLImageElement && !img.loading) {\n          img.loading = 'lazy';\n          img.decoding = 'async';\n        }\n      });\n    });\n  }, [optimizer]);\n\n  return {\n    optimizer,\n    layoutStabilizer: LayoutStabilizer,\n    performanceMetrics: usePerformanceMetrics(),\n  };\n};\n\n// Export des instances\nexport { performanceCollector };\nexport default usePerformanceOptimizations;"],"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","ignoreList":[]}