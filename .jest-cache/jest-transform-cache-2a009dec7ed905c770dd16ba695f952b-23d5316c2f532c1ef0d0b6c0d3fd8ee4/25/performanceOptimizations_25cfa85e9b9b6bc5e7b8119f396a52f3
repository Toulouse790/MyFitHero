3d0309e8f4167da31634c824a3133207
"use strict";

/* istanbul ignore next */
function cov_hsyibfv02() {
  var path = "/workspaces/MyFitHero/src/core/utils/performanceOptimizations.ts";
  var hash = "2ac952a1a128e49a3c694f33d396ae599c126272";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/core/utils/performanceOptimizations.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "25": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 162
        }
      },
      "26": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 32
        }
      },
      "27": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "28": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "29": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "30": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "31": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 29
        }
      },
      "32": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 62
        }
      },
      "33": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 62
        }
      },
      "34": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 62
        }
      },
      "35": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 62
        }
      },
      "36": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 63
        }
      },
      "37": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 46
        }
      },
      "38": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 61
        }
      },
      "39": {
        start: {
          line: 64,
          column: 43
        },
        end: {
          line: 64,
          column: 59
        }
      },
      "40": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "41": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 71,
          column: 15
        }
      },
      "42": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "43": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 41
        }
      },
      "44": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 79,
          column: 61
        }
      },
      "45": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 81,
          column: 28
        }
      },
      "46": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 28
        }
      },
      "47": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 83,
          column: 28
        }
      },
      "48": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 28
        }
      },
      "49": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 85,
          column: 42
        }
      },
      "50": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 42
        }
      },
      "51": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 24
        }
      },
      "52": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "53": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "54": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 96,
          column: 19
        }
      },
      "55": {
        start: {
          line: 99,
          column: 33
        },
        end: {
          line: 99,
          column: 108
        }
      },
      "56": {
        start: {
          line: 99,
          column: 68
        },
        end: {
          line: 99,
          column: 107
        }
      },
      "57": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "58": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 71
        }
      },
      "59": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 28
        }
      },
      "60": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 38
        }
      },
      "61": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 123,
          column: 10
        }
      },
      "62": {
        start: {
          line: 120,
          column: 26
        },
        end: {
          line: 120,
          column: 58
        }
      },
      "63": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 122,
          column: 48
        }
      },
      "64": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 48
        }
      },
      "65": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 127,
          column: 55
        }
      },
      "66": {
        start: {
          line: 128,
          column: 0
        },
        end: {
          line: 128,
          column: 52
        }
      },
      "67": {
        start: {
          line: 130,
          column: 30
        },
        end: {
          line: 142,
          column: 1
        }
      },
      "68": {
        start: {
          line: 131,
          column: 25
        },
        end: {
          line: 133,
          column: 10
        }
      },
      "69": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 137,
          column: 23
        }
      },
      "70": {
        start: {
          line: 135,
          column: 28
        },
        end: {
          line: 135,
          column: 71
        }
      },
      "71": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 27
        }
      },
      "72": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 141,
          column: 6
        }
      },
      "73": {
        start: {
          line: 143,
          column: 0
        },
        end: {
          line: 143,
          column: 54
        }
      },
      "74": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "75": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 73
        }
      },
      "76": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 46
        }
      },
      "77": {
        start: {
          line: 154,
          column: 22
        },
        end: {
          line: 154,
          column: 39
        }
      },
      "78": {
        start: {
          line: 155,
          column: 23
        },
        end: {
          line: 155,
          column: 35
        }
      },
      "79": {
        start: {
          line: 156,
          column: 25
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "80": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "81": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 65
        }
      },
      "82": {
        start: {
          line: 159,
          column: 41
        },
        end: {
          line: 159,
          column: 63
        }
      },
      "83": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 22
        }
      },
      "84": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "85": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 57
        }
      },
      "86": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 32
        }
      },
      "87": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 175,
          column: 19
        }
      },
      "88": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 19
        }
      },
      "89": {
        start: {
          line: 176,
          column: 21
        },
        end: {
          line: 176,
          column: 51
        }
      },
      "90": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 30
        }
      },
      "91": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 25
        }
      },
      "92": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 21
        }
      },
      "93": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 40
        }
      },
      "94": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 185,
          column: 19
        }
      },
      "95": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 19
        }
      },
      "96": {
        start: {
          line: 186,
          column: 21
        },
        end: {
          line: 186,
          column: 51
        }
      },
      "97": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "98": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 25
        }
      },
      "99": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 21
        }
      },
      "100": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 40
        }
      },
      "101": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 201,
          column: 10
        }
      },
      "102": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 211,
          column: 10
        }
      },
      "103": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "104": {
        start: {
          line: 223,
          column: 0
        },
        end: {
          line: 223,
          column: 49
        }
      },
      "105": {
        start: {
          line: 224,
          column: 0
        },
        end: {
          line: 224,
          column: 49
        }
      },
      "106": {
        start: {
          line: 226,
          column: 36
        },
        end: {
          line: 251,
          column: 1
        }
      },
      "107": {
        start: {
          line: 227,
          column: 22
        },
        end: {
          line: 227,
          column: 60
        }
      },
      "108": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 245,
          column: 20
        }
      },
      "109": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 234,
          column: 11
        }
      },
      "110": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 65
        }
      },
      "111": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 64
        }
      },
      "112": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 65
        }
      },
      "113": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 244,
          column: 11
        }
      },
      "114": {
        start: {
          line: 237,
          column: 27
        },
        end: {
          line: 237,
          column: 74
        }
      },
      "115": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 243,
          column: 15
        }
      },
      "116": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 242,
          column: 17
        }
      },
      "117": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 240,
          column: 41
        }
      },
      "118": {
        start: {
          line: 241,
          column: 20
        },
        end: {
          line: 241,
          column: 43
        }
      },
      "119": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 250,
          column: 6
        }
      },
      "120": {
        start: {
          line: 252,
          column: 0
        },
        end: {
          line: 252,
          column: 66
        }
      },
      "121": {
        start: {
          line: 253,
          column: 0
        },
        end: {
          line: 253,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 39
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 62
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 64,
            column: 31
          },
          end: {
            line: 64,
            column: 32
          }
        },
        loc: {
          start: {
            line: 64,
            column: 43
          },
          end: {
            line: 64,
            column: 59
          }
        },
        line: 64
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 78
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 34
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 88
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 99,
            column: 62
          },
          end: {
            line: 99,
            column: 63
          }
        },
        loc: {
          start: {
            line: 99,
            column: 68
          },
          end: {
            line: 99,
            column: 107
          }
        },
        line: 99
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 114
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 23
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 117
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 119,
            column: 15
          },
          end: {
            line: 119,
            column: 16
          }
        },
        loc: {
          start: {
            line: 119,
            column: 21
          },
          end: {
            line: 123,
            column: 9
          }
        },
        line: 119
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 130,
            column: 30
          },
          end: {
            line: 130,
            column: 31
          }
        },
        loc: {
          start: {
            line: 130,
            column: 36
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 130
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 131,
            column: 50
          },
          end: {
            line: 131,
            column: 51
          }
        },
        loc: {
          start: {
            line: 131,
            column: 62
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 131
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 134,
            column: 27
          },
          end: {
            line: 134,
            column: 28
          }
        },
        loc: {
          start: {
            line: 134,
            column: 33
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 134
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 25
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 146
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 48
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 153
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 159,
            column: 30
          },
          end: {
            line: 159,
            column: 31
          }
        },
        loc: {
          start: {
            line: 159,
            column: 41
          },
          end: {
            line: 159,
            column: 63
          }
        },
        line: 159
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 27
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 164
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        loc: {
          start: {
            line: 173,
            column: 42
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 173
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 41
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 183
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 44
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 196
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 59
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 204
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 38
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 214
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 226,
            column: 36
          },
          end: {
            line: 226,
            column: 37
          }
        },
        loc: {
          start: {
            line: 226,
            column: 42
          },
          end: {
            line: 251,
            column: 1
          }
        },
        line: 226
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 228,
            column: 27
          },
          end: {
            line: 228,
            column: 28
          }
        },
        loc: {
          start: {
            line: 228,
            column: 33
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 228
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 230,
            column: 35
          },
          end: {
            line: 230,
            column: 36
          }
        },
        loc: {
          start: {
            line: 230,
            column: 41
          },
          end: {
            line: 234,
            column: 9
          }
        },
        line: 230
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 236,
            column: 35
          },
          end: {
            line: 236,
            column: 36
          }
        },
        loc: {
          start: {
            line: 236,
            column: 41
          },
          end: {
            line: 244,
            column: 9
          }
        },
        line: 236
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 238,
            column: 27
          },
          end: {
            line: 238,
            column: 28
          }
        },
        loc: {
          start: {
            line: 238,
            column: 36
          },
          end: {
            line: 243,
            column: 13
          }
        },
        line: 238
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "17": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "18": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 81,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 81,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "19": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 83,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 83,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "20": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 85,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 85,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "21": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "22": {
        loc: {
          start: {
            line: 105,
            column: 33
          },
          end: {
            line: 105,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 58
          },
          end: {
            line: 105,
            column: 96
          }
        }, {
          start: {
            line: 105,
            column: 99
          },
          end: {
            line: 105,
            column: 108
          }
        }],
        line: 105
      },
      "23": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 122,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 122,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "24": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "25": {
        loc: {
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 153,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 153,
            column: 44
          },
          end: {
            line: 153,
            column: 46
          }
        }],
        line: 153
      },
      "26": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "27": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: 168,
            column: 13
          },
          end: {
            line: 170,
            column: 9
          }
        }],
        line: 165
      },
      "28": {
        loc: {
          start: {
            line: 173,
            column: 27
          },
          end: {
            line: 173,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 173,
            column: 32
          },
          end: {
            line: 173,
            column: 40
          }
        }],
        line: 173
      },
      "29": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 175,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 175,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "30": {
        loc: {
          start: {
            line: 183,
            column: 26
          },
          end: {
            line: 183,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 183,
            column: 31
          },
          end: {
            line: 183,
            column: 39
          }
        }],
        line: 183
      },
      "31": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 185,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 185,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "32": {
        loc: {
          start: {
            line: 204,
            column: 26
          },
          end: {
            line: 204,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 204,
            column: 34
          },
          end: {
            line: 204,
            column: 40
          }
        }],
        line: 204
      },
      "33": {
        loc: {
          start: {
            line: 204,
            column: 42
          },
          end: {
            line: 204,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 204,
            column: 51
          },
          end: {
            line: 204,
            column: 57
          }
        }],
        line: 204
      },
      "34": {
        loc: {
          start: {
            line: 216,
            column: 23
          },
          end: {
            line: 216,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 216,
            column: 35
          },
          end: {
            line: 216,
            column: 51
          }
        }, {
          start: {
            line: 216,
            column: 54
          },
          end: {
            line: 216,
            column: 61
          }
        }],
        line: 216
      },
      "35": {
        loc: {
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 242,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 242,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "36": {
        loc: {
          start: {
            line: 239,
            column: 20
          },
          end: {
            line: 239,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 20
          },
          end: {
            line: 239,
            column: 51
          }
        }, {
          start: {
            line: 239,
            column: 55
          },
          end: {
            line: 239,
            column: 67
          }
        }],
        line: 239
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0],
      "29": [0, 0],
      "30": [0],
      "31": [0, 0],
      "32": [0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/core/utils/performanceOptimizations.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/core/utils/performanceOptimizations.ts"],
      sourcesContent: ["import { useEffect, useCallback } from 'react';\nimport { onCLS, onLCP, onFCP, onTTFB, onINP, type Metric } from 'web-vitals';\nimport React from 'react';\n\ninterface PerformanceThresholds {\n  LCP: number; // < 2.5s\n  INP: number; // < 200ms (remplace FID)\n  CLS: number; // < 0.1\n  FCP: number; // < 1.8s\n  TTFB: number; // < 800ms\n}\n\n// Seuils optimaux pour Lighthouse 95+\nconst PERFORMANCE_THRESHOLDS: PerformanceThresholds = {\n  LCP: 2500,  // Largest Contentful Paint < 2.5s\n  INP: 200,   // Interaction to Next Paint < 200ms\n  CLS: 0.1,   // Cumulative Layout Shift < 0.1\n  FCP: 1800,  // First Contentful Paint < 1.8s\n  TTFB: 800,  // Time to First Byte < 800ms\n};\n\n// Types globaux pour gtag\ndeclare global {\n  function gtag(...args: any[]): void;\n}\n\n// Collecteur de m\xE9triques de performance\nclass PerformanceCollector {\n  private metrics: Map<string, Metric> = new Map();\n  private listeners: ((metric: Metric) => void)[] = [];\n\n  constructor() {\n    this.initWebVitals();\n  }\n\n  private initWebVitals() {\n    // Collecter toutes les m\xE9triques Web Vitals\n    onLCP(this.handleMetric.bind(this));\n    onINP(this.handleMetric.bind(this));\n    onCLS(this.handleMetric.bind(this));\n    onFCP(this.handleMetric.bind(this));\n    onTTFB(this.handleMetric.bind(this));\n  }\n\n  private handleMetric(metric: Metric) {\n    this.metrics.set(metric.name, metric);\n    this.listeners.forEach(listener => listener(metric));\n    \n    // Log en d\xE9veloppement\n    if (import.meta.env.DEV) {\n      console.log(`\uD83D\uDCCA Performance Metric: ${metric.name}`, {\n        value: `${metric.value}ms`,\n        threshold: `${PERFORMANCE_THRESHOLDS[metric.name as keyof PerformanceThresholds]}ms`,\n        status: this.getMetricStatus(metric)\n      });\n    }\n\n    // Envoyer \xE0 l'analytics en production\n    if (import.meta.env.PROD) {\n      this.sendToAnalytics(metric);\n    }\n  }\n\n  private getMetricStatus(metric: Metric): '\u2705 Good' | '\u26A0\uFE0F Needs Improvement' | '\u274C Poor' {\n    const threshold = PERFORMANCE_THRESHOLDS[metric.name as keyof PerformanceThresholds];\n    if (!threshold) return '\u2705 Good';\n    \n    if (metric.value <= threshold) return '\u2705 Good';\n    if (metric.value <= threshold * 1.5) return '\u26A0\uFE0F Needs Improvement';\n    return '\u274C Poor';\n  }\n\n  private async sendToAnalytics(metric: Metric) {\n    try {\n      // Envoyer \xE0 Google Analytics 4 ou service similaire\n      if (typeof gtag !== 'undefined') {\n        gtag('event', metric.name, {\n          metric_value: metric.value,\n          metric_delta: metric.delta,\n          metric_id: metric.id,\n        });\n      }\n\n      // Envoyer \xE0 Supabase pour tracking interne\n      const { supabase } = await import('@/lib/supabase');\n      await supabase.from('performance_metrics').insert({\n        metric_name: metric.name,\n        metric_value: metric.value,\n        metric_delta: metric.delta,\n        metric_id: metric.id,\n        navigation_type: performance.navigation ? performance.navigation.type.toString() : 'unknown',\n        user_agent: navigator.userAgent,\n        created_at: new Date().toISOString()\n      });\n    } catch (error: any) {\n      console.error('Failed to send performance metric:', error);\n    }\n  }\n\n  public getMetrics(): Map<string, Metric> {\n    return this.metrics;\n  }\n\n  public onMetric(listener: (metric: Metric) => void) {\n    this.listeners.push(listener);\n    return () => {\n      const index = this.listeners.indexOf(listener);\n      if (index > -1) this.listeners.splice(index, 1);\n    };\n  }\n}\n\n// Instance globale du collecteur\nconst performanceCollector = new PerformanceCollector();\n\n// Hook pour utiliser les m\xE9triques de performance\nexport const usePerformanceMetrics = () => {\n  const handleMetric = useCallback((metric: Metric) => {\n    // Traitement optionnel des m\xE9triques dans les composants\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = performanceCollector.onMetric(handleMetric);\n    return unsubscribe;\n  }, [handleMetric]);\n\n  return {\n    metrics: performanceCollector.getMetrics(),\n    thresholds: PERFORMANCE_THRESHOLDS\n  };\n};\n\n// Optimisations runtime pour am\xE9liorer INP\nclass RuntimeOptimizerClass {\n  private static instance: RuntimeOptimizerClass;\n  \n  public static getInstance(): RuntimeOptimizerClass {\n    if (!RuntimeOptimizerClass.instance) {\n      RuntimeOptimizerClass.instance = new RuntimeOptimizerClass();\n    }\n    return RuntimeOptimizerClass.instance;\n  }\n\n  // D\xE9coupage des t\xE2ches longues pour am\xE9liorer FID\n  public async splitLongTask<T>(\n    task: () => T | Promise<T>,\n    maxDuration: number = 50\n  ): Promise<T> {\n    const start = performance.now();\n    \n    const result = await task();\n    \n    const duration = performance.now() - start;\n    if (duration > maxDuration) {\n      // Yielding pour \xE9viter de bloquer le main thread\n      await new Promise(resolve => setTimeout(resolve, 0));\n    }\n    \n    return result;\n  }\n\n  // Scheduler pour les t\xE2ches non-critiques\n  public scheduleIdleTask(task: () => void): void {\n    if ('requestIdleCallback' in window) {\n      requestIdleCallback(task, { timeout: 1000 });\n    } else {\n      setTimeout(task, 0);\n    }\n  }\n\n  // Prefetch des ressources critiques\n  public prefetchResource(href: string, as: string = 'script'): void {\n    if (document.querySelector(`link[href=\"${href}\"]`)) return;\n\n    const link = document.createElement('link');\n    link.rel = 'prefetch';\n    link.href = href;\n    link.as = as;\n    document.head.appendChild(link);\n  }\n\n  // Preload des ressources critiques\n  public preloadResource(href: string, as: string = 'script'): void {\n    if (document.querySelector(`link[href=\"${href}\"]`)) return;\n\n    const link = document.createElement('link');\n    link.rel = 'preload';\n    link.href = href;\n    link.as = as;\n    document.head.appendChild(link);\n  }\n}\n\n// Optimisations pour r\xE9duire CLS (Cumulative Layout Shift)\nclass LayoutStabilizerClass {\n  // R\xE9server l'espace pour les images avec dimensions\n  public static reserveImageSpace(width: number, height: number): React.CSSProperties {\n    return {\n      aspectRatio: `${width} / ${height}`,\n      width: '100%',\n      height: 'auto',\n    };\n  }\n\n  // Skeleton loader pour r\xE9duire CLS\n  public static createSkeleton(\n    width: string | number = '100%',\n    height: string | number = '20px'\n  ): React.CSSProperties {\n    return {\n      width,\n      height,\n      backgroundColor: '#f3f4f6',\n      borderRadius: '4px',\n      animation: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n    };\n  }\n\n  // Container stable pour \xE9viter les reflows\n  public static stableContainer(minHeight?: number): React.CSSProperties {\n    return {\n      minHeight: minHeight ? `${minHeight}px` : '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n    };\n  }\n}\n\n// Exports avec noms corrects\nexport const RuntimeOptimizer = RuntimeOptimizerClass;\nexport const LayoutStabilizer = LayoutStabilizerClass;\n\n// Hook principal pour les optimisations de performance\nexport const usePerformanceOptimizations = () => {\n  const optimizer = RuntimeOptimizer.getInstance();\n\n  useEffect(() => {\n    // Prefetch des routes critiques apr\xE8s chargement initial\n    optimizer.scheduleIdleTask(() => {\n      optimizer.prefetchResource('/dashboard', 'document');\n      optimizer.prefetchResource('/workouts', 'document');\n      optimizer.prefetchResource('/nutrition', 'document');\n    });\n\n    // Optimiser les images apr\xE8s chargement\n    optimizer.scheduleIdleTask(() => {\n      const images = document.querySelectorAll('img[data-optimize]');\n      images.forEach((img) => {\n        if (img instanceof HTMLImageElement && !img.loading) {\n          img.loading = 'lazy';\n          img.decoding = 'async';\n        }\n      });\n    });\n  }, [optimizer]);\n\n  return {\n    optimizer,\n    layoutStabilizer: LayoutStabilizer,\n    performanceMetrics: usePerformanceMetrics(),\n  };\n};\n\n// Export des instances\nexport { performanceCollector };\nexport default usePerformanceOptimizations;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2ac952a1a128e49a3c694f33d396ae599c126272"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_hsyibfv02 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_hsyibfv02();
var __createBinding =
/* istanbul ignore next */
(cov_hsyibfv02().s[0]++,
/* istanbul ignore next */
(cov_hsyibfv02().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_hsyibfv02().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_hsyibfv02().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_hsyibfv02().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_hsyibfv02().f[0]++;
  cov_hsyibfv02().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_hsyibfv02().b[2][0]++;
    cov_hsyibfv02().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_hsyibfv02().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_hsyibfv02().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_hsyibfv02().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_hsyibfv02().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_hsyibfv02().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_hsyibfv02().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_hsyibfv02().b[5][1]++,
  /* istanbul ignore next */
  (cov_hsyibfv02().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_hsyibfv02().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_hsyibfv02().b[3][0]++;
    cov_hsyibfv02().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_hsyibfv02().f[1]++;
        cov_hsyibfv02().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_hsyibfv02().b[3][1]++;
  }
  cov_hsyibfv02().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_hsyibfv02().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_hsyibfv02().f[2]++;
  cov_hsyibfv02().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_hsyibfv02().b[7][0]++;
    cov_hsyibfv02().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_hsyibfv02().b[7][1]++;
  }
  cov_hsyibfv02().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_hsyibfv02().s[11]++,
/* istanbul ignore next */
(cov_hsyibfv02().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_hsyibfv02().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_hsyibfv02().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_hsyibfv02().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_hsyibfv02().f[3]++;
  cov_hsyibfv02().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_hsyibfv02().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_hsyibfv02().f[4]++;
  cov_hsyibfv02().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_hsyibfv02().s[14]++,
/* istanbul ignore next */
(cov_hsyibfv02().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_hsyibfv02().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_hsyibfv02().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_hsyibfv02().f[5]++;
  cov_hsyibfv02().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_hsyibfv02().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_hsyibfv02().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_hsyibfv02().b[11][0]++;
    cov_hsyibfv02().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_hsyibfv02().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_hsyibfv02().s[17]++, {});
  /* istanbul ignore next */
  cov_hsyibfv02().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_hsyibfv02().b[13][0]++;
    cov_hsyibfv02().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_hsyibfv02().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_hsyibfv02().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_hsyibfv02().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_hsyibfv02().b[14][0]++;
        cov_hsyibfv02().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_hsyibfv02().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_hsyibfv02().b[13][1]++;
  }
  cov_hsyibfv02().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_hsyibfv02().s[23]++;
  return result;
}));
/* istanbul ignore next */
cov_hsyibfv02().s[24]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_hsyibfv02().s[25]++;
exports.performanceCollector = exports.usePerformanceOptimizations = exports.LayoutStabilizer = exports.RuntimeOptimizer = exports.usePerformanceMetrics = void 0;
const react_1 =
/* istanbul ignore next */
(cov_hsyibfv02().s[26]++, require("react"));
const web_vitals_1 =
/* istanbul ignore next */
(cov_hsyibfv02().s[27]++, require("web-vitals"));
// Seuils optimaux pour Lighthouse 95+
const PERFORMANCE_THRESHOLDS =
/* istanbul ignore next */
(cov_hsyibfv02().s[28]++, {
  LCP: 2500,
  // Largest Contentful Paint < 2.5s
  INP: 200,
  // Interaction to Next Paint < 200ms
  CLS: 0.1,
  // Cumulative Layout Shift < 0.1
  FCP: 1800,
  // First Contentful Paint < 1.8s
  TTFB: 800 // Time to First Byte < 800ms
});
// Collecteur de métriques de performance
class PerformanceCollector {
  constructor() {
    /* istanbul ignore next */
    cov_hsyibfv02().f[6]++;
    cov_hsyibfv02().s[29]++;
    Object.defineProperty(this, "metrics", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: new Map()
    });
    /* istanbul ignore next */
    cov_hsyibfv02().s[30]++;
    Object.defineProperty(this, "listeners", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: []
    });
    /* istanbul ignore next */
    cov_hsyibfv02().s[31]++;
    this.initWebVitals();
  }
  initWebVitals() {
    /* istanbul ignore next */
    cov_hsyibfv02().f[7]++;
    cov_hsyibfv02().s[32]++;
    // Collecter toutes les métriques Web Vitals
    (0, web_vitals_1.onLCP)(this.handleMetric.bind(this));
    /* istanbul ignore next */
    cov_hsyibfv02().s[33]++;
    (0, web_vitals_1.onINP)(this.handleMetric.bind(this));
    /* istanbul ignore next */
    cov_hsyibfv02().s[34]++;
    (0, web_vitals_1.onCLS)(this.handleMetric.bind(this));
    /* istanbul ignore next */
    cov_hsyibfv02().s[35]++;
    (0, web_vitals_1.onFCP)(this.handleMetric.bind(this));
    /* istanbul ignore next */
    cov_hsyibfv02().s[36]++;
    (0, web_vitals_1.onTTFB)(this.handleMetric.bind(this));
  }
  handleMetric(metric) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[8]++;
    cov_hsyibfv02().s[37]++;
    this.metrics.set(metric.name, metric);
    /* istanbul ignore next */
    cov_hsyibfv02().s[38]++;
    this.listeners.forEach(listener => {
      /* istanbul ignore next */
      cov_hsyibfv02().f[9]++;
      cov_hsyibfv02().s[39]++;
      return listener(metric);
    });
    // Log en développement
    /* istanbul ignore next */
    cov_hsyibfv02().s[40]++;
    if (import.meta.env.DEV) {
      /* istanbul ignore next */
      cov_hsyibfv02().b[16][0]++;
      cov_hsyibfv02().s[41]++;
      console.log(`📊 Performance Metric: ${metric.name}`, {
        value: `${metric.value}ms`,
        threshold: `${PERFORMANCE_THRESHOLDS[metric.name]}ms`,
        status: this.getMetricStatus(metric)
      });
    } else
    /* istanbul ignore next */
    {
      cov_hsyibfv02().b[16][1]++;
    }
    // Envoyer à l'analytics en production
    cov_hsyibfv02().s[42]++;
    if (import.meta.env.PROD) {
      /* istanbul ignore next */
      cov_hsyibfv02().b[17][0]++;
      cov_hsyibfv02().s[43]++;
      this.sendToAnalytics(metric);
    } else
    /* istanbul ignore next */
    {
      cov_hsyibfv02().b[17][1]++;
    }
  }
  getMetricStatus(metric) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[10]++;
    const threshold =
    /* istanbul ignore next */
    (cov_hsyibfv02().s[44]++, PERFORMANCE_THRESHOLDS[metric.name]);
    /* istanbul ignore next */
    cov_hsyibfv02().s[45]++;
    if (!threshold) {
      /* istanbul ignore next */
      cov_hsyibfv02().b[18][0]++;
      cov_hsyibfv02().s[46]++;
      return '✅ Good';
    } else
    /* istanbul ignore next */
    {
      cov_hsyibfv02().b[18][1]++;
    }
    cov_hsyibfv02().s[47]++;
    if (metric.value <= threshold) {
      /* istanbul ignore next */
      cov_hsyibfv02().b[19][0]++;
      cov_hsyibfv02().s[48]++;
      return '✅ Good';
    } else
    /* istanbul ignore next */
    {
      cov_hsyibfv02().b[19][1]++;
    }
    cov_hsyibfv02().s[49]++;
    if (metric.value <= threshold * 1.5) {
      /* istanbul ignore next */
      cov_hsyibfv02().b[20][0]++;
      cov_hsyibfv02().s[50]++;
      return '⚠️ Needs Improvement';
    } else
    /* istanbul ignore next */
    {
      cov_hsyibfv02().b[20][1]++;
    }
    cov_hsyibfv02().s[51]++;
    return '❌ Poor';
  }
  async sendToAnalytics(metric) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[11]++;
    cov_hsyibfv02().s[52]++;
    try {
      /* istanbul ignore next */
      cov_hsyibfv02().s[53]++;
      // Envoyer à Google Analytics 4 ou service similaire
      if (typeof gtag !== 'undefined') {
        /* istanbul ignore next */
        cov_hsyibfv02().b[21][0]++;
        cov_hsyibfv02().s[54]++;
        gtag('event', metric.name, {
          metric_value: metric.value,
          metric_delta: metric.delta,
          metric_id: metric.id
        });
      } else
      /* istanbul ignore next */
      {
        cov_hsyibfv02().b[21][1]++;
      }
      // Envoyer à Supabase pour tracking interne
      const {
        supabase
      } =
      /* istanbul ignore next */
      (cov_hsyibfv02().s[55]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_hsyibfv02().f[12]++;
        cov_hsyibfv02().s[56]++;
        return __importStar(require('@/lib/supabase'));
      }));
      /* istanbul ignore next */
      cov_hsyibfv02().s[57]++;
      await supabase.from('performance_metrics').insert({
        metric_name: metric.name,
        metric_value: metric.value,
        metric_delta: metric.delta,
        metric_id: metric.id,
        navigation_type: performance.navigation ?
        /* istanbul ignore next */
        (cov_hsyibfv02().b[22][0]++, performance.navigation.type.toString()) :
        /* istanbul ignore next */
        (cov_hsyibfv02().b[22][1]++, 'unknown'),
        user_agent: navigator.userAgent,
        created_at: new Date().toISOString()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_hsyibfv02().s[58]++;
      console.error('Failed to send performance metric:', error);
    }
  }
  getMetrics() {
    /* istanbul ignore next */
    cov_hsyibfv02().f[13]++;
    cov_hsyibfv02().s[59]++;
    return this.metrics;
  }
  onMetric(listener) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[14]++;
    cov_hsyibfv02().s[60]++;
    this.listeners.push(listener);
    /* istanbul ignore next */
    cov_hsyibfv02().s[61]++;
    return () => {
      /* istanbul ignore next */
      cov_hsyibfv02().f[15]++;
      const index =
      /* istanbul ignore next */
      (cov_hsyibfv02().s[62]++, this.listeners.indexOf(listener));
      /* istanbul ignore next */
      cov_hsyibfv02().s[63]++;
      if (index > -1) {
        /* istanbul ignore next */
        cov_hsyibfv02().b[23][0]++;
        cov_hsyibfv02().s[64]++;
        this.listeners.splice(index, 1);
      } else
      /* istanbul ignore next */
      {
        cov_hsyibfv02().b[23][1]++;
      }
    };
  }
}
// Instance globale du collecteur
const performanceCollector =
/* istanbul ignore next */
(cov_hsyibfv02().s[65]++, new PerformanceCollector());
/* istanbul ignore next */
cov_hsyibfv02().s[66]++;
exports.performanceCollector = performanceCollector;
// Hook pour utiliser les métriques de performance
/* istanbul ignore next */
cov_hsyibfv02().s[67]++;
const usePerformanceMetrics = () => {
  /* istanbul ignore next */
  cov_hsyibfv02().f[16]++;
  const handleMetric =
  /* istanbul ignore next */
  (cov_hsyibfv02().s[68]++, (0, react_1.useCallback)(metric => {
    /* istanbul ignore next */
    cov_hsyibfv02().f[17]++;
  } // Traitement optionnel des métriques dans les composants
  , []));
  /* istanbul ignore next */
  cov_hsyibfv02().s[69]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_hsyibfv02().f[18]++;
    const unsubscribe =
    /* istanbul ignore next */
    (cov_hsyibfv02().s[70]++, performanceCollector.onMetric(handleMetric));
    /* istanbul ignore next */
    cov_hsyibfv02().s[71]++;
    return unsubscribe;
  }, [handleMetric]);
  /* istanbul ignore next */
  cov_hsyibfv02().s[72]++;
  return {
    metrics: performanceCollector.getMetrics(),
    thresholds: PERFORMANCE_THRESHOLDS
  };
};
/* istanbul ignore next */
cov_hsyibfv02().s[73]++;
exports.usePerformanceMetrics = usePerformanceMetrics;
// Optimisations runtime pour améliorer INP
class RuntimeOptimizerClass {
  static getInstance() {
    /* istanbul ignore next */
    cov_hsyibfv02().f[19]++;
    cov_hsyibfv02().s[74]++;
    if (!RuntimeOptimizerClass.instance) {
      /* istanbul ignore next */
      cov_hsyibfv02().b[24][0]++;
      cov_hsyibfv02().s[75]++;
      RuntimeOptimizerClass.instance = new RuntimeOptimizerClass();
    } else
    /* istanbul ignore next */
    {
      cov_hsyibfv02().b[24][1]++;
    }
    cov_hsyibfv02().s[76]++;
    return RuntimeOptimizerClass.instance;
  }
  // Découpage des tâches longues pour améliorer FID
  async splitLongTask(task, maxDuration =
  /* istanbul ignore next */
  (cov_hsyibfv02().b[25][0]++, 50)) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[20]++;
    const start =
    /* istanbul ignore next */
    (cov_hsyibfv02().s[77]++, performance.now());
    const result =
    /* istanbul ignore next */
    (cov_hsyibfv02().s[78]++, await task());
    const duration =
    /* istanbul ignore next */
    (cov_hsyibfv02().s[79]++, performance.now() - start);
    /* istanbul ignore next */
    cov_hsyibfv02().s[80]++;
    if (duration > maxDuration) {
      /* istanbul ignore next */
      cov_hsyibfv02().b[26][0]++;
      cov_hsyibfv02().s[81]++;
      // Yielding pour éviter de bloquer le main thread
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_hsyibfv02().f[21]++;
        cov_hsyibfv02().s[82]++;
        return setTimeout(resolve, 0);
      });
    } else
    /* istanbul ignore next */
    {
      cov_hsyibfv02().b[26][1]++;
    }
    cov_hsyibfv02().s[83]++;
    return result;
  }
  // Scheduler pour les tâches non-critiques
  scheduleIdleTask(task) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[22]++;
    cov_hsyibfv02().s[84]++;
    if ('requestIdleCallback' in window) {
      /* istanbul ignore next */
      cov_hsyibfv02().b[27][0]++;
      cov_hsyibfv02().s[85]++;
      requestIdleCallback(task, {
        timeout: 1000
      });
    } else {
      /* istanbul ignore next */
      cov_hsyibfv02().b[27][1]++;
      cov_hsyibfv02().s[86]++;
      setTimeout(task, 0);
    }
  }
  // Prefetch des ressources critiques
  prefetchResource(href, as =
  /* istanbul ignore next */
  (cov_hsyibfv02().b[28][0]++, 'script')) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[23]++;
    cov_hsyibfv02().s[87]++;
    if (document.querySelector(`link[href="${href}"]`)) {
      /* istanbul ignore next */
      cov_hsyibfv02().b[29][0]++;
      cov_hsyibfv02().s[88]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_hsyibfv02().b[29][1]++;
    }
    const link =
    /* istanbul ignore next */
    (cov_hsyibfv02().s[89]++, document.createElement('link'));
    /* istanbul ignore next */
    cov_hsyibfv02().s[90]++;
    link.rel = 'prefetch';
    /* istanbul ignore next */
    cov_hsyibfv02().s[91]++;
    link.href = href;
    /* istanbul ignore next */
    cov_hsyibfv02().s[92]++;
    link.as = as;
    /* istanbul ignore next */
    cov_hsyibfv02().s[93]++;
    document.head.appendChild(link);
  }
  // Preload des ressources critiques
  preloadResource(href, as =
  /* istanbul ignore next */
  (cov_hsyibfv02().b[30][0]++, 'script')) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[24]++;
    cov_hsyibfv02().s[94]++;
    if (document.querySelector(`link[href="${href}"]`)) {
      /* istanbul ignore next */
      cov_hsyibfv02().b[31][0]++;
      cov_hsyibfv02().s[95]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_hsyibfv02().b[31][1]++;
    }
    const link =
    /* istanbul ignore next */
    (cov_hsyibfv02().s[96]++, document.createElement('link'));
    /* istanbul ignore next */
    cov_hsyibfv02().s[97]++;
    link.rel = 'preload';
    /* istanbul ignore next */
    cov_hsyibfv02().s[98]++;
    link.href = href;
    /* istanbul ignore next */
    cov_hsyibfv02().s[99]++;
    link.as = as;
    /* istanbul ignore next */
    cov_hsyibfv02().s[100]++;
    document.head.appendChild(link);
  }
}
// Optimisations pour réduire CLS (Cumulative Layout Shift)
class LayoutStabilizerClass {
  // Réserver l'espace pour les images avec dimensions
  static reserveImageSpace(width, height) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[25]++;
    cov_hsyibfv02().s[101]++;
    return {
      aspectRatio: `${width} / ${height}`,
      width: '100%',
      height: 'auto'
    };
  }
  // Skeleton loader pour réduire CLS
  static createSkeleton(width =
  /* istanbul ignore next */
  (cov_hsyibfv02().b[32][0]++, '100%'), height =
  /* istanbul ignore next */
  (cov_hsyibfv02().b[33][0]++, '20px')) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[26]++;
    cov_hsyibfv02().s[102]++;
    return {
      width,
      height,
      backgroundColor: '#f3f4f6',
      borderRadius: '4px',
      animation: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite'
    };
  }
  // Container stable pour éviter les reflows
  static stableContainer(minHeight) {
    /* istanbul ignore next */
    cov_hsyibfv02().f[27]++;
    cov_hsyibfv02().s[103]++;
    return {
      minHeight: minHeight ?
      /* istanbul ignore next */
      (cov_hsyibfv02().b[34][0]++, `${minHeight}px`) :
      /* istanbul ignore next */
      (cov_hsyibfv02().b[34][1]++, '100vh'),
      display: 'flex',
      flexDirection: 'column'
    };
  }
}
// Exports avec noms corrects
/* istanbul ignore next */
cov_hsyibfv02().s[104]++;
exports.RuntimeOptimizer = RuntimeOptimizerClass;
/* istanbul ignore next */
cov_hsyibfv02().s[105]++;
exports.LayoutStabilizer = LayoutStabilizerClass;
// Hook principal pour les optimisations de performance
/* istanbul ignore next */
cov_hsyibfv02().s[106]++;
const usePerformanceOptimizations = () => {
  /* istanbul ignore next */
  cov_hsyibfv02().f[28]++;
  const optimizer =
  /* istanbul ignore next */
  (cov_hsyibfv02().s[107]++, exports.RuntimeOptimizer.getInstance());
  /* istanbul ignore next */
  cov_hsyibfv02().s[108]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_hsyibfv02().f[29]++;
    cov_hsyibfv02().s[109]++;
    // Prefetch des routes critiques après chargement initial
    optimizer.scheduleIdleTask(() => {
      /* istanbul ignore next */
      cov_hsyibfv02().f[30]++;
      cov_hsyibfv02().s[110]++;
      optimizer.prefetchResource('/dashboard', 'document');
      /* istanbul ignore next */
      cov_hsyibfv02().s[111]++;
      optimizer.prefetchResource('/workouts', 'document');
      /* istanbul ignore next */
      cov_hsyibfv02().s[112]++;
      optimizer.prefetchResource('/nutrition', 'document');
    });
    // Optimiser les images après chargement
    /* istanbul ignore next */
    cov_hsyibfv02().s[113]++;
    optimizer.scheduleIdleTask(() => {
      /* istanbul ignore next */
      cov_hsyibfv02().f[31]++;
      const images =
      /* istanbul ignore next */
      (cov_hsyibfv02().s[114]++, document.querySelectorAll('img[data-optimize]'));
      /* istanbul ignore next */
      cov_hsyibfv02().s[115]++;
      images.forEach(img => {
        /* istanbul ignore next */
        cov_hsyibfv02().f[32]++;
        cov_hsyibfv02().s[116]++;
        if (
        /* istanbul ignore next */
        (cov_hsyibfv02().b[36][0]++, img instanceof HTMLImageElement) &&
        /* istanbul ignore next */
        (cov_hsyibfv02().b[36][1]++, !img.loading)) {
          /* istanbul ignore next */
          cov_hsyibfv02().b[35][0]++;
          cov_hsyibfv02().s[117]++;
          img.loading = 'lazy';
          /* istanbul ignore next */
          cov_hsyibfv02().s[118]++;
          img.decoding = 'async';
        } else
        /* istanbul ignore next */
        {
          cov_hsyibfv02().b[35][1]++;
        }
      });
    });
  }, [optimizer]);
  /* istanbul ignore next */
  cov_hsyibfv02().s[119]++;
  return {
    optimizer,
    layoutStabilizer: exports.LayoutStabilizer,
    performanceMetrics: (0, exports.usePerformanceMetrics)()
  };
};
/* istanbul ignore next */
cov_hsyibfv02().s[120]++;
exports.usePerformanceOptimizations = usePerformanceOptimizations;
/* istanbul ignore next */
cov_hsyibfv02().s[121]++;
exports.default = exports.usePerformanceOptimizations;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,