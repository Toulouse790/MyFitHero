{"version":3,"names":["cov_1ru9mhtwkt","actualCoverage","s","react_1","require","use_toast_1","usePWA","f","isInstallable","setIsInstallable","useState","isInstalled","setIsInstalled","isOnline","setIsOnline","navigator","onLine","updateAvailable","setUpdateAvailable","deferredPrompt","setDeferredPrompt","toast","useToast","useEffect","b","serviceWorker","register","then","registration","addEventListener","newWorker","installing","state","controller","title","description","catch","error","console","checkInstalled","window","matchMedia","matches","handleBeforeInstallPrompt","e","preventDefault","removeEventListener","handleOnline","handleOffline","installApp","result","prompt","outcome","checkForUpdates","getRegistration","update","enableNotifications","permission","Notification","requestPermission","registerBackgroundSync","tag","ServiceWorkerRegistration","prototype","ready","sync","exports","useOfflineStorage","db","setDb","openDB","request","indexedDB","open","onupgradeneeded","event","database","target","objectStoreNames","contains","store","createObjectStore","keyPath","autoIncrement","createIndex","unique","userStore","onsuccess","onerror","storePendingData","data","transaction","objectStore","add","timestamp","Date","now","getCachedData","key","Promise","resolve","get","expiresAt","setCachedData","ttl","put","isReady"],"sources":["/workspaces/MyFitHero/src/features/auth/hooks/usePWA.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// Hook pour la gestion PWA et mode hors ligne\nimport { useToast } from '@/shared/hooks/use-toast';\n\ninterface PWAState {\n  isInstallable: boolean;\n  isInstalled: boolean;\n  isOnline: boolean;\n  updateAvailable: boolean;\n}\n\ninterface PWAActions {\n  installApp: () => Promise<void>;\n  checkForUpdates: () => Promise<void>;\n  enableNotifications: () => Promise<boolean>;\n  registerBackgroundSync: (tag: string) => Promise<void>;\n}\n\nexport const usePWA = (): PWAState & PWAActions => {\n  const [isInstallable, setIsInstallable] = useState(false);\n  const [isInstalled, setIsInstalled] = useState(false);\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  const [deferredPrompt, setDeferredPrompt] = useState<any>(null);\n\n  const { toast } = useToast();\n\n  // === ENREGISTREMENT DU SERVICE WORKER ===\n  useEffect(() => {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker\n        .register('/sw.js')\n        .then(registration => {\n\n          // Vérifier les mises à jour\n          registration.addEventListener('updatefound', () => {\n            const newWorker = registration.installing;\n            if (newWorker) {\n              newWorker.addEventListener('statechange', () => {\n                if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n                  setUpdateAvailable(true);\n                  toast({\n                    title: 'Mise à jour disponible',\n                    description: \"Une nouvelle version de l'app est prête !\",\n                  });\n                }\n              });\n            }\n          });\n        })\n        .catch(error => {\n          console.error('❌ Erreur Service Worker:', error);\n        });\n    }\n  }, [toast]);\n\n  // === DÉTECTION DE L'INSTALLATION PWA ===\n  useEffect(() => {\n    // Vérifier si déjà installé\n    const checkInstalled = () => {\n      if (window.matchMedia('(display-mode: standalone)').matches) {\n        setIsInstalled(true);\n      }\n    };\n\n    checkInstalled();\n\n    // Écouter l'événement beforeinstallprompt\n    const handleBeforeInstallPrompt = (e: Event) => {\n      e.preventDefault();\n      setDeferredPrompt(e);\n      setIsInstallable(true);\n    };\n\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n\n    // Écouter l'installation\n    window.addEventListener('appinstalled', () => {\n      setIsInstalled(true);\n      setIsInstallable(false);\n      setDeferredPrompt(null);\n      toast({\n        title: 'App installée !',\n        description: \"MyFitHero a été ajouté à votre écran d'accueil\",\n      });\n    });\n\n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n    };\n  }, [toast]);\n\n  // === DÉTECTION DU STATUT EN LIGNE ===\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n      toast({\n        title: 'Connexion rétablie',\n        description: 'Synchronisation des données...',\n      });\n    };\n\n    const handleOffline = () => {\n      setIsOnline(false);\n      toast({\n        title: 'Mode hors ligne',\n        description: 'Données sauvegardées localement',\n      });\n    };\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, [toast]);\n\n  // === ACTIONS PWA ===\n  const installApp = async (): Promise<void> => {\n    if (!deferredPrompt) return;\n\n    try {\n      const result = await deferredPrompt.prompt();\n      if (result.outcome === 'accepted') {\n        setIsInstallable(false);\n        setDeferredPrompt(null);\n      }\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error(\"Erreur lors de l'installation:\", error);\n    }\n  };\n\n  const checkForUpdates = async (): Promise<void> => {\n    if ('serviceWorker' in navigator) {\n      const registration = await navigator.serviceWorker.getRegistration();\n      if (registration) {\n        await registration.update();\n      }\n    }\n  };\n\n  const enableNotifications = async (): Promise<boolean> => {\n    if (!('Notification' in window)) {\n      toast({\n        title: 'Notifications non supportées',\n        description: 'Votre navigateur ne supporte pas les notifications',\n      });\n      return false;\n    }\n\n    const permission = await Notification.requestPermission();\n\n    if (permission === 'granted') {\n      toast({\n        title: 'Notifications activées',\n        description: 'Vous recevrez des rappels pour vos objectifs',\n      });\n      return true;\n    } else {\n      toast({\n        title: 'Notifications refusées',\n        description: 'Vous pouvez les activer dans les paramètres',\n      });\n      return false;\n    }\n  };\n\n  const registerBackgroundSync = async (tag: string): Promise<void> => {\n    if (\n      'serviceWorker' in navigator &&\n      'sync' in (window as any).ServiceWorkerRegistration.prototype\n    ) {\n      const registration = await navigator.serviceWorker.ready;\n      await (registration as any).sync.register(tag);\n    }\n  };\n\n  return {\n    isInstallable,\n    isInstalled,\n    isOnline,\n    updateAvailable,\n    installApp,\n    checkForUpdates,\n    enableNotifications,\n    registerBackgroundSync,\n  };\n};\n\n// Hook pour le stockage hors ligne avec IndexedDB\nexport const useOfflineStorage = () => {\n  const [db, setDb] = useState<IDBDatabase | null>(null);\n\n  useEffect(() => {\n    const openDB = () => {\n      const request = indexedDB.open('MyFitHeroDB', 1);\n\n      request.onupgradeneeded = event => {\n        const database = (event.target as IDBOpenDBRequest).result;\n\n        // Store pour les données fitness en attente\n        if (!database.objectStoreNames.contains('pendingData')) {\n          const store = database.createObjectStore('pendingData', {\n            keyPath: 'id',\n            autoIncrement: true,\n          });\n          store.createIndex('type', 'type', { unique: false });\n          store.createIndex('timestamp', 'timestamp', { unique: false });\n        }\n\n        // Store pour le cache des données utilisateur\n        if (!database.objectStoreNames.contains('userCache')) {\n          const userStore = database.createObjectStore('userCache', {\n            keyPath: 'key',\n          });\n          userStore.createIndex('expiresAt', 'expiresAt', { unique: false });\n        }\n      };\n\n      request.onsuccess = event => {\n        setDb((event.target as IDBOpenDBRequest).result);\n      };\n\n      request.onerror = event => {\n        console.error('Erreur IndexedDB:', event);\n      };\n    };\n\n    openDB();\n  }, []);\n\n  const storePendingData = async (data: any) => {\n    if (!db) return;\n\n    const transaction = db.transaction(['pendingData'], 'readwrite');\n    const store = transaction.objectStore('pendingData');\n\n    await store.add({\n      ...data,\n      timestamp: Date.now(),\n    });\n  };\n\n  const getCachedData = async (key: string) => {\n    if (!db) return null;\n\n    const transaction = db.transaction(['userCache'], 'readonly');\n    const store = transaction.objectStore('userCache');\n\n    return new Promise(resolve => {\n      const request = store.get(key);\n      request.onsuccess = () => {\n        const result = request.result;\n        if (result && result.expiresAt > Date.now()) {\n          resolve(result.data);\n        } else {\n          resolve(null);\n        }\n      };\n      request.onerror = () => resolve(null);\n    });\n  };\n\n  const setCachedData = async (key: string, data: any, ttl = 300000) => {\n    if (!db) return;\n\n    const transaction = db.transaction(['userCache'], 'readwrite');\n    const store = transaction.objectStore('userCache');\n\n    return new Promise<void>(resolve => {\n      const request = store.put({\n        key,\n        data,\n        expiresAt: Date.now() + ttl,\n      });\n      request.onsuccess = () => resolve();\n      request.onerror = () => resolve();\n    });\n  };\n\n  return {\n    storePendingData,\n    getCachedData,\n    setCachedData,\n    isReady: !!db,\n  };\n};\n"],"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","ignoreList":[]}