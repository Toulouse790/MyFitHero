{"version":3,"names":["cov_2efjs2n65f","actualCoverage","s","exports","useConversationalOnboarding","react_1","require","initialData","f","data","setData","useState","version","startedAt","Date","lastUpdated","selectedModules","firstName","fitnessGoals","sport","foodAllergies","dietaryRestrictions","averageSleepHours","sleepDifficulties","hydrationGoal","hydrationReminders","healthConditions","availableTimePerDay","privacyConsent","marketingConsent","progress","currentStep","completedSteps","skippedSteps","totalSteps","estimatedTimeLeft","timeSpent","lastActivity","averageTimePerStep","skipCount","backCount","errorCount","helpViewCount","moduleSpecificSteps","steps","completed","skipped","strength","nutrition","hydration","sleep","wellness","userPreferences","preferredInputTypes","skipsTendency","detailLevel","pace","completionQuality","validationScore","consistencyScore","setCurrentStep","isLoading","setIsLoading","errors","setErrors","updateData","useCallback","updates","prev","nextStep","b","previousStep","complete","Promise","resolve","setTimeout","error","Math","round","length"],"sources":["/workspaces/MyFitHero/src/features/auth/hooks/useConversationalOnboarding.ts"],"sourcesContent":["// Hook simplifié pour l'onboarding conversationnel\nimport { useState, useCallback } from 'react';\nimport { OnboardingData } from '@/features/auth/types/conversationalOnboarding';\n\nexport interface UseConversationalOnboardingReturn {\n  data: OnboardingData;\n  currentStep: string;\n  progress: number;\n  isLoading: boolean;\n  errors: string[];\n  updateData: (updates: Partial<OnboardingData>) => void;\n  nextStep: () => void;\n  previousStep: () => void;\n  complete: () => Promise<void>;\n}\n\nexport function useConversationalOnboarding(\n  initialData?: Partial<OnboardingData>\n): UseConversationalOnboardingReturn {\n  const [data, setData] = useState<OnboardingData>({\n    version: '1.0',\n    startedAt: new Date(),\n    lastUpdated: new Date(),\n    selectedModules: [],\n    firstName: '',\n    fitnessGoals: [],\n    sport: '',\n    foodAllergies: [],\n    dietaryRestrictions: [],\n    averageSleepHours: 8,\n    sleepDifficulties: [],\n    hydrationGoal: 2.5,\n    hydrationReminders: true,\n    healthConditions: [],\n    availableTimePerDay: 60,\n    privacyConsent: false,\n    marketingConsent: false,\n    progress: {\n      currentStep: 'welcome',\n      completedSteps: [],\n      skippedSteps: [],\n      totalSteps: 7,\n      estimatedTimeLeft: 15,\n      timeSpent: 0,\n      startedAt: new Date(),\n      lastActivity: new Date(),\n      averageTimePerStep: 0,\n      skipCount: 0,\n      backCount: 0,\n      errorCount: 0,\n      helpViewCount: 0,\n      moduleSpecificSteps: {\n        sport: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n        strength: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n        nutrition: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n        hydration: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n        sleep: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n        wellness: { steps: [], completed: [], skipped: [], timeSpent: 0 },\n      },\n      userPreferences: {\n        preferredInputTypes: [],\n        skipsTendency: 0,\n        detailLevel: 'standard',\n        pace: 'normal',\n      },\n      completionQuality: 0,\n      validationScore: 100,\n      consistencyScore: 100,\n    },\n    ...initialData,\n  });\n\n  const [currentStep, setCurrentStep] = useState('welcome');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const updateData = useCallback((updates: Partial<OnboardingData>) => {\n    setData(prev => ({\n      ...prev,\n      ...updates,\n      lastUpdated: new Date(),\n    }));\n  }, []);\n\n  const nextStep = useCallback(() => {\n    // Logique simplifiée pour passer à l'étape suivante\n    setCurrentStep(prev => {\n      switch (prev) {\n        case 'welcome': return 'main_objective';\n        case 'main_objective': return 'pack_selection';\n        case 'pack_selection': return 'personal_info';\n        case 'personal_info': return 'sport_selection';\n        case 'sport_selection': return 'completion';\n        default: return 'completion';\n      }\n    });\n  }, []);\n\n  const previousStep = useCallback(() => {\n    // Logique pour revenir en arrière\n    setCurrentStep(prev => {\n      switch (prev) {\n        case 'main_objective': return 'welcome';\n        case 'pack_selection': return 'main_objective';\n        case 'personal_info': return 'pack_selection';\n        case 'sport_selection': return 'personal_info';\n        case 'completion': return 'sport_selection';\n        default: return 'welcome';\n      }\n    });\n  }, []);\n\n  const complete = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Logique de finalisation\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulation\n    } catch (error: any) {\n      setErrors(['Erreur lors de la finalisation']);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const progress = Math.round((data.progress.completedSteps.length / data.progress.totalSteps) * 100);\n\n  return {\n    data,\n    currentStep,\n    progress,\n    isLoading,\n    errors,\n    updateData,\n    nextStep,\n    previousStep,\n    complete,\n  };\n}"],"mappingscAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;AAZJC,OAAA,CAAAC,2BAAA,GAAAA,2BAAA;AAhBA;AACA,MAAAC,OAAA;AAAA;AAAA,CAAAL,cAAA,GAAAE,CAAA,OAAAI,OAAA;AAeA,SAAgBF,2BAA2BA,CACzCG,WAAqC;EAAA;EAAAP,cAAA,GAAAQ,CAAA;EAErC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC;EAAA;EAAA,CAAAV,cAAA,GAAAE,CAAA,OAAG,IAAAG,OAAA,CAAAM,QAAQ,EAAiB;IAC/CC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE,IAAIC,IAAI,EAAE;IACrBC,WAAW,EAAE,IAAID,IAAI,EAAE;IACvBE,eAAe,EAAE,EAAE;IACnBC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,EAAE;IACjBC,mBAAmB,EAAE,EAAE;IACvBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,aAAa,EAAE,GAAG;IAClBC,kBAAkB,EAAE,IAAI;IACxBC,gBAAgB,EAAE,EAAE;IACpBC,mBAAmB,EAAE,EAAE;IACvBC,cAAc,EAAE,KAAK;IACrBC,gBAAgB,EAAE,KAAK;IACvBC,QAAQ,EAAE;MACRC,WAAW,EAAE,SAAS;MACtBC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,CAAC;MACbC,iBAAiB,EAAE,EAAE;MACrBC,SAAS,EAAE,CAAC;MACZvB,SAAS,EAAE,IAAIC,IAAI,EAAE;MACrBuB,YAAY,EAAE,IAAIvB,IAAI,EAAE;MACxBwB,kBAAkB,EAAE,CAAC;MACrBC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC;MACbC,aAAa,EAAE,CAAC;MAChBC,mBAAmB,EAAE;QACnBxB,KAAK,EAAE;UAAEyB,KAAK,EAAE,EAAE;UAAEC,SAAS,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEV,SAAS,EAAE;QAAC,CAAE;QAC9DW,QAAQ,EAAE;UAAEH,KAAK,EAAE,EAAE;UAAEC,SAAS,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEV,SAAS,EAAE;QAAC,CAAE;QACjEY,SAAS,EAAE;UAAEJ,KAAK,EAAE,EAAE;UAAEC,SAAS,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEV,SAAS,EAAE;QAAC,CAAE;QAClEa,SAAS,EAAE;UAAEL,KAAK,EAAE,EAAE;UAAEC,SAAS,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEV,SAAS,EAAE;QAAC,CAAE;QAClEc,KAAK,EAAE;UAAEN,KAAK,EAAE,EAAE;UAAEC,SAAS,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEV,SAAS,EAAE;QAAC,CAAE;QAC9De,QAAQ,EAAE;UAAEP,KAAK,EAAE,EAAE;UAAEC,SAAS,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEV,SAAS,EAAE;QAAC;OAChE;MACDgB,eAAe,EAAE;QACfC,mBAAmB,EAAE,EAAE;QACvBC,aAAa,EAAE,CAAC;QAChBC,WAAW,EAAE,UAAU;QACvBC,IAAI,EAAE;OACP;MACDC,iBAAiB,EAAE,CAAC;MACpBC,eAAe,EAAE,GAAG;MACpBC,gBAAgB,EAAE;KACnB;IACD,GAAGpD;GACJ,CAAC;EAEF,MAAM,CAACwB,WAAW,EAAE6B,cAAc,CAAC;EAAA;EAAA,CAAA5D,cAAA,GAAAE,CAAA,OAAG,IAAAG,OAAA,CAAAM,QAAQ,EAAC,SAAS,CAAC;EACzD,MAAM,CAACkD,SAAS,EAAEC,YAAY,CAAC;EAAA;EAAA,CAAA9D,cAAA,GAAAE,CAAA,OAAG,IAAAG,OAAA,CAAAM,QAAQ,EAAC,KAAK,CAAC;EACjD,MAAM,CAACoD,MAAM,EAAEC,SAAS,CAAC;EAAA;EAAA,CAAAhE,cAAA,GAAAE,CAAA,OAAG,IAAAG,OAAA,CAAAM,QAAQ,EAAW,EAAE,CAAC;EAElD,MAAMsD,UAAU;EAAA;EAAA,CAAAjE,cAAA,GAAAE,CAAA,OAAG,IAAAG,OAAA,CAAA6D,WAAW,EAAEC,OAAgC,IAAI;IAAA;IAAAnE,cAAA,GAAAQ,CAAA;IAAAR,cAAA,GAAAE,CAAA;IAClEQ,OAAO,CAAC0D,IAAI,IAAK;MAAA;MAAApE,cAAA,GAAAQ,CAAA;MAAAR,cAAA,GAAAE,CAAA;MAAA;QACf,GAAGkE,IAAI;QACP,GAAGD,OAAO;QACVpD,WAAW,EAAE,IAAID,IAAI;OACtB;KAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMuD,QAAQ;EAAA;EAAA,CAAArE,cAAA,GAAAE,CAAA,QAAG,IAAAG,OAAA,CAAA6D,WAAW,EAAC,MAAK;IAAA;IAAAlE,cAAA,GAAAQ,CAAA;IAAAR,cAAA,GAAAE,CAAA;IAChC;IACA0D,cAAc,CAACQ,IAAI,IAAG;MAAA;MAAApE,cAAA,GAAAQ,CAAA;MAAAR,cAAA,GAAAE,CAAA;MACpB,QAAQkE,IAAI;QACV,KAAK,SAAS;UAAA;UAAApE,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAE,OAAO,gBAAgB;QACvC,KAAK,gBAAgB;UAAA;UAAAF,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAE,OAAO,gBAAgB;QAC9C,KAAK,gBAAgB;UAAA;UAAAF,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAE,OAAO,eAAe;QAC7C,KAAK,eAAe;UAAA;UAAAF,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAE,OAAO,iBAAiB;QAC9C,KAAK,iBAAiB;UAAA;UAAAF,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAE,OAAO,YAAY;QAC3C;UAAA;UAAAF,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAS,OAAO,YAAY;MAC9B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqE,YAAY;EAAA;EAAA,CAAAvE,cAAA,GAAAE,CAAA,QAAG,IAAAG,OAAA,CAAA6D,WAAW,EAAC,MAAK;IAAA;IAAAlE,cAAA,GAAAQ,CAAA;IAAAR,cAAA,GAAAE,CAAA;IACpC;IACA0D,cAAc,CAACQ,IAAI,IAAG;MAAA;MAAApE,cAAA,GAAAQ,CAAA;MAAAR,cAAA,GAAAE,CAAA;MACpB,QAAQkE,IAAI;QACV,KAAK,gBAAgB;UAAA;UAAApE,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAE,OAAO,SAAS;QACvC,KAAK,gBAAgB;UAAA;UAAAF,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAE,OAAO,gBAAgB;QAC9C,KAAK,eAAe;UAAA;UAAAF,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAE,OAAO,gBAAgB;QAC7C,KAAK,iBAAiB;UAAA;UAAAF,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAE,OAAO,eAAe;QAC9C,KAAK,YAAY;UAAA;UAAAF,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAE,OAAO,iBAAiB;QAC3C;UAAA;UAAAF,cAAA,GAAAsE,CAAA;UAAAtE,cAAA,GAAAE,CAAA;UAAS,OAAO,SAAS;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMsE,QAAQ;EAAA;EAAA,CAAAxE,cAAA,GAAAE,CAAA,QAAG,IAAAG,OAAA,CAAA6D,WAAW,EAAC,YAAW;IAAA;IAAAlE,cAAA,GAAAQ,CAAA;IAAAR,cAAA,GAAAE,CAAA;IACtC4D,YAAY,CAAC,IAAI,CAAC;IAAC;IAAA9D,cAAA,GAAAE,CAAA;IACnB,IAAI;MAAA;MAAAF,cAAA,GAAAE,CAAA;MACF;MACA,MAAM,IAAIuE,OAAO,CAACC,OAAO,IAAI;QAAA;QAAA1E,cAAA,GAAAQ,CAAA;QAAAR,cAAA,GAAAE,CAAA;QAAA,OAAAyE,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC;MAAD,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOE,KAAU,EAAE;MAAA;MAAA5E,cAAA,GAAAE,CAAA;MACnB8D,SAAS,CAAC,CAAC,gCAAgC,CAAC,CAAC;IAC/C,CAAC,SAAS;MAAA;MAAAhE,cAAA,GAAAE,CAAA;MACR4D,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMhC,QAAQ;EAAA;EAAA,CAAA9B,cAAA,GAAAE,CAAA,QAAG2E,IAAI,CAACC,KAAK,CAAErE,IAAI,CAACqB,QAAQ,CAACE,cAAc,CAAC+C,MAAM,GAAGtE,IAAI,CAACqB,QAAQ,CAACI,UAAU,GAAI,GAAG,CAAC;EAAC;EAAAlC,cAAA,GAAAE,CAAA;EAEpG,OAAO;IACLO,IAAI;IACJsB,WAAW;IACXD,QAAQ;IACR+B,SAAS;IACTE,MAAM;IACNE,UAAU;IACVI,QAAQ;IACRE,YAAY;IACZC;GACD;AACH","ignoreList":[]}