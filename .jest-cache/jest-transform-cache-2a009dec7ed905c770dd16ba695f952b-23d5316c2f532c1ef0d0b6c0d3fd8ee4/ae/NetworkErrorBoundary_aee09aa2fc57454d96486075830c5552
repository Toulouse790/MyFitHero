12450dd1543ddc12e586205f3d567b24
"use strict";

/* istanbul ignore next */
function cov_27x8j76qxc() {
  var path = "/workspaces/MyFitHero/src/components/NetworkErrorBoundary.tsx";
  var hash = "b51c967b17c2481ed2a4bdfd93a1b1959eeaaa13";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/components/NetworkErrorBoundary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "15": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "16": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "17": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "18": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "19": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "20": {
        start: {
          line: 21,
          column: 40
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "21": {
        start: {
          line: 21,
          column: 109
        },
        end: {
          line: 21,
          column: 141
        }
      },
      "22": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "23": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 18
        }
      },
      "24": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "25": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "26": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 50
        }
      },
      "27": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "28": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 46
        }
      },
      "29": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 21
        }
      },
      "30": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "31": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "32": {
        start: {
          line: 44,
          column: 43
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "33": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 48,
          column: 17
        }
      },
      "34": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 66
        }
      },
      "35": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 27
        }
      },
      "36": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 51,
          column: 20
        }
      },
      "37": {
        start: {
          line: 49,
          column: 44
        },
        end: {
          line: 51,
          column: 17
        }
      },
      "38": {
        start: {
          line: 53,
          column: 30
        },
        end: {
          line: 53,
          column: 71
        }
      },
      "39": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 60,
          column: 26
        }
      },
      "40": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 59,
          column: 23
        }
      },
      "41": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 68,
          column: 10
        }
      },
      "42": {
        start: {
          line: 71,
          column: 31
        },
        end: {
          line: 74,
          column: 38
        }
      },
      "43": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "44": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 86
        }
      },
      "45": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 47
        }
      },
      "46": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "47": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 44
        }
      },
      "48": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "49": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "50": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 79
        }
      },
      "51": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 2703
        }
      },
      "52": {
        start: {
          line: 95,
          column: 2260
        },
        end: {
          line: 95,
          column: 2284
        }
      },
      "53": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 35
        }
      },
      "54": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 100,
          column: 52
        }
      },
      "55": {
        start: {
          line: 101,
          column: 0
        },
        end: {
          line: 101,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 51
          }
        },
        loc: {
          start: {
            line: 18,
            column: 65
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 43,
            column: 20
          }
        },
        loc: {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 61,
            column: 13
          }
        },
        line: 43
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 49,
            column: 31
          }
        },
        loc: {
          start: {
            line: 49,
            column: 44
          },
          end: {
            line: 51,
            column: 17
          }
        },
        line: 49
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 54,
            column: 47
          },
          end: {
            line: 54,
            column: 48
          }
        },
        loc: {
          start: {
            line: 54,
            column: 53
          },
          end: {
            line: 60,
            column: 17
          }
        },
        line: 54
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 43
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 70
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 40
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 81
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 27
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 85
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 13
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 90
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 95,
            column: 2254
          },
          end: {
            line: 95,
            column: 2255
          }
        },
        loc: {
          start: {
            line: 95,
            column: 2260
          },
          end: {
            line: 95,
            column: 2284
          }
        },
        line: 95
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "12": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 11
          }
        }, {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 29
          }
        }],
        line: 19
      },
      "13": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "14": {
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 21,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "15": {
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 107
          }
        }],
        line: 21
      },
      "16": {
        loc: {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 38
          }
        }],
        line: 44
      },
      "17": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "18": {
        loc: {
          start: {
            line: 71,
            column: 31
          },
          end: {
            line: 74,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 31
          },
          end: {
            line: 71,
            column: 72
          }
        }, {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 72,
            column: 51
          }
        }, {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 73,
            column: 49
          }
        }, {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 38
          }
        }],
        line: 71
      },
      "19": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "20": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "21": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 31
          }
        }, {
          start: {
            line: 91,
            column: 35
          },
          end: {
            line: 91,
            column: 51
          }
        }],
        line: 91
      },
      "22": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "23": {
        loc: {
          start: {
            line: 95,
            column: 381
          },
          end: {
            line: 95,
            column: 599
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 410
          },
          end: {
            line: 95,
            column: 497
          }
        }, {
          start: {
            line: 95,
            column: 502
          },
          end: {
            line: 95,
            column: 598
          }
        }],
        line: 95
      },
      "24": {
        loc: {
          start: {
            line: 95,
            column: 696
          },
          end: {
            line: 95,
            column: 769
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 724
          },
          end: {
            line: 95,
            column: 747
          }
        }, {
          start: {
            line: 95,
            column: 750
          },
          end: {
            line: 95,
            column: 769
          }
        }],
        line: 95
      },
      "25": {
        loc: {
          start: {
            line: 95,
            column: 847
          },
          end: {
            line: 95,
            column: 1017
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 876
          },
          end: {
            line: 95,
            column: 951
          }
        }, {
          start: {
            line: 95,
            column: 956
          },
          end: {
            line: 95,
            column: 1016
          }
        }],
        line: 95
      },
      "26": {
        loc: {
          start: {
            line: 95,
            column: 1260
          },
          end: {
            line: 95,
            column: 1554
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 1260
          },
          end: {
            line: 95,
            column: 1285
          }
        }, {
          start: {
            line: 95,
            column: 1290
          },
          end: {
            line: 95,
            column: 1553
          }
        }],
        line: 95
      },
      "27": {
        loc: {
          start: {
            line: 95,
            column: 1520
          },
          end: {
            line: 95,
            column: 1546
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 1520
          },
          end: {
            line: 95,
            column: 1541
          }
        }, {
          start: {
            line: 95,
            column: 1545
          },
          end: {
            line: 95,
            column: 1546
          }
        }],
        line: 95
      },
      "28": {
        loc: {
          start: {
            line: 95,
            column: 1723
          },
          end: {
            line: 95,
            column: 1749
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 1723
          },
          end: {
            line: 95,
            column: 1744
          }
        }, {
          start: {
            line: 95,
            column: 1748
          },
          end: {
            line: 95,
            column: 1749
          }
        }],
        line: 95
      },
      "29": {
        loc: {
          start: {
            line: 95,
            column: 2117
          },
          end: {
            line: 95,
            column: 2204
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 2173
          },
          end: {
            line: 95,
            column: 2190
          }
        }, {
          start: {
            line: 95,
            column: 2193
          },
          end: {
            line: 95,
            column: 2204
          }
        }],
        line: 95
      },
      "30": {
        loc: {
          start: {
            line: 95,
            column: 2143
          },
          end: {
            line: 95,
            column: 2169
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 2143
          },
          end: {
            line: 95,
            column: 2164
          }
        }, {
          start: {
            line: 95,
            column: 2168
          },
          end: {
            line: 95,
            column: 2169
          }
        }],
        line: 95
      },
      "31": {
        loc: {
          start: {
            line: 95,
            column: 2646
          },
          end: {
            line: 95,
            column: 2690
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 2665
          },
          end: {
            line: 95,
            column: 2675
          }
        }, {
          start: {
            line: 95,
            column: 2678
          },
          end: {
            line: 95,
            column: 2690
          }
        }],
        line: 95
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/components/NetworkErrorBoundary.tsx",
      mappings: ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAAoD;AACpD,+CAAuE;AAgBvE,MAAa,oBAAqB,SAAQ,iBAA+D;IAGvG,YAAY,KAAgC;QAC1C,KAAK,CAAC,KAAK,CAAC,CAAC;QAHP;;;;mBAA2C,IAAI;WAAC;QAoCxD;;;;mBAAc,GAAG,EAAE;gBACjB,MAAM,EAAE,UAAU,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;gBAEtC,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,UAAU,EAAE,CAAC;oBACxC,OAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;oBAC9C,OAAO;gBACT,CAAC;gBAED,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;oBAC1B,UAAU,EAAE,SAAS,CAAC,UAAU,GAAG,CAAC;iBACrC,CAAC,CAAC,CAAC;gBAEJ,kCAAkC;gBAClC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;gBAExD,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,GAAG,EAAE;oBAClC,IAAI,CAAC,QAAQ,CAAC;wBACZ,QAAQ,EAAE,KAAK;wBACf,KAAK,EAAE,IAAI;wBACX,cAAc,EAAE,KAAK;qBACtB,CAAC,CAAC;gBACL,CAAC,EAAE,KAAK,CAAC,CAAC;YACZ,CAAC;WAAC;QAtDA,IAAI,CAAC,KAAK,GAAG;YACX,QAAQ,EAAE,KAAK;YACf,KAAK,EAAE,IAAI;YACX,cAAc,EAAE,KAAK;YACrB,UAAU,EAAE,CAAC;SACd,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,wBAAwB,CAAC,KAAY;QAC1C,MAAM,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAC;YAC1C,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC;YACvC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC;YACrC,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC;QAEjD,OAAO;YACL,QAAQ,EAAE,IAAI;YACd,KAAK;YACL,cAAc;SACf,CAAC;IACJ,CAAC;IAEQ,iBAAiB,CAAC,KAAY,EAAE,SAAc;QACrD,OAAO,CAAC,KAAK,CAAC,4CAA4C,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;QAC9E,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IACzC,CAAC;IAEQ,oBAAoB;QAC3B,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IA0BQ,MAAM;QACb,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACjE,CAAC;YAED,OAAO,CACL,gCAAK,SAAS,EAAC,wGAAwG,YACrH,iCAAK,SAAS,EAAC,gEAAgE,aAE7E,gCAAK,SAAS,EAAC,0BAA0B,YACtC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAC3B,uBAAC,sBAAO,IAAC,SAAS,EAAC,wBAAwB,GAAG,CAC/C,CAAC,CAAC,CAAC,CACF,uBAAC,4BAAa,IAAC,SAAS,EAAC,2BAA2B,GAAG,CACxD,GACG,EAGN,+BAAI,SAAS,EAAC,sCAAsC,YACjD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,mBAAmB,GACvE,EAGL,8BAAG,SAAS,EAAC,oBAAoB,YAC9B,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAC3B,2EAA2E,CAC5E,CAAC,CAAC,CAAC,CACF,4DAA4D,CAC7D,GACC,EAGJ,gCAAK,SAAS,EAAC,iEAAiE,YAC9E,8BAAG,SAAS,EAAC,iCAAiC,YAC3C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,GACvB,GACA,EAGL,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,IAAI,CAC5B,gCAAK,SAAS,EAAC,uDAAuD,YACpE,+BAAG,SAAS,EAAC,uBAAuB,2BACvB,IAAI,CAAC,KAAK,CAAC,UAAU,OAAG,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,IAC3D,GACA,CACP,EAGD,iCAAK,SAAS,EAAC,WAAW,aACxB,oCACE,OAAO,EAAE,IAAI,CAAC,WAAW,EACzB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,CAAC,EAC/D,SAAS,EAAC,oQAAoQ,aAE9Q,uBAAC,wBAAS,IAAC,SAAS,EAAC,cAAc,GAAG,EACrC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,WAAW,IACjF,EAET,mCACE,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,EACvC,SAAS,EAAC,uGAAuG,kCAG1G,IACL,EAGN,iCAAK,SAAS,EAAC,6DAA6D,aAC1E,uBAAC,mBAAI,IAAC,SAAS,EAAC,cAAc,GAAG,cACxB,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,IACjD,IACF,GACF,CACP,CAAC;QACJ,CAAC;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7B,CAAC;CACF;AA5ID,oDA4IC;AAED,kBAAe,oBAAoB,CAAC",
      names: [],
      sources: ["/workspaces/MyFitHero/src/components/NetworkErrorBoundary.tsx"],
      sourcesContent: ["import React, { Component, ReactNode } from 'react';\nimport { AlertTriangle, RefreshCw, Wifi, WifiOff } from 'lucide-react';\n\ninterface NetworkErrorBoundaryState {\n  hasError: boolean;\n  error: Error | undefined;\n  isNetworkError: boolean;\n  retryCount: number;\n}\n\ninterface NetworkErrorBoundaryProps {\n  children: ReactNode;\n  fallback?: (error: Error, retry: () => void) => ReactNode;\n  maxRetries?: number;\n  onError?: (error: Error, errorInfo: any) => void;\n}\n\nexport class NetworkErrorBoundary extends Component<NetworkErrorBoundaryProps, NetworkErrorBoundaryState> {\n  private retryTimeout: NodeJS.Timeout | undefined = null;\n\n  constructor(props: NetworkErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      isNetworkError: false,\n      retryCount: 0\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<NetworkErrorBoundaryState> {\n    const isNetworkError = error.message.includes('Failed to fetch') || \n                          error.message.includes('Network Error') ||\n                          error.message.includes('ERR_NETWORK') ||\n                          error.name === 'TypeError';\n\n    return {\n      hasError: true,\n      error,\n      isNetworkError\n    };\n  }\n\n  override componentDidCatch(error: Error, errorInfo: any) {\n    console.error('\uD83D\uDD34 Network Error Boundary caught an error:', error, errorInfo);\n    this.props.onError?.(error, errorInfo);\n  }\n\n  override componentWillUnmount() {\n    if (this.retryTimeout) {\n      clearTimeout(this.retryTimeout);\n    }\n  }\n\n  handleRetry = () => {\n    const { maxRetries = 3 } = this.props;\n    \n    if (this.state.retryCount >= maxRetries) {\n      console.warn('\uD83D\uDFE1 Max retry attempts reached');\n      return;\n    }\n\n    this.setState(prevState => ({\n      retryCount: prevState.retryCount + 1\n    }));\n\n    // Exponential backoff: 1s, 2s, 4s\n    const delay = Math.pow(2, this.state.retryCount) * 1000;\n    \n    this.retryTimeout = setTimeout(() => {\n      this.setState({\n        hasError: false,\n        error: null,\n        isNetworkError: false\n      });\n    }, delay);\n  };\n\n  override render() {\n    if (this.state.hasError && this.state.error) {\n      if (this.props.fallback) {\n        return this.props.fallback(this.state.error, this.handleRetry);\n      }\n\n      return (\n        <div className=\"min-h-screen bg-gradient-to-br from-red-50 via-white to-orange-50 flex items-center justify-center p-4\">\n          <div className=\"bg-white rounded-2xl shadow-xl max-w-md w-full p-6 text-center\">\n            {/* Icon */}\n            <div className=\"flex justify-center mb-4\">\n              {this.state.isNetworkError ? (\n                <WifiOff className=\"h-16 w-16 text-red-500\" />\n              ) : (\n                <AlertTriangle className=\"h-16 w-16 text-orange-500\" />\n              )}\n            </div>\n\n            {/* Title */}\n            <h2 className=\"text-xl font-bold text-gray-900 mb-2\">\n              {this.state.isNetworkError ? 'Probl\xE8me de connexion' : 'Erreur inattendue'}\n            </h2>\n\n            {/* Message */}\n            <p className=\"text-gray-600 mb-6\">\n              {this.state.isNetworkError ? (\n                'Impossible de se connecter au serveur. V\xE9rifiez votre connexion internet.'\n              ) : (\n                'Une erreur inattendue s\\'est produite. Veuillez r\xE9essayer.'\n              )}\n            </p>\n\n            {/* Error details */}\n            <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-3 mb-6 text-left\">\n              <p className=\"text-xs text-gray-500 font-mono\">\n                {this.state.error.message}\n              </p>\n            </div>\n\n            {/* Retry info */}\n            {this.state.retryCount > 0 && (\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4\">\n                <p className=\"text-sm text-blue-700\">\n                  Tentative {this.state.retryCount}/{this.props.maxRetries || 3}\n                </p>\n              </div>\n            )}\n\n            {/* Actions */}\n            <div className=\"space-y-3\">\n              <button\n                onClick={this.handleRetry}\n                disabled={this.state.retryCount >= (this.props.maxRetries || 3)}\n                className=\"w-full bg-gradient-to-r from-blue-600 to-cyan-600 text-white py-3 px-4 rounded-lg font-medium transition-all duration-200 hover:scale-105 hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none flex items-center justify-center\"\n              >\n                <RefreshCw className=\"h-4 w-4 mr-2\" />\n                {this.state.retryCount >= (this.props.maxRetries || 3) ? 'Limite atteinte' : 'R\xE9essayer'}\n              </button>\n\n              <button\n                onClick={() => window.location.reload()}\n                className=\"w-full bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-lg font-medium transition-colors\"\n              >\n                Recharger la page\n              </button>\n            </div>\n\n            {/* Network status */}\n            <div className=\"mt-4 flex items-center justify-center text-sm text-gray-500\">\n              <Wifi className=\"h-4 w-4 mr-1\" />\n              Statut: {navigator.onLine ? 'En ligne' : 'Hors ligne'}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default NetworkErrorBoundary;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b51c967b17c2481ed2a4bdfd93a1b1959eeaaa13"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27x8j76qxc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27x8j76qxc();
var __createBinding =
/* istanbul ignore next */
(cov_27x8j76qxc().s[0]++,
/* istanbul ignore next */
(cov_27x8j76qxc().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_27x8j76qxc().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_27x8j76qxc().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_27x8j76qxc().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_27x8j76qxc().f[0]++;
  cov_27x8j76qxc().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_27x8j76qxc().b[2][0]++;
    cov_27x8j76qxc().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_27x8j76qxc().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_27x8j76qxc().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_27x8j76qxc().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_27x8j76qxc().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_27x8j76qxc().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_27x8j76qxc().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_27x8j76qxc().b[5][1]++,
  /* istanbul ignore next */
  (cov_27x8j76qxc().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_27x8j76qxc().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_27x8j76qxc().b[3][0]++;
    cov_27x8j76qxc().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_27x8j76qxc().f[1]++;
        cov_27x8j76qxc().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_27x8j76qxc().b[3][1]++;
  }
  cov_27x8j76qxc().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_27x8j76qxc().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_27x8j76qxc().f[2]++;
  cov_27x8j76qxc().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_27x8j76qxc().b[7][0]++;
    cov_27x8j76qxc().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_27x8j76qxc().b[7][1]++;
  }
  cov_27x8j76qxc().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_27x8j76qxc().s[11]++,
/* istanbul ignore next */
(cov_27x8j76qxc().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_27x8j76qxc().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_27x8j76qxc().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_27x8j76qxc().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_27x8j76qxc().f[3]++;
  cov_27x8j76qxc().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_27x8j76qxc().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_27x8j76qxc().f[4]++;
  cov_27x8j76qxc().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_27x8j76qxc().s[14]++,
/* istanbul ignore next */
(cov_27x8j76qxc().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_27x8j76qxc().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_27x8j76qxc().b[10][2]++, function (mod) {
  /* istanbul ignore next */
  cov_27x8j76qxc().f[5]++;
  cov_27x8j76qxc().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_27x8j76qxc().b[12][0]++, mod) &&
  /* istanbul ignore next */
  (cov_27x8j76qxc().b[12][1]++, mod.__esModule)) {
    /* istanbul ignore next */
    cov_27x8j76qxc().b[11][0]++;
    cov_27x8j76qxc().s[16]++;
    return mod;
  } else
  /* istanbul ignore next */
  {
    cov_27x8j76qxc().b[11][1]++;
  }
  var result =
  /* istanbul ignore next */
  (cov_27x8j76qxc().s[17]++, {});
  /* istanbul ignore next */
  cov_27x8j76qxc().s[18]++;
  if (mod != null) {
    /* istanbul ignore next */
    cov_27x8j76qxc().b[13][0]++;
    cov_27x8j76qxc().s[19]++;
    for (var k in mod) {
      /* istanbul ignore next */
      cov_27x8j76qxc().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_27x8j76qxc().b[15][0]++, k !== "default") &&
      /* istanbul ignore next */
      (cov_27x8j76qxc().b[15][1]++, Object.prototype.hasOwnProperty.call(mod, k))) {
        /* istanbul ignore next */
        cov_27x8j76qxc().b[14][0]++;
        cov_27x8j76qxc().s[21]++;
        __createBinding(result, mod, k);
      } else
      /* istanbul ignore next */
      {
        cov_27x8j76qxc().b[14][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_27x8j76qxc().b[13][1]++;
  }
  cov_27x8j76qxc().s[22]++;
  __setModuleDefault(result, mod);
  /* istanbul ignore next */
  cov_27x8j76qxc().s[23]++;
  return result;
}));
/* istanbul ignore next */
cov_27x8j76qxc().s[24]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_27x8j76qxc().s[25]++;
exports.NetworkErrorBoundary = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_27x8j76qxc().s[26]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_27x8j76qxc().s[27]++, __importStar(require("react")));
const lucide_react_1 =
/* istanbul ignore next */
(cov_27x8j76qxc().s[28]++, require("lucide-react"));
class NetworkErrorBoundary extends
/* istanbul ignore next */
(react_1.Component) {
  constructor(props) {
    /* istanbul ignore next */
    cov_27x8j76qxc().f[6]++;
    cov_27x8j76qxc().s[29]++;
    super(props);
    /* istanbul ignore next */
    cov_27x8j76qxc().s[30]++;
    Object.defineProperty(this, "retryTimeout", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: null
    });
    /* istanbul ignore next */
    cov_27x8j76qxc().s[31]++;
    Object.defineProperty(this, "handleRetry", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
        /* istanbul ignore next */
        cov_27x8j76qxc().f[7]++;
        const {
          maxRetries =
          /* istanbul ignore next */
          (cov_27x8j76qxc().b[16][0]++, 3)
        } =
        /* istanbul ignore next */
        (cov_27x8j76qxc().s[32]++, this.props);
        /* istanbul ignore next */
        cov_27x8j76qxc().s[33]++;
        if (this.state.retryCount >= maxRetries) {
          /* istanbul ignore next */
          cov_27x8j76qxc().b[17][0]++;
          cov_27x8j76qxc().s[34]++;
          console.warn('🟡 Max retry attempts reached');
          /* istanbul ignore next */
          cov_27x8j76qxc().s[35]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_27x8j76qxc().b[17][1]++;
        }
        cov_27x8j76qxc().s[36]++;
        this.setState(prevState => {
          /* istanbul ignore next */
          cov_27x8j76qxc().f[8]++;
          cov_27x8j76qxc().s[37]++;
          return {
            retryCount: prevState.retryCount + 1
          };
        });
        // Exponential backoff: 1s, 2s, 4s
        const delay =
        /* istanbul ignore next */
        (cov_27x8j76qxc().s[38]++, Math.pow(2, this.state.retryCount) * 1000);
        /* istanbul ignore next */
        cov_27x8j76qxc().s[39]++;
        this.retryTimeout = setTimeout(() => {
          /* istanbul ignore next */
          cov_27x8j76qxc().f[9]++;
          cov_27x8j76qxc().s[40]++;
          this.setState({
            hasError: false,
            error: null,
            isNetworkError: false
          });
        }, delay);
      }
    });
    /* istanbul ignore next */
    cov_27x8j76qxc().s[41]++;
    this.state = {
      hasError: false,
      error: null,
      isNetworkError: false,
      retryCount: 0
    };
  }
  static getDerivedStateFromError(error) {
    /* istanbul ignore next */
    cov_27x8j76qxc().f[10]++;
    const isNetworkError =
    /* istanbul ignore next */
    (cov_27x8j76qxc().s[42]++,
    /* istanbul ignore next */
    (cov_27x8j76qxc().b[18][0]++, error.message.includes('Failed to fetch')) ||
    /* istanbul ignore next */
    (cov_27x8j76qxc().b[18][1]++, error.message.includes('Network Error')) ||
    /* istanbul ignore next */
    (cov_27x8j76qxc().b[18][2]++, error.message.includes('ERR_NETWORK')) ||
    /* istanbul ignore next */
    (cov_27x8j76qxc().b[18][3]++, error.name === 'TypeError'));
    /* istanbul ignore next */
    cov_27x8j76qxc().s[43]++;
    return {
      hasError: true,
      error,
      isNetworkError
    };
  }
  componentDidCatch(error, errorInfo) {
    /* istanbul ignore next */
    cov_27x8j76qxc().f[11]++;
    cov_27x8j76qxc().s[44]++;
    console.error('🔴 Network Error Boundary caught an error:', error, errorInfo);
    /* istanbul ignore next */
    cov_27x8j76qxc().s[45]++;
    this.props.onError?.(error, errorInfo);
  }
  componentWillUnmount() {
    /* istanbul ignore next */
    cov_27x8j76qxc().f[12]++;
    cov_27x8j76qxc().s[46]++;
    if (this.retryTimeout) {
      /* istanbul ignore next */
      cov_27x8j76qxc().b[19][0]++;
      cov_27x8j76qxc().s[47]++;
      clearTimeout(this.retryTimeout);
    } else
    /* istanbul ignore next */
    {
      cov_27x8j76qxc().b[19][1]++;
    }
  }
  render() {
    /* istanbul ignore next */
    cov_27x8j76qxc().f[13]++;
    cov_27x8j76qxc().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_27x8j76qxc().b[21][0]++, this.state.hasError) &&
    /* istanbul ignore next */
    (cov_27x8j76qxc().b[21][1]++, this.state.error)) {
      /* istanbul ignore next */
      cov_27x8j76qxc().b[20][0]++;
      cov_27x8j76qxc().s[49]++;
      if (this.props.fallback) {
        /* istanbul ignore next */
        cov_27x8j76qxc().b[22][0]++;
        cov_27x8j76qxc().s[50]++;
        return this.props.fallback(this.state.error, this.handleRetry);
      } else
      /* istanbul ignore next */
      {
        cov_27x8j76qxc().b[22][1]++;
      }
      cov_27x8j76qxc().s[51]++;
      return (0, jsx_runtime_1.jsx)("div", {
        className: "min-h-screen bg-gradient-to-br from-red-50 via-white to-orange-50 flex items-center justify-center p-4",
        children: (0, jsx_runtime_1.jsxs)("div", {
          className: "bg-white rounded-2xl shadow-xl max-w-md w-full p-6 text-center",
          children: [(0, jsx_runtime_1.jsx)("div", {
            className: "flex justify-center mb-4",
            children: this.state.isNetworkError ?
            /* istanbul ignore next */
            (cov_27x8j76qxc().b[23][0]++, (0, jsx_runtime_1.jsx)(lucide_react_1.WifiOff, {
              className: "h-16 w-16 text-red-500"
            })) :
            /* istanbul ignore next */
            (cov_27x8j76qxc().b[23][1]++, (0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, {
              className: "h-16 w-16 text-orange-500"
            }))
          }), (0, jsx_runtime_1.jsx)("h2", {
            className: "text-xl font-bold text-gray-900 mb-2",
            children: this.state.isNetworkError ?
            /* istanbul ignore next */
            (cov_27x8j76qxc().b[24][0]++, 'Problème de connexion') :
            /* istanbul ignore next */
            (cov_27x8j76qxc().b[24][1]++, 'Erreur inattendue')
          }), (0, jsx_runtime_1.jsx)("p", {
            className: "text-gray-600 mb-6",
            children: this.state.isNetworkError ?
            /* istanbul ignore next */
            (cov_27x8j76qxc().b[25][0]++, 'Impossible de se connecter au serveur. Vérifiez votre connexion internet.') :
            /* istanbul ignore next */
            (cov_27x8j76qxc().b[25][1]++, 'Une erreur inattendue s\'est produite. Veuillez réessayer.')
          }), (0, jsx_runtime_1.jsx)("div", {
            className: "bg-gray-50 border border-gray-200 rounded-lg p-3 mb-6 text-left",
            children: (0, jsx_runtime_1.jsx)("p", {
              className: "text-xs text-gray-500 font-mono",
              children: this.state.error.message
            })
          }),
          /* istanbul ignore next */
          (cov_27x8j76qxc().b[26][0]++, this.state.retryCount > 0) &&
          /* istanbul ignore next */
          (cov_27x8j76qxc().b[26][1]++, (0, jsx_runtime_1.jsx)("div", {
            className: "bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4",
            children: (0, jsx_runtime_1.jsxs)("p", {
              className: "text-sm text-blue-700",
              children: ["Tentative ", this.state.retryCount, "/",
              /* istanbul ignore next */
              (cov_27x8j76qxc().b[27][0]++, this.props.maxRetries) ||
              /* istanbul ignore next */
              (cov_27x8j76qxc().b[27][1]++, 3)]
            })
          })), (0, jsx_runtime_1.jsxs)("div", {
            className: "space-y-3",
            children: [(0, jsx_runtime_1.jsxs)("button", {
              onClick: this.handleRetry,
              disabled: this.state.retryCount >= (
              /* istanbul ignore next */
              (cov_27x8j76qxc().b[28][0]++, this.props.maxRetries) ||
              /* istanbul ignore next */
              (cov_27x8j76qxc().b[28][1]++, 3)),
              className: "w-full bg-gradient-to-r from-blue-600 to-cyan-600 text-white py-3 px-4 rounded-lg font-medium transition-all duration-200 hover:scale-105 hover:shadow-lg disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none flex items-center justify-center",
              children: [(0, jsx_runtime_1.jsx)(lucide_react_1.RefreshCw, {
                className: "h-4 w-4 mr-2"
              }), this.state.retryCount >= (
              /* istanbul ignore next */
              (cov_27x8j76qxc().b[30][0]++, this.props.maxRetries) ||
              /* istanbul ignore next */
              (cov_27x8j76qxc().b[30][1]++, 3)) ?
              /* istanbul ignore next */
              (cov_27x8j76qxc().b[29][0]++, 'Limite atteinte') :
              /* istanbul ignore next */
              (cov_27x8j76qxc().b[29][1]++, 'Réessayer')]
            }), (0, jsx_runtime_1.jsx)("button", {
              onClick: () => {
                /* istanbul ignore next */
                cov_27x8j76qxc().f[14]++;
                cov_27x8j76qxc().s[52]++;
                return window.location.reload();
              },
              className: "w-full bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-lg font-medium transition-colors",
              children: "Recharger la page"
            })]
          }), (0, jsx_runtime_1.jsxs)("div", {
            className: "mt-4 flex items-center justify-center text-sm text-gray-500",
            children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Wifi, {
              className: "h-4 w-4 mr-1"
            }), "Statut: ", navigator.onLine ?
            /* istanbul ignore next */
            (cov_27x8j76qxc().b[31][0]++, 'En ligne') :
            /* istanbul ignore next */
            (cov_27x8j76qxc().b[31][1]++, 'Hors ligne')]
          })]
        })
      });
    } else
    /* istanbul ignore next */
    {
      cov_27x8j76qxc().b[20][1]++;
    }
    cov_27x8j76qxc().s[53]++;
    return this.props.children;
  }
}
/* istanbul ignore next */
cov_27x8j76qxc().s[54]++;
exports.NetworkErrorBoundary = NetworkErrorBoundary;
/* istanbul ignore next */
cov_27x8j76qxc().s[55]++;
exports.default = NetworkErrorBoundary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,