{"version":3,"names":["react_1","cov_2l3bp851vz","s","__importStar","require","card_1","button_1","badge_1","use_toast_1","userDataService_1","badgeService_1","supabase_1","DailyCheckIn","className","b","onCheckInComplete","f","checkin","setCheckin","useState","loading","setLoading","saving","setSaving","userId","setUserId","toast","useToast","today","Date","toISOString","split","useEffect","initialize","data","user","supabase","auth","getUser","id","loadTodayCheckin","uid","todayCheckin","UserDataService","getDailyCheckin","newCheckin","user_id","date","workout_completed","nutrition_logged","sleep_tracked","hydration_logged","mood_score","energy_level","notes","created_at","updated_at","error","console","title","description","variant","handleToggle","field","updatedCheckin","saveCheckin","checkinData","success","saveOrUpdateDailyCheckin","BadgeService","checkAndAwardBadges","isCheckinComplete","getCompletionPercentage","completed","filter","Boolean","length","Math","round","jsx_runtime_1","jsxs","Card","children","jsx","CardHeader","CardTitle","CardContent","Badge","Button","onClick","disabled","exports","default"],"sources":["/workspaces/MyFitHero/src/features/ai-coach/components/DailyCheckIn.tsx"],"sourcesContent":["import { Check } from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\n// client/src/components/DailyCheckIn.tsx\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { useToast } from '@/shared/hooks/use-toast';\nimport { UserDataService, DailyCheckin } from '@/lib/services/userDataService';\nimport { BadgeService } from '@/lib/services/badgeService';\nimport { supabase } from '@/lib/supabase';\n\ninterface DailyCheckInProps {\n  className?: string;\n  onCheckInComplete?: (checkin: DailyCheckin) => void;\n}\n\nexport const DailyCheckIn: React.FC<DailyCheckInProps> = ({\n  className = '',\n  onCheckInComplete,\n}) => {\n  const [checkin, setCheckin] = useState<DailyCheckin | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [userId, setUserId] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  const today = new Date().toISOString().split('T')[0];\n\n  useEffect(() => {\n    const initialize = async () => {\n      const {\n        data: { user },\n      } = await supabase.auth.getUser();\n      if (!user) return;\n\n      setUserId(user.id);\n      await loadTodayCheckin(user.id);\n    };\n\n    initialize();\n  }, []);\n\n  const loadTodayCheckin = async (uid: string) => {\n    try {\n      setLoading(true);\n      const todayCheckin = await UserDataService.getDailyCheckin(uid, today);\n\n      if (todayCheckin) {\n        setCheckin(todayCheckin);\n      } else {\n        // Cr√©er un nouveau check-in par d√©faut\n        const newCheckin: DailyCheckin = {\n          id: '',\n          user_id: uid,\n          date: today,\n          workout_completed: false,\n          nutrition_logged: false,\n          sleep_tracked: false,\n          hydration_logged: false,\n          mood_score: 5,\n          energy_level: 5,\n          notes: '',\n          created_at: '',\n          updated_at: '',\n        };\n        setCheckin(newCheckin);\n      }\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur lors du chargement du check-in:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger les donn√©es du check-in',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleToggle = async (\n    field: keyof Pick<\n      DailyCheckin,\n      'workout_completed' | 'nutrition_logged' | 'sleep_tracked' | 'hydration_logged'\n    >\n  ) => {\n    if (!checkin || !userId) return;\n\n    const updatedCheckin = {\n      ...checkin,\n      [field]: !checkin[field],\n    };\n\n    setCheckin(updatedCheckin);\n    await saveCheckin(updatedCheckin);\n  };\n\n  const saveCheckin = async (checkinData: DailyCheckin) => {\n    if (!userId) return;\n\n    try {\n      setSaving(true);\n      const success = await UserDataService.saveOrUpdateDailyCheckin({\n        user_id: userId,\n        date: today,\n        workout_completed: checkinData.workout_completed,\n        nutrition_logged: checkinData.nutrition_logged,\n        sleep_tracked: checkinData.sleep_tracked,\n        hydration_logged: checkinData.hydration_logged,\n        mood_score: checkinData.mood_score,\n        energy_level: checkinData.energy_level,\n        notes: checkinData.notes,\n      });\n\n      if (success) {\n        // V√©rifier les badges apr√®s chaque mise √† jour\n        await BadgeService.checkAndAwardBadges(userId);\n\n        if (onCheckInComplete) {\n          onCheckInComplete(checkinData);\n        }\n\n        // Afficher un toast de succ√®s si le check-in est complet\n        if (isCheckinComplete(checkinData)) {\n          toast({\n            title: 'üéâ Check-in complet !',\n            description: \"Bravo ! Vous avez compl√©t√© tous vos objectifs aujourd'hui.\",\n            variant: 'default',\n          });\n        }\n      }\n    } catch (error: any) {\n      // Erreur silencieuse\n      console.error('Erreur lors de la sauvegarde du check-in:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de sauvegarder le check-in',\n        variant: 'destructive',\n      });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const isCheckinComplete = (checkinData: DailyCheckin): boolean => {\n    return (\n      checkinData.workout_completed &&\n      checkinData.nutrition_logged &&\n      checkinData.sleep_tracked &&\n      checkinData.hydration_logged\n    );\n  };\n\n  const getCompletionPercentage = (): number => {\n    if (!checkin) return 0;\n\n    const completed = [\n      checkin.workout_completed,\n      checkin.nutrition_logged,\n      checkin.sleep_tracked,\n      checkin.hydration_logged,\n    ].filter(Boolean).length;\n\n    return Math.round((completed / 4) * 100);\n  };\n\n  if (loading) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle>Check-in Quotidien</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center h-32\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!checkin) {\n    return (\n      <Card className={className}>\n        <CardHeader>\n          <CardTitle>Check-in Quotidien</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-center text-gray-600\">Erreur lors du chargement du check-in</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          <span>Check-in Quotidien</span>\n          <Badge variant={isCheckinComplete(checkin) ? 'default' : 'secondary'}>\n            {getCompletionPercentage()}% complet\n          </Badge>\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Piliers */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <Button\n            variant={checkin.workout_completed ? 'default' : 'outline'}\n            onClick={() => handleToggle('workout_completed')}\n            disabled={saving}\n            className=\"h-16 flex flex-col items-center justify-center\"\n          >\n            <span className=\"text-xl mb-1\">üèãÔ∏è‚Äç‚ôÇÔ∏è</span>\n            <span className=\"text-sm\">Workout</span>\n          </Button>\n\n          <Button\n            variant={checkin.nutrition_logged ? 'default' : 'outline'}\n            onClick={() => handleToggle('nutrition_logged')}\n            disabled={saving}\n            className=\"h-16 flex flex-col items-center justify-center\"\n          >\n            <span className=\"text-xl mb-1\">ü•ó</span>\n            <span className=\"text-sm\">Nutrition</span>\n          </Button>\n\n          <Button\n            variant={checkin.sleep_tracked ? 'default' : 'outline'}\n            onClick={() => handleToggle('sleep_tracked')}\n            disabled={saving}\n            className=\"h-16 flex flex-col items-center justify-center\"\n          >\n            <span className=\"text-xl mb-1\">üò¥</span>\n            <span className=\"text-sm\">Sommeil</span>\n          </Button>\n\n          <Button\n            variant={checkin.hydration_logged ? 'default' : 'outline'}\n            onClick={() => handleToggle('hydration_logged')}\n            disabled={saving}\n            className=\"h-16 flex flex-col items-center justify-center\"\n          >\n            <span className=\"text-xl mb-1\">üíß</span>\n            <span className=\"text-sm\">Hydratation</span>\n          </Button>\n        </div>\n\n        {/* Indicateur de sauvegarde */}\n        {saving && (\n          <div className=\"flex items-center justify-center text-sm text-gray-500\">\n            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\n            Sauvegarde en cours...\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DailyCheckIn;\n"],"mappingscAAA,GAAAC,CAAA,QAAAC,YAAA,CAAAC,OAAA;AACA;AACA,MAAAC,MAAA;AAAA;AAAA,CAAAJ,cAAA,GAAAC,CAAA,QAAAE,OAAA;AACA,MAAAE,QAAA;AAAA;AAAA,CAAAL,cAAA,GAAAC,CAAA,QAAAE,OAAA;AACA,MAAAG,OAAA;AAAA;AAAA,CAAAN,cAAA,GAAAC,CAAA,QAAAE,OAAA;AACA,MAAAI,WAAA;AAAA;AAAA,CAAAP,cAAA,GAAAC,CAAA,QAAAE,OAAA;AACA,MAAAK,iBAAA;AAAA;AAAA,CAAAR,cAAA,GAAAC,CAAA,QAAAE,OAAA;AACA,MAAAM,cAAA;AAAA;AAAA,CAAAT,cAAA,GAAAC,CAAA,QAAAE,OAAA;AACA,MAAAO,UAAA;AAAA;AAAA,CAAAV,cAAA,GAAAC,CAAA,QAAAE,OAAA;AAA0C;AAAAH,cAAA,GAAAC,CAAA;AAOnC,MAAMU,YAAY,GAAgCA,CAAC;EACxDC,SAAS;EAAA;EAAA,CAAAZ,cAAA,GAAAa,CAAA,WAAG,EAAE;EACdC;AAAiB,CAClB,KAAI;EAAA;EAAAd,cAAA,GAAAe,CAAA;EACH,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC;EAAA;EAAA,CAAAjB,cAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAAmB,QAAQ,EAAsB,IAAI,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC;EAAA;EAAA,CAAApB,cAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAAmB,QAAQ,EAAC,IAAI,CAAC;EAC5C,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC;EAAA;EAAA,CAAAtB,cAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAAmB,QAAQ,EAAC,KAAK,CAAC;EAC3C,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC;EAAA;EAAA,CAAAxB,cAAA,GAAAC,CAAA,QAAG,IAAAF,OAAA,CAAAmB,QAAQ,EAAgB,IAAI,CAAC;EACzD,MAAM;IAAEO;EAAK,CAAE;EAAA;EAAA,CAAAzB,cAAA,GAAAC,CAAA,QAAG,IAAAM,WAAA,CAAAmB,QAAQ,GAAE;EAE5B,MAAMC,KAAK;EAAA;EAAA,CAAA3B,cAAA,GAAAC,CAAA,QAAG,IAAI2B,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAAC;EAAA9B,cAAA,GAAAC,CAAA;EAErD,IAAAF,OAAA,CAAAgC,SAAS,EAAC,MAAK;IAAA;IAAA/B,cAAA,GAAAe,CAAA;IAAAf,cAAA,GAAAC,CAAA;IACb,MAAM+B,UAAU,GAAG,MAAAA,CAAA,KAAW;MAAA;MAAAhC,cAAA,GAAAe,CAAA;MAC5B,MAAM;QACJkB,IAAI,EAAE;UAAEC;QAAI;MAAE,CACf;MAAA;MAAA,CAAAlC,cAAA,GAAAC,CAAA,QAAG,MAAMS,UAAA,CAAAyB,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;MAAC;MAAArC,cAAA,GAAAC,CAAA;MAClC,IAAI,CAACiC,IAAI,EAAE;QAAA;QAAAlC,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAC,CAAA;QAAA;MAAA,CAAO;MAAA;MAAA;QAAAD,cAAA,GAAAa,CAAA;MAAA;MAAAb,cAAA,GAAAC,CAAA;MAElBuB,SAAS,CAACU,IAAI,CAACI,EAAE,CAAC;MAAC;MAAAtC,cAAA,GAAAC,CAAA;MACnB,MAAMsC,gBAAgB,CAACL,IAAI,CAACI,EAAE,CAAC;IACjC,CAAC;IAAC;IAAAtC,cAAA,GAAAC,CAAA;IAEF+B,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAAC;EAAAhC,cAAA,GAAAC,CAAA;EAEP,MAAMsC,gBAAgB,GAAG,MAAOC,GAAW,IAAI;IAAA;IAAAxC,cAAA,GAAAe,CAAA;IAAAf,cAAA,GAAAC,CAAA;IAC7C,IAAI;MAAA;MAAAD,cAAA,GAAAC,CAAA;MACFmB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMqB,YAAY;MAAA;MAAA,CAAAzC,cAAA,GAAAC,CAAA,QAAG,MAAMO,iBAAA,CAAAkC,eAAe,CAACC,eAAe,CAACH,GAAG,EAAEb,KAAK,CAAC;MAAC;MAAA3B,cAAA,GAAAC,CAAA;MAEvE,IAAIwC,YAAY,EAAE;QAAA;QAAAzC,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAC,CAAA;QAChBgB,UAAU,CAACwB,YAAY,CAAC;MAC1B,CAAC,MAAM;QAAA;QAAAzC,cAAA,GAAAa,CAAA;QACL;QACA,MAAM+B,UAAU;QAAA;QAAA,CAAA5C,cAAA,GAAAC,CAAA,QAAiB;UAC/BqC,EAAE,EAAE,EAAE;UACNO,OAAO,EAAEL,GAAG;UACZM,IAAI,EAAEnB,KAAK;UACXoB,iBAAiB,EAAE,KAAK;UACxBC,gBAAgB,EAAE,KAAK;UACvBC,aAAa,EAAE,KAAK;UACpBC,gBAAgB,EAAE,KAAK;UACvBC,UAAU,EAAE,CAAC;UACbC,YAAY,EAAE,CAAC;UACfC,KAAK,EAAE,EAAE;UACTC,UAAU,EAAE,EAAE;UACdC,UAAU,EAAE;SACb;QAAC;QAAAvD,cAAA,GAAAC,CAAA;QACFgB,UAAU,CAAC2B,UAAU,CAAC;MACxB;IACF,CAAC,CAAC,OAAOY,KAAU,EAAE;MAAA;MAAAxD,cAAA,GAAAC,CAAA;MACnB;MACAwD,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAAC;MAAAxD,cAAA,GAAAC,CAAA;MAC/DwB,KAAK,CAAC;QACJiC,KAAK,EAAE,QAAQ;QACfC,WAAW,EAAE,+CAA+C;QAC5DC,OAAO,EAAE;OACV,CAAC;IACJ,CAAC,SAAS;MAAA;MAAA5D,cAAA,GAAAC,CAAA;MACRmB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAAC;EAAApB,cAAA,GAAAC,CAAA;EAEF,MAAM4D,YAAY,GAAG,MACnBC,KAGC,IACC;IAAA;IAAA9D,cAAA,GAAAe,CAAA;IAAAf,cAAA,GAAAC,CAAA;IACF;IAAI;IAAA,CAAAD,cAAA,GAAAa,CAAA,YAACG,OAAO;IAAA;IAAA,CAAAhB,cAAA,GAAAa,CAAA,WAAI,CAACU,MAAM,GAAE;MAAA;MAAAvB,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAC,CAAA;MAAA;IAAA,CAAO;IAAA;IAAA;MAAAD,cAAA,GAAAa,CAAA;IAAA;IAEhC,MAAMkD,cAAc;IAAA;IAAA,CAAA/D,cAAA,GAAAC,CAAA,QAAG;MACrB,GAAGe,OAAO;MACV,CAAC8C,KAAK,GAAG,CAAC9C,OAAO,CAAC8C,KAAK;KACxB;IAAC;IAAA9D,cAAA,GAAAC,CAAA;IAEFgB,UAAU,CAAC8C,cAAc,CAAC;IAAC;IAAA/D,cAAA,GAAAC,CAAA;IAC3B,MAAM+D,WAAW,CAACD,cAAc,CAAC;EACnC,CAAC;EAAC;EAAA/D,cAAA,GAAAC,CAAA;EAEF,MAAM+D,WAAW,GAAG,MAAOC,WAAyB,IAAI;IAAA;IAAAjE,cAAA,GAAAe,CAAA;IAAAf,cAAA,GAAAC,CAAA;IACtD,IAAI,CAACsB,MAAM,EAAE;MAAA;MAAAvB,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAC,CAAA;MAAA;IAAA,CAAO;IAAA;IAAA;MAAAD,cAAA,GAAAa,CAAA;IAAA;IAAAb,cAAA,GAAAC,CAAA;IAEpB,IAAI;MAAA;MAAAD,cAAA,GAAAC,CAAA;MACFqB,SAAS,CAAC,IAAI,CAAC;MACf,MAAM4C,OAAO;MAAA;MAAA,CAAAlE,cAAA,GAAAC,CAAA,QAAG,MAAMO,iBAAA,CAAAkC,eAAe,CAACyB,wBAAwB,CAAC;QAC7DtB,OAAO,EAAEtB,MAAM;QACfuB,IAAI,EAAEnB,KAAK;QACXoB,iBAAiB,EAAEkB,WAAW,CAAClB,iBAAiB;QAChDC,gBAAgB,EAAEiB,WAAW,CAACjB,gBAAgB;QAC9CC,aAAa,EAAEgB,WAAW,CAAChB,aAAa;QACxCC,gBAAgB,EAAEe,WAAW,CAACf,gBAAgB;QAC9CC,UAAU,EAAEc,WAAW,CAACd,UAAU;QAClCC,YAAY,EAAEa,WAAW,CAACb,YAAY;QACtCC,KAAK,EAAEY,WAAW,CAACZ;OACpB,CAAC;MAAC;MAAArD,cAAA,GAAAC,CAAA;MAEH,IAAIiE,OAAO,EAAE;QAAA;QAAAlE,cAAA,GAAAa,CAAA;QAAAb,cAAA,GAAAC,CAAA;QACX;QACA,MAAMQ,cAAA,CAAA2D,YAAY,CAACC,mBAAmB,CAAC9C,MAAM,CAAC;QAAC;QAAAvB,cAAA,GAAAC,CAAA;QAE/C,IAAIa,iBAAiB,EAAE;UAAA;UAAAd,cAAA,GAAAa,CAAA;UAAAb,cAAA,GAAAC,CAAA;UACrBa,iBAAiB,CAACmD,WAAW,CAAC;QAChC,CAAC;QAAA;QAAA;UAAAjE,cAAA,GAAAa,CAAA;QAAA;QAED;QAAAb,cAAA,GAAAC,CAAA;QACA,IAAIqE,iBAAiB,CAACL,WAAW,CAAC,EAAE;UAAA;UAAAjE,cAAA,GAAAa,CAAA;UAAAb,cAAA,GAAAC,CAAA;UAClCwB,KAAK,CAAC;YACJiC,KAAK,EAAE,uBAAuB;YAC9BC,WAAW,EAAE,4DAA4D;YACzEC,OAAO,EAAE;WACV,CAAC;QACJ,CAAC;QAAA;QAAA;UAAA5D,cAAA,GAAAa,CAAA;QAAA;MACH,CAAC;MAAA;MAAA;QAAAb,cAAA,GAAAa,CAAA;MAAA;IACH,CAAC,CAAC,OAAO2C,KAAU,EAAE;MAAA;MAAAxD,cAAA,GAAAC,CAAA;MACnB;MACAwD,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MAAC;MAAAxD,cAAA,GAAAC,CAAA;MAClEwB,KAAK,CAAC;QACJiC,KAAK,EAAE,QAAQ;QACfC,WAAW,EAAE,uCAAuC;QACpDC,OAAO,EAAE;OACV,CAAC;IACJ,CAAC,SAAS;MAAA;MAAA5D,cAAA,GAAAC,CAAA;MACRqB,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAAC;EAAAtB,cAAA,GAAAC,CAAA;EAEF,MAAMqE,iBAAiB,GAAIL,WAAyB,IAAa;IAAA;IAAAjE,cAAA,GAAAe,CAAA;IAAAf,cAAA,GAAAC,CAAA;IAC/D,OACE,2BAAAD,cAAA,GAAAa,CAAA,WAAAoD,WAAW,CAAClB,iBAAiB;IAAA;IAAA,CAAA/C,cAAA,GAAAa,CAAA,WAC7BoD,WAAW,CAACjB,gBAAgB;IAAA;IAAA,CAAAhD,cAAA,GAAAa,CAAA,WAC5BoD,WAAW,CAAChB,aAAa;IAAA;IAAA,CAAAjD,cAAA,GAAAa,CAAA,WACzBoD,WAAW,CAACf,gBAAgB;EAEhC,CAAC;EAAC;EAAAlD,cAAA,GAAAC,CAAA;EAEF,MAAMsE,uBAAuB,GAAGA,CAAA,KAAa;IAAA;IAAAvE,cAAA,GAAAe,CAAA;IAAAf,cAAA,GAAAC,CAAA;IAC3C,IAAI,CAACe,OAAO,EAAE;MAAA;MAAAhB,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAC,CAAA;MAAA,OAAO,CAAC;IAAA,CAAC;IAAA;IAAA;MAAAD,cAAA,GAAAa,CAAA;IAAA;IAEvB,MAAM2D,SAAS;IAAA;IAAA,CAAAxE,cAAA,GAAAC,CAAA,QAAG,CAChBe,OAAO,CAAC+B,iBAAiB,EACzB/B,OAAO,CAACgC,gBAAgB,EACxBhC,OAAO,CAACiC,aAAa,EACrBjC,OAAO,CAACkC,gBAAgB,CACzB,CAACuB,MAAM,CAACC,OAAO,CAAC,CAACC,MAAM;IAAC;IAAA3E,cAAA,GAAAC,CAAA;IAEzB,OAAO2E,IAAI,CAACC,KAAK,CAAEL,SAAS,GAAG,CAAC,GAAI,GAAG,CAAC;EAC1C,CAAC;EAAC;EAAAxE,cAAA,GAAAC,CAAA;EAEF,IAAIkB,OAAO,EAAE;IAAA;IAAAnB,cAAA,GAAAa,CAAA;IAAAb,cAAA,GAAAC,CAAA;IACX,OACE,IAAA6E,aAAA,CAAAC,IAAA,EAAC3E,MAAA,CAAA4E,IAAI;MAACpE,SAAS,EAAEA,SAAS;MAAAqE,QAAA,GACxB,IAAAH,aAAA,CAAAI,GAAA,EAAC9E,MAAA,CAAA+E,UAAU;QAAAF,QAAA,EACT,IAAAH,aAAA,CAAAI,GAAA,EAAC9E,MAAA,CAAAgF,SAAS;UAAAH,QAAA;QAAA;MAA+B,EAC9B,EACb,IAAAH,aAAA,CAAAI,GAAA,EAAC9E,MAAA,CAAAiF,WAAW;QAAAJ,QAAA,EACV,IAAAH,aAAA,CAAAI,GAAA;UAAKtE,SAAS,EAAC,uCAAuC;UAAAqE,QAAA,EACpD,IAAAH,aAAA,CAAAI,GAAA;YAAKtE,SAAS,EAAC;UAA8D;QAAO;MAChF,EACM;IAAA,EACT;EAEX,CAAC;EAAA;EAAA;IAAAZ,cAAA,GAAAa,CAAA;EAAA;EAAAb,cAAA,GAAAC,CAAA;EAED,IAAI,CAACe,OAAO,EAAE;IAAA;IAAAhB,cAAA,GAAAa,CAAA;IAAAb,cAAA,GAAAC,CAAA;IACZ,OACE,IAAA6E,aAAA,CAAAC,IAAA,EAAC3E,MAAA,CAAA4E,IAAI;MAACpE,SAAS,EAAEA,SAAS;MAAAqE,QAAA,GACxB,IAAAH,aAAA,CAAAI,GAAA,EAAC9E,MAAA,CAAA+E,UAAU;QAAAF,QAAA,EACT,IAAAH,aAAA,CAAAI,GAAA,EAAC9E,MAAA,CAAAgF,SAAS;UAAAH,QAAA;QAAA;MAA+B,EAC9B,EACb,IAAAH,aAAA,CAAAI,GAAA,EAAC9E,MAAA,CAAAiF,WAAW;QAAAJ,QAAA,EACV,IAAAH,aAAA,CAAAI,GAAA;UAAGtE,SAAS,EAAC,2BAA2B;UAAAqE,QAAA;QAAA;MAA0C,EACtE;IAAA,EACT;EAEX,CAAC;EAAA;EAAA;IAAAjF,cAAA,GAAAa,CAAA;EAAA;EAAAb,cAAA,GAAAC,CAAA;EAED,OACE,IAAA6E,aAAA,CAAAC,IAAA,EAAC3E,MAAA,CAAA4E,IAAI;IAACpE,SAAS,EAAEA,SAAS;IAAAqE,QAAA,GACxB,IAAAH,aAAA,CAAAI,GAAA,EAAC9E,MAAA,CAAA+E,UAAU;MAAAF,QAAA,EACT,IAAAH,aAAA,CAAAC,IAAA,EAAC3E,MAAA,CAAAgF,SAAS;QAACxE,SAAS,EAAC,mCAAmC;QAAAqE,QAAA,GACtD,IAAAH,aAAA,CAAAI,GAAA;UAAAD,QAAA;QAAA,EAA+B,EAC/B,IAAAH,aAAA,CAAAC,IAAA,EAACzE,OAAA,CAAAgF,KAAK;UAAC1B,OAAO,EAAEU,iBAAiB,CAACtD,OAAO,CAAC;UAAA;UAAA,CAAAhB,cAAA,GAAAa,CAAA,WAAG,SAAS;UAAA;UAAA,CAAAb,cAAA,GAAAa,CAAA,WAAG,WAAW;UAAAoE,QAAA,GACjEV,uBAAuB,EAAE;QAAA,EACpB;MAAA;IACE,EACD,EACb,IAAAO,aAAA,CAAAC,IAAA,EAAC3E,MAAA,CAAAiF,WAAW;MAACzE,SAAS,EAAC,WAAW;MAAAqE,QAAA,GAEhC,IAAAH,aAAA,CAAAC,IAAA;QAAKnE,SAAS,EAAC,wBAAwB;QAAAqE,QAAA,GACrC,IAAAH,aAAA,CAAAC,IAAA,EAAC1E,QAAA,CAAAkF,MAAM;UACL3B,OAAO,EAAE5C,OAAO,CAAC+B,iBAAiB;UAAA;UAAA,CAAA/C,cAAA,GAAAa,CAAA,WAAG,SAAS;UAAA;UAAA,CAAAb,cAAA,GAAAa,CAAA,WAAG,SAAS;UAC1D2E,OAAO,EAAEA,CAAA,KAAM;YAAA;YAAAxF,cAAA,GAAAe,CAAA;YAAAf,cAAA,GAAAC,CAAA;YAAA,OAAA4D,YAAY,CAAC,mBAAmB,CAAC;UAAD,CAAC;UAChD4B,QAAQ,EAAEpE,MAAM;UAChBT,SAAS,EAAC,gDAAgD;UAAAqE,QAAA,GAE1D,IAAAH,aAAA,CAAAI,GAAA;YAAMtE,SAAS,EAAC,cAAc;YAAAqE,QAAA;UAAA,EAAc,EAC5C,IAAAH,aAAA,CAAAI,GAAA;YAAMtE,SAAS,EAAC,SAAS;YAAAqE,QAAA;UAAA,EAAe;QAAA,EACjC,EAET,IAAAH,aAAA,CAAAC,IAAA,EAAC1E,QAAA,CAAAkF,MAAM;UACL3B,OAAO,EAAE5C,OAAO,CAACgC,gBAAgB;UAAA;UAAA,CAAAhD,cAAA,GAAAa,CAAA,WAAG,SAAS;UAAA;UAAA,CAAAb,cAAA,GAAAa,CAAA,WAAG,SAAS;UACzD2E,OAAO,EAAEA,CAAA,KAAM;YAAA;YAAAxF,cAAA,GAAAe,CAAA;YAAAf,cAAA,GAAAC,CAAA;YAAA,OAAA4D,YAAY,CAAC,kBAAkB,CAAC;UAAD,CAAC;UAC/C4B,QAAQ,EAAEpE,MAAM;UAChBT,SAAS,EAAC,gDAAgD;UAAAqE,QAAA,GAE1D,IAAAH,aAAA,CAAAI,GAAA;YAAMtE,SAAS,EAAC,cAAc;YAAAqE,QAAA;UAAA,EAAU,EACxC,IAAAH,aAAA,CAAAI,GAAA;YAAMtE,SAAS,EAAC,SAAS;YAAAqE,QAAA;UAAA,EAAiB;QAAA,EACnC,EAET,IAAAH,aAAA,CAAAC,IAAA,EAAC1E,QAAA,CAAAkF,MAAM;UACL3B,OAAO,EAAE5C,OAAO,CAACiC,aAAa;UAAA;UAAA,CAAAjD,cAAA,GAAAa,CAAA,WAAG,SAAS;UAAA;UAAA,CAAAb,cAAA,GAAAa,CAAA,WAAG,SAAS;UACtD2E,OAAO,EAAEA,CAAA,KAAM;YAAA;YAAAxF,cAAA,GAAAe,CAAA;YAAAf,cAAA,GAAAC,CAAA;YAAA,OAAA4D,YAAY,CAAC,eAAe,CAAC;UAAD,CAAC;UAC5C4B,QAAQ,EAAEpE,MAAM;UAChBT,SAAS,EAAC,gDAAgD;UAAAqE,QAAA,GAE1D,IAAAH,aAAA,CAAAI,GAAA;YAAMtE,SAAS,EAAC,cAAc;YAAAqE,QAAA;UAAA,EAAU,EACxC,IAAAH,aAAA,CAAAI,GAAA;YAAMtE,SAAS,EAAC,SAAS;YAAAqE,QAAA;UAAA,EAAe;QAAA,EACjC,EAET,IAAAH,aAAA,CAAAC,IAAA,EAAC1E,QAAA,CAAAkF,MAAM;UACL3B,OAAO,EAAE5C,OAAO,CAACkC,gBAAgB;UAAA;UAAA,CAAAlD,cAAA,GAAAa,CAAA,WAAG,SAAS;UAAA;UAAA,CAAAb,cAAA,GAAAa,CAAA,WAAG,SAAS;UACzD2E,OAAO,EAAEA,CAAA,KAAM;YAAA;YAAAxF,cAAA,GAAAe,CAAA;YAAAf,cAAA,GAAAC,CAAA;YAAA,OAAA4D,YAAY,CAAC,kBAAkB,CAAC;UAAD,CAAC;UAC/C4B,QAAQ,EAAEpE,MAAM;UAChBT,SAAS,EAAC,gDAAgD;UAAAqE,QAAA,GAE1D,IAAAH,aAAA,CAAAI,GAAA;YAAMtE,SAAS,EAAC,cAAc;YAAAqE,QAAA;UAAA,EAAU,EACxC,IAAAH,aAAA,CAAAI,GAAA;YAAMtE,SAAS,EAAC,SAAS;YAAAqE,QAAA;UAAA,EAAmB;QAAA,EACrC;MAAA,EACL;MAGL;MAAA,CAAAjF,cAAA,GAAAa,CAAA,WAAAQ,MAAM;MAAA;MAAA,CAAArB,cAAA,GAAAa,CAAA,WACL,IAAAiE,aAAA,CAAAC,IAAA;QAAKnE,SAAS,EAAC,wDAAwD;QAAAqE,QAAA,GACrE,IAAAH,aAAA,CAAAI,GAAA;UAAKtE,SAAS,EAAC;QAAmE,EAAO;MAAA,EAErF,CACP;IAAA,EACW;EAAA,EACT;AAEX,CAAC;AAAC;AAAAZ,cAAA,GAAAC,CAAA;AAlPWyF,OAAA,CAAA/E,YAAY,GAAAA,YAAA;AAkPvB;AAAAX,cAAA,GAAAC,CAAA;AAEFyF,OAAA,CAAAC,OAAA,GAAeD,OAAA,CAAA/E,YAAY","ignoreList":[]}