8f393e25812b6c158dec62f87ad7eea9
"use strict";

/* istanbul ignore next */
function cov_pv4fxioux() {
  var path = "/workspaces/MyFitHero/src/features/workout/hooks/useExerciseHistory.ts";
  var hash = "61adb15179d2890a8f97d0ffd3e042470ef6260a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/MyFitHero/src/features/workout/hooks/useExerciseHistory.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 46
        }
      },
      "4": {
        start: {
          line: 7,
          column: 19
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 86,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 29
        },
        end: {
          line: 9,
          column: 55
        }
      },
      "7": {
        start: {
          line: 10,
          column: 37
        },
        end: {
          line: 24,
          column: 26
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "9": {
        start: {
          line: 12,
          column: 34
        },
        end: {
          line: 12,
          column: 99
        }
      },
      "10": {
        start: {
          line: 13,
          column: 36
        },
        end: {
          line: 13,
          column: 63
        }
      },
      "11": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "12": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "13": {
        start: {
          line: 16,
          column: 32
        },
        end: {
          line: 16,
          column: 100
        }
      },
      "14": {
        start: {
          line: 16,
          column: 66
        },
        end: {
          line: 16,
          column: 99
        }
      },
      "15": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 90
        }
      },
      "16": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 69
        }
      },
      "17": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "18": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 47,
          column: 26
        }
      },
      "19": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "20": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "21": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "22": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 93
        }
      },
      "23": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "24": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "25": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "26": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "27": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 73
        }
      },
      "28": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 83
        }
      },
      "29": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 72
        }
      },
      "30": {
        start: {
          line: 48,
          column: 41
        },
        end: {
          line: 80,
          column: 26
        }
      },
      "31": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 50,
          column: 22
        }
      },
      "32": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 22
        }
      },
      "33": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "34": {
        start: {
          line: 52,
          column: 51
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "35": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "36": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 26
        }
      },
      "37": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 73,
          column: 16
        }
      },
      "38": {
        start: {
          line: 64,
          column: 51
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "39": {
        start: {
          line: 68,
          column: 44
        },
        end: {
          line: 72,
          column: 17
        }
      },
      "40": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 72
        }
      },
      "41": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 22
        }
      },
      "42": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 85,
          column: 6
        }
      },
      "43": {
        start: {
          line: 87,
          column: 0
        },
        end: {
          line: 87,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 27
          },
          end: {
            line: 8,
            column: 28
          }
        },
        loc: {
          start: {
            line: 8,
            column: 33
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 62
          },
          end: {
            line: 10,
            column: 63
          }
        },
        loc: {
          start: {
            line: 10,
            column: 80
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 55
          },
          end: {
            line: 16,
            column: 56
          }
        },
        loc: {
          start: {
            line: 16,
            column: 66
          },
          end: {
            line: 16,
            column: 99
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 55
          },
          end: {
            line: 25,
            column: 56
          }
        },
        loc: {
          start: {
            line: 25,
            column: 81
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 48,
            column: 66
          },
          end: {
            line: 48,
            column: 67
          }
        },
        loc: {
          start: {
            line: 48,
            column: 89
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 48
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 42
          },
          end: {
            line: 64,
            column: 43
          }
        },
        loc: {
          start: {
            line: 64,
            column: 51
          },
          end: {
            line: 73,
            column: 13
          }
        },
        line: 64
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 34
          },
          end: {
            line: 68,
            column: 35
          }
        },
        loc: {
          start: {
            line: 68,
            column: 44
          },
          end: {
            line: 72,
            column: 17
          }
        },
        line: 68
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 45
          },
          end: {
            line: 12,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 45
          },
          end: {
            line: 12,
            column: 90
          }
        }, {
          start: {
            line: 12,
            column: 94
          },
          end: {
            line: 12,
            column: 98
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 15,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 15,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 19
          },
          end: {
            line: 17,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 17,
            column: 82
          }
        }, {
          start: {
            line: 17,
            column: 85
          },
          end: {
            line: 17,
            column: 89
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 27,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 27,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 29
          }
        }, {
          start: {
            line: 26,
            column: 33
          },
          end: {
            line: 26,
            column: 44
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 29,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 29,
            column: 84
          }
        }, {
          start: {
            line: 29,
            column: 88
          },
          end: {
            line: 29,
            column: 92
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 31,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 31,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "9": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 22
          }
        }, {
          start: {
            line: 60,
            column: 26
          },
          end: {
            line: 60,
            column: 40
          }
        }],
        line: 60
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/MyFitHero/src/features/workout/hooks/useExerciseHistory.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/MyFitHero/src/features/workout/hooks/useExerciseHistory.ts"],
      sourcesContent: ["import React, { useCallback } from 'react';\n// hooks/workout/useExerciseHistory.ts\nimport { appStore } from '@/store/appStore';\nimport { supabase } from '@/lib/supabase';\nimport type { SessionExercise } from '@/features/workout/types/WorkoutTypes';\n\nexport interface UseExerciseHistoryReturn {\n  getLastWeightForExercise: (exerciseName: string) => number | null;\n  saveWeightHistory: (exerciseName: string, weight: number) => void;\n  loadExercisesFromLastSession: (workoutName: string) => Promise<SessionExercise[]>;\n}\n\nexport const useExerciseHistory = (): UseExerciseHistoryReturn => {\n  const { appStoreUser } = appStore();\n\n  const getLastWeightForExercise = useCallback(\n    (exerciseName: string): number | null => {\n      try {\n        const weightHistory = JSON.parse(localStorage.getItem('exerciseWeightHistory') || '{}');\n        const exerciseHistory = weightHistory[exerciseName];\n\n        if (!exerciseHistory?.length) return null;\n\n        const userHistory = exerciseHistory.filter(\n          (entry: any) => entry.userId === appStoreUser?.id\n        );\n        return userHistory.length ? userHistory[userHistory.length - 1].weight : null;\n      } catch (error) {\n      // Erreur silencieuse\n        console.error('Erreur lecture historique poids:', error);\n        return null;\n      }\n    },\n    [appStoreUser?.id]\n  );\n\n  const saveWeightHistory = useCallback(\n    (exerciseName: string, weight: number) => {\n      if (!appStoreUser?.id || weight <= 0) return;\n\n      try {\n        const history = JSON.parse(localStorage.getItem('exerciseWeightHistory') || '{}');\n        if (!history[exerciseName]) history[exerciseName] = [];\n\n        history[exerciseName].push({\n          weight,\n          date: new Date().toISOString(),\n          userId: appStoreUser.id,\n        });\n\n        // Garder seulement les 50 derni\xE8res entr\xE9es par exercice\n        if (history[exerciseName].length > 50) {\n          history[exerciseName] = history[exerciseName].slice(-50);\n        }\n\n        localStorage.setItem('exerciseWeightHistory', JSON.stringify(history));\n      } catch (error) {\n      // Erreur silencieuse\n        console.error('Erreur sauvegarde historique poids:', error);\n      }\n    },\n    [appStoreUser?.id]\n  );\n\n  const loadExercisesFromLastSession = useCallback(\n    async (workoutName: string): Promise<SessionExercise[]> => {\n      if (!appStoreUser?.id) return [];\n\n      try {\n        const { data: _data, error: _error } = await supabase\n          .from('workouts')\n          .select('exercises')\n          .eq('user_id', appStoreUser.id)\n          .eq('name', workoutName)\n          .not('completed_at', 'is', null) // Sessions termin\xE9es\n          .order('completed_at', { ascending: false })\n          .limit(1);\n\n        if (_error || !_data?.length) {\n          return [];\n        }\n\n        // R\xE9initialiser les exercices pour une nouvelle session\n        return (_data[0].exercises as SessionExercise[]).map((ex: SessionExercise) => ({\n          ...ex,\n          id: crypto.randomUUID(),\n          completed: false,\n          sets: ex.sets.map((set: any) => ({\n            ...set,\n            completed: false,\n            timestamp: new Date().toISOString(),\n          })),\n        }));\n      } catch (error) {\n      // Erreur silencieuse\n        console.error('Erreur chargement derni\xE8re session:', error);\n        return [];\n      }\n    },\n    [appStoreUser?.id]\n  );\n\n  return {\n    getLastWeightForExercise,\n    saveWeightHistory,\n    loadExercisesFromLastSession,\n  };\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "61adb15179d2890a8f97d0ffd3e042470ef6260a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_pv4fxioux = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_pv4fxioux();
cov_pv4fxioux().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_pv4fxioux().s[1]++;
exports.useExerciseHistory = void 0;
const react_1 =
/* istanbul ignore next */
(cov_pv4fxioux().s[2]++, require("react"));
// hooks/workout/useExerciseHistory.ts
const appStore_1 =
/* istanbul ignore next */
(cov_pv4fxioux().s[3]++, require("@/store/appStore"));
const supabase_1 =
/* istanbul ignore next */
(cov_pv4fxioux().s[4]++, require("@/lib/supabase"));
/* istanbul ignore next */
cov_pv4fxioux().s[5]++;
const useExerciseHistory = () => {
  /* istanbul ignore next */
  cov_pv4fxioux().f[0]++;
  const {
    appStoreUser
  } =
  /* istanbul ignore next */
  (cov_pv4fxioux().s[6]++, (0, appStore_1.appStore)());
  const getLastWeightForExercise =
  /* istanbul ignore next */
  (cov_pv4fxioux().s[7]++, (0, react_1.useCallback)(exerciseName => {
    /* istanbul ignore next */
    cov_pv4fxioux().f[1]++;
    cov_pv4fxioux().s[8]++;
    try {
      const weightHistory =
      /* istanbul ignore next */
      (cov_pv4fxioux().s[9]++, JSON.parse(
      /* istanbul ignore next */
      (cov_pv4fxioux().b[0][0]++, localStorage.getItem('exerciseWeightHistory')) ||
      /* istanbul ignore next */
      (cov_pv4fxioux().b[0][1]++, '{}')));
      const exerciseHistory =
      /* istanbul ignore next */
      (cov_pv4fxioux().s[10]++, weightHistory[exerciseName]);
      /* istanbul ignore next */
      cov_pv4fxioux().s[11]++;
      if (!exerciseHistory?.length) {
        /* istanbul ignore next */
        cov_pv4fxioux().b[1][0]++;
        cov_pv4fxioux().s[12]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_pv4fxioux().b[1][1]++;
      }
      const userHistory =
      /* istanbul ignore next */
      (cov_pv4fxioux().s[13]++, exerciseHistory.filter(entry => {
        /* istanbul ignore next */
        cov_pv4fxioux().f[2]++;
        cov_pv4fxioux().s[14]++;
        return entry.userId === appStoreUser?.id;
      }));
      /* istanbul ignore next */
      cov_pv4fxioux().s[15]++;
      return userHistory.length ?
      /* istanbul ignore next */
      (cov_pv4fxioux().b[2][0]++, userHistory[userHistory.length - 1].weight) :
      /* istanbul ignore next */
      (cov_pv4fxioux().b[2][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_pv4fxioux().s[16]++;
      // Erreur silencieuse
      console.error('Erreur lecture historique poids:', error);
      /* istanbul ignore next */
      cov_pv4fxioux().s[17]++;
      return null;
    }
  }, [appStoreUser?.id]));
  const saveWeightHistory =
  /* istanbul ignore next */
  (cov_pv4fxioux().s[18]++, (0, react_1.useCallback)((exerciseName, weight) => {
    /* istanbul ignore next */
    cov_pv4fxioux().f[3]++;
    cov_pv4fxioux().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_pv4fxioux().b[4][0]++, !appStoreUser?.id) ||
    /* istanbul ignore next */
    (cov_pv4fxioux().b[4][1]++, weight <= 0)) {
      /* istanbul ignore next */
      cov_pv4fxioux().b[3][0]++;
      cov_pv4fxioux().s[20]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_pv4fxioux().b[3][1]++;
    }
    cov_pv4fxioux().s[21]++;
    try {
      const history =
      /* istanbul ignore next */
      (cov_pv4fxioux().s[22]++, JSON.parse(
      /* istanbul ignore next */
      (cov_pv4fxioux().b[5][0]++, localStorage.getItem('exerciseWeightHistory')) ||
      /* istanbul ignore next */
      (cov_pv4fxioux().b[5][1]++, '{}')));
      /* istanbul ignore next */
      cov_pv4fxioux().s[23]++;
      if (!history[exerciseName]) {
        /* istanbul ignore next */
        cov_pv4fxioux().b[6][0]++;
        cov_pv4fxioux().s[24]++;
        history[exerciseName] = [];
      } else
      /* istanbul ignore next */
      {
        cov_pv4fxioux().b[6][1]++;
      }
      cov_pv4fxioux().s[25]++;
      history[exerciseName].push({
        weight,
        date: new Date().toISOString(),
        userId: appStoreUser.id
      });
      // Garder seulement les 50 dernières entrées par exercice
      /* istanbul ignore next */
      cov_pv4fxioux().s[26]++;
      if (history[exerciseName].length > 50) {
        /* istanbul ignore next */
        cov_pv4fxioux().b[7][0]++;
        cov_pv4fxioux().s[27]++;
        history[exerciseName] = history[exerciseName].slice(-50);
      } else
      /* istanbul ignore next */
      {
        cov_pv4fxioux().b[7][1]++;
      }
      cov_pv4fxioux().s[28]++;
      localStorage.setItem('exerciseWeightHistory', JSON.stringify(history));
    } catch (error) {
      /* istanbul ignore next */
      cov_pv4fxioux().s[29]++;
      // Erreur silencieuse
      console.error('Erreur sauvegarde historique poids:', error);
    }
  }, [appStoreUser?.id]));
  const loadExercisesFromLastSession =
  /* istanbul ignore next */
  (cov_pv4fxioux().s[30]++, (0, react_1.useCallback)(async workoutName => {
    /* istanbul ignore next */
    cov_pv4fxioux().f[4]++;
    cov_pv4fxioux().s[31]++;
    if (!appStoreUser?.id) {
      /* istanbul ignore next */
      cov_pv4fxioux().b[8][0]++;
      cov_pv4fxioux().s[32]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_pv4fxioux().b[8][1]++;
    }
    cov_pv4fxioux().s[33]++;
    try {
      const {
        data: _data,
        error: _error
      } =
      /* istanbul ignore next */
      (cov_pv4fxioux().s[34]++, await supabase_1.supabase.from('workouts').select('exercises').eq('user_id', appStoreUser.id).eq('name', workoutName).not('completed_at', 'is', null) // Sessions terminées
      .order('completed_at', {
        ascending: false
      }).limit(1));
      /* istanbul ignore next */
      cov_pv4fxioux().s[35]++;
      if (
      /* istanbul ignore next */
      (cov_pv4fxioux().b[10][0]++, _error) ||
      /* istanbul ignore next */
      (cov_pv4fxioux().b[10][1]++, !_data?.length)) {
        /* istanbul ignore next */
        cov_pv4fxioux().b[9][0]++;
        cov_pv4fxioux().s[36]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_pv4fxioux().b[9][1]++;
      }
      // Réinitialiser les exercices pour une nouvelle session
      cov_pv4fxioux().s[37]++;
      return _data[0].exercises.map(ex => {
        /* istanbul ignore next */
        cov_pv4fxioux().f[5]++;
        cov_pv4fxioux().s[38]++;
        return {
          ...ex,
          id: crypto.randomUUID(),
          completed: false,
          sets: ex.sets.map(set => {
            /* istanbul ignore next */
            cov_pv4fxioux().f[6]++;
            cov_pv4fxioux().s[39]++;
            return {
              ...set,
              completed: false,
              timestamp: new Date().toISOString()
            };
          })
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_pv4fxioux().s[40]++;
      // Erreur silencieuse
      console.error('Erreur chargement dernière session:', error);
      /* istanbul ignore next */
      cov_pv4fxioux().s[41]++;
      return [];
    }
  }, [appStoreUser?.id]));
  /* istanbul ignore next */
  cov_pv4fxioux().s[42]++;
  return {
    getLastWeightForExercise,
    saveWeightHistory,
    loadExercisesFromLastSession
  };
};
/* istanbul ignore next */
cov_pv4fxioux().s[43]++;
exports.useExerciseHistory = useExerciseHistory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,