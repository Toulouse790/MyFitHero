{"version":3,"names":["cov_pv4fxioux","actualCoverage","s","react_1","require","appStore_1","supabase_1","useExerciseHistory","f","appStoreUser","appStore","getLastWeightForExercise","useCallback","exerciseName","weightHistory","JSON","parse","b","localStorage","getItem","exerciseHistory","length","userHistory","filter","entry","userId","id","weight","error","console","saveWeightHistory","history","push","date","Date","toISOString","slice","setItem","stringify","loadExercisesFromLastSession","workoutName","data","_data","_error","supabase","from","select","eq","not","order","ascending","limit","exercises","map","ex","crypto","randomUUID","completed","sets","set","timestamp","exports"],"sources":["/workspaces/MyFitHero/src/features/workout/hooks/useExerciseHistory.ts"],"sourcesContent":["import React, { useCallback } from 'react';\n// hooks/workout/useExerciseHistory.ts\nimport { appStore } from '@/store/appStore';\nimport { supabase } from '@/lib/supabase';\nimport type { SessionExercise } from '@/features/workout/types/WorkoutTypes';\n\nexport interface UseExerciseHistoryReturn {\n  getLastWeightForExercise: (exerciseName: string) => number | null;\n  saveWeightHistory: (exerciseName: string, weight: number) => void;\n  loadExercisesFromLastSession: (workoutName: string) => Promise<SessionExercise[]>;\n}\n\nexport const useExerciseHistory = (): UseExerciseHistoryReturn => {\n  const { appStoreUser } = appStore();\n\n  const getLastWeightForExercise = useCallback(\n    (exerciseName: string): number | null => {\n      try {\n        const weightHistory = JSON.parse(localStorage.getItem('exerciseWeightHistory') || '{}');\n        const exerciseHistory = weightHistory[exerciseName];\n\n        if (!exerciseHistory?.length) return null;\n\n        const userHistory = exerciseHistory.filter(\n          (entry: any) => entry.userId === appStoreUser?.id\n        );\n        return userHistory.length ? userHistory[userHistory.length - 1].weight : null;\n      } catch (error) {\n      // Erreur silencieuse\n        console.error('Erreur lecture historique poids:', error);\n        return null;\n      }\n    },\n    [appStoreUser?.id]\n  );\n\n  const saveWeightHistory = useCallback(\n    (exerciseName: string, weight: number) => {\n      if (!appStoreUser?.id || weight <= 0) return;\n\n      try {\n        const history = JSON.parse(localStorage.getItem('exerciseWeightHistory') || '{}');\n        if (!history[exerciseName]) history[exerciseName] = [];\n\n        history[exerciseName].push({\n          weight,\n          date: new Date().toISOString(),\n          userId: appStoreUser.id,\n        });\n\n        // Garder seulement les 50 dernières entrées par exercice\n        if (history[exerciseName].length > 50) {\n          history[exerciseName] = history[exerciseName].slice(-50);\n        }\n\n        localStorage.setItem('exerciseWeightHistory', JSON.stringify(history));\n      } catch (error) {\n      // Erreur silencieuse\n        console.error('Erreur sauvegarde historique poids:', error);\n      }\n    },\n    [appStoreUser?.id]\n  );\n\n  const loadExercisesFromLastSession = useCallback(\n    async (workoutName: string): Promise<SessionExercise[]> => {\n      if (!appStoreUser?.id) return [];\n\n      try {\n        const { data: _data, error: _error } = await supabase\n          .from('workouts')\n          .select('exercises')\n          .eq('user_id', appStoreUser.id)\n          .eq('name', workoutName)\n          .not('completed_at', 'is', null) // Sessions terminées\n          .order('completed_at', { ascending: false })\n          .limit(1);\n\n        if (_error || !_data?.length) {\n          return [];\n        }\n\n        // Réinitialiser les exercices pour une nouvelle session\n        return (_data[0].exercises as SessionExercise[]).map((ex: SessionExercise) => ({\n          ...ex,\n          id: crypto.randomUUID(),\n          completed: false,\n          sets: ex.sets.map((set: any) => ({\n            ...set,\n            completed: false,\n            timestamp: new Date().toISOString(),\n          })),\n        }));\n      } catch (error) {\n      // Erreur silencieuse\n        console.error('Erreur chargement dernière session:', error);\n        return [];\n      }\n    },\n    [appStoreUser?.id]\n  );\n\n  return {\n    getLastWeightForExercise,\n    saveWeightHistory,\n    loadExercisesFromLastSession,\n  };\n};\n"],"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","ignoreList":[]}